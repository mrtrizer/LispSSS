#!/usr/local/bin/ssse

#Operations
setq functions
(quote (
    (func (a b)(+ a b))
    (func (a b)(- a b))
    (func (a b)(* a b))
    (func (a b)(/ a b))
));

#Operation names
setq func_names (quote
    (
        "sum"
        "sub"
        "mul"
        "div"
    )
);

defun main ()
{
    while T
    {
        setq tmp func_names;
        setq i 1;
        while (!= tmp nil)
        {
            print i ". " (car tmp);
            setq tmp (cdr tmp);
            setq i (+ i 1);
        };

        print i ". Exit";
        setq n (ask "Enter n: " );
        if (|| (< n 1) (> n i))
        {
            print "Bad number, repeat please";
            continue;
        };
        if (== n i) (return nil);
        setq a (ask "Enter a: ");
        setq b (ask "Enter b: ");
        setq tmp functions;
        while (!= n 1)
        {
            setq tmp (cdr tmp);
            setq n (- n 1);
        };
        setq result ((exec (exec (car tmp))) a b);
        print "Result = " result;
        setq test result;
    };
};

main;
