// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');

    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }
  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
      return func;
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  buffer = new ArrayBuffer(TOTAL_MEMORY);
}
updateGlobalBufferViews();


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0) throw 'Typed arrays 2 must be run on a little-endian system';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;




// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 26432;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__I_000101() } }, { func: function() { __GLOBAL__sub_I_message_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

/* memory initializer */ allocate([136,41,0,0,76,45,0,0,24,0,0,0,0,0,0,0,96,41,0,0,86,45,0,0,136,41,0,0,92,45,0,0,24,0,0,0,0,0,0,0,136,41,0,0,107,45,0,0,24,0,0,0,0,0,0,0,136,41,0,0,121,45,0,0,24,0,0,0,0,0,0,0,96,41,0,0,6,46,0,0,136,41,0,0,154,46,0,0,24,0,0,0,0,0,0,0,136,41,0,0,168,46,0,0,120,0,0,0,0,0,0,0,96,41,0,0,181,46,0,0,136,41,0,0,195,46,0,0,24,0,0,0,0,0,0,0,136,41,0,0,206,46,0,0,120,0,0,0,0,0,0,0,136,41,0,0,220,46,0,0,120,0,0,0,0,0,0,0,136,41,0,0,237,46,0,0,120,0,0,0,0,0,0,0,136,41,0,0,251,46,0,0,24,0,0,0,0,0,0,0,136,41,0,0,9,47,0,0,120,0,0,0,0,0,0,0,136,41,0,0,99,47,0,0,120,0,0,0,0,0,0,0,96,41,0,0,120,47,0,0,136,41,0,0,153,47,0,0,120,0,0,0,0,0,0,0,136,41,0,0,179,47,0,0,120,0,0,0,0,0,0,0,136,41,0,0,195,47,0,0,120,0,0,0,0,0,0,0,136,41,0,0,214,47,0,0,120,0,0,0,0,0,0,0,136,41,0,0,231,47,0,0,120,0,0,0,0,0,0,0,136,41,0,0,6,48,0,0,120,0,0,0,0,0,0,0,96,41,0,0,25,48,0,0,136,41,0,0,60,48,0,0,120,0,0,0,0,0,0,0,136,41,0,0,79,48,0,0,120,0,0,0,0,0,0,0,136,41,0,0,96,48,0,0,120,0,0,0,0,0,0,0,136,41,0,0,117,48,0,0,120,0,0,0,0,0,0,0,136,41,0,0,154,48,0,0,120,0,0,0,0,0,0,0,136,41,0,0,232,48,0,0,120,0,0,0,0,0,0,0,136,41,0,0,33,49,0,0,120,0,0,0,0,0,0,0,136,41,0,0,44,49,0,0,120,0,0,0,0,0,0,0,136,41,0,0,142,49,0,0,120,0,0,0,0,0,0,0,136,41,0,0,196,49,0,0,120,0,0,0,0,0,0,0,136,41,0,0,37,50,0,0,120,0,0,0,0,0,0,0,136,41,0,0,139,50,0,0,120,0,0,0,0,0,0,0,136,41,0,0,187,50,0,0,120,0,0,0,0,0,0,0,136,41,0,0,251,50,0,0,120,0,0,0,0,0,0,0,136,41,0,0,20,51,0,0,120,0,0,0,0,0,0,0,136,41,0,0,34,51,0,0,120,0,0,0,0,0,0,0,136,41,0,0,53,51,0,0,120,0,0,0,0,0,0,0,136,41,0,0,151,51,0,0,120,0,0,0,0,0,0,0,136,41,0,0,228,51,0,0,120,0,0,0,0,0,0,0,136,41,0,0,82,52,0,0,24,0,0,0,0,0,0,0,96,41,0,0,109,52,0,0,136,41,0,0,220,63,0,0,16,3,0,0,0,0,0,0,136,41,0,0,26,64,0,0,16,3,0,0,0,0,0,0,136,41,0,0,51,64,0,0,24,3,0,0,0,0,0,0,136,41,0,0,75,64,0,0,24,3,0,0,0,0,0,0,136,41,0,0,122,64,0,0,248,2,0,0,0,0,0,0,96,41,0,0,164,64,0,0,136,41,0,0,182,64,0,0,248,2,0,0,0,0,0,0,96,41,0,0,224,64,0,0,96,41,0,0,17,65,0,0,44,42,0,0,66,65,0,0,0,0,0,0,1,0,0,0,232,2,0,0,3,244,255,255,44,42,0,0,113,65,0,0,0,0,0,0,1,0,0,0,0,3,0,0,3,244,255,255,44,42,0,0,160,65,0,0,0,0,0,0,1,0,0,0,232,2,0,0,3,244,255,255,44,42,0,0,207,65,0,0,0,0,0,0,1,0,0,0,0,3,0,0,3,244,255,255,136,41,0,0,254,65,0,0,16,8,0,0,0,0,0,0,136,41,0,0,24,66,0,0,32,8,0,0,0,0,0,0,136,41,0,0,115,66,0,0,176,3,0,0,0,0,0,0,136,41,0,0,135,66,0,0,0,8,0,0,0,0,0,0,136,41,0,0,157,66,0,0,176,3,0,0,0,0,0,0,44,42,0,0,177,66,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,240,3,0,0,0,0,0,0,44,42,0,0,245,66,0,0,0,0,0,0,1,0,0,0,8,4,0,0,0,0,0,0,96,41,0,0,11,67,0,0,44,42,0,0,74,67,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,48,4,0,0,0,0,0,0,44,42,0,0,142,67,0,0,0,0,0,0,1,0,0,0,8,4,0,0,0,0,0,0,44,42,0,0,164,67,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,104,4,0,0,0,0,0,0,44,42,0,0,232,67,0,0,0,0,0,0,1,0,0,0,128,4,0,0,0,0,0,0,96,41,0,0,254,67,0,0,44,42,0,0,42,68,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,168,4,0,0,0,0,0,0,44,42,0,0,110,68,0,0,0,0,0,0,1,0,0,0,128,4,0,0,0,0,0,0,44,42,0,0,132,68,0,0,0,0,0,0,3,0,0,0,176,3,0,0,2,0,0,0,232,4,0,0,2,0,0,0,240,4,0,0,0,8,0,0,96,41,0,0,201,68,0,0,96,41,0,0,220,68,0,0,44,42,0,0,62,70,0,0,0,0,0,0,3,0,0,0,176,3,0,0,2,0,0,0,232,4,0,0,2,0,0,0,32,5,0,0,0,8,0,0,96,41,0,0,131,70,0,0,44,42,0,0,165,70,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,72,5,0,0,0,8,0,0,96,41,0,0,234,70,0,0,44,42,0,0,255,70,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,72,5,0,0,0,8,0,0,44,42,0,0,89,71,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,144,5,0,0,2,0,0,0,96,41,0,0,117,71,0,0,44,42,0,0,138,71,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,144,5,0,0,2,0,0,0,44,42,0,0,166,71,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,144,5,0,0,2,0,0,0,44,42,0,0,194,71,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,144,5,0,0,2,0,0,0,44,42,0,0,222,71,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,24,6,0,0,0,0,0,0,96,41,0,0,36,72,0,0,44,42,0,0,92,72,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,64,6,0,0,0,0,0,0,96,41,0,0,162,72,0,0,44,42,0,0,198,72,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,104,6,0,0,0,0,0,0,96,41,0,0,12,73,0,0,44,42,0,0,43,73,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,144,6,0,0,0,0,0,0,96,41,0,0,113,73,0,0,44,42,0,0,138,73,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,184,6,0,0,2,0,0,0,96,41,0,0,159,73,0,0,44,42,0,0,183,73,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,184,6,0,0,2,0,0,0,136,41,0,0,204,73,0,0,240,6,0,0,0,0,0,0,44,42,0,0,238,73,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,16,7,0,0,2,0,0,0,96,41,0,0,17,74,0,0,136,41,0,0,40,74,0,0,240,6,0,0,0,0,0,0,44,42,0,0,75,74,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,16,7,0,0,2,0,0,0,44,42,0,0,109,74,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,16,7,0,0,2,0,0,0,44,42,0,0,143,74,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,16,7,0,0,2,0,0,0,136,41,0,0,178,74,0,0,176,3,0,0,0,0,0,0,44,42,0,0,200,74,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,184,7,0,0,2,0,0,0,96,41,0,0,218,74,0,0,44,42,0,0,239,74,0,0,0,0,0,0,2,0,0,0,176,3,0,0,2,0,0,0,184,7,0,0,2,0,0,0,136,41,0,0,1,75,0,0,176,3,0,0,0,0,0,0,136,41,0,0,33,75,0,0,176,3,0,0,0,0,0,0,96,41,0,0,61,75,0,0,96,41,0,0,86,75,0,0,136,41,0,0,111,75,0,0,144,8,0,0,0,0,0,0,136,41,0,0,134,75,0,0,8,8,0,0,0,0,0,0,96,41,0,0,173,76,0,0,136,41,0,0,139,76,0,0,88,8,0,0,0,0,0,0,136,41,0,0,56,76,0,0,56,8,0,0,0,0,0,0,136,41,0,0,93,76,0,0,104,8,0,0,0,0,0,0,96,41,0,0,126,76,0,0,136,41,0,0,165,77,0,0,48,8,0,0,0,0,0,0,136,41,0,0,193,77,0,0,48,8,0,0,0,0,0,0,136,41,0,0,209,77,0,0,48,8,0,0,0,0,0,0,136,41,0,0,227,77,0,0,128,8,0,0,0,0,0,0,136,41,0,0,244,77,0,0,128,8,0,0,0,0,0,0,136,41,0,0,5,78,0,0,48,8,0,0,0,0,0,0,136,41,0,0,67,78,0,0,88,8,0,0,0,0,0,0,136,41,0,0,31,78,0,0,208,8,0,0,0,0,0,0,136,41,0,0,101,78,0,0,56,8,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,24,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,0,0,0,0,32,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,48,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,64,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,88,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,0,0,0,0,104,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,0,0,0,0,128,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,0,0,0,0,144,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,0,0,0,0,160,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,0,0,0,0,176,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,0,0,0,0,192,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,0,0,0,0,208,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,0,0,0,0,224,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,0,0,0,0,248,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,0,0,0,0,8,1,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,0,0,0,0,24,1,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,0,0,0,0,40,1,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,0,0,0,0,56,1,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,0,0,0,0,72,1,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,0,0,0,0,96,1,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,0,0,0,0,112,1,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,0,0,0,0,128,1,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,0,0,0,0,144,1,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,160,1,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,0,0,0,0,176,1,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,0,0,0,0,192,1,0,0,125,0,0,0,126,0,0,0,127,0,0,0,128,0,0,0,0,0,0,0,208,1,0,0,129,0,0,0,130,0,0,0,131,0,0,0,132,0,0,0,0,0,0,0,224,1,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,0,0,0,0,240,1,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,0,0,0,0,0,2,0,0,141,0,0,0,142,0,0,0,143,0,0,0,144,0,0,0,0,0,0,0,16,2,0,0,145,0,0,0,146,0,0,0,147,0,0,0,148,0,0,0,0,0,0,0,32,2,0,0,149,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,0,0,0,0,48,2,0,0,153,0,0,0,154,0,0,0,155,0,0,0,156,0,0,0,0,0,0,0,64,2,0,0,157,0,0,0,158,0,0,0,159,0,0,0,160,0,0,0,0,0,0,0,80,2,0,0,161,0,0,0,162,0,0,0,163,0,0,0,164,0,0,0,0,0,0,0,96,2,0,0,165,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,0,0,0,0,112,2,0,0,169,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,0,0,0,0,128,2,0,0,173,0,0,0,174,0,0,0,175,0,0,0,176,0,0,0,0,0,0,0,144,2,0,0,177,0,0,0,178,0,0,0,179,0,0,0,180,0,0,0,181,0,0,0,182,0,0,0,183,0,0,0,0,0,0,0,120,0,0,0,184,0,0,0,185,0,0,0,175,0,0,0,10,0,0,0,72,13,0,0,5,0,0,0,0,0,0,0,0,0,0,0,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,0,0,0,188,0,0,0,32,95,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,13,0,0,192,13,0,0,9,0,0,0,0,0,0,0,0,0,0,0,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,0,0,0,0,0,188,0,0,0,40,99,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,14,0,0,5,0,0,0,0,0,0,0,0,0,0,0,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,190,0,0,0,188,0,0,0,48,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,4,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,43,0,0,12,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,2,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,196,0,0,0,197,0,0,0,198,0,0,0,199,0,0,0,200,0,0,0,201,0,0,0,202,0,0,0,203,0,0,0,204,0,0,0,205,0,0,0,0,0,0,0,184,2,0,0,192,0,0,0,206,0,0,0,207,0,0,0,195,0,0,0,196,0,0,0,197,0,0,0,208,0,0,0,199,0,0,0,200,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,213,0,0,0,0,0,0,0,200,2,0,0,214,0,0,0,215,0,0,0,216,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,223,0,0,0,224,0,0,0,225,0,0,0,226,0,0,0,227,0,0,0,0,0,0,0,216,2,0,0,214,0,0,0,228,0,0,0,229,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,230,0,0,0,221,0,0,0,222,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,234,0,0,0,235,0,0,0,0,0,0,0,248,2,0,0,236,0,0,0,237,0,0,0,0,0,0,0,16,3,0,0,192,0,0,0,238,0,0,0,239,0,0,0,195,0,0,0,196,0,0,0,197,0,0,0,198,0,0,0,199,0,0,0,200,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,204,0,0,0,205,0,0,0,0,0,0,0,24,3,0,0,214,0,0,0,240,0,0,0,241,0,0,0,217,0,0,0,218,0,0,0,219,0,0,0,220,0,0,0,221,0,0,0,222,0,0,0,231,0,0,0,232,0,0,0,233,0,0,0,226,0,0,0,227,0,0,0,8,0,0,0,0,0,0,0,32,3,0,0,242,0,0,0,243,0,0,0,248,255,255,255,248,255,255,255,32,3,0,0,244,0,0,0,245,0,0,0,8,0,0,0,0,0,0,0,56,3,0,0,246,0,0,0,247,0,0,0,248,255,255,255,248,255,255,255,56,3,0,0,248,0,0,0,249,0,0,0,4,0,0,0,0,0,0,0,80,3,0,0,250,0,0,0,251,0,0,0,252,255,255,255,252,255,255,255,80,3,0,0,252,0,0,0,253,0,0,0,4,0,0,0,0,0,0,0,104,3,0,0,254,0,0,0,255,0,0,0,252,255,255,255,252,255,255,255,104,3,0,0,0,1,0,0,1,1,0,0,0,0,0,0,128,3,0,0,2,1,0,0,3,1,0,0,4,1,0,0,0,0,0,0,144,3,0,0,5,1,0,0,6,1,0,0,7,1,0,0,8,1,0,0,9,1,0,0,10,1,0,0,11,1,0,0,0,0,0,0,160,3,0,0,12,1,0,0,13,1,0,0,14,1,0,0,15,1,0,0,16,1,0,0,17,1,0,0,0,0,0,0,192,3,0,0,18,1,0,0,19,1,0,0,14,1,0,0,20,1,0,0,21,1,0,0,22,1,0,0,0,0,0,0,208,3,0,0,23,1,0,0,24,1,0,0,14,1,0,0,25,1,0,0,26,1,0,0,27,1,0,0,28,1,0,0,29,1,0,0,30,1,0,0,31,1,0,0,32,1,0,0,33,1,0,0,34,1,0,0,35,1,0,0,0,0,0,0,16,4,0,0,36,1,0,0,37,1,0,0,14,1,0,0,38,1,0,0,39,1,0,0,40,1,0,0,41,1,0,0,42,1,0,0,43,1,0,0,44,1,0,0,45,1,0,0,46,1,0,0,47,1,0,0,48,1,0,0,0,0,0,0,72,4,0,0,49,1,0,0,50,1,0,0,14,1,0,0,51,1,0,0,52,1,0,0,53,1,0,0,54,1,0,0,55,1,0,0,56,1,0,0,57,1,0,0,58,1,0,0,0,0,0,0,136,4,0,0,59,1,0,0,60,1,0,0,14,1,0,0,61,1,0,0,62,1,0,0,63,1,0,0,64,1,0,0,65,1,0,0,66,1,0,0,67,1,0,0,68,1,0,0,0,0,0,0,192,4,0,0,69,1,0,0,70,1,0,0,14,1,0,0,71,1,0,0,72,1,0,0,73,1,0,0,74,1,0,0,75,1,0,0,76,1,0,0,77,1,0,0,248,255,255,255,192,4,0,0,78,1,0,0,79,1,0,0,80,1,0,0,81,1,0,0,82,1,0,0,83,1,0,0,84,1,0,0,0,0,0,0,248,4,0,0,85,1,0,0,86,1,0,0,14,1,0,0,87,1,0,0,88,1,0,0,89,1,0,0,90,1,0,0,91,1,0,0,92,1,0,0,93,1,0,0,248,255,255,255,248,4,0,0,94,1,0,0,95,1,0,0,96,1,0,0,97,1,0,0,98,1,0,0,99,1,0,0,100,1,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,40,5,0,0,101,1,0,0,102,1,0,0,14,1,0,0,103,1,0,0,0,0,0,0,80,5,0,0,104,1,0,0,105,1,0,0,14,1,0,0,106,1,0,0,0,0,0,0,112,5,0,0,107,1,0,0,108,1,0,0,14,1,0,0,109,1,0,0,110,1,0,0,111,1,0,0,112,1,0,0,113,1,0,0,114,1,0,0,115,1,0,0,116,1,0,0,117,1,0,0,0,0,0,0,152,5,0,0,118,1,0,0,119,1,0,0,14,1,0,0,120,1,0,0,121,1,0,0,122,1,0,0,123,1,0,0,124,1,0,0,125,1,0,0,126,1,0,0,127,1,0,0,128,1,0,0,0,0,0,0,184,5,0,0,129,1,0,0,130,1,0,0,14,1,0,0,131,1,0,0,132,1,0,0,133,1,0,0,134,1,0,0,135,1,0,0,136,1,0,0,137,1,0,0,138,1,0,0,139,1,0,0,0,0,0,0,216,5,0,0,140,1,0,0,141,1,0,0,14,1,0,0,142,1,0,0,143,1,0,0,144,1,0,0,145,1,0,0,146,1,0,0,147,1,0,0,148,1,0,0,149,1,0,0,150,1,0,0,0,0,0,0,248,5,0,0,151,1,0,0,152,1,0,0,14,1,0,0,153,1,0,0,154,1,0,0,0,0,0,0,32,6,0,0,155,1,0,0,156,1,0,0,14,1,0,0,157,1,0,0,158,1,0,0,0,0,0,0,72,6,0,0,159,1,0,0,160,1,0,0,14,1,0,0,161,1,0,0,162,1,0,0,0,0,0,0,112,6,0,0,163,1,0,0,164,1,0,0,14,1,0,0,165,1,0,0,166,1,0,0,0,0,0,0,152,6,0,0,167,1,0,0,168,1,0,0,14,1,0,0,169,1,0,0,170,1,0,0,171,1,0,0,0,0,0,0,192,6,0,0,172,1,0,0,173,1,0,0,14,1,0,0,174,1,0,0,175,1,0,0,176,1,0,0,0,0,0,0,224,6,0,0,177,1,0,0,178,1,0,0,14,1,0,0,179,1,0,0,180,1,0,0,181,1,0,0,182,1,0,0,183,1,0,0,184,1,0,0,185,1,0,0,0,0,0,0,24,7,0,0,177,1,0,0,186,1,0,0,14,1,0,0,179,1,0,0,180,1,0,0,181,1,0,0,182,1,0,0,183,1,0,0,184,1,0,0,185,1,0,0,0,0,0,0,72,7,0,0,187,1,0,0,188,1,0,0,14,1,0,0,189,1,0,0,190,1,0,0,191,1,0,0,192,1,0,0,193,1,0,0,194,1,0,0,195,1,0,0,0,0,0,0,136,7,0,0,196,1,0,0,197,1,0,0,14,1,0,0,0,0,0,0,152,7,0,0,198,1,0,0,199,1,0,0,14,1,0,0,200,1,0,0,201,1,0,0,202,1,0,0,203,1,0,0,204,1,0,0,205,1,0,0,206,1,0,0,207,1,0,0,0,0,0,0,224,7,0,0,208,1,0,0,209,1,0,0,14,1,0,0,210,1,0,0,211,1,0,0,212,1,0,0,213,1,0,0,214,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([240,7,0,0,215,1,0,0,216,1,0,0,14,1,0,0,217,1,0,0,218,1,0,0,219,1,0,0,220,1,0,0,221,1,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,176,3,0,0,177,1,0,0,222,1,0,0,14,1,0,0,0,0,0,0,192,7,0,0,177,1,0,0,223,1,0,0,14,1,0,0,224,1,0,0,225,1,0,0,226,1,0,0,227,1,0,0,228,1,0,0,229,1,0,0,230,1,0,0,231,1,0,0,232,1,0,0,233,1,0,0,234,1,0,0,235,1,0,0,0,0,0,0,40,7,0,0,177,1,0,0,236,1,0,0,14,1,0,0,237,1,0,0,238,1,0,0,239,1,0,0,240,1,0,0,241,1,0,0,242,1,0,0,243,1,0,0,0,0,0,0,104,7,0,0,177,1,0,0,244,1,0,0,14,1,0,0,245,1,0,0,246,1,0,0,247,1,0,0,248,1,0,0,249,1,0,0,250,1,0,0,251,1,0,0,0,0,0,0,240,6,0,0,177,1,0,0,252,1,0,0,14,1,0,0,179,1,0,0,180,1,0,0,181,1,0,0,182,1,0,0,183,1,0,0,184,1,0,0,185,1,0,0,0,0,0,0,16,8,0,0,253,1,0,0,254,1,0,0,4,1,0,0,255,1,0,0,0,0,0,0,56,8,0,0,0,2,0,0,1,2,0,0,2,2,0,0,3,2,0,0,4,2,0,0,5,2,0,0,6,2,0,0,7,2,0,0,0,0,0,0,72,8,0,0,0,2,0,0,8,2,0,0,2,2,0,0,3,2,0,0,4,2,0,0,9,2,0,0,10,2,0,0,11,2,0,0,186,76,0,0,0,0,0,0,112,8,0,0,12,2,0,0,13,2,0,0,14,2,0,0,0,0,0,0,128,8,0,0,15,2,0,0,16,2,0,0,17,2,0,0,0,0,0,0,144,8,0,0,18,2,0,0,19,2,0,0,4,1,0,0,0,0,0,0,160,8,0,0,15,2,0,0,20,2,0,0,17,2,0,0,0,0,0,0,176,8,0,0,15,2,0,0,21,2,0,0,17,2,0,0,0,0,0,0,192,8,0,0,22,2,0,0,23,2,0,0,24,2,0,0,0,0,0,0,240,8,0,0,0,2,0,0,25,2,0,0,2,2,0,0,3,2,0,0,4,2,0,0,26,2,0,0,27,2,0,0,28,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,3,32,2,32,2,32,2,32,2,32,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,96,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,213,8,213,8,213,8,213,8,213,8,213,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,4,192,4,192,4,192,4,192,4,192,4,192,8,214,8,214,8,214,8,214,8,214,8,214,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,4,192,4,192,4,192,4,192,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,76,105,115,116,68,97,116,97,0,52,68,97,116,97,0,56,70,117,110,99,68,97,116,97,0,70,85,78,67,0,49,49,65,116,111,109,73,110,116,68,97,116,97,0,49,51,65,116,111,109,70,108,111,97,116,68,97,116,97,0,108,105,115,112,83,116,114,105,110,103,32,33,61,32,48,0,47,104,111,109,101,47,116,114,105,122,101,114,47,72,111,98,98,121,47,76,105,115,112,83,83,83,47,115,114,99,47,108,105,115,112,101,120,101,99,117,116,101,114,46,99,112,112,0,76,105,115,112,69,120,101,99,117,116,101,114,0,43,0,45,0,42,0,47,0,61,61,0,33,61,0,60,0,62,0,62,61,0,60,61,0,38,38,0,124,124,0,33,0,94,0,32,110,111,116,32,100,101,102,105,110,101,100,33,0,55,77,101,115,115,97,103,101,0,118,97,114,46,110,97,109,101,46,115,105,122,101,40,41,32,62,32,48,0,47,104,111,109,101,47,116,114,105,122,101,114,47,72,111,98,98,121,47,76,105,115,112,83,83,83,47,115,114,99,47,109,101,109,111,114,121,46,99,112,112,0,115,101,116,86,97,114,0,110,97,109,101,46,115,105,122,101,40,41,32,62,32,48,0,102,105,110,100,86,97,114,80,111,105,110,116,101,114,0,102,105,110,100,86,97,114,0,67,97,110,39,116,32,102,105,110,100,32,118,97,114,105,97,98,108,101,32,119,105,116,104,32,110,97,109,101,32,0,49,49,65,116,111,109,78,105,108,68,97,116,97,0,49,48,70,117,110,99,95,95,69,113,117,95,0,56,70,117,110,99,116,105,111,110,0,69,113,117,0,57,65,116,111,109,84,68,97,116,97,0,56,70,117,110,99,95,99,97,114,0,99,97,114,0,49,48,70,117,110,99,95,95,77,117,108,95,0,77,117,108,0,56,70,117,110,99,95,97,115,107,0,97,115,107,0,49,49,65,116,111,109,83,116,114,68,97,116,97,0,49,49,70,117,110,99,95,95,76,101,115,115,95,0,76,101,115,115,0,70,105,114,115,116,32,111,112,101,114,97,110,100,32,109,117,115,116,32,98,101,32,73,78,84,32,111,114,32,70,76,79,65,84,0,83,101,99,111,110,100,32,111,112,101,114,97,110,100,32,109,117,115,116,32,98,101,32,73,78,84,32,111,114,32,70,76,79,65,84,0,49,49,70,117,110,99,95,114,101,116,117,114,110,0,114,101,116,117,114,110,0,78,49,48,70,117,110,99,95,119,104,105,108,101,49,54,114,101,116,117,114,110,95,101,120,99,101,112,116,105,111,110,69,0,49,51,70,117,110,99,95,95,78,111,116,69,113,117,95,0,78,111,116,32,101,113,117,97,108,0,57,70,117,110,99,95,115,105,122,101,0,115,105,122,101,0,49,48,70,117,110,99,95,100,101,102,117,110,0,100,101,102,117,110,0,49,48,70,117,110,99,95,95,65,110,100,95,0,65,110,100,0,49,52,70,117,110,99,95,95,76,101,115,115,69,113,117,95,0,76,101,115,115,32,111,114,32,101,113,117,97,108,0,49,48,70,117,110,99,95,119,104,105,108,101,0,119,104,105,108,101,0,78,49,48,70,117,110,99,95,119,104,105,108,101,49,56,99,111,110,116,105,110,117,101,95,101,120,99,101,112,116,105,111,110,69,0,49,48,70,117,110,99,95,112,114,105,110,116,0,112,114,105,110,116,0,49,48,70,117,110,99,95,95,78,111,116,95,0,78,111,116,0,49,50,70,117,110,99,95,95,77,105,110,117,115,95,0,77,105,110,117,115,0,49,55,70,117,110,99,95,95,71,114,101,97,116,101,114,69,113,117,95,0,71,114,101,97,116,101,114,32,111,114,32,101,113,117,97,108,0,49,48,70,117,110,99,95,95,68,105,118,95,0,68,105,118,0,89,111,117,32,99,97,110,32,117,115,101,32,111,110,108,121,32,73,78,84,32,97,110,100,32,100,111,117,98,108,101,32,118,97,114,105,97,98,108,101,115,32,119,105,116,104,32,116,104,105,115,32,102,117,110,99,116,105,111,110,0,49,48,70,117,110,99,95,112,97,114,115,101,0,112,97,114,115,101,0,32,110,101,101,100,115,32,68,97,116,97,58,58,65,84,79,77,95,83,84,82,97,115,32,48,116,104,32,97,114,103,117,109,101,110,116,46,0,57,70,117,110,99,95,112,114,111,103,0,57,70,117,110,99,95,101,120,101,99,0,101,120,101,99,0,32,110,101,101,100,115,32,68,97,116,97,58,58,76,73,83,84,97,115,32,49,116,104,32,97,114,103,117,109,101,110,116,46,0,65,108,108,32,101,108,101,109,101,110,116,115,32,105,110,32,116,104,101,32,118,97,114,105,97,98,108,101,32,108,105,115,116,32,109,117,115,116,32,98,101,32,65,84,79,77,46,0,57,70,117,110,99,95,102,117,110,99,0,102,117,110,99,0,46,46,46,0,65,108,108,32,97,114,103,117,109,101,110,116,32,110,97,109,101,115,32,109,117,115,116,32,98,101,32,97,116,111,109,115,46,0,49,50,70,117,110,99,95,95,80,111,119,101,114,95,0,80,111,119,101,114,0,32,110,101,101,100,115,32,68,97,116,97,58,58,65,84,79,77,95,73,78,84,97,115,32,48,116,104,32,97,114,103,117,109,101,110,116,46,0,32,110,101,101,100,115,32,68,97,116,97,58,58,65,84,79,77,95,73,78,84,97,115,32,49,116,104,32,97,114,103,117,109,101,110,116,46,0,55,70,117,110,99,95,105,102,0,105,102,0,32,110,101,101,100,115,32,50,32,111,114,32,52,32,97,114,103,117,109,101,110,116,115,46,0,32,110,101,101,100,115,32,65,84,79,77,32,97,115,32,51,116,104,32,97,114,103,117,109,101,110,116,46,0,101,108,115,101,0,32,110,101,101,100,115,32,34,101,108,115,101,34,32,97,115,32,51,116,104,32,97,114,103,117,109,101,110,116,46,0,56,70,117,110,99,95,99,100,114,0,99,100,114,0,32,110,101,101,100,115,32,68,97,116,97,58,58,76,73,83,84,97,115,32,48,116,104,32,97,114,103,117,109,101,110,116,46,0,57,70,117,110,99,95,115,101,116,113,0,115,101,116,113,0,84,104,101,32,102,117,110,99,116,105,111,110,32,0,32,110,101,101,100,115,32,68,97,116,97,58,58,65,84,79,77,97,115,32,48,116,104,32,97,114,103,117,109,101,110,116,46,0,49,51,70,117,110,99,95,99,111,110,116,105,110,117,101,0,99,111,110,116,105,110,117,101,0,57,70,117,110,99,95,95,79,114,95,0,79,114,0,49,48,70,117,110,99,95,113,117,111,116,101,0,113,117,111,116,101,0,49,52,70,117,110,99,95,95,71,114,101,97,116,101,114,95,0,71,114,101,97,116,101,114,0,70,105,114,115,116,32,111,112,101,114,97,110,100,32,109,117,115,116,32,98,101,32,73,78,84,32,111,114,32,100,111,117,98,108,101,0,83,101,99,111,110,100,32,111,112,101,114,97,110,100,32,109,117,115,116,32,98,101,32,73,78,84,32,111,114,32,100,111,117,98,108,101,0,49,49,70,117,110,99,95,95,80,108,117,115,95,0,80,108,117,115,0,89,111,117,32,99,97,110,32,117,115,101,32,111,110,108,121,32,73,78,84,32,97,110,100,32,100,111,117,98,108,101,32,118,97,114,105,97,98,108,101,115,32,119,105,116,104,32,43,32,102,117,110,99,116,105,111,110,0,49,50,76,105,115,112,70,117,110,99,116,105,111,110,0,78,79,32,78,65,77,69,0,84,104,105,115,32,102,117,110,99,116,105,111,110,32,110,101,101,100,115,32,0,32,97,114,103,117,109,101,110,116,115,0,84,104,105,115,32,102,117,110,99,116,105,111,110,32,110,101,101,100,115,32,110,111,116,32,108,101,115,115,32,116,104,97,110,32,0,95,97,114,103,115,95,0,40,10,0,10,0,41,10,0,112,114,111,103,0,56,65,116,111,109,68,97,116,97,0,66,114,97,99,107,101,116,32,109,105,115,115,101,100,32,80,0,78,49,48,76,105,115,112,83,116,114,105,110,103,49,49,112,97,114,115,101,95,101,114,114,111,114,69,0,66,97,100,32,115,116,114,105,110,103,32,101,110,100,32,109,117,115,116,32,98,101,32,39,58,39,32,111,114,32,39,59,39,32,0,66,114,97,99,107,101,116,32,109,105,115,115,101,100,0,87,114,111,110,103,32,110,117,109,98,101,114,33,0,84,0,110,105,108,0,91,80,111,115,105,116,105,111,110,32,105,110,32,110,111,116,32,100,101,102,105,110,101,100,93,0,32,91,0,58,0,93,0,70,117,110,99,116,105,111,110,32,0,32,110,101,101,100,115,32,0,32,97,114,103,117,109,101,110,116,115,46,0,32,110,101,101,100,115,32,110,111,116,32,108,101,115,115,32,116,104,97,110,32,0,69,114,114,111,114,0,73,110,102,111,0,87,97,114,110,105,110,103,0,91,0,93,32,0,80,97,114,115,101,32,101,114,114,111,114,33,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,78,65,78,0,46,0,105,110,102,105,110,105,116,121,0,110,97,110,0,80,79,83,73,88,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,98,97,115,105,99,95,115,116,114,105,110,103,0,37,100,0,37,117,0,37,102,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,105,111,115,116,114,101,97,109,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,67,0,37,112,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,37,0,0,0,0,0,108,0,108,108,0,76,0,37,112,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,37,72,58,37,77,37,72,58,37,77,58,37,83,83,117,110,100,97,121,0,77,111,110,100,97,121,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,84,104,117,114,115,100,97,121,0,70,114,105,100,97,121,0,83,97,116,117,114,100,97,121,0,83,117,110,0,77,111,110,0,84,117,101,0,87,101,100,0,84,104,117,0,70,114,105,0,83,97,116,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,77,97,114,99,104,0,65,112,114,105,108,0,77,97,121,0,74,117,110,101,0,74,117,108,121,0,65,117,103,117,115,116,0,83,101,112,116,101,109,98,101,114,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,68,101,99,101,109,98,101,114,0,74,97,110,0,70,101,98,0,77,97,114,0,65,112,114,0,74,117,110,0,74,117,108,0,65,117,103,0,83,101,112,0,79,99,116,0,78,111,118,0,68,101,99,0,65,77,0,80,77,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,37,73,58,37,77,58,37,83,32,37,112,0,37,109,47,37,100,47,37,121,0,37,72,58,37,77,58,37,83,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,48,49,50,51,52,53,54,55,56,57,0,37,76,102,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,48,49,50,51,52,53,54,55,56,57,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,37,46,48,76,102,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,116,114,117,101,0,102,97,108,115,101,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,118,101,99,116,111,114,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,58,32,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,101,120,99,101,112,116,105,111,110,0,117,110,99,97,117,103,104,116,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,83,116,57,98,97,100,95,97,108,108,111,99,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,83,116,56,98,97,100,95,99,97,115,116,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

   
  Module["_memset"] = _memset;

  function ___gxx_personality_v0() {
    }

  function _pthread_mutex_lock() {}

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  function ___lock() {}

  function ___unlock() {}

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _llvm_fabs_f64=Math_abs;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0100000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~02000000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=STATICTOP; STATICTOP += 16;;
  
  var _stdout=STATICTOP; STATICTOP += 16;;
  
  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 0777, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
        ret = ret.slice(0, Math.max(0, bufsize));
        writeStringToMemory(ret, buf, true);
        return ret.length;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_i64Add"] = _i64Add;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_find_matching_catch_4() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_2() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_3() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

   
  Module["_memmove"] = _memmove;

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function _pthread_mutex_unlock() {}

  function ___cxa_guard_release() {}

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var ___dso_handle=STATICTOP; STATICTOP += 16;;
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vid(x) { Module["printErr"]("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiid(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_vid": nullFunc_vid, "nullFunc_iiiiiid": nullFunc_iiiiiid, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_ii": nullFunc_ii, "nullFunc_iiiiiiiiiiii": nullFunc_iiiiiiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiiiiiiiiii": nullFunc_viiiiiiiiiiiiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_di": nullFunc_di, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_diii": nullFunc_diii, "nullFunc_i": nullFunc_i, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_iiiiid": nullFunc_iiiiid, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_di": invoke_di, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "___lock": ___lock, "_llvm_pow_f64": _llvm_pow_f64, "_pthread_key_create": _pthread_key_create, "_abort": _abort, "_llvm_fabs_f64": _llvm_fabs_f64, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_find_matching_catch_4": ___cxa_find_matching_catch_4, "___assert_fail": ___assert_fail, "___cxa_free_exception": ___cxa_free_exception, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3, "__isLeapYear": __isLeapYear, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "___cxa_guard_acquire": ___cxa_guard_acquire, "_strftime_l": _strftime_l, "___setErrNo": ___setErrNo, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_sbrk": _sbrk, "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___cxa_end_catch": ___cxa_end_catch, "___resumeException": ___resumeException, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_sysconf": _sysconf, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_getspecific": _pthread_getspecific, "__arraySum": __arraySum, "_pthread_self": _pthread_self, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "___syscall54": ___syscall54, "___unlock": ___unlock, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_pthread_setspecific": _pthread_setspecific, "___cxa_atexit": ___cxa_atexit, "___cxa_throw": ___cxa_throw, "___cxa_rethrow": ___cxa_rethrow, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "___cxa_pure_virtual": ___cxa_pure_virtual, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_guard_abort": ___cxa_guard_abort, "_atexit": _atexit, "___syscall140": ___syscall140, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_vid=env.nullFunc_vid;
  var nullFunc_iiiiiid=env.nullFunc_iiiiiid;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_iiiiiiiiiiii=env.nullFunc_iiiiiiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiiiiiiiiii=env.nullFunc_viiiiiiiiiiiiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_iiiiid=env.nullFunc_iiiiid;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vid=env.invoke_vid;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_di=env.invoke_di;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var ___lock=env.___lock;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _pthread_key_create=env._pthread_key_create;
  var _abort=env._abort;
  var _llvm_fabs_f64=env._llvm_fabs_f64;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_find_matching_catch_4=env.___cxa_find_matching_catch_4;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var __isLeapYear=env.__isLeapYear;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _strftime_l=env._strftime_l;
  var ___setErrNo=env.___setErrNo;
  var _llvm_eh_typeid_for=env._llvm_eh_typeid_for;
  var _sbrk=env._sbrk;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___resumeException=env.___resumeException;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _sysconf=env._sysconf;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _pthread_self=env._pthread_self;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _pthread_setspecific=env._pthread_setspecific;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_throw=env.___cxa_throw;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __ZN4HeapC2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN8ListDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 2312;
 HEAP32[$1>>2] = $2;
 $3 = ((($1)) + 4|0);
 __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEED2Ev($3);
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseI8LispNodeNS_9allocatorIS1_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseI8LispNodeNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp;
 $21 = sp + 116|0;
 $29 = $this;
 $30 = $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)!=(0|0);
 if (!($32)) {
  STACKTOP = sp;return;
 }
 $28 = $30;
 $33 = $28;
 $34 = HEAP32[$33>>2]|0;
 $26 = $33;
 $27 = $34;
 $35 = $26;
 while(1) {
  $36 = $27;
  $37 = ((($35)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($36|0)!=($38|0);
  if (!($39)) {
   break;
  }
  $25 = $35;
  $40 = $25;
  $41 = ((($40)) + 8|0);
  $24 = $41;
  $42 = $24;
  $23 = $42;
  $43 = $23;
  $44 = ((($35)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($45)) + -12|0);
  HEAP32[$44>>2] = $46;
  $22 = $46;
  $47 = $22;
  $19 = $43;
  $20 = $47;
  $48 = $19;
  $49 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $48;
  $17 = $49;
  $50 = $16;
  $51 = $17;
  $14 = $50;
  $15 = $51;
  $52 = $15;
  __ZN8LispNodeD2Ev($52);
 }
 $13 = $30;
 $53 = $13;
 $54 = ((($53)) + 8|0);
 $12 = $54;
 $55 = $12;
 $11 = $55;
 $56 = $11;
 $57 = HEAP32[$30>>2]|0;
 $3 = $30;
 $58 = $3;
 $2 = $58;
 $59 = $2;
 $60 = ((($59)) + 8|0);
 $1 = $60;
 $61 = $1;
 $0 = $61;
 $62 = $0;
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$58>>2]|0;
 $65 = $63;
 $66 = $64;
 $67 = (($65) - ($66))|0;
 $68 = (($67|0) / 12)&-1;
 $8 = $56;
 $9 = $57;
 $10 = $68;
 $69 = $8;
 $70 = $9;
 $71 = $10;
 $5 = $69;
 $6 = $70;
 $7 = $71;
 $72 = $6;
 $4 = $72;
 $73 = $4;
 __ZdlPv($73);
 STACKTOP = sp;return;
}
function __ZN4DataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN8ListDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8ListDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8ListData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i = 0, $__a$i$i$i = 0, $__i$i$i = 0, $__i$i$i$i = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 336|0;
 $5 = sp + 324|0;
 $16 = sp + 280|0;
 $19 = sp + 268|0;
 $60 = sp + 96|0;
 $71 = sp + 348|0;
 $i = sp + 44|0;
 $72 = sp + 40|0;
 $73 = sp + 36|0;
 $74 = sp + 24|0;
 $75 = sp + 12|0;
 $78 = sp;
 $70 = $this;
 $79 = $70;
 $$expand_i1_val = 0;
 HEAP8[$71>>0] = $$expand_i1_val;
 $69 = $agg$result;
 $80 = $69;
 $68 = $80;
 $81 = $68;
 $67 = $81;
 $82 = $67;
 $66 = $82;
 $65 = $80;
 $83 = $65;
 $64 = $83;
 $84 = $64;
 $63 = $84;
 $85 = $63;
 $__a$i$i = $85;
 $__i$i$i = 0;
 while(1) {
  $86 = $__i$i$i;
  $87 = ($86>>>0)<(3);
  if (!($87)) {
   break;
  }
  $88 = $__i$i$i;
  $89 = $__a$i$i;
  $90 = (($89) + ($88<<2)|0);
  HEAP32[$90>>2] = 0;
  $91 = $__i$i$i;
  $92 = (($91) + 1)|0;
  $__i$i$i = $92;
 }
 $30 = $i;
 $93 = $30;
 HEAP32[$93>>2] = 0;
 $94 = ((($79)) + 4|0);
 $20 = $94;
 $95 = $20;
 $96 = HEAP32[$95>>2]|0;
 $17 = $95;
 $18 = $96;
 $97 = $18;
 $14 = $16;
 $15 = $97;
 $98 = $14;
 $99 = $15;
 HEAP32[$98>>2] = $99;
 $100 = HEAP32[$16>>2]|0;
 HEAP32[$19>>2] = $100;
 $101 = HEAP32[$19>>2]|0;
 HEAP32[$72>>2] = $101;
 ;HEAP32[$i>>2]=HEAP32[$72>>2]|0;
 while(1) {
  $102 = ((($79)) + 4|0);
  $6 = $102;
  $103 = $6;
  $104 = ((($103)) + 4|0);
  $105 = HEAP32[$104>>2]|0;
  $3 = $103;
  $4 = $105;
  $106 = $4;
  $0 = $2;
  $1 = $106;
  $107 = $0;
  $108 = $1;
  HEAP32[$107>>2] = $108;
  $109 = HEAP32[$2>>2]|0;
  HEAP32[$5>>2] = $109;
  $110 = HEAP32[$5>>2]|0;
  HEAP32[$73>>2] = $110;
  $11 = $i;
  $12 = $73;
  $111 = $11;
  $112 = $12;
  $9 = $111;
  $10 = $112;
  $113 = $9;
  $8 = $113;
  $114 = $8;
  $115 = HEAP32[$114>>2]|0;
  $116 = $10;
  $7 = $116;
  $117 = $7;
  $118 = HEAP32[$117>>2]|0;
  $119 = ($115|0)==($118|0);
  $120 = $119 ^ 1;
  if (!($120)) {
   label = 23;
   break;
  }
  $13 = $i;
  $121 = $13;
  $122 = HEAP32[$121>>2]|0;
  __THREW__ = 0;
  invoke_vii(541,($75|0),($122|0));
  $123 = __THREW__; __THREW__ = 0;
  $124 = $123&1;
  if ($124) {
   label = 19;
   break;
  }
  $28 = $75;
  $29 = 13384;
  $125 = $28;
  $126 = $29;
  __THREW__ = 0;
  $127 = (invoke_iii(542,($125|0),($126|0))|0);
  $128 = __THREW__; __THREW__ = 0;
  $129 = $128&1;
  if ($129) {
   label = 20;
   break;
  }
  $27 = $127;
  $130 = $27;
  $25 = $74;
  $26 = $130;
  $131 = $25;
  $132 = $26;
  $24 = $132;
  $133 = $24;
  ;HEAP32[$131>>2]=HEAP32[$133>>2]|0;HEAP32[$131+4>>2]=HEAP32[$133+4>>2]|0;HEAP32[$131+8>>2]=HEAP32[$133+8>>2]|0;
  $134 = $26;
  $23 = $134;
  $135 = $23;
  $22 = $135;
  $136 = $22;
  $21 = $136;
  $137 = $21;
  $__a$i$i$i = $137;
  $__i$i$i$i = 0;
  while(1) {
   $138 = $__i$i$i$i;
   $139 = ($138>>>0)<(3);
   if (!($139)) {
    break;
   }
   $140 = $__i$i$i$i;
   $141 = $__a$i$i$i;
   $142 = (($141) + ($140<<2)|0);
   HEAP32[$142>>2] = 0;
   $143 = $__i$i$i$i;
   $144 = (($143) + 1)|0;
   $__i$i$i$i = $144;
  }
  $57 = $agg$result;
  $58 = $74;
  $145 = $57;
  $146 = $58;
  $55 = $145;
  $56 = $146;
  $147 = $55;
  $148 = $56;
  $54 = $148;
  $149 = $54;
  $53 = $149;
  $150 = $53;
  $52 = $150;
  $151 = $52;
  $51 = $151;
  $152 = $51;
  $50 = $152;
  $153 = $50;
  $154 = HEAP8[$153>>0]|0;
  $155 = $154&255;
  $156 = $155 & 1;
  $157 = ($156|0)!=(0);
  if ($157) {
   $44 = $150;
   $158 = $44;
   $43 = $158;
   $159 = $43;
   $42 = $159;
   $160 = $42;
   $161 = ((($160)) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   $169 = $162;
  } else {
   $49 = $150;
   $163 = $49;
   $48 = $163;
   $164 = $48;
   $47 = $164;
   $165 = $47;
   $166 = ((($165)) + 1|0);
   $46 = $166;
   $167 = $46;
   $45 = $167;
   $168 = $45;
   $169 = $168;
  }
  $41 = $169;
  $170 = $41;
  $171 = $56;
  $40 = $171;
  $172 = $40;
  $39 = $172;
  $173 = $39;
  $38 = $173;
  $174 = $38;
  $37 = $174;
  $175 = $37;
  $176 = HEAP8[$175>>0]|0;
  $177 = $176&255;
  $178 = $177 & 1;
  $179 = ($178|0)!=(0);
  if ($179) {
   $33 = $172;
   $180 = $33;
   $32 = $180;
   $181 = $32;
   $31 = $181;
   $182 = $31;
   $183 = ((($182)) + 4|0);
   $184 = HEAP32[$183>>2]|0;
   $191 = $184;
  } else {
   $36 = $172;
   $185 = $36;
   $35 = $185;
   $186 = $35;
   $34 = $186;
   $187 = $34;
   $188 = HEAP8[$187>>0]|0;
   $189 = $188&255;
   $190 = $189 >> 1;
   $191 = $190;
  }
  __THREW__ = 0;
  (invoke_iiii(543,($147|0),($170|0),($191|0))|0);
  $192 = __THREW__; __THREW__ = 0;
  $193 = $192&1;
  if ($193) {
   label = 21;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
  $61 = $i;
  $62 = 0;
  $194 = $61;
  ;HEAP32[$60>>2]=HEAP32[$194>>2]|0;
  $59 = $194;
  $195 = $59;
  $196 = HEAP32[$195>>2]|0;
  $197 = ((($196)) + 12|0);
  HEAP32[$195>>2] = $197;
  $198 = HEAP32[$60>>2]|0;
  HEAP32[$78>>2] = $198;
 }
 if ((label|0) == 19) {
  $199 = ___cxa_find_matching_catch_2()|0;
  $200 = tempRet0;
  $76 = $199;
  $77 = $200;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $206 = $76;
  $207 = $77;
  ___resumeException($206|0);
  // unreachable;
 }
 else if ((label|0) == 20) {
  $201 = ___cxa_find_matching_catch_2()|0;
  $202 = tempRet0;
  $76 = $201;
  $77 = $202;
 }
 else if ((label|0) == 21) {
  $203 = ___cxa_find_matching_catch_2()|0;
  $204 = tempRet0;
  $76 = $203;
  $77 = $204;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
 }
 else if ((label|0) == 23) {
  $$expand_i1_val2 = 1;
  HEAP8[$71>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$71>>0]|0;
  $205 = $$pre_trunc&1;
  if ($205) {
   STACKTOP = sp;return;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 $206 = $76;
 $207 = $77;
 ___resumeException($206|0);
 // unreachable;
}
function __ZNK8ListData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1;
}
function __ZNK8ListData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $listData = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp;
 $5 = sp + 44|0;
 $8 = $this;
 $11 = $8;
 $12 = (__Znwj(16)|0);
 __THREW__ = 0;
 invoke_vi(544,($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $30 = ___cxa_find_matching_catch_2()|0;
  $31 = tempRet0;
  $9 = $30;
  $10 = $31;
  __ZdlPv($12);
  $32 = $9;
  $33 = $10;
  ___resumeException($32|0);
  // unreachable;
 }
 $listData = $12;
 $15 = $listData;
 $16 = ((($15)) + 4|0);
 $17 = ((($11)) + 4|0);
 $6 = $16;
 $7 = $17;
 $18 = $6;
 $19 = $7;
 $20 = ($18|0)!=($19|0);
 if (!($20)) {
  $29 = $listData;
  STACKTOP = sp;return ($29|0);
 }
 $21 = $7;
 $3 = $18;
 $4 = $21;
 $22 = $3;
 $23 = $4;
 ;HEAP8[$2>>0]=HEAP8[$5>>0]|0;
 $0 = $22;
 $1 = $23;
 $24 = $7;
 $25 = HEAP32[$24>>2]|0;
 $26 = $7;
 $27 = ((($26)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_($18,$25,$28);
 $29 = $listData;
 STACKTOP = sp;return ($29|0);
}
function __ZN8ListDataC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 28|0;
 $6 = sp + 16|0;
 $10 = $this;
 $11 = $10;
 __ZN4DataC2Ev($11);
 $12 = 2312;
 HEAP32[$11>>2] = $12;
 $13 = ((($11)) + 4|0);
 $9 = $13;
 $14 = $9;
 $8 = $14;
 $15 = $8;
 $7 = $15;
 HEAP32[$15>>2] = 0;
 $16 = ((($15)) + 4|0);
 HEAP32[$16>>2] = 0;
 $17 = ((($15)) + 8|0);
 $5 = $17;
 HEAP32[$6>>2] = 0;
 $18 = $5;
 $4 = $6;
 $19 = $4;
 $20 = HEAP32[$19>>2]|0;
 $2 = $18;
 HEAP32[$3>>2] = $20;
 $21 = $2;
 $1 = $21;
 $0 = $3;
 $22 = $0;
 $23 = HEAP32[$22>>2]|0;
 HEAP32[$21>>2] = $23;
 STACKTOP = sp;return;
}
function __ZN4DataC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 2348;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN4DataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__cap$i = 0, $__growing = 0, $__m = 0, $__mid = 0, $__ms$i = 0, $__new_size = 0;
 var $__old_size$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 24|0;
 $7 = sp + 288|0;
 $28 = sp + 16|0;
 $31 = sp + 287|0;
 $38 = sp + 8|0;
 $41 = sp + 286|0;
 $49 = sp + 104|0;
 $50 = sp + 92|0;
 $59 = sp;
 $62 = sp + 285|0;
 $__mid = sp + 32|0;
 $63 = $this;
 $64 = $__first;
 $65 = $__last;
 $66 = $63;
 $67 = $64;
 $68 = $65;
 $60 = $67;
 $61 = $68;
 $69 = $60;
 $70 = $61;
 ;HEAP8[$59>>0]=HEAP8[$62>>0]|0;
 $57 = $69;
 $58 = $70;
 $71 = $58;
 $72 = $57;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($75|0) / 12)&-1;
 $__new_size = $76;
 $77 = $__new_size;
 $56 = $66;
 $78 = $56;
 $55 = $78;
 $79 = $55;
 $54 = $79;
 $80 = $54;
 $81 = ((($80)) + 8|0);
 $53 = $81;
 $82 = $53;
 $52 = $82;
 $83 = $52;
 $84 = HEAP32[$83>>2]|0;
 $85 = HEAP32[$79>>2]|0;
 $86 = $84;
 $87 = $85;
 $88 = (($86) - ($87))|0;
 $89 = (($88|0) / 12)&-1;
 $90 = ($77>>>0)<=($89>>>0);
 if (!($90)) {
  __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE10deallocateEv($66);
  $173 = $__new_size;
  $48 = $66;
  HEAP32[$49>>2] = $173;
  $174 = $48;
  $175 = (__ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8max_sizeEv($174)|0);
  $__ms$i = $175;
  $176 = HEAP32[$49>>2]|0;
  $177 = $__ms$i;
  $178 = ($176>>>0)>($177>>>0);
  if ($178) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($174);
   // unreachable;
  }
  $46 = $174;
  $179 = $46;
  $45 = $179;
  $180 = $45;
  $44 = $180;
  $181 = $44;
  $182 = ((($181)) + 8|0);
  $43 = $182;
  $183 = $43;
  $42 = $183;
  $184 = $42;
  $185 = HEAP32[$184>>2]|0;
  $186 = HEAP32[$180>>2]|0;
  $187 = $185;
  $188 = $186;
  $189 = (($187) - ($188))|0;
  $190 = (($189|0) / 12)&-1;
  $__cap$i = $190;
  $191 = $__cap$i;
  $192 = $__ms$i;
  $193 = (($192>>>0) / 2)&-1;
  $194 = ($191>>>0)>=($193>>>0);
  if ($194) {
   $195 = $__ms$i;
   $47 = $195;
  } else {
   $196 = $__cap$i;
   $197 = $196<<1;
   HEAP32[$50>>2] = $197;
   $39 = $50;
   $40 = $49;
   $198 = $39;
   $199 = $40;
   ;HEAP8[$38>>0]=HEAP8[$41>>0]|0;
   $36 = $198;
   $37 = $199;
   $200 = $36;
   $201 = $37;
   $33 = $38;
   $34 = $200;
   $35 = $201;
   $202 = $34;
   $203 = HEAP32[$202>>2]|0;
   $204 = $35;
   $205 = HEAP32[$204>>2]|0;
   $206 = ($203>>>0)<($205>>>0);
   $207 = $37;
   $208 = $36;
   $209 = $206 ? $207 : $208;
   $210 = HEAP32[$209>>2]|0;
   $47 = $210;
  }
  $211 = $47;
  __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8allocateEj($66,$211);
  $212 = $64;
  $213 = $65;
  __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE18__construct_at_endIPS1_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($66,$212,$213);
  STACKTOP = sp;return;
 }
 $91 = $65;
 HEAP32[$__mid>>2] = $91;
 $__growing = 0;
 $92 = $__new_size;
 $51 = $66;
 $93 = $51;
 $94 = ((($93)) + 4|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = HEAP32[$93>>2]|0;
 $97 = $95;
 $98 = $96;
 $99 = (($97) - ($98))|0;
 $100 = (($99|0) / 12)&-1;
 $101 = ($92>>>0)>($100>>>0);
 if ($101) {
  $__growing = 1;
  $102 = $64;
  HEAP32[$__mid>>2] = $102;
  $32 = $66;
  $103 = $32;
  $104 = ((($103)) + 4|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = HEAP32[$103>>2]|0;
  $107 = $105;
  $108 = $106;
  $109 = (($107) - ($108))|0;
  $110 = (($109|0) / 12)&-1;
  $29 = $__mid;
  $30 = $110;
  $111 = $29;
  $112 = $30;
  ;HEAP8[$28>>0]=HEAP8[$31>>0]|0;
  $26 = $111;
  $27 = $112;
  $113 = $27;
  $114 = $26;
  $115 = HEAP32[$114>>2]|0;
  $116 = (($115) + (($113*12)|0)|0);
  HEAP32[$114>>2] = $116;
 }
 $117 = $64;
 $118 = HEAP32[$__mid>>2]|0;
 $119 = HEAP32[$66>>2]|0;
 $23 = $117;
 $24 = $118;
 $25 = $119;
 $120 = $23;
 $22 = $120;
 $121 = $22;
 $122 = $24;
 $18 = $122;
 $123 = $18;
 $124 = $25;
 $17 = $124;
 $125 = $17;
 $19 = $121;
 $20 = $123;
 $21 = $125;
 while(1) {
  $126 = $19;
  $127 = $20;
  $128 = ($126|0)!=($127|0);
  $129 = $21;
  if (!($128)) {
   break;
  }
  $130 = $19;
  (__ZN8LispNodeaSERKS_($129,$130)|0);
  $131 = $19;
  $132 = ((($131)) + 12|0);
  $19 = $132;
  $133 = $21;
  $134 = ((($133)) + 12|0);
  $21 = $134;
 }
 $__m = $129;
 $135 = $__growing;
 $136 = $135&1;
 if ($136) {
  $137 = HEAP32[$__mid>>2]|0;
  $138 = $65;
  __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE18__construct_at_endIPS1_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($66,$137,$138);
  STACKTOP = sp;return;
 }
 $139 = $__m;
 $15 = $66;
 $16 = $139;
 $140 = $15;
 $14 = $140;
 $141 = $14;
 $142 = ((($141)) + 4|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = HEAP32[$141>>2]|0;
 $145 = $143;
 $146 = $144;
 $147 = (($145) - ($146))|0;
 $148 = (($147|0) / 12)&-1;
 $__old_size$i = $148;
 $149 = $16;
 $12 = $140;
 $13 = $149;
 $150 = $12;
 while(1) {
  $151 = $13;
  $152 = ((($150)) + 4|0);
  $153 = HEAP32[$152>>2]|0;
  $154 = ($151|0)!=($153|0);
  if (!($154)) {
   break;
  }
  $11 = $150;
  $155 = $11;
  $156 = ((($155)) + 8|0);
  $10 = $156;
  $157 = $10;
  $9 = $157;
  $158 = $9;
  $159 = ((($150)) + 4|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = ((($160)) + -12|0);
  HEAP32[$159>>2] = $161;
  $8 = $161;
  $162 = $8;
  $5 = $158;
  $6 = $162;
  $163 = $5;
  $164 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $163;
  $3 = $164;
  $165 = $2;
  $166 = $3;
  $0 = $165;
  $1 = $166;
  $167 = $1;
  __ZN8LispNodeD2Ev($167);
 }
 $168 = $__old_size$i;
 __THREW__ = 0;
 invoke_vii(545,($140|0),($168|0));
 $169 = __THREW__; __THREW__ = 0;
 $170 = $169&1;
 if ($170) {
  $171 = ___cxa_find_matching_catch_3(0|0)|0;
  $172 = tempRet0;
  ___clang_call_terminate($171);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE18__construct_at_endIPS1_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $8 = sp;
 $13 = sp + 85|0;
 $__annotator = sp + 84|0;
 $18 = $this;
 $19 = $__first;
 $20 = $__last;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $__a = $25;
 while(1) {
  $26 = $19;
  $27 = $20;
  $28 = ($26|0)!=($27|0);
  if (!($28)) {
   break;
  }
  __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator,$21,1);
  $29 = $__a;
  $30 = ((($21)) + 4|0);
  $31 = HEAP32[$30>>2]|0;
  $14 = $31;
  $32 = $14;
  $33 = $19;
  $10 = $29;
  $11 = $32;
  $12 = $33;
  $34 = $10;
  $35 = $11;
  $36 = $12;
  $9 = $36;
  $37 = $9;
  ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
  $5 = $34;
  $6 = $35;
  $7 = $37;
  $38 = $5;
  $39 = $6;
  $40 = $7;
  $4 = $40;
  $41 = $4;
  $1 = $38;
  $2 = $39;
  $3 = $41;
  $42 = $2;
  $43 = $3;
  $0 = $43;
  $44 = $0;
  __ZN8LispNodeC2ERKS_($42,$44);
  __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $45 = ((($21)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ((($46)) + 12|0);
  HEAP32[$45>>2] = $47;
  $48 = $19;
  $49 = ((($48)) + 12|0);
  $19 = $49;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE17__annotate_shrinkEj($this,$__old_size) {
 $this = $this|0;
 $__old_size = $__old_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $14 = $this;
 $15 = $__old_size;
 $16 = $14;
 $13 = $16;
 $17 = $13;
 $18 = HEAP32[$17>>2]|0;
 $12 = $18;
 $19 = $12;
 $11 = $16;
 $20 = $11;
 $21 = HEAP32[$20>>2]|0;
 $10 = $21;
 $22 = $10;
 $4 = $16;
 $23 = $4;
 $3 = $23;
 $24 = $3;
 $2 = $24;
 $25 = $2;
 $26 = ((($25)) + 8|0);
 $1 = $26;
 $27 = $1;
 $0 = $27;
 $28 = $0;
 $29 = HEAP32[$28>>2]|0;
 $30 = HEAP32[$24>>2]|0;
 $31 = $29;
 $32 = $30;
 $33 = (($31) - ($32))|0;
 $34 = (($33|0) / 12)&-1;
 $35 = (($22) + (($34*12)|0)|0);
 $6 = $16;
 $36 = $6;
 $37 = HEAP32[$36>>2]|0;
 $5 = $37;
 $38 = $5;
 $39 = $15;
 $40 = (($38) + (($39*12)|0)|0);
 $8 = $16;
 $41 = $8;
 $42 = HEAP32[$41>>2]|0;
 $7 = $42;
 $43 = $7;
 $9 = $16;
 $44 = $9;
 $45 = ((($44)) + 4|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = HEAP32[$44>>2]|0;
 $48 = $46;
 $49 = $47;
 $50 = (($48) - ($49))|0;
 $51 = (($50|0) / 12)&-1;
 $52 = (($43) + (($51*12)|0)|0);
 __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($16,$19,$35,$40,$52);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE10deallocateEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__old_size$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $23 = sp;
 $26 = sp + 148|0;
 $36 = $this;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $34 = $40;
 $41 = $34;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = HEAP32[$41>>2]|0;
 $45 = $43;
 $46 = $44;
 $47 = (($45) - ($46))|0;
 $48 = (($47|0) / 12)&-1;
 $__old_size$i = $48;
 $33 = $40;
 $49 = $33;
 $50 = HEAP32[$49>>2]|0;
 $31 = $49;
 $32 = $50;
 $51 = $31;
 while(1) {
  $52 = $32;
  $53 = ((($51)) + 4|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = ($52|0)!=($54|0);
  if (!($55)) {
   break;
  }
  $30 = $51;
  $56 = $30;
  $57 = ((($56)) + 8|0);
  $29 = $57;
  $58 = $29;
  $28 = $58;
  $59 = $28;
  $60 = ((($51)) + 4|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($61)) + -12|0);
  HEAP32[$60>>2] = $62;
  $27 = $62;
  $63 = $27;
  $24 = $59;
  $25 = $63;
  $64 = $24;
  $65 = $25;
  ;HEAP8[$23>>0]=HEAP8[$26>>0]|0;
  $21 = $64;
  $22 = $65;
  $66 = $21;
  $67 = $22;
  $19 = $66;
  $20 = $67;
  $68 = $20;
  __ZN8LispNodeD2Ev($68);
 }
 $69 = $__old_size$i;
 __THREW__ = 0;
 invoke_vii(545,($40|0),($69|0));
 $70 = __THREW__; __THREW__ = 0;
 $71 = $70&1;
 if ($71) {
  $72 = ___cxa_find_matching_catch_3(0|0)|0;
  $73 = tempRet0;
  ___clang_call_terminate($72);
  // unreachable;
 }
 $18 = $40;
 $17 = $37;
 $74 = $17;
 $75 = ((($74)) + 8|0);
 $16 = $75;
 $76 = $16;
 $15 = $76;
 $77 = $15;
 $78 = HEAP32[$37>>2]|0;
 $14 = $37;
 $79 = $14;
 $13 = $79;
 $80 = $13;
 $12 = $80;
 $81 = $12;
 $82 = ((($81)) + 8|0);
 $11 = $82;
 $83 = $11;
 $10 = $83;
 $84 = $10;
 $85 = HEAP32[$84>>2]|0;
 $86 = HEAP32[$80>>2]|0;
 $87 = $85;
 $88 = $86;
 $89 = (($87) - ($88))|0;
 $90 = (($89|0) / 12)&-1;
 $7 = $77;
 $8 = $78;
 $9 = $90;
 $91 = $7;
 $92 = $8;
 $93 = $9;
 $4 = $91;
 $5 = $92;
 $6 = $93;
 $94 = $5;
 $3 = $94;
 $95 = $3;
 __ZdlPv($95);
 $2 = $37;
 $96 = $2;
 $97 = ((($96)) + 8|0);
 $1 = $97;
 $98 = $1;
 $0 = $98;
 $99 = $0;
 HEAP32[$99>>2] = 0;
 $100 = ((($37)) + 4|0);
 HEAP32[$100>>2] = 0;
 HEAP32[$37>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 77|0;
 $11 = sp;
 $13 = sp + 76|0;
 $18 = sp + 16|0;
 $19 = sp + 12|0;
 $17 = $this;
 $20 = $17;
 $16 = $20;
 $21 = $16;
 $22 = ((($21)) + 8|0);
 $15 = $22;
 $23 = $15;
 $14 = $23;
 $24 = $14;
 $12 = $24;
 $25 = $12;
 ;HEAP8[$11>>0]=HEAP8[$13>>0]|0;
 $10 = $25;
 $26 = $10;
 $9 = $26;
 HEAP32[$18>>2] = 357913941;
 $27 = (4294967295 / 2)&-1;
 HEAP32[$19>>2] = $27;
 $6 = $18;
 $7 = $19;
 $28 = $6;
 $29 = $7;
 ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
 $3 = $28;
 $4 = $29;
 $30 = $4;
 $31 = $3;
 $0 = $5;
 $1 = $30;
 $2 = $31;
 $32 = $1;
 $33 = HEAP32[$32>>2]|0;
 $34 = $2;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $4;
 $38 = $3;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $12 = $this;
 $13 = $__n;
 $14 = $12;
 $15 = $13;
 $16 = (__ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8max_sizeEv($14)|0);
 $17 = ($15>>>0)>($16>>>0);
 if ($17) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($14);
  // unreachable;
 } else {
  $11 = $14;
  $18 = $11;
  $19 = ((($18)) + 8|0);
  $10 = $19;
  $20 = $10;
  $9 = $20;
  $21 = $9;
  $22 = $13;
  $7 = $21;
  $8 = $22;
  $23 = $7;
  $24 = $8;
  $4 = $23;
  $5 = $24;
  $6 = 0;
  $25 = $5;
  $26 = ($25*12)|0;
  $3 = $26;
  $27 = $3;
  $28 = (__Znwj($27)|0);
  $29 = ((($14)) + 4|0);
  HEAP32[$29>>2] = $28;
  HEAP32[$14>>2] = $28;
  $30 = HEAP32[$14>>2]|0;
  $31 = $13;
  $32 = (($30) + (($31*12)|0)|0);
  $2 = $14;
  $33 = $2;
  $34 = ((($33)) + 8|0);
  $1 = $34;
  $35 = $1;
  $0 = $35;
  $36 = $0;
  HEAP32[$36>>2] = $32;
  __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE14__annotate_newEj($14,0);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = $this;
 $19 = $__current_size;
 $20 = $18;
 $17 = $20;
 $21 = $17;
 $22 = HEAP32[$21>>2]|0;
 $16 = $22;
 $23 = $16;
 $15 = $20;
 $24 = $15;
 $25 = HEAP32[$24>>2]|0;
 $14 = $25;
 $26 = $14;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 12)&-1;
 $39 = (($26) + (($38*12)|0)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $11 = $20;
 $43 = $11;
 $10 = $43;
 $44 = $10;
 $9 = $44;
 $45 = $9;
 $46 = ((($45)) + 8|0);
 $8 = $46;
 $47 = $8;
 $7 = $47;
 $48 = $7;
 $49 = HEAP32[$48>>2]|0;
 $50 = HEAP32[$44>>2]|0;
 $51 = $49;
 $52 = $50;
 $53 = (($51) - ($52))|0;
 $54 = (($53|0) / 12)&-1;
 $55 = (($42) + (($54*12)|0)|0);
 $13 = $20;
 $56 = $13;
 $57 = HEAP32[$56>>2]|0;
 $12 = $57;
 $58 = $12;
 $59 = $19;
 $60 = (($58) + (($59*12)|0)|0);
 __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($20,$23,$39,$55,$60);
 STACKTOP = sp;return;
}
function __ZNK8ListData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $data;
 STACKTOP = sp;return 0;
}
function __ZNK8ListData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 0;
}
function __ZN8FuncDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 2384;
 HEAP32[$1>>2] = $2;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  __ZN6MemoryD2Ev($4);
  __ZdlPv($4);
 }
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN6MemoryD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = $this;
 $7 = $6;
 $5 = $7;
 $8 = $5;
 $4 = $8;
 $9 = $4;
 $10 = ((($9)) + 4|0);
 $3 = $10;
 $11 = $3;
 $2 = $11;
 $12 = $2;
 $1 = $12;
 $13 = $1;
 $0 = $13;
 $14 = $0;
 $15 = HEAP32[$14>>2]|0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($7,$15);
 STACKTOP = sp;return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this,$__nd) {
 $this = $this|0;
 $__nd = $__nd|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__na = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp;
 $6 = sp + 80|0;
 $18 = $this;
 $19 = $__nd;
 $20 = $18;
 $21 = $19;
 $22 = ($21|0)!=(0|0);
 if (!($22)) {
  STACKTOP = sp;return;
 }
 $23 = $19;
 $24 = HEAP32[$23>>2]|0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($20,$24);
 $25 = $19;
 $26 = ((($25)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($20,$27);
 $10 = $20;
 $28 = $10;
 $29 = ((($28)) + 4|0);
 $9 = $29;
 $30 = $9;
 $8 = $30;
 $31 = $8;
 $__na = $31;
 $32 = $__na;
 $33 = $19;
 $34 = ((($33)) + 16|0);
 $7 = $34;
 $35 = $7;
 $4 = $32;
 $5 = $35;
 $36 = $4;
 $37 = $5;
 ;HEAP8[$3>>0]=HEAP8[$6>>0]|0;
 $1 = $36;
 $2 = $37;
 $38 = $2;
 $0 = $38;
 $39 = $0;
 __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($39);
 $40 = $__na;
 $41 = $19;
 $15 = $40;
 $16 = $41;
 $17 = 1;
 $42 = $15;
 $43 = $16;
 $44 = $17;
 $12 = $42;
 $13 = $43;
 $14 = $44;
 $45 = $13;
 $11 = $45;
 $46 = $11;
 __ZdlPv($46);
 STACKTOP = sp;return;
}
function __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 __ZN3VarD2Ev($2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN3VarD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 __ZN5ValueD2Ev($2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN5ValueD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 FUNCTION_TABLE_vi[$8 & 1023]($4);
 STACKTOP = sp;return;
}
function __ZN8FuncDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FuncDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8FuncData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNK8Function8toStringEv($agg$result,$3);
 STACKTOP = sp;return;
}
function __ZNK8Function8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 11622;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__111char_traitsIcE6lengthEPKc($__s) {
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s;
 $1 = $0;
 $2 = (_strlen($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK8FuncData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 128;
}
function __ZNK8FuncData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__Znwj(12)|0);
 $5 = ((($3)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($3)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 __THREW__ = 0;
 $9 = (invoke_ii(546,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_viii(547,($4|0),($6|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return ($4|0);
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $1 = $14;
 $2 = $15;
 __ZdlPv($4);
 $16 = $1;
 $17 = $2;
 ___resumeException($16|0);
 // unreachable;
 return (0)|0;
}
function __ZNK6Memory7getPrevEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZN8FuncDataC2EP8FunctionP6Memory($this,$func,$mem) {
 $this = $this|0;
 $func = $func|0;
 $mem = $mem|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $func;
 $2 = $mem;
 $5 = $0;
 __ZN4DataC2Ev($5);
 $6 = 2384;
 HEAP32[$5>>2] = $6;
 $7 = ((($5)) + 4|0);
 $8 = $1;
 HEAP32[$7>>2] = $8;
 __THREW__ = 0;
 $9 = (invoke_ii(548,16)|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  $3 = $16;
  $4 = $17;
  __ZN4DataD2Ev($5);
  $20 = $3;
  $21 = $4;
  ___resumeException($20|0);
  // unreachable;
 }
 $12 = $2;
 __THREW__ = 0;
 invoke_vii(549,($9|0),($12|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $15 = ((($5)) + 8|0);
  HEAP32[$15>>2] = $9;
  STACKTOP = sp;return;
 }
 $18 = ___cxa_find_matching_catch_2()|0;
 $19 = tempRet0;
 $3 = $18;
 $4 = $19;
 __ZdlPv($9);
 __ZN4DataD2Ev($5);
 $20 = $3;
 $21 = $4;
 ___resumeException($20|0);
 // unreachable;
}
function __ZNK8FuncData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $data;
 STACKTOP = sp;return 0;
}
function __ZNK8FuncData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 4;
}
function __ZN11AtomIntDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN11AtomIntDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN11AtomIntDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK11AtomIntData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__19to_stringEi($agg$result,$3);
 STACKTOP = sp;return;
}
function __ZNK11AtomIntData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 8;
}
function __ZNK11AtomIntData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__Znwj(8)|0);
 __ZN11AtomIntDataC2ERKS_($2,$1);
 STACKTOP = sp;return ($2|0);
}
function __ZN11AtomIntDataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN4DataC2ERKS_($3,$4);
 $5 = 2420;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = $2;
 $8 = ((($7)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$6>>2] = $9;
 STACKTOP = sp;return;
}
function __ZN4DataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = 2348;
 HEAP32[$3>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNK11AtomIntData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $data;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($4)|0);
 $9 = ($8|0)==(8);
 $10 = $2;
 if ($9) {
  $11 = ((($10)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($12|0)==($14|0);
  $$expand_i1_val = $15&1;
  HEAP8[$0>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $28 = $$pre_trunc&1;
  STACKTOP = sp;return ($28|0);
 }
 $16 = HEAP32[$10>>2]|0;
 $17 = ((($16)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (FUNCTION_TABLE_ii[$18 & 1023]($10)|0);
 $20 = ($19|0)==(16);
 if ($20) {
  $21 = $2;
  $22 = ((($21)) + 8|0);
  $23 = +HEAPF64[$22>>3];
  $24 = ((($3)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (+($25|0));
  $27 = $23 == $26;
  $$expand_i1_val2 = $27&1;
  HEAP8[$0>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $28 = $$pre_trunc&1;
  STACKTOP = sp;return ($28|0);
 } else {
  $$expand_i1_val4 = 0;
  HEAP8[$0>>0] = $$expand_i1_val4;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $28 = $$pre_trunc&1;
  STACKTOP = sp;return ($28|0);
 }
 return (0)|0;
}
function __ZNK11AtomIntData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 4;
}
function __ZN13AtomFloatDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN13AtomFloatDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN13AtomFloatDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK13AtomFloatData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0.0, $test = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $test = sp;
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = +HEAPF64[$2>>3];
 $4 = (+_modf($3,$test));
 $5 = $4 == 0.0;
 if ($5) {
  $6 = +HEAPF64[$test>>3];
  $7 = (~~(($6)));
  __ZNSt3__19to_stringEi($agg$result,$7);
  STACKTOP = sp;return;
 } else {
  $8 = ((($1)) + 8|0);
  $9 = +HEAPF64[$8>>3];
  __ZNSt3__19to_stringEd($agg$result,$9);
  STACKTOP = sp;return;
 }
}
function __ZNK13AtomFloatData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 16;
}
function __ZNK13AtomFloatData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__Znwj(16)|0);
 __ZN13AtomFloatDataC2ERKS_($2,$1);
 STACKTOP = sp;return ($2|0);
}
function __ZN13AtomFloatDataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN4DataC2ERKS_($3,$4);
 $5 = 2456;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 8|0);
 $7 = $2;
 $8 = ((($7)) + 8|0);
 $9 = +HEAPF64[$8>>3];
 HEAPF64[$6>>3] = $9;
 STACKTOP = sp;return;
}
function __ZNK13AtomFloatData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0.0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $data;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($4)|0);
 $9 = ($8|0)==(16);
 $10 = $2;
 if ($9) {
  $11 = ((($10)) + 8|0);
  $12 = +HEAPF64[$11>>3];
  $13 = ((($3)) + 8|0);
  $14 = +HEAPF64[$13>>3];
  $15 = $12 == $14;
  $$expand_i1_val = $15&1;
  HEAP8[$0>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $28 = $$pre_trunc&1;
  STACKTOP = sp;return ($28|0);
 }
 $16 = HEAP32[$10>>2]|0;
 $17 = ((($16)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (FUNCTION_TABLE_ii[$18 & 1023]($10)|0);
 $20 = ($19|0)==(8);
 if ($20) {
  $21 = $2;
  $22 = ((($21)) + 4|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (+($23|0));
  $25 = ((($3)) + 8|0);
  $26 = +HEAPF64[$25>>3];
  $27 = $24 == $26;
  $$expand_i1_val2 = $27&1;
  HEAP8[$0>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $28 = $$pre_trunc&1;
  STACKTOP = sp;return ($28|0);
 } else {
  $$expand_i1_val4 = 0;
  HEAP8[$0>>0] = $$expand_i1_val4;
  $$pre_trunc = HEAP8[$0>>0]|0;
  $28 = $$pre_trunc&1;
  STACKTOP = sp;return ($28|0);
 }
 return (0)|0;
}
function __ZNK13AtomFloatData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 8;
}
function __ZN12LispExecuterC2EP10LispStringPNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_PNS2_13basic_istreamIcS5_EE($this,$lispString,$errout,$out,$in) {
 $this = $this|0;
 $lispString = $lispString|0;
 $errout = $errout|0;
 $out = $out|0;
 $in = $in|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $lispString;
 $2 = $errout;
 $3 = $out;
 $4 = $in;
 $5 = $0;
 __ZN4HeapC2Ev($5);
 $6 = ((($5)) + 4|0);
 $7 = $1;
 HEAP32[$6>>2] = $7;
 $8 = ((($5)) + 8|0);
 $9 = $2;
 HEAP32[$8>>2] = $9;
 $10 = ((($5)) + 12|0);
 $11 = $3;
 HEAP32[$10>>2] = $11;
 $12 = ((($5)) + 16|0);
 $13 = $4;
 HEAP32[$12>>2] = $13;
 $14 = ((($5)) + 20|0);
 __ZN3PosC2Ev($14);
 $15 = $1;
 $16 = ($15|0)!=(0|0);
 if ($16) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((11657|0),(11673|0),55,(11721|0));
  // unreachable;
 }
}
function __ZN3PosC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 HEAP32[$1>>2] = -1;
 $2 = ((($1)) + 4|0);
 HEAP32[$2>>2] = -1;
 STACKTOP = sp;return;
}
function __ZN12LispExecuter3runER6Memory($this,$global) {
 $this = $this|0;
 $global = $global|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0;
 var $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0;
 var $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0;
 var $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0;
 var $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0;
 var $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0;
 var $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0;
 var $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0;
 var $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0;
 var $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0;
 var $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0;
 var $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0;
 var $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0;
 var $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0;
 var $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0;
 var $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0;
 var $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0;
 var $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0;
 var $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0;
 var $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0;
 var $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0;
 var $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0;
 var $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0;
 var $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0;
 var $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0;
 var $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0;
 var $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0;
 var $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0;
 var $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0;
 var $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0;
 var $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0;
 var $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0;
 var $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0;
 var $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0;
 var $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0;
 var $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0;
 var $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0;
 var $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0;
 var $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0;
 var $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $i = 0, $m = 0;
 var $result = 0, $root = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1760|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 1728|0;
 $17 = sp + 1680|0;
 $20 = sp + 1668|0;
 $24 = sp + 1652|0;
 $27 = sp + 1640|0;
 $182 = sp + 1008|0;
 $183 = sp + 992|0;
 $186 = sp + 968|0;
 $187 = sp + 952|0;
 $188 = sp + 936|0;
 $189 = sp + 920|0;
 $190 = sp + 904|0;
 $191 = sp + 888|0;
 $192 = sp + 872|0;
 $193 = sp + 856|0;
 $194 = sp + 840|0;
 $195 = sp + 824|0;
 $196 = sp + 808|0;
 $197 = sp + 792|0;
 $198 = sp + 776|0;
 $199 = sp + 760|0;
 $200 = sp + 744|0;
 $201 = sp + 728|0;
 $202 = sp + 712|0;
 $203 = sp + 696|0;
 $204 = sp + 680|0;
 $205 = sp + 664|0;
 $206 = sp + 648|0;
 $207 = sp + 632|0;
 $208 = sp + 616|0;
 $209 = sp + 600|0;
 $210 = sp + 584|0;
 $211 = sp + 568|0;
 $212 = sp + 552|0;
 $213 = sp + 536|0;
 $214 = sp + 520|0;
 $215 = sp + 504|0;
 $216 = sp + 488|0;
 $217 = sp + 472|0;
 $218 = sp + 456|0;
 $219 = sp + 440|0;
 $220 = sp + 424|0;
 $221 = sp + 408|0;
 $222 = sp + 392|0;
 $223 = sp + 376|0;
 $224 = sp + 360|0;
 $225 = sp + 344|0;
 $226 = sp + 328|0;
 $227 = sp + 312|0;
 $228 = sp + 296|0;
 $229 = sp + 280|0;
 $230 = sp + 264|0;
 $231 = sp + 248|0;
 $232 = sp + 232|0;
 $233 = sp + 216|0;
 $234 = sp + 200|0;
 $235 = sp + 184|0;
 $236 = sp + 168|0;
 $237 = sp + 152|0;
 $238 = sp + 136|0;
 $239 = sp + 120|0;
 $240 = sp + 104|0;
 $241 = sp + 88|0;
 $242 = sp + 72|0;
 $243 = sp + 56|0;
 $result = sp + 52|0;
 $i = sp + 44|0;
 $244 = sp + 40|0;
 $245 = sp + 36|0;
 $246 = sp + 32|0;
 $247 = sp + 28|0;
 $248 = sp + 16|0;
 $249 = sp;
 $180 = $this;
 $181 = $global;
 $250 = $180;
 $251 = ((($250)) + 4|0);
 $252 = HEAP32[$251>>2]|0;
 $253 = (__ZNK10LispString7isValidEv($252)|0);
 if (!($253)) {
  STACKTOP = sp;return;
 }
 $254 = $181;
 $178 = $183;
 $179 = 11734;
 $255 = $178;
 $177 = $255;
 $256 = $177;
 $176 = $256;
 $257 = $176;
 $175 = $257;
 $258 = $179;
 $259 = $179;
 __THREW__ = 0;
 $260 = (invoke_ii(550,($259|0))|0);
 $261 = __THREW__; __THREW__ = 0;
 $262 = $261&1;
 L4: do {
  if ($262) {
   label = 249;
  } else {
   __THREW__ = 0;
   invoke_viii(551,($255|0),($258|0),($260|0));
   $263 = __THREW__; __THREW__ = 0;
   $264 = $263&1;
   if ($264) {
    label = 249;
   } else {
    __THREW__ = 0;
    $265 = (invoke_ii(548,12)|0);
    $266 = __THREW__; __THREW__ = 0;
    $267 = $266&1;
    L7: do {
     if ($267) {
      label = 250;
     } else {
      __THREW__ = 0;
      $268 = (invoke_ii(548,16)|0);
      $269 = __THREW__; __THREW__ = 0;
      $270 = $269&1;
      do {
       if ($270) {
        label = 251;
       } else {
        __THREW__ = 0;
        invoke_vi(552,($268|0));
        $271 = __THREW__; __THREW__ = 0;
        $272 = $271&1;
        if ($272) {
         $1068 = ___cxa_find_matching_catch_3(80|0)|0;
         $1069 = tempRet0;
         $184 = $1068;
         $185 = $1069;
         __ZdlPv($268);
         break;
        }
        __THREW__ = 0;
        invoke_viii(547,($265|0),($268|0),(0|0));
        $273 = __THREW__; __THREW__ = 0;
        $274 = $273&1;
        if ($274) {
         label = 251;
        } else {
         __THREW__ = 0;
         invoke_viii(553,($182|0),($183|0),($265|0));
         $275 = __THREW__; __THREW__ = 0;
         $276 = $275&1;
         if ($276) {
          label = 250;
          break L7;
         }
         __THREW__ = 0;
         invoke_vii(554,($254|0),($182|0));
         $277 = __THREW__; __THREW__ = 0;
         $278 = $277&1;
         if ($278) {
          $1070 = ___cxa_find_matching_catch_3(80|0)|0;
          $1071 = tempRet0;
          $184 = $1070;
          $185 = $1071;
          __ZN3VarD2Ev($182);
          break L7;
         }
         __ZN3VarD2Ev($182);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
         $279 = $181;
         $173 = $187;
         $174 = 11736;
         $280 = $173;
         $172 = $280;
         $281 = $172;
         $171 = $281;
         $282 = $171;
         $170 = $282;
         $283 = $174;
         $284 = $174;
         __THREW__ = 0;
         $285 = (invoke_ii(550,($284|0))|0);
         $286 = __THREW__; __THREW__ = 0;
         $287 = $286&1;
         if ($287) {
          label = 249;
          break L4;
         }
         __THREW__ = 0;
         invoke_viii(551,($280|0),($283|0),($285|0));
         $288 = __THREW__; __THREW__ = 0;
         $289 = $288&1;
         if ($289) {
          label = 249;
          break L4;
         }
         __THREW__ = 0;
         $290 = (invoke_ii(548,12)|0);
         $291 = __THREW__; __THREW__ = 0;
         $292 = $291&1;
         L21: do {
          if ($292) {
           label = 256;
          } else {
           __THREW__ = 0;
           $293 = (invoke_ii(548,16)|0);
           $294 = __THREW__; __THREW__ = 0;
           $295 = $294&1;
           do {
            if ($295) {
             label = 257;
            } else {
             __THREW__ = 0;
             invoke_vi(555,($293|0));
             $296 = __THREW__; __THREW__ = 0;
             $297 = $296&1;
             if ($297) {
              $1076 = ___cxa_find_matching_catch_3(80|0)|0;
              $1077 = tempRet0;
              $184 = $1076;
              $185 = $1077;
              __ZdlPv($293);
              break;
             }
             __THREW__ = 0;
             invoke_viii(547,($290|0),($293|0),(0|0));
             $298 = __THREW__; __THREW__ = 0;
             $299 = $298&1;
             if ($299) {
              label = 257;
             } else {
              __THREW__ = 0;
              invoke_viii(553,($186|0),($187|0),($290|0));
              $300 = __THREW__; __THREW__ = 0;
              $301 = $300&1;
              if ($301) {
               label = 256;
               break L21;
              }
              __THREW__ = 0;
              invoke_vii(554,($279|0),($186|0));
              $302 = __THREW__; __THREW__ = 0;
              $303 = $302&1;
              if ($303) {
               $1078 = ___cxa_find_matching_catch_3(80|0)|0;
               $1079 = tempRet0;
               $184 = $1078;
               $185 = $1079;
               __ZN3VarD2Ev($186);
               break L21;
              }
              __ZN3VarD2Ev($186);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($187);
              $304 = $181;
              $168 = $189;
              $169 = 11738;
              $305 = $168;
              $167 = $305;
              $306 = $167;
              $166 = $306;
              $307 = $166;
              $165 = $307;
              $308 = $169;
              $309 = $169;
              __THREW__ = 0;
              $310 = (invoke_ii(550,($309|0))|0);
              $311 = __THREW__; __THREW__ = 0;
              $312 = $311&1;
              if ($312) {
               label = 249;
               break L4;
              }
              __THREW__ = 0;
              invoke_viii(551,($305|0),($308|0),($310|0));
              $313 = __THREW__; __THREW__ = 0;
              $314 = $313&1;
              if ($314) {
               label = 249;
               break L4;
              }
              __THREW__ = 0;
              $315 = (invoke_ii(548,12)|0);
              $316 = __THREW__; __THREW__ = 0;
              $317 = $316&1;
              L35: do {
               if ($317) {
                label = 262;
               } else {
                __THREW__ = 0;
                $318 = (invoke_ii(548,16)|0);
                $319 = __THREW__; __THREW__ = 0;
                $320 = $319&1;
                do {
                 if ($320) {
                  label = 263;
                 } else {
                  __THREW__ = 0;
                  invoke_vi(556,($318|0));
                  $321 = __THREW__; __THREW__ = 0;
                  $322 = $321&1;
                  if ($322) {
                   $1084 = ___cxa_find_matching_catch_3(80|0)|0;
                   $1085 = tempRet0;
                   $184 = $1084;
                   $185 = $1085;
                   __ZdlPv($318);
                   break;
                  }
                  __THREW__ = 0;
                  invoke_viii(547,($315|0),($318|0),(0|0));
                  $323 = __THREW__; __THREW__ = 0;
                  $324 = $323&1;
                  if ($324) {
                   label = 263;
                   break;
                  }
                  __THREW__ = 0;
                  invoke_viii(553,($188|0),($189|0),($315|0));
                  $325 = __THREW__; __THREW__ = 0;
                  $326 = $325&1;
                  if ($326) {
                   label = 262;
                   break L35;
                  }
                  __THREW__ = 0;
                  invoke_vii(554,($304|0),($188|0));
                  $327 = __THREW__; __THREW__ = 0;
                  $328 = $327&1;
                  if ($328) {
                   $1086 = ___cxa_find_matching_catch_3(80|0)|0;
                   $1087 = tempRet0;
                   $184 = $1086;
                   $185 = $1087;
                   __ZN3VarD2Ev($188);
                   break L35;
                  }
                  __ZN3VarD2Ev($188);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
                  $329 = $181;
                  $163 = $191;
                  $164 = 11740;
                  $330 = $163;
                  $162 = $330;
                  $331 = $162;
                  $161 = $331;
                  $332 = $161;
                  $160 = $332;
                  $333 = $164;
                  $334 = $164;
                  __THREW__ = 0;
                  $335 = (invoke_ii(550,($334|0))|0);
                  $336 = __THREW__; __THREW__ = 0;
                  $337 = $336&1;
                  if ($337) {
                   label = 249;
                   break L4;
                  }
                  __THREW__ = 0;
                  invoke_viii(551,($330|0),($333|0),($335|0));
                  $338 = __THREW__; __THREW__ = 0;
                  $339 = $338&1;
                  if ($339) {
                   label = 249;
                   break L4;
                  }
                  __THREW__ = 0;
                  $340 = (invoke_ii(548,12)|0);
                  $341 = __THREW__; __THREW__ = 0;
                  $342 = $341&1;
                  L49: do {
                   if ($342) {
                    label = 268;
                   } else {
                    __THREW__ = 0;
                    $343 = (invoke_ii(548,16)|0);
                    $344 = __THREW__; __THREW__ = 0;
                    $345 = $344&1;
                    do {
                     if ($345) {
                      label = 269;
                     } else {
                      __THREW__ = 0;
                      invoke_vi(557,($343|0));
                      $346 = __THREW__; __THREW__ = 0;
                      $347 = $346&1;
                      if ($347) {
                       $1092 = ___cxa_find_matching_catch_3(80|0)|0;
                       $1093 = tempRet0;
                       $184 = $1092;
                       $185 = $1093;
                       __ZdlPv($343);
                       break;
                      }
                      __THREW__ = 0;
                      invoke_viii(547,($340|0),($343|0),(0|0));
                      $348 = __THREW__; __THREW__ = 0;
                      $349 = $348&1;
                      if ($349) {
                       label = 269;
                       break;
                      }
                      __THREW__ = 0;
                      invoke_viii(553,($190|0),($191|0),($340|0));
                      $350 = __THREW__; __THREW__ = 0;
                      $351 = $350&1;
                      if ($351) {
                       label = 268;
                       break L49;
                      }
                      __THREW__ = 0;
                      invoke_vii(554,($329|0),($190|0));
                      $352 = __THREW__; __THREW__ = 0;
                      $353 = $352&1;
                      if ($353) {
                       $1094 = ___cxa_find_matching_catch_3(80|0)|0;
                       $1095 = tempRet0;
                       $184 = $1094;
                       $185 = $1095;
                       __ZN3VarD2Ev($190);
                       break L49;
                      }
                      __ZN3VarD2Ev($190);
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($191);
                      $354 = $181;
                      $158 = $193;
                      $159 = 12998;
                      $355 = $158;
                      $157 = $355;
                      $356 = $157;
                      $156 = $356;
                      $357 = $156;
                      $155 = $357;
                      $358 = $159;
                      $359 = $159;
                      __THREW__ = 0;
                      $360 = (invoke_ii(550,($359|0))|0);
                      $361 = __THREW__; __THREW__ = 0;
                      $362 = $361&1;
                      if ($362) {
                       label = 249;
                       break L4;
                      }
                      __THREW__ = 0;
                      invoke_viii(551,($355|0),($358|0),($360|0));
                      $363 = __THREW__; __THREW__ = 0;
                      $364 = $363&1;
                      if ($364) {
                       label = 249;
                       break L4;
                      }
                      __THREW__ = 0;
                      $365 = (invoke_ii(548,12)|0);
                      $366 = __THREW__; __THREW__ = 0;
                      $367 = $366&1;
                      L63: do {
                       if ($367) {
                        label = 274;
                       } else {
                        __THREW__ = 0;
                        $368 = (invoke_ii(548,20)|0);
                        $369 = __THREW__; __THREW__ = 0;
                        $370 = $369&1;
                        do {
                         if ($370) {
                          label = 275;
                         } else {
                          __THREW__ = 0;
                          invoke_vii(558,($368|0),($250|0));
                          $371 = __THREW__; __THREW__ = 0;
                          $372 = $371&1;
                          if ($372) {
                           $1100 = ___cxa_find_matching_catch_3(80|0)|0;
                           $1101 = tempRet0;
                           $184 = $1100;
                           $185 = $1101;
                           __ZdlPv($368);
                           break;
                          }
                          __THREW__ = 0;
                          invoke_viii(547,($365|0),($368|0),(0|0));
                          $373 = __THREW__; __THREW__ = 0;
                          $374 = $373&1;
                          if ($374) {
                           label = 275;
                           break;
                          }
                          __THREW__ = 0;
                          invoke_viii(553,($192|0),($193|0),($365|0));
                          $375 = __THREW__; __THREW__ = 0;
                          $376 = $375&1;
                          if ($376) {
                           label = 274;
                           break L63;
                          }
                          __THREW__ = 0;
                          invoke_vii(554,($354|0),($192|0));
                          $377 = __THREW__; __THREW__ = 0;
                          $378 = $377&1;
                          if ($378) {
                           $1102 = ___cxa_find_matching_catch_3(80|0)|0;
                           $1103 = tempRet0;
                           $184 = $1102;
                           $185 = $1103;
                           __ZN3VarD2Ev($192);
                           break L63;
                          }
                          __ZN3VarD2Ev($192);
                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
                          $379 = $181;
                          $153 = $195;
                          $154 = 13389;
                          $380 = $153;
                          $152 = $380;
                          $381 = $152;
                          $151 = $381;
                          $382 = $151;
                          $150 = $382;
                          $383 = $154;
                          $384 = $154;
                          __THREW__ = 0;
                          $385 = (invoke_ii(550,($384|0))|0);
                          $386 = __THREW__; __THREW__ = 0;
                          $387 = $386&1;
                          if ($387) {
                           label = 249;
                           break L4;
                          }
                          __THREW__ = 0;
                          invoke_viii(551,($380|0),($383|0),($385|0));
                          $388 = __THREW__; __THREW__ = 0;
                          $389 = $388&1;
                          if ($389) {
                           label = 249;
                           break L4;
                          }
                          __THREW__ = 0;
                          $390 = (invoke_ii(548,12)|0);
                          $391 = __THREW__; __THREW__ = 0;
                          $392 = $391&1;
                          L77: do {
                           if ($392) {
                            label = 280;
                           } else {
                            __THREW__ = 0;
                            $393 = (invoke_ii(548,20)|0);
                            $394 = __THREW__; __THREW__ = 0;
                            $395 = $394&1;
                            do {
                             if ($395) {
                              label = 281;
                             } else {
                              __THREW__ = 0;
                              invoke_vii(559,($393|0),($250|0));
                              $396 = __THREW__; __THREW__ = 0;
                              $397 = $396&1;
                              if ($397) {
                               $1108 = ___cxa_find_matching_catch_3(80|0)|0;
                               $1109 = tempRet0;
                               $184 = $1108;
                               $185 = $1109;
                               __ZdlPv($393);
                               break;
                              }
                              __THREW__ = 0;
                              invoke_viii(547,($390|0),($393|0),(0|0));
                              $398 = __THREW__; __THREW__ = 0;
                              $399 = $398&1;
                              if ($399) {
                               label = 281;
                               break;
                              }
                              __THREW__ = 0;
                              invoke_viii(553,($194|0),($195|0),($390|0));
                              $400 = __THREW__; __THREW__ = 0;
                              $401 = $400&1;
                              if ($401) {
                               label = 280;
                               break L77;
                              }
                              __THREW__ = 0;
                              invoke_vii(554,($379|0),($194|0));
                              $402 = __THREW__; __THREW__ = 0;
                              $403 = $402&1;
                              if ($403) {
                               $1110 = ___cxa_find_matching_catch_3(80|0)|0;
                               $1111 = tempRet0;
                               $184 = $1110;
                               $185 = $1111;
                               __ZN3VarD2Ev($194);
                               break L77;
                              }
                              __ZN3VarD2Ev($194);
                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($195);
                              $404 = $181;
                              $148 = $197;
                              $149 = 13103;
                              $405 = $148;
                              $147 = $405;
                              $406 = $147;
                              $146 = $406;
                              $407 = $146;
                              $145 = $407;
                              $408 = $149;
                              $409 = $149;
                              __THREW__ = 0;
                              $410 = (invoke_ii(550,($409|0))|0);
                              $411 = __THREW__; __THREW__ = 0;
                              $412 = $411&1;
                              if ($412) {
                               label = 249;
                               break L4;
                              }
                              __THREW__ = 0;
                              invoke_viii(551,($405|0),($408|0),($410|0));
                              $413 = __THREW__; __THREW__ = 0;
                              $414 = $413&1;
                              if ($414) {
                               label = 249;
                               break L4;
                              }
                              __THREW__ = 0;
                              $415 = (invoke_ii(548,12)|0);
                              $416 = __THREW__; __THREW__ = 0;
                              $417 = $416&1;
                              L91: do {
                               if ($417) {
                                label = 286;
                               } else {
                                __THREW__ = 0;
                                $418 = (invoke_ii(548,16)|0);
                                $419 = __THREW__; __THREW__ = 0;
                                $420 = $419&1;
                                do {
                                 if ($420) {
                                  label = 287;
                                 } else {
                                  __THREW__ = 0;
                                  invoke_vi(560,($418|0));
                                  $421 = __THREW__; __THREW__ = 0;
                                  $422 = $421&1;
                                  if ($422) {
                                   $1116 = ___cxa_find_matching_catch_3(80|0)|0;
                                   $1117 = tempRet0;
                                   $184 = $1116;
                                   $185 = $1117;
                                   __ZdlPv($418);
                                   break;
                                  }
                                  __THREW__ = 0;
                                  invoke_viii(547,($415|0),($418|0),(0|0));
                                  $423 = __THREW__; __THREW__ = 0;
                                  $424 = $423&1;
                                  if ($424) {
                                   label = 287;
                                   break;
                                  }
                                  __THREW__ = 0;
                                  invoke_viii(553,($196|0),($197|0),($415|0));
                                  $425 = __THREW__; __THREW__ = 0;
                                  $426 = $425&1;
                                  if ($426) {
                                   label = 286;
                                   break L91;
                                  }
                                  __THREW__ = 0;
                                  invoke_vii(554,($404|0),($196|0));
                                  $427 = __THREW__; __THREW__ = 0;
                                  $428 = $427&1;
                                  if ($428) {
                                   $1118 = ___cxa_find_matching_catch_3(80|0)|0;
                                   $1119 = tempRet0;
                                   $184 = $1118;
                                   $185 = $1119;
                                   __ZN3VarD2Ev($196);
                                   break L91;
                                  }
                                  __ZN3VarD2Ev($196);
                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($197);
                                  $429 = $181;
                                  $143 = $199;
                                  $144 = 12599;
                                  $430 = $143;
                                  $142 = $430;
                                  $431 = $142;
                                  $141 = $431;
                                  $432 = $141;
                                  $140 = $432;
                                  $433 = $144;
                                  $434 = $144;
                                  __THREW__ = 0;
                                  $435 = (invoke_ii(550,($434|0))|0);
                                  $436 = __THREW__; __THREW__ = 0;
                                  $437 = $436&1;
                                  if ($437) {
                                   label = 249;
                                   break L4;
                                  }
                                  __THREW__ = 0;
                                  invoke_viii(551,($430|0),($433|0),($435|0));
                                  $438 = __THREW__; __THREW__ = 0;
                                  $439 = $438&1;
                                  if ($439) {
                                   label = 249;
                                   break L4;
                                  }
                                  __THREW__ = 0;
                                  $440 = (invoke_ii(548,12)|0);
                                  $441 = __THREW__; __THREW__ = 0;
                                  $442 = $441&1;
                                  L105: do {
                                   if ($442) {
                                    label = 292;
                                   } else {
                                    __THREW__ = 0;
                                    $443 = (invoke_ii(548,20)|0);
                                    $444 = __THREW__; __THREW__ = 0;
                                    $445 = $444&1;
                                    do {
                                     if ($445) {
                                      label = 293;
                                     } else {
                                      __THREW__ = 0;
                                      invoke_vii(561,($443|0),($250|0));
                                      $446 = __THREW__; __THREW__ = 0;
                                      $447 = $446&1;
                                      if ($447) {
                                       $1124 = ___cxa_find_matching_catch_3(80|0)|0;
                                       $1125 = tempRet0;
                                       $184 = $1124;
                                       $185 = $1125;
                                       __ZdlPv($443);
                                       break;
                                      }
                                      __THREW__ = 0;
                                      invoke_viii(547,($440|0),($443|0),(0|0));
                                      $448 = __THREW__; __THREW__ = 0;
                                      $449 = $448&1;
                                      if ($449) {
                                       label = 293;
                                       break;
                                      }
                                      __THREW__ = 0;
                                      invoke_viii(553,($198|0),($199|0),($440|0));
                                      $450 = __THREW__; __THREW__ = 0;
                                      $451 = $450&1;
                                      if ($451) {
                                       label = 292;
                                       break L105;
                                      }
                                      __THREW__ = 0;
                                      invoke_vii(554,($429|0),($198|0));
                                      $452 = __THREW__; __THREW__ = 0;
                                      $453 = $452&1;
                                      if ($453) {
                                       $1126 = ___cxa_find_matching_catch_3(80|0)|0;
                                       $1127 = tempRet0;
                                       $184 = $1126;
                                       $185 = $1127;
                                       __ZN3VarD2Ev($198);
                                       break L105;
                                      }
                                      __ZN3VarD2Ev($198);
                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($199);
                                      $454 = $181;
                                      $138 = $201;
                                      $139 = 12307;
                                      $455 = $138;
                                      $137 = $455;
                                      $456 = $137;
                                      $136 = $456;
                                      $457 = $136;
                                      $135 = $457;
                                      $458 = $139;
                                      $459 = $139;
                                      __THREW__ = 0;
                                      $460 = (invoke_ii(550,($459|0))|0);
                                      $461 = __THREW__; __THREW__ = 0;
                                      $462 = $461&1;
                                      if ($462) {
                                       label = 249;
                                       break L4;
                                      }
                                      __THREW__ = 0;
                                      invoke_viii(551,($455|0),($458|0),($460|0));
                                      $463 = __THREW__; __THREW__ = 0;
                                      $464 = $463&1;
                                      if ($464) {
                                       label = 249;
                                       break L4;
                                      }
                                      __THREW__ = 0;
                                      $465 = (invoke_ii(548,12)|0);
                                      $466 = __THREW__; __THREW__ = 0;
                                      $467 = $466&1;
                                      L119: do {
                                       if ($467) {
                                        label = 298;
                                       } else {
                                        __THREW__ = 0;
                                        $468 = (invoke_ii(548,20)|0);
                                        $469 = __THREW__; __THREW__ = 0;
                                        $470 = $469&1;
                                        do {
                                         if ($470) {
                                          label = 299;
                                         } else {
                                          __THREW__ = 0;
                                          invoke_vii(562,($468|0),($250|0));
                                          $471 = __THREW__; __THREW__ = 0;
                                          $472 = $471&1;
                                          if ($472) {
                                           $1132 = ___cxa_find_matching_catch_3(80|0)|0;
                                           $1133 = tempRet0;
                                           $184 = $1132;
                                           $185 = $1133;
                                           __ZdlPv($468);
                                           break;
                                          }
                                          __THREW__ = 0;
                                          invoke_viii(547,($465|0),($468|0),(0|0));
                                          $473 = __THREW__; __THREW__ = 0;
                                          $474 = $473&1;
                                          if ($474) {
                                           label = 299;
                                           break;
                                          }
                                          __THREW__ = 0;
                                          invoke_viii(553,($200|0),($201|0),($465|0));
                                          $475 = __THREW__; __THREW__ = 0;
                                          $476 = $475&1;
                                          if ($476) {
                                           label = 298;
                                           break L119;
                                          }
                                          __THREW__ = 0;
                                          invoke_vii(554,($454|0),($200|0));
                                          $477 = __THREW__; __THREW__ = 0;
                                          $478 = $477&1;
                                          if ($478) {
                                           $1134 = ___cxa_find_matching_catch_3(80|0)|0;
                                           $1135 = tempRet0;
                                           $184 = $1134;
                                           $185 = $1135;
                                           __ZN3VarD2Ev($200);
                                           break L119;
                                          }
                                          __ZN3VarD2Ev($200);
                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($201);
                                          $479 = $181;
                                          $133 = $203;
                                          $134 = 12145;
                                          $480 = $133;
                                          $132 = $480;
                                          $481 = $132;
                                          $131 = $481;
                                          $482 = $131;
                                          $130 = $482;
                                          $483 = $134;
                                          $484 = $134;
                                          __THREW__ = 0;
                                          $485 = (invoke_ii(550,($484|0))|0);
                                          $486 = __THREW__; __THREW__ = 0;
                                          $487 = $486&1;
                                          if ($487) {
                                           label = 249;
                                           break L4;
                                          }
                                          __THREW__ = 0;
                                          invoke_viii(551,($480|0),($483|0),($485|0));
                                          $488 = __THREW__; __THREW__ = 0;
                                          $489 = $488&1;
                                          if ($489) {
                                           label = 249;
                                           break L4;
                                          }
                                          __THREW__ = 0;
                                          $490 = (invoke_ii(548,12)|0);
                                          $491 = __THREW__; __THREW__ = 0;
                                          $492 = $491&1;
                                          L133: do {
                                           if ($492) {
                                            label = 304;
                                           } else {
                                            __THREW__ = 0;
                                            $493 = (invoke_ii(548,16)|0);
                                            $494 = __THREW__; __THREW__ = 0;
                                            $495 = $494&1;
                                            do {
                                             if ($495) {
                                              label = 305;
                                             } else {
                                              __THREW__ = 0;
                                              invoke_vi(563,($493|0));
                                              $496 = __THREW__; __THREW__ = 0;
                                              $497 = $496&1;
                                              if ($497) {
                                               $1140 = ___cxa_find_matching_catch_3(80|0)|0;
                                               $1141 = tempRet0;
                                               $184 = $1140;
                                               $185 = $1141;
                                               __ZdlPv($493);
                                               break;
                                              }
                                              __THREW__ = 0;
                                              invoke_viii(547,($490|0),($493|0),(0|0));
                                              $498 = __THREW__; __THREW__ = 0;
                                              $499 = $498&1;
                                              if ($499) {
                                               label = 305;
                                               break;
                                              }
                                              __THREW__ = 0;
                                              invoke_viii(553,($202|0),($203|0),($490|0));
                                              $500 = __THREW__; __THREW__ = 0;
                                              $501 = $500&1;
                                              if ($501) {
                                               label = 304;
                                               break L133;
                                              }
                                              __THREW__ = 0;
                                              invoke_vii(554,($479|0),($202|0));
                                              $502 = __THREW__; __THREW__ = 0;
                                              $503 = $502&1;
                                              if ($503) {
                                               $1142 = ___cxa_find_matching_catch_3(80|0)|0;
                                               $1143 = tempRet0;
                                               $184 = $1142;
                                               $185 = $1143;
                                               __ZN3VarD2Ev($202);
                                               break L133;
                                              }
                                              __ZN3VarD2Ev($202);
                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($203);
                                              $504 = $181;
                                              $128 = $205;
                                              $129 = 13067;
                                              $505 = $128;
                                              $127 = $505;
                                              $506 = $127;
                                              $126 = $506;
                                              $507 = $126;
                                              $125 = $507;
                                              $508 = $129;
                                              $509 = $129;
                                              __THREW__ = 0;
                                              $510 = (invoke_ii(550,($509|0))|0);
                                              $511 = __THREW__; __THREW__ = 0;
                                              $512 = $511&1;
                                              if ($512) {
                                               label = 249;
                                               break L4;
                                              }
                                              __THREW__ = 0;
                                              invoke_viii(551,($505|0),($508|0),($510|0));
                                              $513 = __THREW__; __THREW__ = 0;
                                              $514 = $513&1;
                                              if ($514) {
                                               label = 249;
                                               break L4;
                                              }
                                              __THREW__ = 0;
                                              $515 = (invoke_ii(548,12)|0);
                                              $516 = __THREW__; __THREW__ = 0;
                                              $517 = $516&1;
                                              L147: do {
                                               if ($517) {
                                                label = 310;
                                               } else {
                                                __THREW__ = 0;
                                                $518 = (invoke_ii(548,16)|0);
                                                $519 = __THREW__; __THREW__ = 0;
                                                $520 = $519&1;
                                                do {
                                                 if ($520) {
                                                  label = 311;
                                                 } else {
                                                  __THREW__ = 0;
                                                  invoke_vi(564,($518|0));
                                                  $521 = __THREW__; __THREW__ = 0;
                                                  $522 = $521&1;
                                                  if ($522) {
                                                   $1148 = ___cxa_find_matching_catch_3(80|0)|0;
                                                   $1149 = tempRet0;
                                                   $184 = $1148;
                                                   $185 = $1149;
                                                   __ZdlPv($518);
                                                   break;
                                                  }
                                                  __THREW__ = 0;
                                                  invoke_viii(547,($515|0),($518|0),(0|0));
                                                  $523 = __THREW__; __THREW__ = 0;
                                                  $524 = $523&1;
                                                  if ($524) {
                                                   label = 311;
                                                   break;
                                                  }
                                                  __THREW__ = 0;
                                                  invoke_viii(553,($204|0),($205|0),($515|0));
                                                  $525 = __THREW__; __THREW__ = 0;
                                                  $526 = $525&1;
                                                  if ($526) {
                                                   label = 310;
                                                   break L147;
                                                  }
                                                  __THREW__ = 0;
                                                  invoke_vii(554,($504|0),($204|0));
                                                  $527 = __THREW__; __THREW__ = 0;
                                                  $528 = $527&1;
                                                  if ($528) {
                                                   $1150 = ___cxa_find_matching_catch_3(80|0)|0;
                                                   $1151 = tempRet0;
                                                   $184 = $1150;
                                                   $185 = $1151;
                                                   __ZN3VarD2Ev($204);
                                                   break L147;
                                                  }
                                                  __ZN3VarD2Ev($204);
                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($205);
                                                  $529 = $181;
                                                  $123 = $207;
                                                  $124 = 12846;
                                                  $530 = $123;
                                                  $122 = $530;
                                                  $531 = $122;
                                                  $121 = $531;
                                                  $532 = $121;
                                                  $120 = $532;
                                                  $533 = $124;
                                                  $534 = $124;
                                                  __THREW__ = 0;
                                                  $535 = (invoke_ii(550,($534|0))|0);
                                                  $536 = __THREW__; __THREW__ = 0;
                                                  $537 = $536&1;
                                                  if ($537) {
                                                   label = 249;
                                                   break L4;
                                                  }
                                                  __THREW__ = 0;
                                                  invoke_viii(551,($530|0),($533|0),($535|0));
                                                  $538 = __THREW__; __THREW__ = 0;
                                                  $539 = $538&1;
                                                  if ($539) {
                                                   label = 249;
                                                   break L4;
                                                  }
                                                  __THREW__ = 0;
                                                  $540 = (invoke_ii(548,12)|0);
                                                  $541 = __THREW__; __THREW__ = 0;
                                                  $542 = $541&1;
                                                  L161: do {
                                                   if ($542) {
                                                    label = 316;
                                                   } else {
                                                    __THREW__ = 0;
                                                    $543 = (invoke_ii(548,20)|0);
                                                    $544 = __THREW__; __THREW__ = 0;
                                                    $545 = $544&1;
                                                    do {
                                                     if ($545) {
                                                      label = 317;
                                                     } else {
                                                      __THREW__ = 0;
                                                      invoke_vii(565,($543|0),($250|0));
                                                      $546 = __THREW__; __THREW__ = 0;
                                                      $547 = $546&1;
                                                      if ($547) {
                                                       $1156 = ___cxa_find_matching_catch_3(80|0)|0;
                                                       $1157 = tempRet0;
                                                       $184 = $1156;
                                                       $185 = $1157;
                                                       __ZdlPv($543);
                                                       break;
                                                      }
                                                      __THREW__ = 0;
                                                      invoke_viii(547,($540|0),($543|0),(0|0));
                                                      $548 = __THREW__; __THREW__ = 0;
                                                      $549 = $548&1;
                                                      if ($549) {
                                                       label = 317;
                                                       break;
                                                      }
                                                      __THREW__ = 0;
                                                      invoke_viii(553,($206|0),($207|0),($540|0));
                                                      $550 = __THREW__; __THREW__ = 0;
                                                      $551 = $550&1;
                                                      if ($551) {
                                                       label = 316;
                                                       break L161;
                                                      }
                                                      __THREW__ = 0;
                                                      invoke_vii(554,($529|0),($206|0));
                                                      $552 = __THREW__; __THREW__ = 0;
                                                      $553 = $552&1;
                                                      if ($553) {
                                                       $1158 = ___cxa_find_matching_catch_3(80|0)|0;
                                                       $1159 = tempRet0;
                                                       $184 = $1158;
                                                       $185 = $1159;
                                                       __ZN3VarD2Ev($206);
                                                       break L161;
                                                      }
                                                      __ZN3VarD2Ev($206);
                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($207);
                                                      $554 = $181;
                                                      $118 = $209;
                                                      $119 = 11742;
                                                      $555 = $118;
                                                      $117 = $555;
                                                      $556 = $117;
                                                      $116 = $556;
                                                      $557 = $116;
                                                      $115 = $557;
                                                      $558 = $119;
                                                      $559 = $119;
                                                      __THREW__ = 0;
                                                      $560 = (invoke_ii(550,($559|0))|0);
                                                      $561 = __THREW__; __THREW__ = 0;
                                                      $562 = $561&1;
                                                      if ($562) {
                                                       label = 249;
                                                       break L4;
                                                      }
                                                      __THREW__ = 0;
                                                      invoke_viii(551,($555|0),($558|0),($560|0));
                                                      $563 = __THREW__; __THREW__ = 0;
                                                      $564 = $563&1;
                                                      if ($564) {
                                                       label = 249;
                                                       break L4;
                                                      }
                                                      __THREW__ = 0;
                                                      $565 = (invoke_ii(548,12)|0);
                                                      $566 = __THREW__; __THREW__ = 0;
                                                      $567 = $566&1;
                                                      L175: do {
                                                       if ($567) {
                                                        label = 322;
                                                       } else {
                                                        __THREW__ = 0;
                                                        $568 = (invoke_ii(548,16)|0);
                                                        $569 = __THREW__; __THREW__ = 0;
                                                        $570 = $569&1;
                                                        do {
                                                         if ($570) {
                                                          label = 323;
                                                         } else {
                                                          __THREW__ = 0;
                                                          invoke_vi(566,($568|0));
                                                          $571 = __THREW__; __THREW__ = 0;
                                                          $572 = $571&1;
                                                          if ($572) {
                                                           $1164 = ___cxa_find_matching_catch_3(80|0)|0;
                                                           $1165 = tempRet0;
                                                           $184 = $1164;
                                                           $185 = $1165;
                                                           __ZdlPv($568);
                                                           break;
                                                          }
                                                          __THREW__ = 0;
                                                          invoke_viii(547,($565|0),($568|0),(0|0));
                                                          $573 = __THREW__; __THREW__ = 0;
                                                          $574 = $573&1;
                                                          if ($574) {
                                                           label = 323;
                                                           break;
                                                          }
                                                          __THREW__ = 0;
                                                          invoke_viii(553,($208|0),($209|0),($565|0));
                                                          $575 = __THREW__; __THREW__ = 0;
                                                          $576 = $575&1;
                                                          if ($576) {
                                                           label = 322;
                                                           break L175;
                                                          }
                                                          __THREW__ = 0;
                                                          invoke_vii(554,($554|0),($208|0));
                                                          $577 = __THREW__; __THREW__ = 0;
                                                          $578 = $577&1;
                                                          if ($578) {
                                                           $1166 = ___cxa_find_matching_catch_3(80|0)|0;
                                                           $1167 = tempRet0;
                                                           $184 = $1166;
                                                           $185 = $1167;
                                                           __ZN3VarD2Ev($208);
                                                           break L175;
                                                          }
                                                          __ZN3VarD2Ev($208);
                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($209);
                                                          $579 = $181;
                                                          $113 = $211;
                                                          $114 = 11745;
                                                          $580 = $113;
                                                          $112 = $580;
                                                          $581 = $112;
                                                          $111 = $581;
                                                          $582 = $111;
                                                          $110 = $582;
                                                          $583 = $114;
                                                          $584 = $114;
                                                          __THREW__ = 0;
                                                          $585 = (invoke_ii(550,($584|0))|0);
                                                          $586 = __THREW__; __THREW__ = 0;
                                                          $587 = $586&1;
                                                          if ($587) {
                                                           label = 249;
                                                           break L4;
                                                          }
                                                          __THREW__ = 0;
                                                          invoke_viii(551,($580|0),($583|0),($585|0));
                                                          $588 = __THREW__; __THREW__ = 0;
                                                          $589 = $588&1;
                                                          if ($589) {
                                                           label = 249;
                                                           break L4;
                                                          }
                                                          __THREW__ = 0;
                                                          $590 = (invoke_ii(548,12)|0);
                                                          $591 = __THREW__; __THREW__ = 0;
                                                          $592 = $591&1;
                                                          L189: do {
                                                           if ($592) {
                                                            label = 328;
                                                           } else {
                                                            __THREW__ = 0;
                                                            $593 = (invoke_ii(548,16)|0);
                                                            $594 = __THREW__; __THREW__ = 0;
                                                            $595 = $594&1;
                                                            do {
                                                             if ($595) {
                                                              label = 329;
                                                             } else {
                                                              __THREW__ = 0;
                                                              invoke_vi(567,($593|0));
                                                              $596 = __THREW__; __THREW__ = 0;
                                                              $597 = $596&1;
                                                              if ($597) {
                                                               $1172 = ___cxa_find_matching_catch_3(80|0)|0;
                                                               $1173 = tempRet0;
                                                               $184 = $1172;
                                                               $185 = $1173;
                                                               __ZdlPv($593);
                                                               break;
                                                              }
                                                              __THREW__ = 0;
                                                              invoke_viii(547,($590|0),($593|0),(0|0));
                                                              $598 = __THREW__; __THREW__ = 0;
                                                              $599 = $598&1;
                                                              if ($599) {
                                                               label = 329;
                                                               break;
                                                              }
                                                              __THREW__ = 0;
                                                              invoke_viii(553,($210|0),($211|0),($590|0));
                                                              $600 = __THREW__; __THREW__ = 0;
                                                              $601 = $600&1;
                                                              if ($601) {
                                                               label = 328;
                                                               break L189;
                                                              }
                                                              __THREW__ = 0;
                                                              invoke_vii(554,($579|0),($210|0));
                                                              $602 = __THREW__; __THREW__ = 0;
                                                              $603 = $602&1;
                                                              if ($603) {
                                                               $1174 = ___cxa_find_matching_catch_3(80|0)|0;
                                                               $1175 = tempRet0;
                                                               $184 = $1174;
                                                               $185 = $1175;
                                                               __ZN3VarD2Ev($210);
                                                               break L189;
                                                              }
                                                              __ZN3VarD2Ev($210);
                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($211);
                                                              $604 = $181;
                                                              $108 = $213;
                                                              $109 = 12949;
                                                              $605 = $108;
                                                              $107 = $605;
                                                              $606 = $107;
                                                              $106 = $606;
                                                              $607 = $106;
                                                              $105 = $607;
                                                              $608 = $109;
                                                              $609 = $109;
                                                              __THREW__ = 0;
                                                              $610 = (invoke_ii(550,($609|0))|0);
                                                              $611 = __THREW__; __THREW__ = 0;
                                                              $612 = $611&1;
                                                              if ($612) {
                                                               label = 249;
                                                               break L4;
                                                              }
                                                              __THREW__ = 0;
                                                              invoke_viii(551,($605|0),($608|0),($610|0));
                                                              $613 = __THREW__; __THREW__ = 0;
                                                              $614 = $613&1;
                                                              if ($614) {
                                                               label = 249;
                                                               break L4;
                                                              }
                                                              __THREW__ = 0;
                                                              $615 = (invoke_ii(548,12)|0);
                                                              $616 = __THREW__; __THREW__ = 0;
                                                              $617 = $616&1;
                                                              L203: do {
                                                               if ($617) {
                                                                label = 334;
                                                               } else {
                                                                __THREW__ = 0;
                                                                $618 = (invoke_ii(548,16)|0);
                                                                $619 = __THREW__; __THREW__ = 0;
                                                                $620 = $619&1;
                                                                do {
                                                                 if ($620) {
                                                                  label = 335;
                                                                 } else {
                                                                  __THREW__ = 0;
                                                                  invoke_vi(568,($618|0));
                                                                  $621 = __THREW__; __THREW__ = 0;
                                                                  $622 = $621&1;
                                                                  if ($622) {
                                                                   $1180 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                   $1181 = tempRet0;
                                                                   $184 = $1180;
                                                                   $185 = $1181;
                                                                   __ZdlPv($618);
                                                                   break;
                                                                  }
                                                                  __THREW__ = 0;
                                                                  invoke_viii(547,($615|0),($618|0),(0|0));
                                                                  $623 = __THREW__; __THREW__ = 0;
                                                                  $624 = $623&1;
                                                                  if ($624) {
                                                                   label = 335;
                                                                   break;
                                                                  }
                                                                  __THREW__ = 0;
                                                                  invoke_viii(553,($212|0),($213|0),($615|0));
                                                                  $625 = __THREW__; __THREW__ = 0;
                                                                  $626 = $625&1;
                                                                  if ($626) {
                                                                   label = 334;
                                                                   break L203;
                                                                  }
                                                                  __THREW__ = 0;
                                                                  invoke_vii(554,($604|0),($212|0));
                                                                  $627 = __THREW__; __THREW__ = 0;
                                                                  $628 = $627&1;
                                                                  if ($628) {
                                                                   $1182 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                   $1183 = tempRet0;
                                                                   $184 = $1182;
                                                                   $185 = $1183;
                                                                   __ZN3VarD2Ev($212);
                                                                   break L203;
                                                                  }
                                                                  __ZN3VarD2Ev($212);
                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($213);
                                                                  $629 = $181;
                                                                  $103 = $215;
                                                                  $104 = 11992;
                                                                  $630 = $103;
                                                                  $102 = $630;
                                                                  $631 = $102;
                                                                  $101 = $631;
                                                                  $632 = $101;
                                                                  $100 = $632;
                                                                  $633 = $104;
                                                                  $634 = $104;
                                                                  __THREW__ = 0;
                                                                  $635 = (invoke_ii(550,($634|0))|0);
                                                                  $636 = __THREW__; __THREW__ = 0;
                                                                  $637 = $636&1;
                                                                  if ($637) {
                                                                   label = 249;
                                                                   break L4;
                                                                  }
                                                                  __THREW__ = 0;
                                                                  invoke_viii(551,($630|0),($633|0),($635|0));
                                                                  $638 = __THREW__; __THREW__ = 0;
                                                                  $639 = $638&1;
                                                                  if ($639) {
                                                                   label = 249;
                                                                   break L4;
                                                                  }
                                                                  __THREW__ = 0;
                                                                  $640 = (invoke_ii(548,12)|0);
                                                                  $641 = __THREW__; __THREW__ = 0;
                                                                  $642 = $641&1;
                                                                  L217: do {
                                                                   if ($642) {
                                                                    label = 340;
                                                                   } else {
                                                                    __THREW__ = 0;
                                                                    $643 = (invoke_ii(548,16)|0);
                                                                    $644 = __THREW__; __THREW__ = 0;
                                                                    $645 = $644&1;
                                                                    do {
                                                                     if ($645) {
                                                                      label = 341;
                                                                     } else {
                                                                      __THREW__ = 0;
                                                                      invoke_vi(569,($643|0));
                                                                      $646 = __THREW__; __THREW__ = 0;
                                                                      $647 = $646&1;
                                                                      if ($647) {
                                                                       $1188 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                       $1189 = tempRet0;
                                                                       $184 = $1188;
                                                                       $185 = $1189;
                                                                       __ZdlPv($643);
                                                                       break;
                                                                      }
                                                                      __THREW__ = 0;
                                                                      invoke_viii(547,($640|0),($643|0),(0|0));
                                                                      $648 = __THREW__; __THREW__ = 0;
                                                                      $649 = $648&1;
                                                                      if ($649) {
                                                                       label = 341;
                                                                       break;
                                                                      }
                                                                      __THREW__ = 0;
                                                                      invoke_viii(553,($214|0),($215|0),($640|0));
                                                                      $650 = __THREW__; __THREW__ = 0;
                                                                      $651 = $650&1;
                                                                      if ($651) {
                                                                       label = 340;
                                                                       break L217;
                                                                      }
                                                                      __THREW__ = 0;
                                                                      invoke_vii(554,($629|0),($214|0));
                                                                      $652 = __THREW__; __THREW__ = 0;
                                                                      $653 = $652&1;
                                                                      if ($653) {
                                                                       $1190 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                       $1191 = tempRet0;
                                                                       $184 = $1190;
                                                                       $185 = $1191;
                                                                       __ZN3VarD2Ev($214);
                                                                       break L217;
                                                                      }
                                                                      __ZN3VarD2Ev($214);
                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($215);
                                                                      $654 = $181;
                                                                      $98 = $217;
                                                                      $99 = 12222;
                                                                      $655 = $98;
                                                                      $97 = $655;
                                                                      $656 = $97;
                                                                      $96 = $656;
                                                                      $657 = $96;
                                                                      $95 = $657;
                                                                      $658 = $99;
                                                                      $659 = $99;
                                                                      __THREW__ = 0;
                                                                      $660 = (invoke_ii(550,($659|0))|0);
                                                                      $661 = __THREW__; __THREW__ = 0;
                                                                      $662 = $661&1;
                                                                      if ($662) {
                                                                       label = 249;
                                                                       break L4;
                                                                      }
                                                                      __THREW__ = 0;
                                                                      invoke_viii(551,($655|0),($658|0),($660|0));
                                                                      $663 = __THREW__; __THREW__ = 0;
                                                                      $664 = $663&1;
                                                                      if ($664) {
                                                                       label = 249;
                                                                       break L4;
                                                                      }
                                                                      __THREW__ = 0;
                                                                      $665 = (invoke_ii(548,12)|0);
                                                                      $666 = __THREW__; __THREW__ = 0;
                                                                      $667 = $666&1;
                                                                      L231: do {
                                                                       if ($667) {
                                                                        label = 346;
                                                                       } else {
                                                                        __THREW__ = 0;
                                                                        $668 = (invoke_ii(548,16)|0);
                                                                        $669 = __THREW__; __THREW__ = 0;
                                                                        $670 = $669&1;
                                                                        do {
                                                                         if ($670) {
                                                                          label = 347;
                                                                         } else {
                                                                          __THREW__ = 0;
                                                                          invoke_vi(570,($668|0));
                                                                          $671 = __THREW__; __THREW__ = 0;
                                                                          $672 = $671&1;
                                                                          if ($672) {
                                                                           $1196 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                           $1197 = tempRet0;
                                                                           $184 = $1196;
                                                                           $185 = $1197;
                                                                           __ZdlPv($668);
                                                                           break;
                                                                          }
                                                                          __THREW__ = 0;
                                                                          invoke_viii(547,($665|0),($668|0),(0|0));
                                                                          $673 = __THREW__; __THREW__ = 0;
                                                                          $674 = $673&1;
                                                                          if ($674) {
                                                                           label = 347;
                                                                           break;
                                                                          }
                                                                          __THREW__ = 0;
                                                                          invoke_viii(553,($216|0),($217|0),($665|0));
                                                                          $675 = __THREW__; __THREW__ = 0;
                                                                          $676 = $675&1;
                                                                          if ($676) {
                                                                           label = 346;
                                                                           break L231;
                                                                          }
                                                                          __THREW__ = 0;
                                                                          invoke_vii(554,($654|0),($216|0));
                                                                          $677 = __THREW__; __THREW__ = 0;
                                                                          $678 = $677&1;
                                                                          if ($678) {
                                                                           $1198 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                           $1199 = tempRet0;
                                                                           $184 = $1198;
                                                                           $185 = $1199;
                                                                           __ZN3VarD2Ev($216);
                                                                           break L231;
                                                                          }
                                                                          __ZN3VarD2Ev($216);
                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
                                                                          $679 = $181;
                                                                          $93 = $219;
                                                                          $94 = 12023;
                                                                          $680 = $93;
                                                                          $92 = $680;
                                                                          $681 = $92;
                                                                          $91 = $681;
                                                                          $682 = $91;
                                                                          $90 = $682;
                                                                          $683 = $94;
                                                                          $684 = $94;
                                                                          __THREW__ = 0;
                                                                          $685 = (invoke_ii(550,($684|0))|0);
                                                                          $686 = __THREW__; __THREW__ = 0;
                                                                          $687 = $686&1;
                                                                          if ($687) {
                                                                           label = 249;
                                                                           break L4;
                                                                          }
                                                                          __THREW__ = 0;
                                                                          invoke_viii(551,($680|0),($683|0),($685|0));
                                                                          $688 = __THREW__; __THREW__ = 0;
                                                                          $689 = $688&1;
                                                                          if ($689) {
                                                                           label = 249;
                                                                           break L4;
                                                                          }
                                                                          __THREW__ = 0;
                                                                          $690 = (invoke_ii(548,12)|0);
                                                                          $691 = __THREW__; __THREW__ = 0;
                                                                          $692 = $691&1;
                                                                          L245: do {
                                                                           if ($692) {
                                                                            label = 352;
                                                                           } else {
                                                                            __THREW__ = 0;
                                                                            $693 = (invoke_ii(548,24)|0);
                                                                            $694 = __THREW__; __THREW__ = 0;
                                                                            $695 = $694&1;
                                                                            do {
                                                                             if ($695) {
                                                                              label = 353;
                                                                             } else {
                                                                              $696 = ((($250)) + 12|0);
                                                                              $697 = HEAP32[$696>>2]|0;
                                                                              $698 = ((($250)) + 16|0);
                                                                              $699 = HEAP32[$698>>2]|0;
                                                                              __THREW__ = 0;
                                                                              invoke_viii(571,($693|0),($697|0),($699|0));
                                                                              $700 = __THREW__; __THREW__ = 0;
                                                                              $701 = $700&1;
                                                                              if ($701) {
                                                                               $1204 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                               $1205 = tempRet0;
                                                                               $184 = $1204;
                                                                               $185 = $1205;
                                                                               __ZdlPv($693);
                                                                               break;
                                                                              }
                                                                              __THREW__ = 0;
                                                                              invoke_viii(547,($690|0),($693|0),(0|0));
                                                                              $702 = __THREW__; __THREW__ = 0;
                                                                              $703 = $702&1;
                                                                              if ($703) {
                                                                               label = 353;
                                                                               break;
                                                                              }
                                                                              __THREW__ = 0;
                                                                              invoke_viii(553,($218|0),($219|0),($690|0));
                                                                              $704 = __THREW__; __THREW__ = 0;
                                                                              $705 = $704&1;
                                                                              if ($705) {
                                                                               label = 352;
                                                                               break L245;
                                                                              }
                                                                              __THREW__ = 0;
                                                                              invoke_vii(554,($679|0),($218|0));
                                                                              $706 = __THREW__; __THREW__ = 0;
                                                                              $707 = $706&1;
                                                                              if ($707) {
                                                                               $1206 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                               $1207 = tempRet0;
                                                                               $184 = $1206;
                                                                               $185 = $1207;
                                                                               __ZN3VarD2Ev($218);
                                                                               break L245;
                                                                              }
                                                                              __ZN3VarD2Ev($218);
                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
                                                                              $708 = $181;
                                                                              $88 = $221;
                                                                              $89 = 12361;
                                                                              $709 = $88;
                                                                              $87 = $709;
                                                                              $710 = $87;
                                                                              $86 = $710;
                                                                              $711 = $86;
                                                                              $85 = $711;
                                                                              $712 = $89;
                                                                              $713 = $89;
                                                                              __THREW__ = 0;
                                                                              $714 = (invoke_ii(550,($713|0))|0);
                                                                              $715 = __THREW__; __THREW__ = 0;
                                                                              $716 = $715&1;
                                                                              if ($716) {
                                                                               label = 249;
                                                                               break L4;
                                                                              }
                                                                              __THREW__ = 0;
                                                                              invoke_viii(551,($709|0),($712|0),($714|0));
                                                                              $717 = __THREW__; __THREW__ = 0;
                                                                              $718 = $717&1;
                                                                              if ($718) {
                                                                               label = 249;
                                                                               break L4;
                                                                              }
                                                                              __THREW__ = 0;
                                                                              $719 = (invoke_ii(548,12)|0);
                                                                              $720 = __THREW__; __THREW__ = 0;
                                                                              $721 = $720&1;
                                                                              L259: do {
                                                                               if ($721) {
                                                                                label = 358;
                                                                               } else {
                                                                                __THREW__ = 0;
                                                                                $722 = (invoke_ii(548,20)|0);
                                                                                $723 = __THREW__; __THREW__ = 0;
                                                                                $724 = $723&1;
                                                                                do {
                                                                                 if ($724) {
                                                                                  label = 359;
                                                                                 } else {
                                                                                  $725 = ((($250)) + 12|0);
                                                                                  $726 = HEAP32[$725>>2]|0;
                                                                                  __THREW__ = 0;
                                                                                  invoke_vii(572,($722|0),($726|0));
                                                                                  $727 = __THREW__; __THREW__ = 0;
                                                                                  $728 = $727&1;
                                                                                  if ($728) {
                                                                                   $1212 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                   $1213 = tempRet0;
                                                                                   $184 = $1212;
                                                                                   $185 = $1213;
                                                                                   __ZdlPv($722);
                                                                                   break;
                                                                                  }
                                                                                  __THREW__ = 0;
                                                                                  invoke_viii(547,($719|0),($722|0),(0|0));
                                                                                  $729 = __THREW__; __THREW__ = 0;
                                                                                  $730 = $729&1;
                                                                                  if ($730) {
                                                                                   label = 359;
                                                                                   break;
                                                                                  }
                                                                                  __THREW__ = 0;
                                                                                  invoke_viii(553,($220|0),($221|0),($719|0));
                                                                                  $731 = __THREW__; __THREW__ = 0;
                                                                                  $732 = $731&1;
                                                                                  if ($732) {
                                                                                   label = 358;
                                                                                   break L259;
                                                                                  }
                                                                                  __THREW__ = 0;
                                                                                  invoke_vii(554,($708|0),($220|0));
                                                                                  $733 = __THREW__; __THREW__ = 0;
                                                                                  $734 = $733&1;
                                                                                  if ($734) {
                                                                                   $1214 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                   $1215 = tempRet0;
                                                                                   $184 = $1214;
                                                                                   $185 = $1215;
                                                                                   __ZN3VarD2Ev($220);
                                                                                   break L259;
                                                                                  }
                                                                                  __ZN3VarD2Ev($220);
                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
                                                                                  $735 = $181;
                                                                                  $83 = $223;
                                                                                  $84 = 12697;
                                                                                  $736 = $83;
                                                                                  $82 = $736;
                                                                                  $737 = $82;
                                                                                  $81 = $737;
                                                                                  $738 = $81;
                                                                                  $80 = $738;
                                                                                  $739 = $84;
                                                                                  $740 = $84;
                                                                                  __THREW__ = 0;
                                                                                  $741 = (invoke_ii(550,($740|0))|0);
                                                                                  $742 = __THREW__; __THREW__ = 0;
                                                                                  $743 = $742&1;
                                                                                  if ($743) {
                                                                                   label = 249;
                                                                                   break L4;
                                                                                  }
                                                                                  __THREW__ = 0;
                                                                                  invoke_viii(551,($736|0),($739|0),($741|0));
                                                                                  $744 = __THREW__; __THREW__ = 0;
                                                                                  $745 = $744&1;
                                                                                  if ($745) {
                                                                                   label = 249;
                                                                                   break L4;
                                                                                  }
                                                                                  __THREW__ = 0;
                                                                                  $746 = (invoke_ii(548,12)|0);
                                                                                  $747 = __THREW__; __THREW__ = 0;
                                                                                  $748 = $747&1;
                                                                                  L273: do {
                                                                                   if ($748) {
                                                                                    label = 364;
                                                                                   } else {
                                                                                    __THREW__ = 0;
                                                                                    $749 = (invoke_ii(548,20)|0);
                                                                                    $750 = __THREW__; __THREW__ = 0;
                                                                                    $751 = $750&1;
                                                                                    do {
                                                                                     if ($751) {
                                                                                      label = 365;
                                                                                     } else {
                                                                                      __THREW__ = 0;
                                                                                      invoke_vii(573,($749|0),($250|0));
                                                                                      $752 = __THREW__; __THREW__ = 0;
                                                                                      $753 = $752&1;
                                                                                      if ($753) {
                                                                                       $1220 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                       $1221 = tempRet0;
                                                                                       $184 = $1220;
                                                                                       $185 = $1221;
                                                                                       __ZdlPv($749);
                                                                                       break;
                                                                                      }
                                                                                      __THREW__ = 0;
                                                                                      invoke_viii(547,($746|0),($749|0),(0|0));
                                                                                      $754 = __THREW__; __THREW__ = 0;
                                                                                      $755 = $754&1;
                                                                                      if ($755) {
                                                                                       label = 365;
                                                                                       break;
                                                                                      }
                                                                                      __THREW__ = 0;
                                                                                      invoke_viii(553,($222|0),($223|0),($746|0));
                                                                                      $756 = __THREW__; __THREW__ = 0;
                                                                                      $757 = $756&1;
                                                                                      if ($757) {
                                                                                       label = 364;
                                                                                       break L273;
                                                                                      }
                                                                                      __THREW__ = 0;
                                                                                      invoke_vii(554,($735|0),($222|0));
                                                                                      $758 = __THREW__; __THREW__ = 0;
                                                                                      $759 = $758&1;
                                                                                      if ($759) {
                                                                                       $1222 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                       $1223 = tempRet0;
                                                                                       $184 = $1222;
                                                                                       $185 = $1223;
                                                                                       __ZN3VarD2Ev($222);
                                                                                       break L273;
                                                                                      }
                                                                                      __ZN3VarD2Ev($222);
                                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($223);
                                                                                      $760 = $181;
                                                                                      $78 = $225;
                                                                                      $79 = 12240;
                                                                                      $761 = $78;
                                                                                      $77 = $761;
                                                                                      $762 = $77;
                                                                                      $76 = $762;
                                                                                      $763 = $76;
                                                                                      $75 = $763;
                                                                                      $764 = $79;
                                                                                      $765 = $79;
                                                                                      __THREW__ = 0;
                                                                                      $766 = (invoke_ii(550,($765|0))|0);
                                                                                      $767 = __THREW__; __THREW__ = 0;
                                                                                      $768 = $767&1;
                                                                                      if ($768) {
                                                                                       label = 249;
                                                                                       break L4;
                                                                                      }
                                                                                      __THREW__ = 0;
                                                                                      invoke_viii(551,($761|0),($764|0),($766|0));
                                                                                      $769 = __THREW__; __THREW__ = 0;
                                                                                      $770 = $769&1;
                                                                                      if ($770) {
                                                                                       label = 249;
                                                                                       break L4;
                                                                                      }
                                                                                      __THREW__ = 0;
                                                                                      $771 = (invoke_ii(548,12)|0);
                                                                                      $772 = __THREW__; __THREW__ = 0;
                                                                                      $773 = $772&1;
                                                                                      L287: do {
                                                                                       if ($773) {
                                                                                        label = 370;
                                                                                       } else {
                                                                                        __THREW__ = 0;
                                                                                        $774 = (invoke_ii(548,20)|0);
                                                                                        $775 = __THREW__; __THREW__ = 0;
                                                                                        $776 = $775&1;
                                                                                        do {
                                                                                         if ($776) {
                                                                                          label = 371;
                                                                                         } else {
                                                                                          __THREW__ = 0;
                                                                                          invoke_vii(574,($774|0),($250|0));
                                                                                          $777 = __THREW__; __THREW__ = 0;
                                                                                          $778 = $777&1;
                                                                                          if ($778) {
                                                                                           $1228 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                           $1229 = tempRet0;
                                                                                           $184 = $1228;
                                                                                           $185 = $1229;
                                                                                           __ZdlPv($774);
                                                                                           break;
                                                                                          }
                                                                                          __THREW__ = 0;
                                                                                          invoke_viii(547,($771|0),($774|0),(0|0));
                                                                                          $779 = __THREW__; __THREW__ = 0;
                                                                                          $780 = $779&1;
                                                                                          if ($780) {
                                                                                           label = 371;
                                                                                           break;
                                                                                          }
                                                                                          __THREW__ = 0;
                                                                                          invoke_viii(553,($224|0),($225|0),($771|0));
                                                                                          $781 = __THREW__; __THREW__ = 0;
                                                                                          $782 = $781&1;
                                                                                          if ($782) {
                                                                                           label = 370;
                                                                                           break L287;
                                                                                          }
                                                                                          __THREW__ = 0;
                                                                                          invoke_vii(554,($760|0),($224|0));
                                                                                          $783 = __THREW__; __THREW__ = 0;
                                                                                          $784 = $783&1;
                                                                                          if ($784) {
                                                                                           $1230 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                           $1231 = tempRet0;
                                                                                           $184 = $1230;
                                                                                           $185 = $1231;
                                                                                           __ZN3VarD2Ev($224);
                                                                                           break L287;
                                                                                          }
                                                                                          __ZN3VarD2Ev($224);
                                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
                                                                                          $785 = $181;
                                                                                          $73 = $227;
                                                                                          $74 = 12533;
                                                                                          $786 = $73;
                                                                                          $72 = $786;
                                                                                          $787 = $72;
                                                                                          $71 = $787;
                                                                                          $788 = $71;
                                                                                          $70 = $788;
                                                                                          $789 = $74;
                                                                                          $790 = $74;
                                                                                          __THREW__ = 0;
                                                                                          $791 = (invoke_ii(550,($790|0))|0);
                                                                                          $792 = __THREW__; __THREW__ = 0;
                                                                                          $793 = $792&1;
                                                                                          if ($793) {
                                                                                           label = 249;
                                                                                           break L4;
                                                                                          }
                                                                                          __THREW__ = 0;
                                                                                          invoke_viii(551,($786|0),($789|0),($791|0));
                                                                                          $794 = __THREW__; __THREW__ = 0;
                                                                                          $795 = $794&1;
                                                                                          if ($795) {
                                                                                           label = 249;
                                                                                           break L4;
                                                                                          }
                                                                                          __THREW__ = 0;
                                                                                          $796 = (invoke_ii(548,12)|0);
                                                                                          $797 = __THREW__; __THREW__ = 0;
                                                                                          $798 = $797&1;
                                                                                          L301: do {
                                                                                           if ($798) {
                                                                                            label = 376;
                                                                                           } else {
                                                                                            __THREW__ = 0;
                                                                                            $799 = (invoke_ii(548,16)|0);
                                                                                            $800 = __THREW__; __THREW__ = 0;
                                                                                            $801 = $800&1;
                                                                                            do {
                                                                                             if ($801) {
                                                                                              label = 377;
                                                                                             } else {
                                                                                              __THREW__ = 0;
                                                                                              invoke_vi(575,($799|0));
                                                                                              $802 = __THREW__; __THREW__ = 0;
                                                                                              $803 = $802&1;
                                                                                              if ($803) {
                                                                                               $1236 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                               $1237 = tempRet0;
                                                                                               $184 = $1236;
                                                                                               $185 = $1237;
                                                                                               __ZdlPv($799);
                                                                                               break;
                                                                                              }
                                                                                              __THREW__ = 0;
                                                                                              invoke_viii(547,($796|0),($799|0),(0|0));
                                                                                              $804 = __THREW__; __THREW__ = 0;
                                                                                              $805 = $804&1;
                                                                                              if ($805) {
                                                                                               label = 377;
                                                                                               break;
                                                                                              }
                                                                                              __THREW__ = 0;
                                                                                              invoke_viii(553,($226|0),($227|0),($796|0));
                                                                                              $806 = __THREW__; __THREW__ = 0;
                                                                                              $807 = $806&1;
                                                                                              if ($807) {
                                                                                               label = 376;
                                                                                               break L301;
                                                                                              }
                                                                                              __THREW__ = 0;
                                                                                              invoke_vii(554,($785|0),($226|0));
                                                                                              $808 = __THREW__; __THREW__ = 0;
                                                                                              $809 = $808&1;
                                                                                              if ($809) {
                                                                                               $1238 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                               $1239 = tempRet0;
                                                                                               $184 = $1238;
                                                                                               $185 = $1239;
                                                                                               __ZN3VarD2Ev($226);
                                                                                               break L301;
                                                                                              }
                                                                                              __ZN3VarD2Ev($226);
                                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($227);
                                                                                              $810 = $181;
                                                                                              $68 = $229;
                                                                                              $69 = 11748;
                                                                                              $811 = $68;
                                                                                              $67 = $811;
                                                                                              $812 = $67;
                                                                                              $66 = $812;
                                                                                              $813 = $66;
                                                                                              $65 = $813;
                                                                                              $814 = $69;
                                                                                              $815 = $69;
                                                                                              __THREW__ = 0;
                                                                                              $816 = (invoke_ii(550,($815|0))|0);
                                                                                              $817 = __THREW__; __THREW__ = 0;
                                                                                              $818 = $817&1;
                                                                                              if ($818) {
                                                                                               label = 249;
                                                                                               break L4;
                                                                                              }
                                                                                              __THREW__ = 0;
                                                                                              invoke_viii(551,($811|0),($814|0),($816|0));
                                                                                              $819 = __THREW__; __THREW__ = 0;
                                                                                              $820 = $819&1;
                                                                                              if ($820) {
                                                                                               label = 249;
                                                                                               break L4;
                                                                                              }
                                                                                              __THREW__ = 0;
                                                                                              $821 = (invoke_ii(548,12)|0);
                                                                                              $822 = __THREW__; __THREW__ = 0;
                                                                                              $823 = $822&1;
                                                                                              L315: do {
                                                                                               if ($823) {
                                                                                                label = 382;
                                                                                               } else {
                                                                                                __THREW__ = 0;
                                                                                                $824 = (invoke_ii(548,16)|0);
                                                                                                $825 = __THREW__; __THREW__ = 0;
                                                                                                $826 = $825&1;
                                                                                                do {
                                                                                                 if ($826) {
                                                                                                  label = 383;
                                                                                                 } else {
                                                                                                  __THREW__ = 0;
                                                                                                  invoke_vi(576,($824|0));
                                                                                                  $827 = __THREW__; __THREW__ = 0;
                                                                                                  $828 = $827&1;
                                                                                                  if ($828) {
                                                                                                   $1244 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                   $1245 = tempRet0;
                                                                                                   $184 = $1244;
                                                                                                   $185 = $1245;
                                                                                                   __ZdlPv($824);
                                                                                                   break;
                                                                                                  }
                                                                                                  __THREW__ = 0;
                                                                                                  invoke_viii(547,($821|0),($824|0),(0|0));
                                                                                                  $829 = __THREW__; __THREW__ = 0;
                                                                                                  $830 = $829&1;
                                                                                                  if ($830) {
                                                                                                   label = 383;
                                                                                                   break;
                                                                                                  }
                                                                                                  __THREW__ = 0;
                                                                                                  invoke_viii(553,($228|0),($229|0),($821|0));
                                                                                                  $831 = __THREW__; __THREW__ = 0;
                                                                                                  $832 = $831&1;
                                                                                                  if ($832) {
                                                                                                   label = 382;
                                                                                                   break L315;
                                                                                                  }
                                                                                                  __THREW__ = 0;
                                                                                                  invoke_vii(554,($810|0),($228|0));
                                                                                                  $833 = __THREW__; __THREW__ = 0;
                                                                                                  $834 = $833&1;
                                                                                                  if ($834) {
                                                                                                   $1246 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                   $1247 = tempRet0;
                                                                                                   $184 = $1246;
                                                                                                   $185 = $1247;
                                                                                                   __ZN3VarD2Ev($228);
                                                                                                   break L315;
                                                                                                  }
                                                                                                  __ZN3VarD2Ev($228);
                                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
                                                                                                  $835 = $181;
                                                                                                  $63 = $231;
                                                                                                  $64 = 11750;
                                                                                                  $836 = $63;
                                                                                                  $62 = $836;
                                                                                                  $837 = $62;
                                                                                                  $61 = $837;
                                                                                                  $838 = $61;
                                                                                                  $60 = $838;
                                                                                                  $839 = $64;
                                                                                                  $840 = $64;
                                                                                                  __THREW__ = 0;
                                                                                                  $841 = (invoke_ii(550,($840|0))|0);
                                                                                                  $842 = __THREW__; __THREW__ = 0;
                                                                                                  $843 = $842&1;
                                                                                                  if ($843) {
                                                                                                   label = 249;
                                                                                                   break L4;
                                                                                                  }
                                                                                                  __THREW__ = 0;
                                                                                                  invoke_viii(551,($836|0),($839|0),($841|0));
                                                                                                  $844 = __THREW__; __THREW__ = 0;
                                                                                                  $845 = $844&1;
                                                                                                  if ($845) {
                                                                                                   label = 249;
                                                                                                   break L4;
                                                                                                  }
                                                                                                  __THREW__ = 0;
                                                                                                  $846 = (invoke_ii(548,12)|0);
                                                                                                  $847 = __THREW__; __THREW__ = 0;
                                                                                                  $848 = $847&1;
                                                                                                  L329: do {
                                                                                                   if ($848) {
                                                                                                    label = 388;
                                                                                                   } else {
                                                                                                    __THREW__ = 0;
                                                                                                    $849 = (invoke_ii(548,16)|0);
                                                                                                    $850 = __THREW__; __THREW__ = 0;
                                                                                                    $851 = $850&1;
                                                                                                    do {
                                                                                                     if ($851) {
                                                                                                      label = 389;
                                                                                                     } else {
                                                                                                      __THREW__ = 0;
                                                                                                      invoke_vi(577,($849|0));
                                                                                                      $852 = __THREW__; __THREW__ = 0;
                                                                                                      $853 = $852&1;
                                                                                                      if ($853) {
                                                                                                       $1252 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                       $1253 = tempRet0;
                                                                                                       $184 = $1252;
                                                                                                       $185 = $1253;
                                                                                                       __ZdlPv($849);
                                                                                                       break;
                                                                                                      }
                                                                                                      __THREW__ = 0;
                                                                                                      invoke_viii(547,($846|0),($849|0),(0|0));
                                                                                                      $854 = __THREW__; __THREW__ = 0;
                                                                                                      $855 = $854&1;
                                                                                                      if ($855) {
                                                                                                       label = 389;
                                                                                                       break;
                                                                                                      }
                                                                                                      __THREW__ = 0;
                                                                                                      invoke_viii(553,($230|0),($231|0),($846|0));
                                                                                                      $856 = __THREW__; __THREW__ = 0;
                                                                                                      $857 = $856&1;
                                                                                                      if ($857) {
                                                                                                       label = 388;
                                                                                                       break L329;
                                                                                                      }
                                                                                                      __THREW__ = 0;
                                                                                                      invoke_vii(554,($835|0),($230|0));
                                                                                                      $858 = __THREW__; __THREW__ = 0;
                                                                                                      $859 = $858&1;
                                                                                                      if ($859) {
                                                                                                       $1254 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                       $1255 = tempRet0;
                                                                                                       $184 = $1254;
                                                                                                       $185 = $1255;
                                                                                                       __ZN3VarD2Ev($230);
                                                                                                       break L329;
                                                                                                      }
                                                                                                      __ZN3VarD2Ev($230);
                                                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($231);
                                                                                                      $860 = $181;
                                                                                                      $58 = $233;
                                                                                                      $59 = 11752;
                                                                                                      $861 = $58;
                                                                                                      $57 = $861;
                                                                                                      $862 = $57;
                                                                                                      $56 = $862;
                                                                                                      $863 = $56;
                                                                                                      $55 = $863;
                                                                                                      $864 = $59;
                                                                                                      $865 = $59;
                                                                                                      __THREW__ = 0;
                                                                                                      $866 = (invoke_ii(550,($865|0))|0);
                                                                                                      $867 = __THREW__; __THREW__ = 0;
                                                                                                      $868 = $867&1;
                                                                                                      if ($868) {
                                                                                                       label = 249;
                                                                                                       break L4;
                                                                                                      }
                                                                                                      __THREW__ = 0;
                                                                                                      invoke_viii(551,($861|0),($864|0),($866|0));
                                                                                                      $869 = __THREW__; __THREW__ = 0;
                                                                                                      $870 = $869&1;
                                                                                                      if ($870) {
                                                                                                       label = 249;
                                                                                                       break L4;
                                                                                                      }
                                                                                                      __THREW__ = 0;
                                                                                                      $871 = (invoke_ii(548,12)|0);
                                                                                                      $872 = __THREW__; __THREW__ = 0;
                                                                                                      $873 = $872&1;
                                                                                                      L343: do {
                                                                                                       if ($873) {
                                                                                                        label = 394;
                                                                                                       } else {
                                                                                                        __THREW__ = 0;
                                                                                                        $874 = (invoke_ii(548,16)|0);
                                                                                                        $875 = __THREW__; __THREW__ = 0;
                                                                                                        $876 = $875&1;
                                                                                                        do {
                                                                                                         if ($876) {
                                                                                                          label = 395;
                                                                                                         } else {
                                                                                                          __THREW__ = 0;
                                                                                                          invoke_vi(578,($874|0));
                                                                                                          $877 = __THREW__; __THREW__ = 0;
                                                                                                          $878 = $877&1;
                                                                                                          if ($878) {
                                                                                                           $1260 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                           $1261 = tempRet0;
                                                                                                           $184 = $1260;
                                                                                                           $185 = $1261;
                                                                                                           __ZdlPv($874);
                                                                                                           break;
                                                                                                          }
                                                                                                          __THREW__ = 0;
                                                                                                          invoke_viii(547,($871|0),($874|0),(0|0));
                                                                                                          $879 = __THREW__; __THREW__ = 0;
                                                                                                          $880 = $879&1;
                                                                                                          if ($880) {
                                                                                                           label = 395;
                                                                                                           break;
                                                                                                          }
                                                                                                          __THREW__ = 0;
                                                                                                          invoke_viii(553,($232|0),($233|0),($871|0));
                                                                                                          $881 = __THREW__; __THREW__ = 0;
                                                                                                          $882 = $881&1;
                                                                                                          if ($882) {
                                                                                                           label = 394;
                                                                                                           break L343;
                                                                                                          }
                                                                                                          __THREW__ = 0;
                                                                                                          invoke_vii(554,($860|0),($232|0));
                                                                                                          $883 = __THREW__; __THREW__ = 0;
                                                                                                          $884 = $883&1;
                                                                                                          if ($884) {
                                                                                                           $1262 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                           $1263 = tempRet0;
                                                                                                           $184 = $1262;
                                                                                                           $185 = $1263;
                                                                                                           __ZN3VarD2Ev($232);
                                                                                                           break L343;
                                                                                                          }
                                                                                                          __ZN3VarD2Ev($232);
                                                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($233);
                                                                                                          $885 = $181;
                                                                                                          $53 = $235;
                                                                                                          $54 = 11755;
                                                                                                          $886 = $53;
                                                                                                          $52 = $886;
                                                                                                          $887 = $52;
                                                                                                          $51 = $887;
                                                                                                          $888 = $51;
                                                                                                          $50 = $888;
                                                                                                          $889 = $54;
                                                                                                          $890 = $54;
                                                                                                          __THREW__ = 0;
                                                                                                          $891 = (invoke_ii(550,($890|0))|0);
                                                                                                          $892 = __THREW__; __THREW__ = 0;
                                                                                                          $893 = $892&1;
                                                                                                          if ($893) {
                                                                                                           label = 249;
                                                                                                           break L4;
                                                                                                          }
                                                                                                          __THREW__ = 0;
                                                                                                          invoke_viii(551,($886|0),($889|0),($891|0));
                                                                                                          $894 = __THREW__; __THREW__ = 0;
                                                                                                          $895 = $894&1;
                                                                                                          if ($895) {
                                                                                                           label = 249;
                                                                                                           break L4;
                                                                                                          }
                                                                                                          __THREW__ = 0;
                                                                                                          $896 = (invoke_ii(548,12)|0);
                                                                                                          $897 = __THREW__; __THREW__ = 0;
                                                                                                          $898 = $897&1;
                                                                                                          L357: do {
                                                                                                           if ($898) {
                                                                                                            label = 400;
                                                                                                           } else {
                                                                                                            __THREW__ = 0;
                                                                                                            $899 = (invoke_ii(548,16)|0);
                                                                                                            $900 = __THREW__; __THREW__ = 0;
                                                                                                            $901 = $900&1;
                                                                                                            do {
                                                                                                             if ($901) {
                                                                                                              label = 401;
                                                                                                             } else {
                                                                                                              __THREW__ = 0;
                                                                                                              invoke_vi(579,($899|0));
                                                                                                              $902 = __THREW__; __THREW__ = 0;
                                                                                                              $903 = $902&1;
                                                                                                              if ($903) {
                                                                                                               $1268 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                               $1269 = tempRet0;
                                                                                                               $184 = $1268;
                                                                                                               $185 = $1269;
                                                                                                               __ZdlPv($899);
                                                                                                               break;
                                                                                                              }
                                                                                                              __THREW__ = 0;
                                                                                                              invoke_viii(547,($896|0),($899|0),(0|0));
                                                                                                              $904 = __THREW__; __THREW__ = 0;
                                                                                                              $905 = $904&1;
                                                                                                              if ($905) {
                                                                                                               label = 401;
                                                                                                               break;
                                                                                                              }
                                                                                                              __THREW__ = 0;
                                                                                                              invoke_viii(553,($234|0),($235|0),($896|0));
                                                                                                              $906 = __THREW__; __THREW__ = 0;
                                                                                                              $907 = $906&1;
                                                                                                              if ($907) {
                                                                                                               label = 400;
                                                                                                               break L357;
                                                                                                              }
                                                                                                              __THREW__ = 0;
                                                                                                              invoke_vii(554,($885|0),($234|0));
                                                                                                              $908 = __THREW__; __THREW__ = 0;
                                                                                                              $909 = $908&1;
                                                                                                              if ($909) {
                                                                                                               $1270 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                               $1271 = tempRet0;
                                                                                                               $184 = $1270;
                                                                                                               $185 = $1271;
                                                                                                               __ZN3VarD2Ev($234);
                                                                                                               break L357;
                                                                                                              }
                                                                                                              __ZN3VarD2Ev($234);
                                                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($235);
                                                                                                              $910 = $181;
                                                                                                              $48 = $237;
                                                                                                              $49 = 11758;
                                                                                                              $911 = $48;
                                                                                                              $47 = $911;
                                                                                                              $912 = $47;
                                                                                                              $46 = $912;
                                                                                                              $913 = $46;
                                                                                                              $45 = $913;
                                                                                                              $914 = $49;
                                                                                                              $915 = $49;
                                                                                                              __THREW__ = 0;
                                                                                                              $916 = (invoke_ii(550,($915|0))|0);
                                                                                                              $917 = __THREW__; __THREW__ = 0;
                                                                                                              $918 = $917&1;
                                                                                                              if ($918) {
                                                                                                               label = 249;
                                                                                                               break L4;
                                                                                                              }
                                                                                                              __THREW__ = 0;
                                                                                                              invoke_viii(551,($911|0),($914|0),($916|0));
                                                                                                              $919 = __THREW__; __THREW__ = 0;
                                                                                                              $920 = $919&1;
                                                                                                              if ($920) {
                                                                                                               label = 249;
                                                                                                               break L4;
                                                                                                              }
                                                                                                              __THREW__ = 0;
                                                                                                              $921 = (invoke_ii(548,12)|0);
                                                                                                              $922 = __THREW__; __THREW__ = 0;
                                                                                                              $923 = $922&1;
                                                                                                              L371: do {
                                                                                                               if ($923) {
                                                                                                                label = 406;
                                                                                                               } else {
                                                                                                                __THREW__ = 0;
                                                                                                                $924 = (invoke_ii(548,16)|0);
                                                                                                                $925 = __THREW__; __THREW__ = 0;
                                                                                                                $926 = $925&1;
                                                                                                                do {
                                                                                                                 if ($926) {
                                                                                                                  label = 407;
                                                                                                                 } else {
                                                                                                                  __THREW__ = 0;
                                                                                                                  invoke_vi(580,($924|0));
                                                                                                                  $927 = __THREW__; __THREW__ = 0;
                                                                                                                  $928 = $927&1;
                                                                                                                  if ($928) {
                                                                                                                   $1276 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                   $1277 = tempRet0;
                                                                                                                   $184 = $1276;
                                                                                                                   $185 = $1277;
                                                                                                                   __ZdlPv($924);
                                                                                                                   break;
                                                                                                                  }
                                                                                                                  __THREW__ = 0;
                                                                                                                  invoke_viii(547,($921|0),($924|0),(0|0));
                                                                                                                  $929 = __THREW__; __THREW__ = 0;
                                                                                                                  $930 = $929&1;
                                                                                                                  if ($930) {
                                                                                                                   label = 407;
                                                                                                                   break;
                                                                                                                  }
                                                                                                                  __THREW__ = 0;
                                                                                                                  invoke_viii(553,($236|0),($237|0),($921|0));
                                                                                                                  $931 = __THREW__; __THREW__ = 0;
                                                                                                                  $932 = $931&1;
                                                                                                                  if ($932) {
                                                                                                                   label = 406;
                                                                                                                   break L371;
                                                                                                                  }
                                                                                                                  __THREW__ = 0;
                                                                                                                  invoke_vii(554,($910|0),($236|0));
                                                                                                                  $933 = __THREW__; __THREW__ = 0;
                                                                                                                  $934 = $933&1;
                                                                                                                  if ($934) {
                                                                                                                   $1278 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                   $1279 = tempRet0;
                                                                                                                   $184 = $1278;
                                                                                                                   $185 = $1279;
                                                                                                                   __ZN3VarD2Ev($236);
                                                                                                                   break L371;
                                                                                                                  }
                                                                                                                  __ZN3VarD2Ev($236);
                                                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($237);
                                                                                                                  $935 = $181;
                                                                                                                  $43 = $239;
                                                                                                                  $44 = 11761;
                                                                                                                  $936 = $43;
                                                                                                                  $42 = $936;
                                                                                                                  $937 = $42;
                                                                                                                  $41 = $937;
                                                                                                                  $938 = $41;
                                                                                                                  $40 = $938;
                                                                                                                  $939 = $44;
                                                                                                                  $940 = $44;
                                                                                                                  __THREW__ = 0;
                                                                                                                  $941 = (invoke_ii(550,($940|0))|0);
                                                                                                                  $942 = __THREW__; __THREW__ = 0;
                                                                                                                  $943 = $942&1;
                                                                                                                  if ($943) {
                                                                                                                   label = 249;
                                                                                                                   break L4;
                                                                                                                  }
                                                                                                                  __THREW__ = 0;
                                                                                                                  invoke_viii(551,($936|0),($939|0),($941|0));
                                                                                                                  $944 = __THREW__; __THREW__ = 0;
                                                                                                                  $945 = $944&1;
                                                                                                                  if ($945) {
                                                                                                                   label = 249;
                                                                                                                   break L4;
                                                                                                                  }
                                                                                                                  __THREW__ = 0;
                                                                                                                  $946 = (invoke_ii(548,12)|0);
                                                                                                                  $947 = __THREW__; __THREW__ = 0;
                                                                                                                  $948 = $947&1;
                                                                                                                  L385: do {
                                                                                                                   if ($948) {
                                                                                                                    label = 412;
                                                                                                                   } else {
                                                                                                                    __THREW__ = 0;
                                                                                                                    $949 = (invoke_ii(548,16)|0);
                                                                                                                    $950 = __THREW__; __THREW__ = 0;
                                                                                                                    $951 = $950&1;
                                                                                                                    do {
                                                                                                                     if ($951) {
                                                                                                                      label = 413;
                                                                                                                     } else {
                                                                                                                      __THREW__ = 0;
                                                                                                                      invoke_vi(581,($949|0));
                                                                                                                      $952 = __THREW__; __THREW__ = 0;
                                                                                                                      $953 = $952&1;
                                                                                                                      if ($953) {
                                                                                                                       $1284 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                       $1285 = tempRet0;
                                                                                                                       $184 = $1284;
                                                                                                                       $185 = $1285;
                                                                                                                       __ZdlPv($949);
                                                                                                                       break;
                                                                                                                      }
                                                                                                                      __THREW__ = 0;
                                                                                                                      invoke_viii(547,($946|0),($949|0),(0|0));
                                                                                                                      $954 = __THREW__; __THREW__ = 0;
                                                                                                                      $955 = $954&1;
                                                                                                                      if ($955) {
                                                                                                                       label = 413;
                                                                                                                       break;
                                                                                                                      }
                                                                                                                      __THREW__ = 0;
                                                                                                                      invoke_viii(553,($238|0),($239|0),($946|0));
                                                                                                                      $956 = __THREW__; __THREW__ = 0;
                                                                                                                      $957 = $956&1;
                                                                                                                      if ($957) {
                                                                                                                       label = 412;
                                                                                                                       break L385;
                                                                                                                      }
                                                                                                                      __THREW__ = 0;
                                                                                                                      invoke_vii(554,($935|0),($238|0));
                                                                                                                      $958 = __THREW__; __THREW__ = 0;
                                                                                                                      $959 = $958&1;
                                                                                                                      if ($959) {
                                                                                                                       $1286 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                       $1287 = tempRet0;
                                                                                                                       $184 = $1286;
                                                                                                                       $185 = $1287;
                                                                                                                       __ZN3VarD2Ev($238);
                                                                                                                       break L385;
                                                                                                                      }
                                                                                                                      __ZN3VarD2Ev($238);
                                                                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239);
                                                                                                                      $960 = $181;
                                                                                                                      $38 = $241;
                                                                                                                      $39 = 11764;
                                                                                                                      $961 = $38;
                                                                                                                      $37 = $961;
                                                                                                                      $962 = $37;
                                                                                                                      $36 = $962;
                                                                                                                      $963 = $36;
                                                                                                                      $35 = $963;
                                                                                                                      $964 = $39;
                                                                                                                      $965 = $39;
                                                                                                                      __THREW__ = 0;
                                                                                                                      $966 = (invoke_ii(550,($965|0))|0);
                                                                                                                      $967 = __THREW__; __THREW__ = 0;
                                                                                                                      $968 = $967&1;
                                                                                                                      if ($968) {
                                                                                                                       label = 249;
                                                                                                                       break L4;
                                                                                                                      }
                                                                                                                      __THREW__ = 0;
                                                                                                                      invoke_viii(551,($961|0),($964|0),($966|0));
                                                                                                                      $969 = __THREW__; __THREW__ = 0;
                                                                                                                      $970 = $969&1;
                                                                                                                      if ($970) {
                                                                                                                       label = 249;
                                                                                                                       break L4;
                                                                                                                      }
                                                                                                                      __THREW__ = 0;
                                                                                                                      $971 = (invoke_ii(548,12)|0);
                                                                                                                      $972 = __THREW__; __THREW__ = 0;
                                                                                                                      $973 = $972&1;
                                                                                                                      L399: do {
                                                                                                                       if ($973) {
                                                                                                                        label = 418;
                                                                                                                       } else {
                                                                                                                        __THREW__ = 0;
                                                                                                                        $974 = (invoke_ii(548,16)|0);
                                                                                                                        $975 = __THREW__; __THREW__ = 0;
                                                                                                                        $976 = $975&1;
                                                                                                                        do {
                                                                                                                         if ($976) {
                                                                                                                          label = 419;
                                                                                                                         } else {
                                                                                                                          __THREW__ = 0;
                                                                                                                          invoke_vi(582,($974|0));
                                                                                                                          $977 = __THREW__; __THREW__ = 0;
                                                                                                                          $978 = $977&1;
                                                                                                                          if ($978) {
                                                                                                                           $1292 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                           $1293 = tempRet0;
                                                                                                                           $184 = $1292;
                                                                                                                           $185 = $1293;
                                                                                                                           __ZdlPv($974);
                                                                                                                           break;
                                                                                                                          }
                                                                                                                          __THREW__ = 0;
                                                                                                                          invoke_viii(547,($971|0),($974|0),(0|0));
                                                                                                                          $979 = __THREW__; __THREW__ = 0;
                                                                                                                          $980 = $979&1;
                                                                                                                          if ($980) {
                                                                                                                           label = 419;
                                                                                                                           break;
                                                                                                                          }
                                                                                                                          __THREW__ = 0;
                                                                                                                          invoke_viii(553,($240|0),($241|0),($971|0));
                                                                                                                          $981 = __THREW__; __THREW__ = 0;
                                                                                                                          $982 = $981&1;
                                                                                                                          if ($982) {
                                                                                                                           label = 418;
                                                                                                                           break L399;
                                                                                                                          }
                                                                                                                          __THREW__ = 0;
                                                                                                                          invoke_vii(554,($960|0),($240|0));
                                                                                                                          $983 = __THREW__; __THREW__ = 0;
                                                                                                                          $984 = $983&1;
                                                                                                                          if ($984) {
                                                                                                                           $1294 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                           $1295 = tempRet0;
                                                                                                                           $184 = $1294;
                                                                                                                           $185 = $1295;
                                                                                                                           __ZN3VarD2Ev($240);
                                                                                                                           break L399;
                                                                                                                          }
                                                                                                                          __ZN3VarD2Ev($240);
                                                                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($241);
                                                                                                                          $985 = $181;
                                                                                                                          $33 = $243;
                                                                                                                          $34 = 11766;
                                                                                                                          $986 = $33;
                                                                                                                          $32 = $986;
                                                                                                                          $987 = $32;
                                                                                                                          $31 = $987;
                                                                                                                          $988 = $31;
                                                                                                                          $30 = $988;
                                                                                                                          $989 = $34;
                                                                                                                          $990 = $34;
                                                                                                                          __THREW__ = 0;
                                                                                                                          $991 = (invoke_ii(550,($990|0))|0);
                                                                                                                          $992 = __THREW__; __THREW__ = 0;
                                                                                                                          $993 = $992&1;
                                                                                                                          if ($993) {
                                                                                                                           label = 249;
                                                                                                                           break L4;
                                                                                                                          }
                                                                                                                          __THREW__ = 0;
                                                                                                                          invoke_viii(551,($986|0),($989|0),($991|0));
                                                                                                                          $994 = __THREW__; __THREW__ = 0;
                                                                                                                          $995 = $994&1;
                                                                                                                          if ($995) {
                                                                                                                           label = 249;
                                                                                                                           break L4;
                                                                                                                          }
                                                                                                                          __THREW__ = 0;
                                                                                                                          $996 = (invoke_ii(548,12)|0);
                                                                                                                          $997 = __THREW__; __THREW__ = 0;
                                                                                                                          $998 = $997&1;
                                                                                                                          L413: do {
                                                                                                                           if ($998) {
                                                                                                                            label = 424;
                                                                                                                           } else {
                                                                                                                            __THREW__ = 0;
                                                                                                                            $999 = (invoke_ii(548,16)|0);
                                                                                                                            $1000 = __THREW__; __THREW__ = 0;
                                                                                                                            $1001 = $1000&1;
                                                                                                                            do {
                                                                                                                             if ($1001) {
                                                                                                                              label = 425;
                                                                                                                             } else {
                                                                                                                              __THREW__ = 0;
                                                                                                                              invoke_vi(583,($999|0));
                                                                                                                              $1002 = __THREW__; __THREW__ = 0;
                                                                                                                              $1003 = $1002&1;
                                                                                                                              if ($1003) {
                                                                                                                               $1300 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                               $1301 = tempRet0;
                                                                                                                               $184 = $1300;
                                                                                                                               $185 = $1301;
                                                                                                                               __ZdlPv($999);
                                                                                                                               break;
                                                                                                                              }
                                                                                                                              __THREW__ = 0;
                                                                                                                              invoke_viii(547,($996|0),($999|0),(0|0));
                                                                                                                              $1004 = __THREW__; __THREW__ = 0;
                                                                                                                              $1005 = $1004&1;
                                                                                                                              if ($1005) {
                                                                                                                               label = 425;
                                                                                                                               break;
                                                                                                                              }
                                                                                                                              __THREW__ = 0;
                                                                                                                              invoke_viii(553,($242|0),($243|0),($996|0));
                                                                                                                              $1006 = __THREW__; __THREW__ = 0;
                                                                                                                              $1007 = $1006&1;
                                                                                                                              if ($1007) {
                                                                                                                               label = 424;
                                                                                                                               break L413;
                                                                                                                              }
                                                                                                                              __THREW__ = 0;
                                                                                                                              invoke_vii(554,($985|0),($242|0));
                                                                                                                              $1008 = __THREW__; __THREW__ = 0;
                                                                                                                              $1009 = $1008&1;
                                                                                                                              if ($1009) {
                                                                                                                               $1302 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                               $1303 = tempRet0;
                                                                                                                               $184 = $1302;
                                                                                                                               $185 = $1303;
                                                                                                                               __ZN3VarD2Ev($242);
                                                                                                                               break L413;
                                                                                                                              }
                                                                                                                              __ZN3VarD2Ev($242);
                                                                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($243);
                                                                                                                              __THREW__ = 0;
                                                                                                                              invoke_vii(584,($result|0),(0|0));
                                                                                                                              $1010 = __THREW__; __THREW__ = 0;
                                                                                                                              $1011 = $1010&1;
                                                                                                                              if ($1011) {
                                                                                                                               label = 249;
                                                                                                                               break L4;
                                                                                                                              }
                                                                                                                              $1012 = ((($250)) + 4|0);
                                                                                                                              $1013 = HEAP32[$1012>>2]|0;
                                                                                                                              __THREW__ = 0;
                                                                                                                              $1014 = (invoke_ii(585,($1013|0))|0);
                                                                                                                              $1015 = __THREW__; __THREW__ = 0;
                                                                                                                              $1016 = $1015&1;
                                                                                                                              L426: do {
                                                                                                                               if ($1016) {
                                                                                                                                label = 430;
                                                                                                                               } else {
                                                                                                                                $1017 = HEAP32[$1014>>2]|0;
                                                                                                                                $root = $1017;
                                                                                                                                $29 = $i;
                                                                                                                                $1018 = $29;
                                                                                                                                HEAP32[$1018>>2] = 0;
                                                                                                                                $1019 = $root;
                                                                                                                                $1020 = ((($1019)) + 4|0);
                                                                                                                                $28 = $1020;
                                                                                                                                $1021 = $28;
                                                                                                                                $1022 = HEAP32[$1021>>2]|0;
                                                                                                                                $25 = $1021;
                                                                                                                                $26 = $1022;
                                                                                                                                $1023 = $26;
                                                                                                                                $22 = $24;
                                                                                                                                $23 = $1023;
                                                                                                                                $1024 = $22;
                                                                                                                                $1025 = $23;
                                                                                                                                HEAP32[$1024>>2] = $1025;
                                                                                                                                $1026 = HEAP32[$24>>2]|0;
                                                                                                                                HEAP32[$27>>2] = $1026;
                                                                                                                                $1027 = HEAP32[$27>>2]|0;
                                                                                                                                HEAP32[$244>>2] = $1027;
                                                                                                                                ;HEAP32[$i>>2]=HEAP32[$244>>2]|0;
                                                                                                                                while(1) {
                                                                                                                                 $1028 = $root;
                                                                                                                                 $1029 = ((($1028)) + 4|0);
                                                                                                                                 $21 = $1029;
                                                                                                                                 $1030 = $21;
                                                                                                                                 $1031 = ((($1030)) + 4|0);
                                                                                                                                 $1032 = HEAP32[$1031>>2]|0;
                                                                                                                                 $18 = $1030;
                                                                                                                                 $19 = $1032;
                                                                                                                                 $1033 = $19;
                                                                                                                                 $15 = $17;
                                                                                                                                 $16 = $1033;
                                                                                                                                 $1034 = $15;
                                                                                                                                 $1035 = $16;
                                                                                                                                 HEAP32[$1034>>2] = $1035;
                                                                                                                                 $1036 = HEAP32[$17>>2]|0;
                                                                                                                                 HEAP32[$20>>2] = $1036;
                                                                                                                                 $1037 = HEAP32[$20>>2]|0;
                                                                                                                                 HEAP32[$245>>2] = $1037;
                                                                                                                                 $13 = $i;
                                                                                                                                 $14 = $245;
                                                                                                                                 $1038 = $13;
                                                                                                                                 $1039 = $14;
                                                                                                                                 $11 = $1038;
                                                                                                                                 $12 = $1039;
                                                                                                                                 $1040 = $11;
                                                                                                                                 $10 = $1040;
                                                                                                                                 $1041 = $10;
                                                                                                                                 $1042 = HEAP32[$1041>>2]|0;
                                                                                                                                 $1043 = $12;
                                                                                                                                 $9 = $1043;
                                                                                                                                 $1044 = $9;
                                                                                                                                 $1045 = HEAP32[$1044>>2]|0;
                                                                                                                                 $1046 = ($1042|0)==($1045|0);
                                                                                                                                 $1047 = $1046 ^ 1;
                                                                                                                                 if (!($1047)) {
                                                                                                                                  break;
                                                                                                                                 }
                                                                                                                                 $8 = $i;
                                                                                                                                 $1048 = $8;
                                                                                                                                 $1049 = HEAP32[$1048>>2]|0;
                                                                                                                                 $1050 = HEAP32[$1049>>2]|0;
                                                                                                                                 $1051 = $181;
                                                                                                                                 __THREW__ = 0;
                                                                                                                                 $1052 = (invoke_iiii(586,($250|0),($1050|0),($1051|0))|0);
                                                                                                                                 $1053 = __THREW__; __THREW__ = 0;
                                                                                                                                 $1054 = $1053&1;
                                                                                                                                 if ($1054) {
                                                                                                                                  label = 430;
                                                                                                                                  break L426;
                                                                                                                                 }
                                                                                                                                 HEAP32[$246>>2] = $1052;
                                                                                                                                 __THREW__ = 0;
                                                                                                                                 (invoke_iii(587,($result|0),($246|0))|0);
                                                                                                                                 $1055 = __THREW__; __THREW__ = 0;
                                                                                                                                 $1056 = $1055&1;
                                                                                                                                 if ($1056) {
                                                                                                                                  label = 431;
                                                                                                                                  break;
                                                                                                                                 }
                                                                                                                                 __ZN5ValueD2Ev($246);
                                                                                                                                 $6 = $i;
                                                                                                                                 $7 = 0;
                                                                                                                                 $1057 = $6;
                                                                                                                                 ;HEAP32[$5>>2]=HEAP32[$1057>>2]|0;
                                                                                                                                 $4 = $1057;
                                                                                                                                 $1058 = $4;
                                                                                                                                 $1059 = HEAP32[$1058>>2]|0;
                                                                                                                                 $1060 = ((($1059)) + 12|0);
                                                                                                                                 HEAP32[$1058>>2] = $1060;
                                                                                                                                 $1061 = HEAP32[$5>>2]|0;
                                                                                                                                 HEAP32[$247>>2] = $1061;
                                                                                                                                }
                                                                                                                                if ((label|0) == 431) {
                                                                                                                                 $1306 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                                 $1307 = tempRet0;
                                                                                                                                 $184 = $1306;
                                                                                                                                 $185 = $1307;
                                                                                                                                 __ZN5ValueD2Ev($246);
                                                                                                                                 break;
                                                                                                                                }
                                                                                                                                $1308 = ((($250)) + 8|0);
                                                                                                                                $1309 = HEAP32[$1308>>2]|0;
                                                                                                                                __THREW__ = 0;
                                                                                                                                $1310 = (invoke_ii(588,($result|0))|0);
                                                                                                                                $1311 = __THREW__; __THREW__ = 0;
                                                                                                                                $1312 = $1311&1;
                                                                                                                                if ($1312) {
                                                                                                                                 label = 430;
                                                                                                                                 break;
                                                                                                                                }
                                                                                                                                $1313 = HEAP32[$1310>>2]|0;
                                                                                                                                $1314 = ((($1313)) + 8|0);
                                                                                                                                $1315 = HEAP32[$1314>>2]|0;
                                                                                                                                __THREW__ = 0;
                                                                                                                                invoke_vii($1315|0,($248|0),($1310|0));
                                                                                                                                $1316 = __THREW__; __THREW__ = 0;
                                                                                                                                $1317 = $1316&1;
                                                                                                                                if ($1317) {
                                                                                                                                 label = 430;
                                                                                                                                 break;
                                                                                                                                }
                                                                                                                                __THREW__ = 0;
                                                                                                                                $1318 = (invoke_iii(589,($1309|0),($248|0))|0);
                                                                                                                                $1319 = __THREW__; __THREW__ = 0;
                                                                                                                                $1320 = $1319&1;
                                                                                                                                do {
                                                                                                                                 if (!($1320)) {
                                                                                                                                  $2 = $1318;
                                                                                                                                  $3 = 590;
                                                                                                                                  $1321 = $2;
                                                                                                                                  $1322 = $3;
                                                                                                                                  __THREW__ = 0;
                                                                                                                                  (invoke_ii($1322|0,($1321|0))|0);
                                                                                                                                  $1323 = __THREW__; __THREW__ = 0;
                                                                                                                                  $1324 = $1323&1;
                                                                                                                                  if ($1324) {
                                                                                                                                   break;
                                                                                                                                  }
                                                                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($248);
                                                                                                                                  __ZN5ValueD2Ev($result);
                                                                                                                                  STACKTOP = sp;return;
                                                                                                                                 }
                                                                                                                                } while(0);
                                                                                                                                $1325 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                                $1326 = tempRet0;
                                                                                                                                $184 = $1325;
                                                                                                                                $185 = $1326;
                                                                                                                                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($248);
                                                                                                                               }
                                                                                                                              } while(0);
                                                                                                                              if ((label|0) == 430) {
                                                                                                                               $1304 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                               $1305 = tempRet0;
                                                                                                                               $184 = $1304;
                                                                                                                               $185 = $1305;
                                                                                                                              }
                                                                                                                              __ZN5ValueD2Ev($result);
                                                                                                                              break L4;
                                                                                                                             }
                                                                                                                            } while(0);
                                                                                                                            if ((label|0) == 425) {
                                                                                                                             $1298 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                             $1299 = tempRet0;
                                                                                                                             $184 = $1298;
                                                                                                                             $185 = $1299;
                                                                                                                            }
                                                                                                                            __ZdlPv($996);
                                                                                                                           }
                                                                                                                          } while(0);
                                                                                                                          if ((label|0) == 424) {
                                                                                                                           $1296 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                           $1297 = tempRet0;
                                                                                                                           $184 = $1296;
                                                                                                                           $185 = $1297;
                                                                                                                          }
                                                                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($243);
                                                                                                                          break L4;
                                                                                                                         }
                                                                                                                        } while(0);
                                                                                                                        if ((label|0) == 419) {
                                                                                                                         $1290 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                         $1291 = tempRet0;
                                                                                                                         $184 = $1290;
                                                                                                                         $185 = $1291;
                                                                                                                        }
                                                                                                                        __ZdlPv($971);
                                                                                                                       }
                                                                                                                      } while(0);
                                                                                                                      if ((label|0) == 418) {
                                                                                                                       $1288 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                       $1289 = tempRet0;
                                                                                                                       $184 = $1288;
                                                                                                                       $185 = $1289;
                                                                                                                      }
                                                                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($241);
                                                                                                                      break L4;
                                                                                                                     }
                                                                                                                    } while(0);
                                                                                                                    if ((label|0) == 413) {
                                                                                                                     $1282 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                     $1283 = tempRet0;
                                                                                                                     $184 = $1282;
                                                                                                                     $185 = $1283;
                                                                                                                    }
                                                                                                                    __ZdlPv($946);
                                                                                                                   }
                                                                                                                  } while(0);
                                                                                                                  if ((label|0) == 412) {
                                                                                                                   $1280 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                   $1281 = tempRet0;
                                                                                                                   $184 = $1280;
                                                                                                                   $185 = $1281;
                                                                                                                  }
                                                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($239);
                                                                                                                  break L4;
                                                                                                                 }
                                                                                                                } while(0);
                                                                                                                if ((label|0) == 407) {
                                                                                                                 $1274 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                                 $1275 = tempRet0;
                                                                                                                 $184 = $1274;
                                                                                                                 $185 = $1275;
                                                                                                                }
                                                                                                                __ZdlPv($921);
                                                                                                               }
                                                                                                              } while(0);
                                                                                                              if ((label|0) == 406) {
                                                                                                               $1272 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                               $1273 = tempRet0;
                                                                                                               $184 = $1272;
                                                                                                               $185 = $1273;
                                                                                                              }
                                                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($237);
                                                                                                              break L4;
                                                                                                             }
                                                                                                            } while(0);
                                                                                                            if ((label|0) == 401) {
                                                                                                             $1266 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                             $1267 = tempRet0;
                                                                                                             $184 = $1266;
                                                                                                             $185 = $1267;
                                                                                                            }
                                                                                                            __ZdlPv($896);
                                                                                                           }
                                                                                                          } while(0);
                                                                                                          if ((label|0) == 400) {
                                                                                                           $1264 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                           $1265 = tempRet0;
                                                                                                           $184 = $1264;
                                                                                                           $185 = $1265;
                                                                                                          }
                                                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($235);
                                                                                                          break L4;
                                                                                                         }
                                                                                                        } while(0);
                                                                                                        if ((label|0) == 395) {
                                                                                                         $1258 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                         $1259 = tempRet0;
                                                                                                         $184 = $1258;
                                                                                                         $185 = $1259;
                                                                                                        }
                                                                                                        __ZdlPv($871);
                                                                                                       }
                                                                                                      } while(0);
                                                                                                      if ((label|0) == 394) {
                                                                                                       $1256 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                       $1257 = tempRet0;
                                                                                                       $184 = $1256;
                                                                                                       $185 = $1257;
                                                                                                      }
                                                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($233);
                                                                                                      break L4;
                                                                                                     }
                                                                                                    } while(0);
                                                                                                    if ((label|0) == 389) {
                                                                                                     $1250 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                     $1251 = tempRet0;
                                                                                                     $184 = $1250;
                                                                                                     $185 = $1251;
                                                                                                    }
                                                                                                    __ZdlPv($846);
                                                                                                   }
                                                                                                  } while(0);
                                                                                                  if ((label|0) == 388) {
                                                                                                   $1248 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                   $1249 = tempRet0;
                                                                                                   $184 = $1248;
                                                                                                   $185 = $1249;
                                                                                                  }
                                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($231);
                                                                                                  break L4;
                                                                                                 }
                                                                                                } while(0);
                                                                                                if ((label|0) == 383) {
                                                                                                 $1242 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                                 $1243 = tempRet0;
                                                                                                 $184 = $1242;
                                                                                                 $185 = $1243;
                                                                                                }
                                                                                                __ZdlPv($821);
                                                                                               }
                                                                                              } while(0);
                                                                                              if ((label|0) == 382) {
                                                                                               $1240 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                               $1241 = tempRet0;
                                                                                               $184 = $1240;
                                                                                               $185 = $1241;
                                                                                              }
                                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
                                                                                              break L4;
                                                                                             }
                                                                                            } while(0);
                                                                                            if ((label|0) == 377) {
                                                                                             $1234 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                             $1235 = tempRet0;
                                                                                             $184 = $1234;
                                                                                             $185 = $1235;
                                                                                            }
                                                                                            __ZdlPv($796);
                                                                                           }
                                                                                          } while(0);
                                                                                          if ((label|0) == 376) {
                                                                                           $1232 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                           $1233 = tempRet0;
                                                                                           $184 = $1232;
                                                                                           $185 = $1233;
                                                                                          }
                                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($227);
                                                                                          break L4;
                                                                                         }
                                                                                        } while(0);
                                                                                        if ((label|0) == 371) {
                                                                                         $1226 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                         $1227 = tempRet0;
                                                                                         $184 = $1226;
                                                                                         $185 = $1227;
                                                                                        }
                                                                                        __ZdlPv($771);
                                                                                       }
                                                                                      } while(0);
                                                                                      if ((label|0) == 370) {
                                                                                       $1224 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                       $1225 = tempRet0;
                                                                                       $184 = $1224;
                                                                                       $185 = $1225;
                                                                                      }
                                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
                                                                                      break L4;
                                                                                     }
                                                                                    } while(0);
                                                                                    if ((label|0) == 365) {
                                                                                     $1218 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                     $1219 = tempRet0;
                                                                                     $184 = $1218;
                                                                                     $185 = $1219;
                                                                                    }
                                                                                    __ZdlPv($746);
                                                                                   }
                                                                                  } while(0);
                                                                                  if ((label|0) == 364) {
                                                                                   $1216 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                   $1217 = tempRet0;
                                                                                   $184 = $1216;
                                                                                   $185 = $1217;
                                                                                  }
                                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($223);
                                                                                  break L4;
                                                                                 }
                                                                                } while(0);
                                                                                if ((label|0) == 359) {
                                                                                 $1210 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                                 $1211 = tempRet0;
                                                                                 $184 = $1210;
                                                                                 $185 = $1211;
                                                                                }
                                                                                __ZdlPv($719);
                                                                               }
                                                                              } while(0);
                                                                              if ((label|0) == 358) {
                                                                               $1208 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                               $1209 = tempRet0;
                                                                               $184 = $1208;
                                                                               $185 = $1209;
                                                                              }
                                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
                                                                              break L4;
                                                                             }
                                                                            } while(0);
                                                                            if ((label|0) == 353) {
                                                                             $1202 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                             $1203 = tempRet0;
                                                                             $184 = $1202;
                                                                             $185 = $1203;
                                                                            }
                                                                            __ZdlPv($690);
                                                                           }
                                                                          } while(0);
                                                                          if ((label|0) == 352) {
                                                                           $1200 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                           $1201 = tempRet0;
                                                                           $184 = $1200;
                                                                           $185 = $1201;
                                                                          }
                                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
                                                                          break L4;
                                                                         }
                                                                        } while(0);
                                                                        if ((label|0) == 347) {
                                                                         $1194 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                         $1195 = tempRet0;
                                                                         $184 = $1194;
                                                                         $185 = $1195;
                                                                        }
                                                                        __ZdlPv($665);
                                                                       }
                                                                      } while(0);
                                                                      if ((label|0) == 346) {
                                                                       $1192 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                       $1193 = tempRet0;
                                                                       $184 = $1192;
                                                                       $185 = $1193;
                                                                      }
                                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
                                                                      break L4;
                                                                     }
                                                                    } while(0);
                                                                    if ((label|0) == 341) {
                                                                     $1186 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                     $1187 = tempRet0;
                                                                     $184 = $1186;
                                                                     $185 = $1187;
                                                                    }
                                                                    __ZdlPv($640);
                                                                   }
                                                                  } while(0);
                                                                  if ((label|0) == 340) {
                                                                   $1184 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                   $1185 = tempRet0;
                                                                   $184 = $1184;
                                                                   $185 = $1185;
                                                                  }
                                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($215);
                                                                  break L4;
                                                                 }
                                                                } while(0);
                                                                if ((label|0) == 335) {
                                                                 $1178 = ___cxa_find_matching_catch_3(80|0)|0;
                                                                 $1179 = tempRet0;
                                                                 $184 = $1178;
                                                                 $185 = $1179;
                                                                }
                                                                __ZdlPv($615);
                                                               }
                                                              } while(0);
                                                              if ((label|0) == 334) {
                                                               $1176 = ___cxa_find_matching_catch_3(80|0)|0;
                                                               $1177 = tempRet0;
                                                               $184 = $1176;
                                                               $185 = $1177;
                                                              }
                                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($213);
                                                              break L4;
                                                             }
                                                            } while(0);
                                                            if ((label|0) == 329) {
                                                             $1170 = ___cxa_find_matching_catch_3(80|0)|0;
                                                             $1171 = tempRet0;
                                                             $184 = $1170;
                                                             $185 = $1171;
                                                            }
                                                            __ZdlPv($590);
                                                           }
                                                          } while(0);
                                                          if ((label|0) == 328) {
                                                           $1168 = ___cxa_find_matching_catch_3(80|0)|0;
                                                           $1169 = tempRet0;
                                                           $184 = $1168;
                                                           $185 = $1169;
                                                          }
                                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($211);
                                                          break L4;
                                                         }
                                                        } while(0);
                                                        if ((label|0) == 323) {
                                                         $1162 = ___cxa_find_matching_catch_3(80|0)|0;
                                                         $1163 = tempRet0;
                                                         $184 = $1162;
                                                         $185 = $1163;
                                                        }
                                                        __ZdlPv($565);
                                                       }
                                                      } while(0);
                                                      if ((label|0) == 322) {
                                                       $1160 = ___cxa_find_matching_catch_3(80|0)|0;
                                                       $1161 = tempRet0;
                                                       $184 = $1160;
                                                       $185 = $1161;
                                                      }
                                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($209);
                                                      break L4;
                                                     }
                                                    } while(0);
                                                    if ((label|0) == 317) {
                                                     $1154 = ___cxa_find_matching_catch_3(80|0)|0;
                                                     $1155 = tempRet0;
                                                     $184 = $1154;
                                                     $185 = $1155;
                                                    }
                                                    __ZdlPv($540);
                                                   }
                                                  } while(0);
                                                  if ((label|0) == 316) {
                                                   $1152 = ___cxa_find_matching_catch_3(80|0)|0;
                                                   $1153 = tempRet0;
                                                   $184 = $1152;
                                                   $185 = $1153;
                                                  }
                                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($207);
                                                  break L4;
                                                 }
                                                } while(0);
                                                if ((label|0) == 311) {
                                                 $1146 = ___cxa_find_matching_catch_3(80|0)|0;
                                                 $1147 = tempRet0;
                                                 $184 = $1146;
                                                 $185 = $1147;
                                                }
                                                __ZdlPv($515);
                                               }
                                              } while(0);
                                              if ((label|0) == 310) {
                                               $1144 = ___cxa_find_matching_catch_3(80|0)|0;
                                               $1145 = tempRet0;
                                               $184 = $1144;
                                               $185 = $1145;
                                              }
                                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($205);
                                              break L4;
                                             }
                                            } while(0);
                                            if ((label|0) == 305) {
                                             $1138 = ___cxa_find_matching_catch_3(80|0)|0;
                                             $1139 = tempRet0;
                                             $184 = $1138;
                                             $185 = $1139;
                                            }
                                            __ZdlPv($490);
                                           }
                                          } while(0);
                                          if ((label|0) == 304) {
                                           $1136 = ___cxa_find_matching_catch_3(80|0)|0;
                                           $1137 = tempRet0;
                                           $184 = $1136;
                                           $185 = $1137;
                                          }
                                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($203);
                                          break L4;
                                         }
                                        } while(0);
                                        if ((label|0) == 299) {
                                         $1130 = ___cxa_find_matching_catch_3(80|0)|0;
                                         $1131 = tempRet0;
                                         $184 = $1130;
                                         $185 = $1131;
                                        }
                                        __ZdlPv($465);
                                       }
                                      } while(0);
                                      if ((label|0) == 298) {
                                       $1128 = ___cxa_find_matching_catch_3(80|0)|0;
                                       $1129 = tempRet0;
                                       $184 = $1128;
                                       $185 = $1129;
                                      }
                                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($201);
                                      break L4;
                                     }
                                    } while(0);
                                    if ((label|0) == 293) {
                                     $1122 = ___cxa_find_matching_catch_3(80|0)|0;
                                     $1123 = tempRet0;
                                     $184 = $1122;
                                     $185 = $1123;
                                    }
                                    __ZdlPv($440);
                                   }
                                  } while(0);
                                  if ((label|0) == 292) {
                                   $1120 = ___cxa_find_matching_catch_3(80|0)|0;
                                   $1121 = tempRet0;
                                   $184 = $1120;
                                   $185 = $1121;
                                  }
                                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($199);
                                  break L4;
                                 }
                                } while(0);
                                if ((label|0) == 287) {
                                 $1114 = ___cxa_find_matching_catch_3(80|0)|0;
                                 $1115 = tempRet0;
                                 $184 = $1114;
                                 $185 = $1115;
                                }
                                __ZdlPv($415);
                               }
                              } while(0);
                              if ((label|0) == 286) {
                               $1112 = ___cxa_find_matching_catch_3(80|0)|0;
                               $1113 = tempRet0;
                               $184 = $1112;
                               $185 = $1113;
                              }
                              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($197);
                              break L4;
                             }
                            } while(0);
                            if ((label|0) == 281) {
                             $1106 = ___cxa_find_matching_catch_3(80|0)|0;
                             $1107 = tempRet0;
                             $184 = $1106;
                             $185 = $1107;
                            }
                            __ZdlPv($390);
                           }
                          } while(0);
                          if ((label|0) == 280) {
                           $1104 = ___cxa_find_matching_catch_3(80|0)|0;
                           $1105 = tempRet0;
                           $184 = $1104;
                           $185 = $1105;
                          }
                          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($195);
                          break L4;
                         }
                        } while(0);
                        if ((label|0) == 275) {
                         $1098 = ___cxa_find_matching_catch_3(80|0)|0;
                         $1099 = tempRet0;
                         $184 = $1098;
                         $185 = $1099;
                        }
                        __ZdlPv($365);
                       }
                      } while(0);
                      if ((label|0) == 274) {
                       $1096 = ___cxa_find_matching_catch_3(80|0)|0;
                       $1097 = tempRet0;
                       $184 = $1096;
                       $185 = $1097;
                      }
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
                      break L4;
                     }
                    } while(0);
                    if ((label|0) == 269) {
                     $1090 = ___cxa_find_matching_catch_3(80|0)|0;
                     $1091 = tempRet0;
                     $184 = $1090;
                     $185 = $1091;
                    }
                    __ZdlPv($340);
                   }
                  } while(0);
                  if ((label|0) == 268) {
                   $1088 = ___cxa_find_matching_catch_3(80|0)|0;
                   $1089 = tempRet0;
                   $184 = $1088;
                   $185 = $1089;
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($191);
                  break L4;
                 }
                } while(0);
                if ((label|0) == 263) {
                 $1082 = ___cxa_find_matching_catch_3(80|0)|0;
                 $1083 = tempRet0;
                 $184 = $1082;
                 $185 = $1083;
                }
                __ZdlPv($315);
               }
              } while(0);
              if ((label|0) == 262) {
               $1080 = ___cxa_find_matching_catch_3(80|0)|0;
               $1081 = tempRet0;
               $184 = $1080;
               $185 = $1081;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
              break L4;
             }
            }
           } while(0);
           if ((label|0) == 257) {
            $1074 = ___cxa_find_matching_catch_3(80|0)|0;
            $1075 = tempRet0;
            $184 = $1074;
            $185 = $1075;
           }
           __ZdlPv($290);
          }
         } while(0);
         if ((label|0) == 256) {
          $1072 = ___cxa_find_matching_catch_3(80|0)|0;
          $1073 = tempRet0;
          $184 = $1072;
          $185 = $1073;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($187);
         break L4;
        }
       }
      } while(0);
      if ((label|0) == 251) {
       $1066 = ___cxa_find_matching_catch_3(80|0)|0;
       $1067 = tempRet0;
       $184 = $1066;
       $185 = $1067;
      }
      __ZdlPv($265);
     }
    } while(0);
    if ((label|0) == 250) {
     $1064 = ___cxa_find_matching_catch_3(80|0)|0;
     $1065 = tempRet0;
     $184 = $1064;
     $185 = $1065;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
   }
  }
 } while(0);
 if ((label|0) == 249) {
  $1062 = ___cxa_find_matching_catch_3(80|0)|0;
  $1063 = tempRet0;
  $184 = $1062;
  $185 = $1063;
 }
 $1327 = $185;
 $1328 = (_llvm_eh_typeid_for((80|0))|0);
 $1329 = ($1327|0)==($1328|0);
 if (!($1329)) {
  $1354 = $184;
  $1355 = $185;
  ___resumeException($1354|0);
  // unreachable;
 }
 $1330 = $184;
 $1331 = (___cxa_begin_catch(($1330|0))|0);
 $m = $1331;
 $1332 = $m;
 $1333 = ((($250)) + 20|0);
 __THREW__ = 0;
 invoke_vii(591,($1332|0),($1333|0));
 $1334 = __THREW__; __THREW__ = 0;
 $1335 = $1334&1;
 if ($1335) {
  label = 446;
 } else {
  $1336 = ((($250)) + 8|0);
  $1337 = HEAP32[$1336>>2]|0;
  $1338 = $m;
  __THREW__ = 0;
  invoke_vii(592,($249|0),($1338|0));
  $1339 = __THREW__; __THREW__ = 0;
  $1340 = $1339&1;
  if ($1340) {
   label = 446;
  } else {
   __THREW__ = 0;
   $1341 = (invoke_iii(589,($1337|0),($249|0))|0);
   $1342 = __THREW__; __THREW__ = 0;
   $1343 = $1342&1;
   if (!($1343)) {
    $0 = $1341;
    $1 = 590;
    $1344 = $0;
    $1345 = $1;
    __THREW__ = 0;
    (invoke_ii($1345|0,($1344|0))|0);
    $1346 = __THREW__; __THREW__ = 0;
    $1347 = $1346&1;
    if (!($1347)) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($249);
     ___cxa_end_catch();
     STACKTOP = sp;return;
    }
   }
   $1350 = ___cxa_find_matching_catch_2()|0;
   $1351 = tempRet0;
   $184 = $1350;
   $185 = $1351;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($249);
  }
 }
 if ((label|0) == 446) {
  $1348 = ___cxa_find_matching_catch_2()|0;
  $1349 = tempRet0;
  $184 = $1348;
  $185 = $1349;
 }
 __THREW__ = 0;
 invoke_v(593);
 $1352 = __THREW__; __THREW__ = 0;
 $1353 = $1352&1;
 if ($1353) {
  $1356 = ___cxa_find_matching_catch_3(0|0)|0;
  $1357 = tempRet0;
  ___clang_call_terminate($1356);
  // unreachable;
 } else {
  $1354 = $184;
  $1355 = $185;
  ___resumeException($1354|0);
  // unreachable;
 }
}
function __ZNK10LispString7isValidEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2&1;
 STACKTOP = sp;return ($3|0);
}
function __ZN11Func__Plus_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,2);
 $2 = 3296;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN12Func__Minus_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,2);
 $2 = 2936;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN10Func__Mul_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,2);
 $2 = 2612;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN9Func_setqC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,1,2,0);
 $3 = 3176;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN9Func_progC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,1,-1,0);
 $3 = 3032;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN10Func_quoteC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,1,1,0);
 $2 = 3248;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN9Func_execC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,0,-1,1);
 $3 = 3056;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN10Func_whileC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,1,2,0);
 $3 = 2864;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN11Func_returnC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,1,0);
 $2 = 2720;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN13Func_continueC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,0);
 $2 = 3200;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN7Func_ifC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,1,-1,2);
 $3 = 3128;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN10Func__Equ_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,2);
 $2 = 2528;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN13Func__NotEqu_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,2);
 $2 = 2744;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN8Func_cdrC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,1,0);
 $2 = 3152;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN8Func_carC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,1,0);
 $2 = 2588;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN9Func_sizeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,1,0);
 $2 = 2768;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN8Func_askC2EPNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPNS0_13basic_istreamIcS3_EE($this,$out,$in) {
 $this = $this|0;
 $out = $out|0;
 $in = $in|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $out;
 $2 = $in;
 $3 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($3,0,-1,0);
 $4 = 2636;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 16|0);
 $6 = $2;
 HEAP32[$5>>2] = $6;
 $7 = ((($3)) + 20|0);
 $8 = $1;
 HEAP32[$7>>2] = $8;
 STACKTOP = sp;return;
}
function __ZN10Func_printC2EPNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEE($this,$out) {
 $this = $this|0;
 $out = $out|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $out;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,0,-1,1);
 $3 = 2888;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN9Func_funcC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,1,2,0);
 $3 = 3080;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN10Func_defunC2EP12LispExecuter($this,$executer) {
 $this = $this|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $executer;
 $2 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($2,1,3,0);
 $3 = 2792;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 16|0);
 $5 = $1;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN10Func_parseC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,1,0);
 $2 = 3008;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN11Func__Less_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 2696;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN14Func__Greater_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 3272;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN17Func__GreaterEqu_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 2960;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN14Func__LessEqu_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 2840;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN10Func__And_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 2816;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN9Func__Or_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 3224;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN10Func__Not_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,1,0);
 $2 = 2912;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN12Func__Power_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,2,0);
 $2 = 3104;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN10LispString7getRootEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN12LispExecuter15functionHandlerEPK4DataP6Memory($this,$data,$stack) {
 $this = $this|0;
 $data = $data|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$i$i$i = 0, $__a$i$i$i2 = 0, $__annotator$i = 0, $__annotator$i7 = 0, $__i$i$i$i = 0, $__i$i$i$i3 = 0, $arguments = 0, $func = 0, $funcId = 0, $i = 0, $i1 = 0, $listData = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 784|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 768|0;
 $13 = sp + 8|0;
 $18 = sp + 781|0;
 $__annotator$i7 = sp + 780|0;
 $39 = sp + 624|0;
 $42 = sp + 612|0;
 $46 = sp + 596|0;
 $51 = sp + 576|0;
 $54 = sp + 564|0;
 $58 = sp + 548|0;
 $70 = sp;
 $75 = sp + 779|0;
 $__annotator$i = sp + 778|0;
 $105 = sp + 360|0;
 $108 = sp + 348|0;
 $121 = sp + 288|0;
 $126 = sp + 268|0;
 $129 = sp + 256|0;
 $136 = sp + 228|0;
 $139 = sp + 216|0;
 $149 = sp + 176|0;
 $funcId = sp + 156|0;
 $arguments = sp + 132|0;
 $i = sp + 128|0;
 $155 = sp + 124|0;
 $156 = sp + 120|0;
 $157 = sp + 116|0;
 $158 = sp + 112|0;
 $159 = sp + 108|0;
 $i1 = sp + 104|0;
 $160 = sp + 100|0;
 $161 = sp + 96|0;
 $162 = sp + 92|0;
 $163 = sp + 88|0;
 $164 = sp + 84|0;
 $165 = sp + 777|0;
 $166 = sp + 80|0;
 $167 = sp + 76|0;
 $168 = sp + 64|0;
 $169 = sp + 52|0;
 $170 = sp + 40|0;
 $171 = sp + 776|0;
 $172 = sp + 24|0;
 $173 = sp + 12|0;
 $150 = $this;
 $151 = $data;
 $152 = $stack;
 $174 = $150;
 $175 = $151;
 $176 = HEAP32[$175>>2]|0;
 $177 = ((($176)) + 12|0);
 $178 = HEAP32[$177>>2]|0;
 $179 = (FUNCTION_TABLE_ii[$178 & 1023]($175)|0);
 $180 = ($179|0)==(1);
 if ($180) {
  $181 = $151;
  $listData = $181;
  $182 = $listData;
  $183 = ((($182)) + 4|0);
  $147 = $183;
  $148 = 0;
  $184 = $147;
  $185 = $148;
  $186 = HEAP32[$184>>2]|0;
  $187 = (($186) + (($185*12)|0)|0);
  $188 = HEAP32[$187>>2]|0;
  $189 = HEAP32[$188>>2]|0;
  $190 = ((($189)) + 12|0);
  $191 = HEAP32[$190>>2]|0;
  $192 = (FUNCTION_TABLE_ii[$191 & 1023]($188)|0);
  $193 = $192 & 3;
  $194 = ($193|0)!=(0);
  if ($194) {
   $195 = ((($174)) + 20|0);
   $196 = $listData;
   $197 = ((($196)) + 4|0);
   $145 = $197;
   $146 = 0;
   $198 = $145;
   $199 = $146;
   $200 = HEAP32[$198>>2]|0;
   $201 = (($200) + (($199*12)|0)|0);
   $202 = (__ZNK8LispNode6getPosEv($201)|0);
   ;HEAP32[$195>>2]=HEAP32[$202>>2]|0;HEAP32[$195+4>>2]=HEAP32[$202+4>>2]|0;
   $203 = $listData;
   $204 = ((($203)) + 4|0);
   $143 = $204;
   $144 = 0;
   $205 = $143;
   $206 = $144;
   $207 = HEAP32[$205>>2]|0;
   $208 = (($207) + (($206*12)|0)|0);
   $209 = HEAP32[$208>>2]|0;
   $210 = $152;
   $211 = (__ZN12LispExecuter15functionHandlerEPK4DataP6Memory($174,$209,$210)|0);
   HEAP32[$funcId>>2] = $211;
   __THREW__ = 0;
   $212 = (invoke_ii(588,($funcId|0))|0);
   $213 = __THREW__; __THREW__ = 0;
   $214 = $213&1;
   do {
    if ($214) {
     label = 10;
    } else {
     $215 = HEAP32[$212>>2]|0;
     $216 = ((($215)) + 12|0);
     $217 = HEAP32[$216>>2]|0;
     __THREW__ = 0;
     $218 = (invoke_ii($217|0,($212|0))|0);
     $219 = __THREW__; __THREW__ = 0;
     $220 = $219&1;
     if ($220) {
      label = 10;
     } else {
      $221 = ($218|0)==(128);
      if (!($221)) {
       $489 = (___cxa_allocate_exception(24)|0);
       $$expand_i1_val5 = 1;
       HEAP8[$171>>0] = $$expand_i1_val5;
       __THREW__ = 0;
       $490 = (invoke_ii(588,($funcId|0))|0);
       $491 = __THREW__; __THREW__ = 0;
       $492 = $491&1;
       if ($492) {
        label = 66;
       } else {
        $493 = HEAP32[$490>>2]|0;
        $494 = ((($493)) + 8|0);
        $495 = HEAP32[$494>>2]|0;
        __THREW__ = 0;
        invoke_vii($495|0,($170|0),($490|0));
        $496 = __THREW__; __THREW__ = 0;
        $497 = $496&1;
        if ($497) {
         label = 66;
        } else {
         $101 = 13552;
         $102 = $170;
         $498 = $102;
         $499 = $101;
         __THREW__ = 0;
         $500 = (invoke_iiii(600,($498|0),0,($499|0))|0);
         $501 = __THREW__; __THREW__ = 0;
         $502 = $501&1;
         if ($502) {
          $543 = ___cxa_find_matching_catch_2()|0;
          $544 = tempRet0;
          $153 = $543;
          $154 = $544;
         } else {
          $100 = $500;
          $503 = $100;
          $98 = $169;
          $99 = $503;
          $504 = $98;
          $505 = $99;
          $97 = $505;
          $506 = $97;
          ;HEAP32[$504>>2]=HEAP32[$506>>2]|0;HEAP32[$504+4>>2]=HEAP32[$506+4>>2]|0;HEAP32[$504+8>>2]=HEAP32[$506+8>>2]|0;
          $507 = $99;
          $96 = $507;
          $508 = $96;
          $95 = $508;
          $509 = $95;
          $94 = $509;
          $510 = $94;
          $__a$i$i$i2 = $510;
          $__i$i$i$i3 = 0;
          while(1) {
           $511 = $__i$i$i$i3;
           $512 = ($511>>>0)<(3);
           if (!($512)) {
            break;
           }
           $513 = $__i$i$i$i3;
           $514 = $__a$i$i$i2;
           $515 = (($514) + ($513<<2)|0);
           HEAP32[$515>>2] = 0;
           $516 = $__i$i$i$i3;
           $517 = (($516) + 1)|0;
           $__i$i$i$i3 = $517;
          }
          $117 = $169;
          $118 = 11768;
          $518 = $117;
          $519 = $118;
          __THREW__ = 0;
          $520 = (invoke_iii(542,($518|0),($519|0))|0);
          $521 = __THREW__; __THREW__ = 0;
          $522 = $521&1;
          if ($522) {
           $545 = ___cxa_find_matching_catch_2()|0;
           $546 = tempRet0;
           $153 = $545;
           $154 = $546;
          } else {
           $116 = $520;
           $523 = $116;
           $114 = $168;
           $115 = $523;
           $524 = $114;
           $525 = $115;
           $113 = $525;
           $526 = $113;
           ;HEAP32[$524>>2]=HEAP32[$526>>2]|0;HEAP32[$524+4>>2]=HEAP32[$526+4>>2]|0;HEAP32[$524+8>>2]=HEAP32[$526+8>>2]|0;
           $527 = $115;
           $112 = $527;
           $528 = $112;
           $111 = $528;
           $529 = $111;
           $110 = $529;
           $530 = $110;
           $__a$i$i$i = $530;
           $__i$i$i$i = 0;
           while(1) {
            $531 = $__i$i$i$i;
            $532 = ($531>>>0)<(3);
            if (!($532)) {
             break;
            }
            $533 = $__i$i$i$i;
            $534 = $__a$i$i$i;
            $535 = (($534) + ($533<<2)|0);
            HEAP32[$535>>2] = 0;
            $536 = $__i$i$i$i;
            $537 = (($536) + 1)|0;
            $__i$i$i$i = $537;
           }
           __THREW__ = 0;
           invoke_viii(601,($489|0),($168|0),0);
           $538 = __THREW__; __THREW__ = 0;
           $539 = $538&1;
           if (!($539)) {
            $$expand_i1_val7 = 0;
            HEAP8[$171>>0] = $$expand_i1_val7;
            __THREW__ = 0;
            invoke_viii(602,($489|0),(80|0),(603|0));
            $540 = __THREW__; __THREW__ = 0;
           }
           $547 = ___cxa_find_matching_catch_2()|0;
           $548 = tempRet0;
           $153 = $547;
           $154 = $548;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($169);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170);
        }
       }
       if ((label|0) == 66) {
        $541 = ___cxa_find_matching_catch_2()|0;
        $542 = tempRet0;
        $153 = $541;
        $154 = $542;
       }
       $$pre_trunc9 = HEAP8[$171>>0]|0;
       $549 = $$pre_trunc9&1;
       if (!($549)) {
        break;
       }
       ___cxa_free_exception(($489|0));
       break;
      }
      __THREW__ = 0;
      $222 = (invoke_ii(588,($funcId|0))|0);
      $223 = __THREW__; __THREW__ = 0;
      $224 = $223&1;
      if ($224) {
       label = 10;
      } else {
       $func = $222;
       $142 = $arguments;
       $225 = $142;
       $141 = $225;
       $226 = $141;
       $140 = $226;
       HEAP32[$226>>2] = 0;
       $227 = ((($226)) + 4|0);
       HEAP32[$227>>2] = 0;
       $228 = ((($226)) + 8|0);
       $138 = $228;
       HEAP32[$139>>2] = 0;
       $229 = $138;
       $137 = $139;
       $230 = $137;
       $231 = HEAP32[$230>>2]|0;
       $135 = $229;
       HEAP32[$136>>2] = $231;
       $232 = $135;
       $134 = $232;
       $133 = $136;
       $233 = $133;
       $234 = HEAP32[$233>>2]|0;
       HEAP32[$232>>2] = $234;
       $235 = $listData;
       $236 = ((($235)) + 4|0);
       $132 = $236;
       $237 = $132;
       $238 = ((($237)) + 4|0);
       $239 = HEAP32[$238>>2]|0;
       $240 = HEAP32[$237>>2]|0;
       $241 = $239;
       $242 = $240;
       $243 = (($241) - ($242))|0;
       $244 = (($243|0) / 12)&-1;
       $245 = ($244>>>0)>(1);
       L37: do {
        if ($245) {
         $246 = $func;
         __THREW__ = 0;
         $247 = (invoke_ii(594,($246|0))|0);
         $248 = __THREW__; __THREW__ = 0;
         $249 = $248&1;
         if ($249) {
          label = 11;
         } else {
          $250 = ((($247)) + 12|0);
          $251 = HEAP32[$250>>2]|0;
          switch ($251|0) {
          case 0: case 2:  {
           break;
          }
          case 1: case 3: case 4:  {
           $56 = $i1;
           $357 = $56;
           HEAP32[$357>>2] = 0;
           $358 = $listData;
           $359 = ((($358)) + 4|0);
           $55 = $359;
           $360 = $55;
           $361 = HEAP32[$360>>2]|0;
           $52 = $360;
           $53 = $361;
           $362 = $53;
           $49 = $51;
           $50 = $362;
           $363 = $49;
           $364 = $50;
           HEAP32[$363>>2] = $364;
           $365 = HEAP32[$51>>2]|0;
           HEAP32[$54>>2] = $365;
           $366 = HEAP32[$54>>2]|0;
           HEAP32[$161>>2] = $366;
           $47 = $161;
           $48 = 1;
           $367 = $47;
           ;HEAP32[$46>>2]=HEAP32[$367>>2]|0;
           $368 = $48;
           $44 = $46;
           $45 = $368;
           $369 = $44;
           $370 = $45;
           $371 = HEAP32[$369>>2]|0;
           $372 = (($371) + (($370*12)|0)|0);
           HEAP32[$369>>2] = $372;
           $373 = HEAP32[$46>>2]|0;
           HEAP32[$160>>2] = $373;
           ;HEAP32[$i1>>2]=HEAP32[$160>>2]|0;
           while(1) {
            $374 = $listData;
            $375 = ((($374)) + 4|0);
            $43 = $375;
            $376 = $43;
            $377 = ((($376)) + 4|0);
            $378 = HEAP32[$377>>2]|0;
            $40 = $376;
            $41 = $378;
            $379 = $41;
            $37 = $39;
            $38 = $379;
            $380 = $37;
            $381 = $38;
            HEAP32[$380>>2] = $381;
            $382 = HEAP32[$39>>2]|0;
            HEAP32[$42>>2] = $382;
            $383 = HEAP32[$42>>2]|0;
            HEAP32[$162>>2] = $383;
            $35 = $i1;
            $36 = $162;
            $384 = $35;
            $385 = $36;
            $33 = $384;
            $34 = $385;
            $386 = $33;
            $32 = $386;
            $387 = $32;
            $388 = HEAP32[$387>>2]|0;
            $389 = $34;
            $31 = $389;
            $390 = $31;
            $391 = HEAP32[$390>>2]|0;
            $392 = ($388|0)==($391|0);
            $393 = $392 ^ 1;
            if (!($393)) {
             label = 33;
             break L37;
            }
            $394 = ((($174)) + 20|0);
            $30 = $i1;
            $395 = $30;
            $396 = HEAP32[$395>>2]|0;
            __THREW__ = 0;
            $397 = (invoke_ii(595,($396|0))|0);
            $398 = __THREW__; __THREW__ = 0;
            $399 = $398&1;
            if ($399) {
             label = 11;
             break L37;
            }
            ;HEAP32[$394>>2]=HEAP32[$397>>2]|0;HEAP32[$394+4>>2]=HEAP32[$397+4>>2]|0;
            $29 = $i1;
            $400 = $29;
            $401 = HEAP32[$400>>2]|0;
            $402 = HEAP32[$401>>2]|0;
            __THREW__ = 0;
            invoke_vii(584,($163|0),($402|0));
            $403 = __THREW__; __THREW__ = 0;
            $404 = $403&1;
            if ($404) {
             label = 11;
             break L37;
            }
            $27 = $arguments;
            $28 = $163;
            $405 = $27;
            $406 = ((($405)) + 4|0);
            $407 = HEAP32[$406>>2]|0;
            $26 = $405;
            $408 = $26;
            $409 = ((($408)) + 8|0);
            $25 = $409;
            $410 = $25;
            $24 = $410;
            $411 = $24;
            $412 = HEAP32[$411>>2]|0;
            $413 = ($407>>>0)<($412>>>0);
            if ($413) {
             __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i7,$405,1);
             $23 = $405;
             $414 = $23;
             $415 = ((($414)) + 8|0);
             $22 = $415;
             $416 = $22;
             $21 = $416;
             $417 = $21;
             $418 = ((($405)) + 4|0);
             $419 = HEAP32[$418>>2]|0;
             $19 = $419;
             $420 = $19;
             $421 = $28;
             $4 = $421;
             $422 = $4;
             $15 = $417;
             $16 = $420;
             $17 = $422;
             $423 = $15;
             $424 = $16;
             $425 = $17;
             $14 = $425;
             $426 = $14;
             ;HEAP8[$13>>0]=HEAP8[$18>>0]|0;
             $10 = $423;
             $11 = $424;
             $12 = $426;
             $427 = $10;
             $428 = $11;
             $429 = $12;
             $9 = $429;
             $430 = $9;
             $6 = $427;
             $7 = $428;
             $8 = $430;
             $431 = $7;
             $432 = $8;
             $5 = $432;
             $433 = $5;
             __THREW__ = 0;
             invoke_vii(596,($431|0),($433|0));
             $434 = __THREW__; __THREW__ = 0;
             $435 = $434&1;
             if ($435) {
              break;
             }
             __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i7);
             $436 = ((($405)) + 4|0);
             $437 = HEAP32[$436>>2]|0;
             $438 = ((($437)) + 4|0);
             HEAP32[$436>>2] = $438;
            } else {
             $439 = $28;
             $20 = $439;
             $440 = $20;
             __THREW__ = 0;
             invoke_vii(597,($405|0),($440|0));
             $441 = __THREW__; __THREW__ = 0;
             $442 = $441&1;
             if ($442) {
              break;
             }
            }
            __ZN5ValueD2Ev($163);
            $2 = $i1;
            $3 = 0;
            $443 = $2;
            ;HEAP32[$1>>2]=HEAP32[$443>>2]|0;
            $0 = $443;
            $444 = $0;
            $445 = HEAP32[$444>>2]|0;
            $446 = ((($445)) + 12|0);
            HEAP32[$444>>2] = $446;
            $447 = HEAP32[$1>>2]|0;
            HEAP32[$164>>2] = $447;
           }
           $448 = ___cxa_find_matching_catch_2()|0;
           $449 = tempRet0;
           $153 = $448;
           $154 = $449;
           __ZN5ValueD2Ev($163);
           break L37;
           break;
          }
          default: {
           label = 33;
           break L37;
          }
          }
          $131 = $i;
          $256 = $131;
          HEAP32[$256>>2] = 0;
          $257 = $listData;
          $258 = ((($257)) + 4|0);
          $130 = $258;
          $259 = $130;
          $260 = HEAP32[$259>>2]|0;
          $127 = $259;
          $128 = $260;
          $261 = $128;
          $124 = $126;
          $125 = $261;
          $262 = $124;
          $263 = $125;
          HEAP32[$262>>2] = $263;
          $264 = HEAP32[$126>>2]|0;
          HEAP32[$129>>2] = $264;
          $265 = HEAP32[$129>>2]|0;
          HEAP32[$156>>2] = $265;
          $122 = $156;
          $123 = 1;
          $266 = $122;
          ;HEAP32[$121>>2]=HEAP32[$266>>2]|0;
          $267 = $123;
          $119 = $121;
          $120 = $267;
          $268 = $119;
          $269 = $120;
          $270 = HEAP32[$268>>2]|0;
          $271 = (($270) + (($269*12)|0)|0);
          HEAP32[$268>>2] = $271;
          $272 = HEAP32[$121>>2]|0;
          HEAP32[$155>>2] = $272;
          ;HEAP32[$i>>2]=HEAP32[$155>>2]|0;
          while(1) {
           $273 = $listData;
           $274 = ((($273)) + 4|0);
           $109 = $274;
           $275 = $109;
           $276 = ((($275)) + 4|0);
           $277 = HEAP32[$276>>2]|0;
           $106 = $275;
           $107 = $277;
           $278 = $107;
           $103 = $105;
           $104 = $278;
           $279 = $103;
           $280 = $104;
           HEAP32[$279>>2] = $280;
           $281 = HEAP32[$105>>2]|0;
           HEAP32[$108>>2] = $281;
           $282 = HEAP32[$108>>2]|0;
           HEAP32[$157>>2] = $282;
           $92 = $i;
           $93 = $157;
           $283 = $92;
           $284 = $93;
           $90 = $283;
           $91 = $284;
           $285 = $90;
           $89 = $285;
           $286 = $89;
           $287 = HEAP32[$286>>2]|0;
           $288 = $91;
           $88 = $288;
           $289 = $88;
           $290 = HEAP32[$289>>2]|0;
           $291 = ($287|0)==($290|0);
           $292 = $291 ^ 1;
           if (!($292)) {
            label = 33;
            break L37;
           }
           $293 = ((($174)) + 20|0);
           $87 = $i;
           $294 = $87;
           $295 = HEAP32[$294>>2]|0;
           __THREW__ = 0;
           $296 = (invoke_ii(595,($295|0))|0);
           $297 = __THREW__; __THREW__ = 0;
           $298 = $297&1;
           if ($298) {
            label = 11;
            break L37;
           }
           ;HEAP32[$293>>2]=HEAP32[$296>>2]|0;HEAP32[$293+4>>2]=HEAP32[$296+4>>2]|0;
           $86 = $i;
           $299 = $86;
           $300 = HEAP32[$299>>2]|0;
           $301 = HEAP32[$300>>2]|0;
           $302 = HEAP32[$301>>2]|0;
           $303 = ((($302)) + 16|0);
           $304 = HEAP32[$303>>2]|0;
           __THREW__ = 0;
           $305 = (invoke_ii($304|0,($301|0))|0);
           $306 = __THREW__; __THREW__ = 0;
           $307 = $306&1;
           if ($307) {
            label = 11;
            break L37;
           }
           $308 = $152;
           __THREW__ = 0;
           $309 = (invoke_iiii(586,($174|0),($305|0),($308|0))|0);
           $310 = __THREW__; __THREW__ = 0;
           $311 = $310&1;
           if ($311) {
            label = 11;
            break L37;
           }
           HEAP32[$158>>2] = $309;
           $84 = $arguments;
           $85 = $158;
           $312 = $84;
           $313 = ((($312)) + 4|0);
           $314 = HEAP32[$313>>2]|0;
           $83 = $312;
           $315 = $83;
           $316 = ((($315)) + 8|0);
           $82 = $316;
           $317 = $82;
           $81 = $317;
           $318 = $81;
           $319 = HEAP32[$318>>2]|0;
           $320 = ($314>>>0)<($319>>>0);
           if ($320) {
            __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i,$312,1);
            $80 = $312;
            $321 = $80;
            $322 = ((($321)) + 8|0);
            $79 = $322;
            $323 = $79;
            $78 = $323;
            $324 = $78;
            $325 = ((($312)) + 4|0);
            $326 = HEAP32[$325>>2]|0;
            $76 = $326;
            $327 = $76;
            $328 = $85;
            $61 = $328;
            $329 = $61;
            $72 = $324;
            $73 = $327;
            $74 = $329;
            $330 = $72;
            $331 = $73;
            $332 = $74;
            $71 = $332;
            $333 = $71;
            ;HEAP8[$70>>0]=HEAP8[$75>>0]|0;
            $67 = $330;
            $68 = $331;
            $69 = $333;
            $334 = $67;
            $335 = $68;
            $336 = $69;
            $66 = $336;
            $337 = $66;
            $63 = $334;
            $64 = $335;
            $65 = $337;
            $338 = $64;
            $339 = $65;
            $62 = $339;
            $340 = $62;
            __THREW__ = 0;
            invoke_vii(596,($338|0),($340|0));
            $341 = __THREW__; __THREW__ = 0;
            $342 = $341&1;
            if ($342) {
             break;
            }
            __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i);
            $343 = ((($312)) + 4|0);
            $344 = HEAP32[$343>>2]|0;
            $345 = ((($344)) + 4|0);
            HEAP32[$343>>2] = $345;
           } else {
            $346 = $85;
            $77 = $346;
            $347 = $77;
            __THREW__ = 0;
            invoke_vii(597,($312|0),($347|0));
            $348 = __THREW__; __THREW__ = 0;
            $349 = $348&1;
            if ($349) {
             break;
            }
           }
           __ZN5ValueD2Ev($158);
           $59 = $i;
           $60 = 0;
           $350 = $59;
           ;HEAP32[$58>>2]=HEAP32[$350>>2]|0;
           $57 = $350;
           $351 = $57;
           $352 = HEAP32[$351>>2]|0;
           $353 = ((($352)) + 12|0);
           HEAP32[$351>>2] = $353;
           $354 = HEAP32[$58>>2]|0;
           HEAP32[$159>>2] = $354;
          }
          $355 = ___cxa_find_matching_catch_2()|0;
          $356 = tempRet0;
          $153 = $355;
          $154 = $356;
          __ZN5ValueD2Ev($158);
         }
        } else {
         label = 33;
        }
       } while(0);
       if ((label|0) == 33) {
        $$expand_i1_val = 0;
        HEAP8[$165>>0] = $$expand_i1_val;
        __THREW__ = 0;
        invoke_vii(584,($149|0),(0|0));
        $450 = __THREW__; __THREW__ = 0;
        $451 = $450&1;
        if ($451) {
         label = 11;
        } else {
         $452 = $func;
         __THREW__ = 0;
         $453 = (invoke_ii(598,($452|0))|0);
         $454 = __THREW__; __THREW__ = 0;
         $455 = $454&1;
         L69: do {
          if ($455) {
           label = 41;
          } else {
           __THREW__ = 0;
           $456 = (invoke_ii(546,($453|0))|0);
           $457 = __THREW__; __THREW__ = 0;
           $458 = $457&1;
           if ($458) {
            label = 41;
           } else {
            $459 = ($456|0)==(0|0);
            $460 = $func;
            do {
             if ($459) {
              __THREW__ = 0;
              $461 = (invoke_ii(594,($460|0))|0);
              $462 = __THREW__; __THREW__ = 0;
              $463 = $462&1;
              if ($463) {
               label = 41;
               break L69;
              }
              $464 = $152;
              __THREW__ = 0;
              $465 = (invoke_iiii(599,($461|0),($arguments|0),($464|0))|0);
              $466 = __THREW__; __THREW__ = 0;
              $467 = $466&1;
              if ($467) {
               label = 41;
               break L69;
              }
              HEAP32[$166>>2] = $465;
              __THREW__ = 0;
              (invoke_iii(587,($149|0),($166|0))|0);
              $468 = __THREW__; __THREW__ = 0;
              $469 = $468&1;
              if ($469) {
               $472 = ___cxa_find_matching_catch_2()|0;
               $473 = tempRet0;
               $153 = $472;
               $154 = $473;
               __ZN5ValueD2Ev($166);
               break L69;
              } else {
               __ZN5ValueD2Ev($166);
               break;
              }
             } else {
              __THREW__ = 0;
              $474 = (invoke_ii(594,($460|0))|0);
              $475 = __THREW__; __THREW__ = 0;
              $476 = $475&1;
              if ($476) {
               label = 41;
               break L69;
              }
              $477 = $func;
              __THREW__ = 0;
              $478 = (invoke_ii(598,($477|0))|0);
              $479 = __THREW__; __THREW__ = 0;
              $480 = $479&1;
              if ($480) {
               label = 41;
               break L69;
              }
              __THREW__ = 0;
              $481 = (invoke_iiii(599,($474|0),($arguments|0),($478|0))|0);
              $482 = __THREW__; __THREW__ = 0;
              $483 = $482&1;
              if ($483) {
               label = 41;
               break L69;
              }
              HEAP32[$167>>2] = $481;
              __THREW__ = 0;
              (invoke_iii(587,($149|0),($167|0))|0);
              $484 = __THREW__; __THREW__ = 0;
              $485 = $484&1;
              if ($485) {
               $486 = ___cxa_find_matching_catch_2()|0;
               $487 = tempRet0;
               $153 = $486;
               $154 = $487;
               __ZN5ValueD2Ev($167);
               break L69;
              } else {
               __ZN5ValueD2Ev($167);
               break;
              }
             }
            } while(0);
            $$expand_i1_val2 = 1;
            HEAP8[$165>>0] = $$expand_i1_val2;
            $$pre_trunc = HEAP8[$165>>0]|0;
            $488 = $$pre_trunc&1;
            if (!($488)) {
             __ZN5ValueD2Ev($149);
            }
            __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEED2Ev($arguments);
            __ZN5ValueD2Ev($funcId);
            $572 = HEAP32[$149>>2]|0;
            STACKTOP = sp;return ($572|0);
           }
          }
         } while(0);
         if ((label|0) == 41) {
          $470 = ___cxa_find_matching_catch_2()|0;
          $471 = tempRet0;
          $153 = $470;
          $154 = $471;
         }
         __ZN5ValueD2Ev($149);
        }
       }
       if ((label|0) == 11) {
        $254 = ___cxa_find_matching_catch_2()|0;
        $255 = tempRet0;
        $153 = $254;
        $154 = $255;
       }
       __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEED2Ev($arguments);
      }
     }
    }
   } while(0);
   if ((label|0) == 10) {
    $252 = ___cxa_find_matching_catch_2()|0;
    $253 = tempRet0;
    $153 = $252;
    $154 = $253;
   }
   __ZN5ValueD2Ev($funcId);
   $573 = $153;
   $574 = $154;
   ___resumeException($573|0);
   // unreachable;
  }
 }
 $550 = $151;
 $551 = HEAP32[$550>>2]|0;
 $552 = ((($551)) + 12|0);
 $553 = HEAP32[$552>>2]|0;
 $554 = (FUNCTION_TABLE_ii[$553 & 1023]($550)|0);
 $555 = ($554|0)==(2);
 if (!($555)) {
  $567 = $151;
  $568 = HEAP32[$567>>2]|0;
  $569 = ((($568)) + 16|0);
  $570 = HEAP32[$569>>2]|0;
  $571 = (FUNCTION_TABLE_ii[$570 & 1023]($567)|0);
  __ZN5ValueC2EP4Data($149,$571);
  $572 = HEAP32[$149>>2]|0;
  STACKTOP = sp;return ($572|0);
 }
 $556 = $152;
 $557 = $151;
 __ZNK8AtomData7getNameEv($173,$557);
 __THREW__ = 0;
 invoke_viii(604,($172|0),($556|0),($173|0));
 $558 = __THREW__; __THREW__ = 0;
 $559 = $558&1;
 do {
  if ($559) {
   $563 = ___cxa_find_matching_catch_2()|0;
   $564 = tempRet0;
   $153 = $563;
   $154 = $564;
  } else {
   $560 = ((($172)) + 12|0);
   __THREW__ = 0;
   invoke_vii(596,($149|0),($560|0));
   $561 = __THREW__; __THREW__ = 0;
   $562 = $561&1;
   if ($562) {
    $565 = ___cxa_find_matching_catch_2()|0;
    $566 = tempRet0;
    $153 = $565;
    $154 = $566;
    __ZN3VarD2Ev($172);
    break;
   }
   __ZN3VarD2Ev($172);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($173);
   $572 = HEAP32[$149>>2]|0;
   STACKTOP = sp;return ($572|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($173);
 $573 = $153;
 $574 = $154;
 ___resumeException($573|0);
 // unreachable;
 return (0)|0;
}
function __ZNK8LispNode6getPosEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Value7getDataEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNK8FuncData7getFuncEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZN5ValueC2ERKS_($this,$value) {
 $this = $this|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $value;
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($4)|0);
 HEAP32[$2>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0, $__cap$i = 0, $__ms$i = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $8 = sp + 8|0;
 $13 = sp + 201|0;
 $22 = sp;
 $25 = sp + 200|0;
 $33 = sp + 80|0;
 $34 = sp + 68|0;
 $__v = sp + 20|0;
 $39 = $this;
 $40 = $__x;
 $43 = $39;
 $38 = $43;
 $44 = $38;
 $45 = ((($44)) + 8|0);
 $37 = $45;
 $46 = $37;
 $36 = $46;
 $47 = $36;
 $__a = $47;
 $35 = $43;
 $48 = $35;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$48>>2]|0;
 $52 = $50;
 $53 = $51;
 $54 = (($52) - ($53))|0;
 $55 = (($54|0) / 4)&-1;
 $56 = (($55) + 1)|0;
 $32 = $43;
 HEAP32[$33>>2] = $56;
 $57 = $32;
 $58 = (__ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE8max_sizeEv($57)|0);
 $__ms$i = $58;
 $59 = HEAP32[$33>>2]|0;
 $60 = $__ms$i;
 $61 = ($59>>>0)>($60>>>0);
 if ($61) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($57);
  // unreachable;
 }
 $30 = $57;
 $62 = $30;
 $29 = $62;
 $63 = $29;
 $28 = $63;
 $64 = $28;
 $65 = ((($64)) + 8|0);
 $27 = $65;
 $66 = $27;
 $26 = $66;
 $67 = $26;
 $68 = HEAP32[$67>>2]|0;
 $69 = HEAP32[$63>>2]|0;
 $70 = $68;
 $71 = $69;
 $72 = (($70) - ($71))|0;
 $73 = (($72|0) / 4)&-1;
 $__cap$i = $73;
 $74 = $__cap$i;
 $75 = $__ms$i;
 $76 = (($75>>>0) / 2)&-1;
 $77 = ($74>>>0)>=($76>>>0);
 if ($77) {
  $78 = $__ms$i;
  $31 = $78;
 } else {
  $79 = $__cap$i;
  $80 = $79<<1;
  HEAP32[$34>>2] = $80;
  $23 = $34;
  $24 = $33;
  $81 = $23;
  $82 = $24;
  ;HEAP8[$22>>0]=HEAP8[$25>>0]|0;
  $20 = $81;
  $21 = $82;
  $83 = $20;
  $84 = $21;
  $17 = $22;
  $18 = $83;
  $19 = $84;
  $85 = $18;
  $86 = HEAP32[$85>>2]|0;
  $87 = $19;
  $88 = HEAP32[$87>>2]|0;
  $89 = ($86>>>0)<($88>>>0);
  $90 = $21;
  $91 = $20;
  $92 = $89 ? $90 : $91;
  $93 = HEAP32[$92>>2]|0;
  $31 = $93;
 }
 $94 = $31;
 $16 = $43;
 $95 = $16;
 $96 = ((($95)) + 4|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$95>>2]|0;
 $99 = $97;
 $100 = $98;
 $101 = (($99) - ($100))|0;
 $102 = (($101|0) / 4)&-1;
 $103 = $__a;
 __ZNSt3__114__split_bufferI5ValueRNS_9allocatorIS1_EEEC2EjjS4_($__v,$94,$102,$103);
 $104 = $__a;
 $105 = ((($__v)) + 8|0);
 $106 = HEAP32[$105>>2]|0;
 $15 = $106;
 $107 = $15;
 $108 = $40;
 $14 = $108;
 $109 = $14;
 $10 = $104;
 $11 = $107;
 $12 = $109;
 $110 = $10;
 $111 = $11;
 $112 = $12;
 $9 = $112;
 $113 = $9;
 ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
 $5 = $110;
 $6 = $111;
 $7 = $113;
 $114 = $5;
 $115 = $6;
 $116 = $7;
 $4 = $116;
 $117 = $4;
 $1 = $114;
 $2 = $115;
 $3 = $117;
 $118 = $2;
 $119 = $3;
 $0 = $119;
 $120 = $0;
 __THREW__ = 0;
 invoke_vii(596,($118|0),($120|0));
 $121 = __THREW__; __THREW__ = 0;
 $122 = $121&1;
 if ($122) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI5ValueRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 }
 $123 = ((($__v)) + 8|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = ((($124)) + 4|0);
 HEAP32[$123>>2] = $125;
 __THREW__ = 0;
 invoke_vii(605,($43|0),($__v|0));
 $126 = __THREW__; __THREW__ = 0;
 $127 = $126&1;
 if ($127) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI5ValueRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 } else {
  __ZNSt3__114__split_bufferI5ValueRNS_9allocatorIS1_EEED2Ev($__v);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 77|0;
 $11 = sp;
 $13 = sp + 76|0;
 $18 = sp + 16|0;
 $19 = sp + 12|0;
 $17 = $this;
 $20 = $17;
 $16 = $20;
 $21 = $16;
 $22 = ((($21)) + 8|0);
 $15 = $22;
 $23 = $15;
 $14 = $23;
 $24 = $14;
 $12 = $24;
 $25 = $12;
 ;HEAP8[$11>>0]=HEAP8[$13>>0]|0;
 $10 = $25;
 $26 = $10;
 $9 = $26;
 HEAP32[$18>>2] = 1073741823;
 $27 = (4294967295 / 2)&-1;
 HEAP32[$19>>2] = $27;
 $6 = $18;
 $7 = $19;
 $28 = $6;
 $29 = $7;
 ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
 $3 = $28;
 $4 = $29;
 $30 = $4;
 $31 = $3;
 $0 = $5;
 $1 = $30;
 $2 = $31;
 $32 = $1;
 $33 = HEAP32[$32>>2]|0;
 $34 = $2;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $4;
 $38 = $3;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__114__split_bufferI5ValueRNS_9allocatorIS1_EEEC2EjjS4_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $16 = sp + 36|0;
 $20 = sp + 20|0;
 $22 = $this;
 $23 = $__cap;
 $24 = $__start;
 $25 = $__a;
 $26 = $22;
 $27 = ((($26)) + 12|0);
 $28 = $25;
 $19 = $27;
 HEAP32[$20>>2] = 0;
 $21 = $28;
 $29 = $19;
 $18 = $20;
 $30 = $18;
 $31 = HEAP32[$30>>2]|0;
 $32 = $21;
 $12 = $32;
 $33 = $12;
 $15 = $29;
 HEAP32[$16>>2] = $31;
 $17 = $33;
 $34 = $15;
 $14 = $16;
 $35 = $14;
 $36 = HEAP32[$35>>2]|0;
 HEAP32[$34>>2] = $36;
 $37 = ((($34)) + 4|0);
 $38 = $17;
 $13 = $38;
 $39 = $13;
 HEAP32[$37>>2] = $39;
 $40 = $23;
 $41 = ($40|0)!=(0);
 if ($41) {
  $2 = $26;
  $42 = $2;
  $43 = ((($42)) + 12|0);
  $1 = $43;
  $44 = $1;
  $0 = $44;
  $45 = $0;
  $46 = ((($45)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = $23;
  $7 = $47;
  $8 = $48;
  $49 = $7;
  $50 = $8;
  $4 = $49;
  $5 = $50;
  $6 = 0;
  $51 = $5;
  $52 = $51<<2;
  $3 = $52;
  $53 = $3;
  $54 = (__Znwj($53)|0);
  $55 = $54;
 } else {
  $55 = 0;
 }
 HEAP32[$26>>2] = $55;
 $56 = HEAP32[$26>>2]|0;
 $57 = $24;
 $58 = (($56) + ($57<<2)|0);
 $59 = ((($26)) + 8|0);
 HEAP32[$59>>2] = $58;
 $60 = ((($26)) + 4|0);
 HEAP32[$60>>2] = $58;
 $61 = HEAP32[$26>>2]|0;
 $62 = $23;
 $63 = (($61) + ($62<<2)|0);
 $11 = $26;
 $64 = $11;
 $65 = ((($64)) + 12|0);
 $10 = $65;
 $66 = $10;
 $9 = $66;
 $67 = $9;
 HEAP32[$67>>2] = $63;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__t$i = 0, $__t$i1 = 0, $__t$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t$i2 = sp + 180|0;
 $__t$i1 = sp + 132|0;
 $__t$i = sp + 104|0;
 $32 = sp;
 $37 = sp + 204|0;
 $47 = $this;
 $48 = $__v;
 $49 = $47;
 __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE17__annotate_deleteEv($49);
 $46 = $49;
 $50 = $46;
 $51 = ((($50)) + 8|0);
 $45 = $51;
 $52 = $45;
 $44 = $52;
 $53 = $44;
 $54 = HEAP32[$49>>2]|0;
 $55 = ((($49)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = $48;
 $58 = ((($57)) + 4|0);
 $39 = $53;
 $40 = $54;
 $41 = $56;
 $42 = $58;
 while(1) {
  $59 = $41;
  $60 = $40;
  $61 = ($59|0)!=($60|0);
  if (!($61)) {
   break;
  }
  $62 = $39;
  $63 = $42;
  $64 = HEAP32[$63>>2]|0;
  $65 = ((($64)) + -4|0);
  $38 = $65;
  $66 = $38;
  $67 = $41;
  $68 = ((($67)) + -4|0);
  $41 = $68;
  $23 = $68;
  $69 = $23;
  $22 = $69;
  $70 = $22;
  $34 = $62;
  $35 = $66;
  $36 = $70;
  $71 = $34;
  $72 = $35;
  $73 = $36;
  $33 = $73;
  $74 = $33;
  ;HEAP8[$32>>0]=HEAP8[$37>>0]|0;
  $29 = $71;
  $30 = $72;
  $31 = $74;
  $75 = $29;
  $76 = $30;
  $77 = $31;
  $28 = $77;
  $78 = $28;
  $25 = $75;
  $26 = $76;
  $27 = $78;
  $79 = $26;
  $80 = $27;
  $24 = $80;
  $81 = $24;
  __ZN5ValueC2ERKS_($79,$81);
  $82 = $42;
  $83 = HEAP32[$82>>2]|0;
  $84 = ((($83)) + -4|0);
  HEAP32[$82>>2] = $84;
 }
 $85 = $48;
 $86 = ((($85)) + 4|0);
 $20 = $49;
 $21 = $86;
 $87 = $20;
 $19 = $87;
 $88 = $19;
 $89 = HEAP32[$88>>2]|0;
 HEAP32[$__t$i>>2] = $89;
 $90 = $21;
 $17 = $90;
 $91 = $17;
 $92 = HEAP32[$91>>2]|0;
 $93 = $20;
 HEAP32[$93>>2] = $92;
 $18 = $__t$i;
 $94 = $18;
 $95 = HEAP32[$94>>2]|0;
 $96 = $21;
 HEAP32[$96>>2] = $95;
 $97 = ((($49)) + 4|0);
 $98 = $48;
 $99 = ((($98)) + 8|0);
 $3 = $97;
 $4 = $99;
 $100 = $3;
 $2 = $100;
 $101 = $2;
 $102 = HEAP32[$101>>2]|0;
 HEAP32[$__t$i2>>2] = $102;
 $103 = $4;
 $0 = $103;
 $104 = $0;
 $105 = HEAP32[$104>>2]|0;
 $106 = $3;
 HEAP32[$106>>2] = $105;
 $1 = $__t$i2;
 $107 = $1;
 $108 = HEAP32[$107>>2]|0;
 $109 = $4;
 HEAP32[$109>>2] = $108;
 $7 = $49;
 $110 = $7;
 $111 = ((($110)) + 8|0);
 $6 = $111;
 $112 = $6;
 $5 = $112;
 $113 = $5;
 $114 = $48;
 $10 = $114;
 $115 = $10;
 $116 = ((($115)) + 12|0);
 $9 = $116;
 $117 = $9;
 $8 = $117;
 $118 = $8;
 $14 = $113;
 $15 = $118;
 $119 = $14;
 $13 = $119;
 $120 = $13;
 $121 = HEAP32[$120>>2]|0;
 HEAP32[$__t$i1>>2] = $121;
 $122 = $15;
 $11 = $122;
 $123 = $11;
 $124 = HEAP32[$123>>2]|0;
 $125 = $14;
 HEAP32[$125>>2] = $124;
 $12 = $__t$i1;
 $126 = $12;
 $127 = HEAP32[$126>>2]|0;
 $128 = $15;
 HEAP32[$128>>2] = $127;
 $129 = $48;
 $130 = ((($129)) + 4|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = $48;
 HEAP32[$132>>2] = $131;
 $16 = $49;
 $133 = $16;
 $134 = ((($133)) + 4|0);
 $135 = HEAP32[$134>>2]|0;
 $136 = HEAP32[$133>>2]|0;
 $137 = $135;
 $138 = $136;
 $139 = (($137) - ($138))|0;
 $140 = (($139|0) / 4)&-1;
 __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE14__annotate_newEj($49,$140);
 $43 = $49;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $19 = $this;
 $20 = $19;
 $18 = $20;
 $21 = $18;
 $22 = HEAP32[$21>>2]|0;
 $17 = $22;
 $23 = $17;
 $16 = $20;
 $24 = $16;
 $25 = HEAP32[$24>>2]|0;
 $15 = $25;
 $26 = $15;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 4)&-1;
 $39 = (($26) + ($38<<2)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $7 = $20;
 $43 = $7;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 $50 = (($49|0) / 4)&-1;
 $51 = (($42) + ($50<<2)|0);
 $9 = $20;
 $52 = $9;
 $53 = HEAP32[$52>>2]|0;
 $8 = $53;
 $54 = $8;
 $14 = $20;
 $55 = $14;
 $13 = $55;
 $56 = $13;
 $12 = $56;
 $57 = $12;
 $58 = ((($57)) + 8|0);
 $11 = $58;
 $59 = $11;
 $10 = $59;
 $60 = $10;
 $61 = HEAP32[$60>>2]|0;
 $62 = HEAP32[$56>>2]|0;
 $63 = $61;
 $64 = $62;
 $65 = (($63) - ($64))|0;
 $66 = (($65|0) / 4)&-1;
 $67 = (($54) + ($66<<2)|0);
 __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($20,$23,$39,$51,$67);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = $this;
 $19 = $__current_size;
 $20 = $18;
 $17 = $20;
 $21 = $17;
 $22 = HEAP32[$21>>2]|0;
 $16 = $22;
 $23 = $16;
 $15 = $20;
 $24 = $15;
 $25 = HEAP32[$24>>2]|0;
 $14 = $25;
 $26 = $14;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 4)&-1;
 $39 = (($26) + ($38<<2)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $11 = $20;
 $43 = $11;
 $10 = $43;
 $44 = $10;
 $9 = $44;
 $45 = $9;
 $46 = ((($45)) + 8|0);
 $8 = $46;
 $47 = $8;
 $7 = $47;
 $48 = $7;
 $49 = HEAP32[$48>>2]|0;
 $50 = HEAP32[$44>>2]|0;
 $51 = $49;
 $52 = $50;
 $53 = (($51) - ($52))|0;
 $54 = (($53|0) / 4)&-1;
 $55 = (($42) + ($54<<2)|0);
 $13 = $20;
 $56 = $13;
 $57 = HEAP32[$56>>2]|0;
 $12 = $57;
 $58 = $12;
 $59 = $19;
 $60 = (($58) + ($59<<2)|0);
 __ZNKSt3__16vectorI5ValueNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($20,$23,$39,$55,$60);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferI5ValueRNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp + 8|0;
 $21 = sp + 133|0;
 $28 = sp;
 $31 = sp + 132|0;
 $33 = $this;
 $34 = $33;
 $32 = $34;
 $35 = $32;
 $36 = ((($35)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $29 = $35;
 $30 = $37;
 $38 = $29;
 $39 = $30;
 ;HEAP8[$28>>0]=HEAP8[$31>>0]|0;
 $26 = $38;
 $27 = $39;
 $40 = $26;
 while(1) {
  $41 = $27;
  $42 = ((($40)) + 8|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ($41|0)!=($43|0);
  if (!($44)) {
   break;
  }
  $25 = $40;
  $45 = $25;
  $46 = ((($45)) + 12|0);
  $24 = $46;
  $47 = $24;
  $23 = $47;
  $48 = $23;
  $49 = ((($48)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($40)) + 8|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($52)) + -4|0);
  HEAP32[$51>>2] = $53;
  $22 = $53;
  $54 = $22;
  $19 = $50;
  $20 = $54;
  $55 = $19;
  $56 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $55;
  $17 = $56;
  $57 = $16;
  $58 = $17;
  $14 = $57;
  $15 = $58;
  $59 = $15;
  __ZN5ValueD2Ev($59);
 }
 $60 = HEAP32[$34>>2]|0;
 $61 = ($60|0)!=(0|0);
 if (!($61)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $62 = $13;
 $63 = ((($62)) + 12|0);
 $12 = $63;
 $64 = $12;
 $11 = $64;
 $65 = $11;
 $66 = ((($65)) + 4|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = HEAP32[$34>>2]|0;
 $10 = $34;
 $69 = $10;
 $9 = $69;
 $70 = $9;
 $71 = ((($70)) + 12|0);
 $8 = $71;
 $72 = $8;
 $7 = $72;
 $73 = $7;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 4)&-1;
 $4 = $67;
 $5 = $68;
 $6 = $79;
 $80 = $4;
 $81 = $5;
 $82 = $6;
 $1 = $80;
 $2 = $81;
 $3 = $82;
 $83 = $2;
 $0 = $83;
 $84 = $0;
 __ZdlPv($84);
 STACKTOP = sp;return;
}
function __ZNK8FuncData6getMemEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5ValueaSERKS_($this,$value) {
 $this = $this|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $value;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = HEAP32[$2>>2]|0;
  $6 = ($5|0)==(0|0);
  if (!($6)) {
   $7 = HEAP32[$5>>2]|0;
   $8 = ((($7)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   FUNCTION_TABLE_vi[$9 & 1023]($5);
  }
 }
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $1;
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (FUNCTION_TABLE_ii[$17 & 1023]($14)|0);
  HEAP32[$2>>2] = $18;
  STACKTOP = sp;return ($2|0);
 } else {
  HEAP32[$2>>2] = 0;
  STACKTOP = sp;return ($2|0);
 }
 return (0)|0;
}
function __ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseI5ValueNS_9allocatorIS1_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseI5ValueNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp;
 $21 = sp + 116|0;
 $29 = $this;
 $30 = $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)!=(0|0);
 if (!($32)) {
  STACKTOP = sp;return;
 }
 $28 = $30;
 $33 = $28;
 $34 = HEAP32[$33>>2]|0;
 $26 = $33;
 $27 = $34;
 $35 = $26;
 while(1) {
  $36 = $27;
  $37 = ((($35)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($36|0)!=($38|0);
  if (!($39)) {
   break;
  }
  $25 = $35;
  $40 = $25;
  $41 = ((($40)) + 8|0);
  $24 = $41;
  $42 = $24;
  $23 = $42;
  $43 = $23;
  $44 = ((($35)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($45)) + -4|0);
  HEAP32[$44>>2] = $46;
  $22 = $46;
  $47 = $22;
  $19 = $43;
  $20 = $47;
  $48 = $19;
  $49 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $48;
  $17 = $49;
  $50 = $16;
  $51 = $17;
  $14 = $50;
  $15 = $51;
  $52 = $15;
  __ZN5ValueD2Ev($52);
 }
 $13 = $30;
 $53 = $13;
 $54 = ((($53)) + 8|0);
 $12 = $54;
 $55 = $12;
 $11 = $55;
 $56 = $11;
 $57 = HEAP32[$30>>2]|0;
 $3 = $30;
 $58 = $3;
 $2 = $58;
 $59 = $2;
 $60 = ((($59)) + 8|0);
 $1 = $60;
 $61 = $1;
 $0 = $61;
 $62 = $0;
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$58>>2]|0;
 $65 = $63;
 $66 = $64;
 $67 = (($65) - ($66))|0;
 $68 = (($67|0) / 4)&-1;
 $8 = $56;
 $9 = $57;
 $10 = $68;
 $69 = $8;
 $70 = $9;
 $71 = $10;
 $5 = $69;
 $6 = $70;
 $7 = $71;
 $72 = $6;
 $4 = $72;
 $73 = $4;
 __ZdlPv($73);
 STACKTOP = sp;return;
}
function __ZN7MessageD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK8AtomData7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$2);
 STACKTOP = sp;return;
}
function __ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $24 = $__os;
 $25 = $__str;
 $26 = $24;
 $27 = $25;
 $23 = $27;
 $28 = $23;
 $22 = $28;
 $29 = $22;
 $21 = $29;
 $30 = $21;
 $20 = $30;
 $31 = $20;
 $19 = $31;
 $32 = $19;
 $33 = HEAP8[$32>>0]|0;
 $34 = $33&255;
 $35 = $34 & 1;
 $36 = ($35|0)!=(0);
 if ($36) {
  $13 = $29;
  $37 = $13;
  $12 = $37;
  $38 = $12;
  $11 = $38;
  $39 = $11;
  $40 = ((($39)) + 8|0);
  $41 = HEAP32[$40>>2]|0;
  $48 = $41;
 } else {
  $18 = $29;
  $42 = $18;
  $17 = $42;
  $43 = $17;
  $16 = $43;
  $44 = $16;
  $45 = ((($44)) + 1|0);
  $15 = $45;
  $46 = $15;
  $14 = $46;
  $47 = $14;
  $48 = $47;
 }
 $10 = $48;
 $49 = $10;
 $50 = $25;
 $9 = $50;
 $51 = $9;
 $8 = $51;
 $52 = $8;
 $7 = $52;
 $53 = $7;
 $6 = $53;
 $54 = $6;
 $55 = HEAP8[$54>>0]|0;
 $56 = $55&255;
 $57 = $56 & 1;
 $58 = ($57|0)!=(0);
 if ($58) {
  $2 = $51;
  $59 = $2;
  $1 = $59;
  $60 = $1;
  $0 = $60;
  $61 = $0;
  $62 = ((($61)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $70 = $63;
  $71 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($26,$49,$70)|0);
  STACKTOP = sp;return ($71|0);
 } else {
  $5 = $51;
  $64 = $5;
  $4 = $64;
  $65 = $4;
  $3 = $65;
  $66 = $3;
  $67 = HEAP8[$66>>0]|0;
  $68 = $67&255;
  $69 = $68 >> 1;
  $70 = $69;
  $71 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($26,$49,$70)|0);
  STACKTOP = sp;return ($71|0);
 }
 return (0)|0;
}
function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os,$__str,$__len) {
 $__os = $__os|0;
 $__str = $__str|0;
 $__len = $__len|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__s = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 108|0;
 $5 = sp + 92|0;
 $__s = sp + 16|0;
 $25 = sp + 4|0;
 $26 = sp;
 $20 = $__os;
 $21 = $__str;
 $22 = $__len;
 $27 = $20;
 __THREW__ = 0;
 invoke_vii(606,($__s|0),($27|0));
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 L1: do {
  if ($29) {
   $124 = ___cxa_find_matching_catch_3(0|0)|0;
   $125 = tempRet0;
   $23 = $124;
   $24 = $125;
  } else {
   $19 = $__s;
   $30 = $19;
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&1;
   do {
    if ($32) {
     $33 = $20;
     $17 = $25;
     $18 = $33;
     $34 = $17;
     $35 = $18;
     $36 = HEAP32[$35>>2]|0;
     $37 = ((($36)) + -12|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = (($35) + ($38)|0);
     $16 = $39;
     $40 = $16;
     $15 = $40;
     $41 = $15;
     $42 = ((($41)) + 24|0);
     $43 = HEAP32[$42>>2]|0;
     HEAP32[$34>>2] = $43;
     $44 = $21;
     $45 = $20;
     $46 = HEAP32[$45>>2]|0;
     $47 = ((($46)) + -12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (($45) + ($48)|0);
     $10 = $49;
     $50 = $10;
     $51 = ((($50)) + 4|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = $52 & 176;
     $54 = ($53|0)==(32);
     $55 = $21;
     $56 = $22;
     $57 = (($55) + ($56)|0);
     $58 = $21;
     $59 = $54 ? $57 : $58;
     $60 = $21;
     $61 = $22;
     $62 = (($60) + ($61)|0);
     $63 = $20;
     $64 = HEAP32[$63>>2]|0;
     $65 = ((($64)) + -12|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = (($63) + ($66)|0);
     $68 = $20;
     $69 = HEAP32[$68>>2]|0;
     $70 = ((($69)) + -12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = (($68) + ($71)|0);
     $8 = $72;
     $73 = $8;
     $74 = (__ZNSt3__111char_traitsIcE3eofEv()|0);
     $75 = ((($73)) + 76|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = (__ZNSt3__111char_traitsIcE11eq_int_typeEii($74,$76)|0);
     do {
      if ($77) {
       $3 = $73;
       $4 = 32;
       $78 = $3;
       __THREW__ = 0;
       $79 = (invoke_ii(607,($78|0))|0);
       $80 = __THREW__; __THREW__ = 0;
       $81 = $80&1;
       if ($81) {
        label = 13;
       } else {
        HEAP32[$5>>2] = $79;
        $2 = $5;
        $82 = $2;
        __THREW__ = 0;
        $83 = (invoke_iii(608,($82|0),(22416|0))|0);
        $84 = __THREW__; __THREW__ = 0;
        $85 = $84&1;
        if (!($85)) {
         $86 = $4;
         $0 = $83;
         $1 = $86;
         $87 = $0;
         $88 = HEAP32[$87>>2]|0;
         $89 = ((($88)) + 28|0);
         $90 = HEAP32[$89>>2]|0;
         $91 = $1;
         __THREW__ = 0;
         $92 = (invoke_iii($90|0,($87|0),($91|0))|0);
         $93 = __THREW__; __THREW__ = 0;
         $94 = $93&1;
         if (!($94)) {
          __ZNSt3__16localeD2Ev($5);
          $99 = $92 << 24 >> 24;
          $100 = ((($73)) + 76|0);
          HEAP32[$100>>2] = $99;
          label = 9;
          break;
         }
        }
        $95 = ___cxa_find_matching_catch_3(0|0)|0;
        $96 = tempRet0;
        $6 = $95;
        $7 = $96;
        __ZNSt3__16localeD2Ev($5);
        $97 = $6;
        $98 = $7;
        $eh$lpad$body$index2Z2D = $98;$eh$lpad$body$indexZ2D = $97;
       }
      } else {
       label = 9;
      }
     } while(0);
     if ((label|0) == 9) {
      $101 = ((($73)) + 76|0);
      $102 = HEAP32[$101>>2]|0;
      $103 = $102&255;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$25>>2]|0;
      $104 = (invoke_iiiiiii(609,($$byval_copy|0),($44|0),($59|0),($62|0),($67|0),($103|0))|0);
      $105 = __THREW__; __THREW__ = 0;
      $106 = $105&1;
      if ($106) {
       label = 13;
      } else {
       HEAP32[$26>>2] = $104;
       $9 = $26;
       $107 = $9;
       $108 = HEAP32[$107>>2]|0;
       $109 = ($108|0)==(0|0);
       if (!($109)) {
        break;
       }
       $110 = $20;
       $111 = HEAP32[$110>>2]|0;
       $112 = ((($111)) + -12|0);
       $113 = HEAP32[$112>>2]|0;
       $114 = (($110) + ($113)|0);
       $13 = $114;
       $14 = 5;
       $115 = $13;
       $116 = $14;
       $11 = $115;
       $12 = $116;
       $117 = $11;
       $118 = ((($117)) + 16|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = $12;
       $121 = $119 | $120;
       __THREW__ = 0;
       invoke_vii(610,($117|0),($121|0));
       $122 = __THREW__; __THREW__ = 0;
       $123 = $122&1;
       if ($123) {
        label = 13;
       } else {
        break;
       }
      }
     }
     if ((label|0) == 13) {
      $126 = ___cxa_find_matching_catch_3(0|0)|0;
      $127 = tempRet0;
      $eh$lpad$body$index2Z2D = $127;$eh$lpad$body$indexZ2D = $126;
     }
     $23 = $eh$lpad$body$indexZ2D;
     $24 = $eh$lpad$body$index2Z2D;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $136 = $20;
   STACKTOP = sp;return ($136|0);
  }
 } while(0);
 $128 = $23;
 (___cxa_begin_catch(($128|0))|0);
 $129 = $20;
 $130 = HEAP32[$129>>2]|0;
 $131 = ((($130)) + -12|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = (($129) + ($132)|0);
 __THREW__ = 0;
 invoke_vi(611,($133|0));
 $134 = __THREW__; __THREW__ = 0;
 $135 = $134&1;
 if (!($135)) {
  ___cxa_end_catch();
  $136 = $20;
  STACKTOP = sp;return ($136|0);
 }
 $137 = ___cxa_find_matching_catch_2()|0;
 $138 = tempRet0;
 $23 = $137;
 $24 = $138;
 __THREW__ = 0;
 invoke_v(593);
 $139 = __THREW__; __THREW__ = 0;
 $140 = $139&1;
 if ($140) {
  $143 = ___cxa_find_matching_catch_3(0|0)|0;
  $144 = tempRet0;
  ___clang_call_terminate($143);
  // unreachable;
 } else {
  $141 = $23;
  $142 = $24;
  ___resumeException($141|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__111char_traitsIcE11eq_int_typeEii($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $0;
 $3 = $1;
 $4 = ($2|0)==($3|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__np = 0, $__ns = 0, $__r$i = 0, $__sp = 0, $__sz = 0, $cleanup$dest = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $32 = sp + 52|0;
 $__sp = sp + 12|0;
 $33 = $__ob;
 $34 = $__op;
 $35 = $__oe;
 $36 = $__iob;
 $37 = $__fl;
 $41 = HEAP32[$__s>>2]|0;
 $42 = ($41|0)==(0|0);
 if ($42) {
  ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
  $150 = HEAP32[$32>>2]|0;
  STACKTOP = sp;return ($150|0);
 }
 $43 = $35;
 $44 = $33;
 $45 = $43;
 $46 = $44;
 $47 = (($45) - ($46))|0;
 $__sz = $47;
 $48 = $36;
 $31 = $48;
 $49 = $31;
 $50 = ((($49)) + 12|0);
 $51 = HEAP32[$50>>2]|0;
 $__ns = $51;
 $52 = $__ns;
 $53 = $__sz;
 $54 = ($52|0)>($53|0);
 if ($54) {
  $55 = $__sz;
  $56 = $__ns;
  $57 = (($56) - ($55))|0;
  $__ns = $57;
 } else {
  $__ns = 0;
 }
 $58 = $34;
 $59 = $33;
 $60 = $58;
 $61 = $59;
 $62 = (($60) - ($61))|0;
 $__np = $62;
 $63 = $__np;
 $64 = ($63|0)>(0);
 if ($64) {
  $65 = HEAP32[$__s>>2]|0;
  $66 = $33;
  $67 = $__np;
  $23 = $65;
  $24 = $66;
  $25 = $67;
  $68 = $23;
  $69 = HEAP32[$68>>2]|0;
  $70 = ((($69)) + 48|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $24;
  $73 = $25;
  $74 = (FUNCTION_TABLE_iiii[$71 & 1023]($68,$72,$73)|0);
  $75 = $__np;
  $76 = ($74|0)!=($75|0);
  if ($76) {
   HEAP32[$__s>>2] = 0;
   ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
   $150 = HEAP32[$32>>2]|0;
   STACKTOP = sp;return ($150|0);
  }
 }
 $77 = $__ns;
 $78 = ($77|0)>(0);
 if ($78) {
  $79 = $__ns;
  $80 = $37;
  $20 = $__sp;
  $21 = $79;
  $22 = $80;
  $81 = $20;
  $19 = $81;
  $82 = $19;
  $18 = $82;
  $83 = $18;
  $17 = $83;
  $84 = $21;
  $85 = $22;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($81,$84,$85);
  $86 = HEAP32[$__s>>2]|0;
  $16 = $__sp;
  $87 = $16;
  $15 = $87;
  $88 = $15;
  $14 = $88;
  $89 = $14;
  $13 = $89;
  $90 = $13;
  $12 = $90;
  $91 = $12;
  $92 = HEAP8[$91>>0]|0;
  $93 = $92&255;
  $94 = $93 & 1;
  $95 = ($94|0)!=(0);
  if ($95) {
   $6 = $88;
   $96 = $6;
   $5 = $96;
   $97 = $5;
   $4 = $97;
   $98 = $4;
   $99 = ((($98)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $107 = $100;
  } else {
   $11 = $88;
   $101 = $11;
   $10 = $101;
   $102 = $10;
   $9 = $102;
   $103 = $9;
   $104 = ((($103)) + 1|0);
   $8 = $104;
   $105 = $8;
   $7 = $105;
   $106 = $7;
   $107 = $106;
  }
  $3 = $107;
  $108 = $3;
  $109 = $__ns;
  $0 = $86;
  $1 = $108;
  $2 = $109;
  $110 = $0;
  $111 = HEAP32[$110>>2]|0;
  $112 = ((($111)) + 48|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = $1;
  $115 = $2;
  __THREW__ = 0;
  $116 = (invoke_iiii($113|0,($110|0),($114|0),($115|0))|0);
  $117 = __THREW__; __THREW__ = 0;
  $118 = $117&1;
  if ($118) {
   $121 = ___cxa_find_matching_catch_2()|0;
   $122 = tempRet0;
   $38 = $121;
   $39 = $122;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   $123 = $38;
   $124 = $39;
   ___resumeException($123|0);
   // unreachable;
  }
  $119 = $__ns;
  $120 = ($116|0)!=($119|0);
  if ($120) {
   HEAP32[$__s>>2] = 0;
   ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
   $40 = 1;
  } else {
   $40 = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
  $cleanup$dest = $40;
  $switch = ($cleanup$dest>>>0)<(1);
  if (!($switch)) {
   $150 = HEAP32[$32>>2]|0;
   STACKTOP = sp;return ($150|0);
  }
 }
 $125 = $35;
 $126 = $34;
 $127 = $125;
 $128 = $126;
 $129 = (($127) - ($128))|0;
 $__np = $129;
 $130 = $__np;
 $131 = ($130|0)>(0);
 if ($131) {
  $132 = HEAP32[$__s>>2]|0;
  $133 = $34;
  $134 = $__np;
  $26 = $132;
  $27 = $133;
  $28 = $134;
  $135 = $26;
  $136 = HEAP32[$135>>2]|0;
  $137 = ((($136)) + 48|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = $27;
  $140 = $28;
  $141 = (FUNCTION_TABLE_iiii[$138 & 1023]($135,$139,$140)|0);
  $142 = $__np;
  $143 = ($141|0)!=($142|0);
  if ($143) {
   HEAP32[$__s>>2] = 0;
   ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
   $150 = HEAP32[$32>>2]|0;
   STACKTOP = sp;return ($150|0);
  }
 }
 $144 = $36;
 $29 = $144;
 $30 = 0;
 $145 = $29;
 $146 = ((($145)) + 12|0);
 $147 = HEAP32[$146>>2]|0;
 $__r$i = $147;
 $148 = $30;
 $149 = ((($145)) + 12|0);
 HEAP32[$149>>2] = $148;
 ;HEAP32[$32>>2]=HEAP32[$__s>>2]|0;
 $150 = HEAP32[$32>>2]|0;
 STACKTOP = sp;return ($150|0);
}
function __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_($__os) {
 $__os = $__os|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 12|0;
 $8 = $__os;
 $9 = $8;
 $10 = $8;
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + -12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($10) + ($13)|0);
 $3 = $14;
 $4 = 10;
 $15 = $3;
 $16 = (__ZNKSt3__18ios_base6getlocEv($15)|0);
 HEAP32[$5>>2] = $16;
 $2 = $5;
 $17 = $2;
 __THREW__ = 0;
 $18 = (invoke_iii(608,($17|0),(22416|0))|0);
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $30 = ___cxa_find_matching_catch_2()|0;
  $31 = tempRet0;
  $6 = $30;
  $7 = $31;
  __ZNSt3__16localeD2Ev($5);
  $32 = $6;
  $33 = $7;
  ___resumeException($32|0);
  // unreachable;
 }
 $21 = $4;
 $0 = $18;
 $1 = $21;
 $22 = $0;
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 28|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = $1;
 __THREW__ = 0;
 $27 = (invoke_iii($25|0,($22|0),($26|0))|0);
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 if ($29) {
  $30 = ___cxa_find_matching_catch_2()|0;
  $31 = tempRet0;
  $6 = $30;
  $7 = $31;
  __ZNSt3__16localeD2Ev($5);
  $32 = $6;
  $33 = $7;
  ___resumeException($32|0);
  // unreachable;
 } else {
  __ZNSt3__16localeD2Ev($5);
  (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($9,$27)|0);
  $34 = $8;
  (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($34)|0);
  $35 = $8;
  STACKTOP = sp;return ($35|0);
 }
 return (0)|0;
}
function __ZN7Message6setPosERK3Pos($this,$pos) {
 $this = $this|0;
 $pos = $pos|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $pos;
 $2 = $0;
 $3 = ((($2)) + 16|0);
 $4 = $1;
 ;HEAP32[$3>>2]=HEAP32[$4>>2]|0;HEAP32[$3+4>>2]=HEAP32[$4+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZNSt3__111char_traitsIcE6assignERcRKc($__c1,$__c2) {
 $__c1 = $__c1|0;
 $__c2 = $__c2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__c1;
 $1 = $__c2;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $0;
 HEAP8[$4>>0] = $3;
 STACKTOP = sp;return;
}
function __ZN6MemoryC2EPS_($this,$prev) {
 $this = $this|0;
 $prev = $prev|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $3 = sp + 21|0;
 $4 = sp + 20|0;
 $5 = $this;
 $6 = $prev;
 $7 = $5;
 $8 = ((($7)) + 4|0);
 $2 = $8;
 $9 = $2;
 ;HEAP8[$1>>0]=HEAP8[$4>>0]|0;
 $0 = $3;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEEC2ERKSD_($9,$3);
 $10 = $6;
 HEAP32[$7>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEEC2ERKSD_($this,$__comp) {
 $this = $this|0;
 $__comp = $__comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = sp + 48|0;
 $11 = sp + 8|0;
 $14 = sp + 36|0;
 $15 = sp + 93|0;
 $16 = sp;
 $23 = sp + 92|0;
 $21 = $this;
 $22 = $__comp;
 $24 = $21;
 $25 = ((($24)) + 4|0);
 $20 = $25;
 $26 = $20;
 $19 = $26;
 $27 = $19;
 $18 = $27;
 $17 = $27;
 $28 = $17;
 HEAP32[$28>>2] = 0;
 $29 = ((($24)) + 8|0);
 ;HEAP8[$16>>0]=HEAP8[$23>>0]|0;
 $13 = $29;
 HEAP32[$14>>2] = 0;
 $30 = $13;
 $12 = $14;
 $31 = $12;
 $32 = HEAP32[$31>>2]|0;
 $6 = $16;
 ;HEAP8[$11>>0]=HEAP8[$15>>0]|0;
 $9 = $30;
 HEAP32[$10>>2] = $32;
 $33 = $9;
 $8 = $11;
 $7 = $10;
 $34 = $7;
 $35 = HEAP32[$34>>2]|0;
 HEAP32[$33>>2] = $35;
 $4 = $24;
 $36 = $4;
 $37 = ((($36)) + 4|0);
 $3 = $37;
 $38 = $3;
 $2 = $38;
 $39 = $2;
 $1 = $39;
 $40 = $1;
 $0 = $40;
 $41 = $0;
 $5 = $24;
 $42 = $5;
 HEAP32[$42>>2] = $41;
 STACKTOP = sp;return;
}
function __ZN6Memory6setVarE3Var($this,$var) {
 $this = $this|0;
 $var = $var|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $varPointer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp;
 $7 = sp + 164|0;
 $11 = sp + 144|0;
 $30 = sp + 52|0;
 $33 = sp + 16|0;
 $34 = sp + 8|0;
 $29 = $this;
 $35 = $29;
 $28 = $var;
 $36 = $28;
 $27 = $36;
 $37 = $27;
 $26 = $37;
 $38 = $26;
 $25 = $38;
 $39 = $25;
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&255;
 $42 = $41 & 1;
 $43 = ($42|0)!=(0);
 if ($43) {
  $21 = $36;
  $44 = $21;
  $20 = $44;
  $45 = $20;
  $19 = $45;
  $46 = $19;
  $47 = ((($46)) + 4|0);
  $48 = HEAP32[$47>>2]|0;
  $55 = $48;
 } else {
  $24 = $36;
  $49 = $24;
  $23 = $49;
  $50 = $23;
  $22 = $50;
  $51 = $22;
  $52 = HEAP8[$51>>0]|0;
  $53 = $52&255;
  $54 = $53 >> 1;
  $55 = $54;
 }
 $56 = ($55>>>0)>(0);
 if (!($56)) {
  ___assert_fail((11791|0),(11811|0),12,(11853|0));
  // unreachable;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($30,$var);
 __THREW__ = 0;
 $57 = (invoke_iii(612,($35|0),($30|0))|0);
 $58 = __THREW__; __THREW__ = 0;
 $59 = $58&1;
 if ($59) {
  $91 = ___cxa_find_matching_catch_2()|0;
  $92 = tempRet0;
  $31 = $91;
  $32 = $92;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
  $96 = $31;
  $97 = $32;
  ___resumeException($96|0);
  // unreachable;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
 $varPointer = $57;
 $60 = $varPointer;
 $61 = ($60|0)==(0|0);
 if (!($61)) {
  $95 = $varPointer;
  (__ZN3VaraSERKS_($95,$var)|0);
  STACKTOP = sp;return;
 }
 $62 = ((($35)) + 4|0);
 $14 = $33;
 $15 = $var;
 $16 = $var;
 $63 = $14;
 $64 = $15;
 $13 = $64;
 $65 = $13;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($63,$65);
 $66 = ((($63)) + 12|0);
 $67 = $16;
 $12 = $67;
 $68 = $12;
 __THREW__ = 0;
 invoke_vii(613,($66|0),($68|0));
 $69 = __THREW__; __THREW__ = 0;
 $70 = $69&1;
 if ($70) {
  $71 = ___cxa_find_matching_catch_2()|0;
  $72 = tempRet0;
  $17 = $71;
  $18 = $72;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
  $73 = $17;
  $74 = $18;
  ___resumeException($73|0);
  // unreachable;
 }
 $9 = $62;
 $10 = $33;
 $75 = $9;
 $76 = $10;
 $8 = $76;
 $77 = $8;
 __THREW__ = 0;
 invoke_viii(614,($11|0),($75|0),($77|0));
 $78 = __THREW__; __THREW__ = 0;
 $79 = $78&1;
 if ($79) {
  $93 = ___cxa_find_matching_catch_2()|0;
  $94 = tempRet0;
  $31 = $93;
  $32 = $94;
  __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($33);
  $96 = $31;
  $97 = $32;
  ___resumeException($96|0);
  // unreachable;
 } else {
  $4 = $34;
  $5 = $11;
  $6 = 0;
  $80 = $4;
  $81 = $5;
  $3 = $81;
  $82 = $3;
  ;HEAP32[$7>>2]=HEAP32[$82>>2]|0;
  ;HEAP8[$1>>0]=HEAP8[$7>>0]|0;HEAP8[$1+1>>0]=HEAP8[$7+1>>0]|0;HEAP8[$1+2>>0]=HEAP8[$7+2>>0]|0;HEAP8[$1+3>>0]=HEAP8[$7+3>>0]|0;
  $0 = $80;
  $83 = $0;
  ;HEAP32[$83>>2]=HEAP32[$1>>2]|0;
  $84 = ((($80)) + 4|0);
  $85 = $5;
  $86 = ((($85)) + 4|0);
  $2 = $86;
  $87 = $2;
  $88 = HEAP8[$87>>0]|0;
  $89 = $88&1;
  $90 = $89&1;
  HEAP8[$84>>0] = $90;
  __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($33);
  STACKTOP = sp;return;
 }
}
function __ZN6Memory14findVarPointerENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$name) {
 $this = $this|0;
 $name = $name|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = sp + 8|0;
 $15 = sp + 124|0;
 $17 = sp + 116|0;
 $19 = sp + 108|0;
 $21 = sp;
 $22 = sp + 100|0;
 $25 = sp + 88|0;
 $38 = sp + 36|0;
 $39 = sp + 32|0;
 $40 = sp + 20|0;
 $37 = $this;
 $43 = $37;
 $35 = $name;
 $44 = $35;
 $34 = $44;
 $45 = $34;
 $33 = $45;
 $46 = $33;
 $32 = $46;
 $47 = $32;
 $48 = HEAP8[$47>>0]|0;
 $49 = $48&255;
 $50 = $49 & 1;
 $51 = ($50|0)!=(0);
 if ($51) {
  $28 = $44;
  $52 = $28;
  $27 = $52;
  $53 = $27;
  $26 = $53;
  $54 = $26;
  $55 = ((($54)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $63 = $56;
 } else {
  $31 = $44;
  $57 = $31;
  $30 = $57;
  $58 = $30;
  $29 = $58;
  $59 = $29;
  $60 = HEAP8[$59>>0]|0;
  $61 = $60&255;
  $62 = $61 >> 1;
  $63 = $62;
 }
 $64 = ($63>>>0)>(0);
 if (!($64)) {
  ___assert_fail((11860|0),(11811|0),36,(11876|0));
  // unreachable;
 }
 $65 = ((($43)) + 4|0);
 $23 = $65;
 $24 = $name;
 $66 = $23;
 $67 = $24;
 $68 = (__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($66,$67)|0);
 HEAP32[$25>>2] = $68;
 ;HEAP8[$21>>0]=HEAP8[$25>>0]|0;HEAP8[$21+1>>0]=HEAP8[$25+1>>0]|0;HEAP8[$21+2>>0]=HEAP8[$25+2>>0]|0;HEAP8[$21+3>>0]=HEAP8[$25+3>>0]|0;
 $20 = $22;
 $69 = $20;
 ;HEAP32[$69>>2]=HEAP32[$21>>2]|0;
 $70 = HEAP32[$22>>2]|0;
 HEAP32[$38>>2] = $70;
 $71 = ((($43)) + 4|0);
 $18 = $71;
 $72 = $18;
 $16 = $72;
 $73 = $16;
 $14 = $73;
 $74 = $14;
 $75 = ((($74)) + 4|0);
 $13 = $75;
 $76 = $13;
 $12 = $76;
 $77 = $12;
 $11 = $77;
 $78 = $11;
 $10 = $78;
 $79 = $10;
 $8 = $15;
 $9 = $79;
 $80 = $8;
 $81 = $9;
 HEAP32[$80>>2] = $81;
 $82 = HEAP32[$15>>2]|0;
 HEAP32[$19>>2] = $82;
 ;HEAP8[$7>>0]=HEAP8[$19>>0]|0;HEAP8[$7+1>>0]=HEAP8[$19+1>>0]|0;HEAP8[$7+2>>0]=HEAP8[$19+2>>0]|0;HEAP8[$7+3>>0]=HEAP8[$19+3>>0]|0;
 $6 = $17;
 $83 = $6;
 ;HEAP32[$83>>2]=HEAP32[$7>>2]|0;
 $84 = HEAP32[$17>>2]|0;
 HEAP32[$39>>2] = $84;
 $4 = $38;
 $5 = $39;
 $85 = $4;
 $86 = $5;
 $2 = $85;
 $3 = $86;
 $87 = $2;
 $88 = $3;
 $0 = $87;
 $1 = $88;
 $89 = $0;
 $90 = HEAP32[$89>>2]|0;
 $91 = $1;
 $92 = HEAP32[$91>>2]|0;
 $93 = ($90|0)==($92|0);
 $94 = $93 ^ 1;
 if ($94) {
  $95 = ((($43)) + 4|0);
  $96 = (__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEEixERSB_($95,$name)|0);
  $36 = $96;
  $107 = $36;
  STACKTOP = sp;return ($107|0);
 }
 $97 = HEAP32[$43>>2]|0;
 $98 = ($97|0)!=(0|0);
 if (!($98)) {
  $36 = 0;
  $107 = $36;
  STACKTOP = sp;return ($107|0);
 }
 $99 = HEAP32[$43>>2]|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($40,$name);
 __THREW__ = 0;
 $100 = (invoke_iii(612,($99|0),($40|0))|0);
 $101 = __THREW__; __THREW__ = 0;
 $102 = $101&1;
 if ($102) {
  $103 = ___cxa_find_matching_catch_2()|0;
  $104 = tempRet0;
  $41 = $103;
  $42 = $104;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
  $105 = $41;
  $106 = $42;
  ___resumeException($105|0);
  // unreachable;
 }
 $36 = $100;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
 $107 = $36;
 STACKTOP = sp;return ($107|0);
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lhs_sz$i$i$i$i = 0, $__p = 0, $__result$i$i$i$i = 0, $__rhs_sz$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $15 = sp + 384|0;
 $41 = sp;
 $44 = sp + 448|0;
 $__lhs_sz$i$i$i$i = sp + 124|0;
 $__rhs_sz$i$i$i$i = sp + 120|0;
 $97 = sp + 52|0;
 $105 = sp + 20|0;
 $__p = sp + 8|0;
 $108 = sp + 4|0;
 $106 = $this;
 $107 = $__v;
 $109 = $106;
 $110 = $107;
 $104 = $109;
 $111 = $104;
 $103 = $111;
 $112 = $103;
 $113 = ((($112)) + 4|0);
 $102 = $113;
 $114 = $102;
 $101 = $114;
 $115 = $101;
 $100 = $115;
 $116 = $100;
 $99 = $116;
 $117 = $99;
 $118 = HEAP32[$117>>2]|0;
 $21 = $109;
 $119 = $21;
 $120 = ((($119)) + 4|0);
 $20 = $120;
 $121 = $20;
 $19 = $121;
 $122 = $19;
 $18 = $122;
 $123 = $18;
 $17 = $123;
 $124 = $17;
 $125 = (__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($109,$110,$118,$124)|0);
 HEAP32[$__p>>2] = $125;
 $16 = $109;
 $126 = $16;
 $14 = $126;
 $127 = $14;
 $128 = ((($127)) + 4|0);
 $13 = $128;
 $129 = $13;
 $12 = $129;
 $130 = $12;
 $11 = $130;
 $131 = $11;
 $10 = $131;
 $132 = $10;
 $8 = $15;
 $9 = $132;
 $133 = $8;
 $134 = $9;
 HEAP32[$133>>2] = $134;
 $135 = HEAP32[$15>>2]|0;
 HEAP32[$108>>2] = $135;
 $2 = $__p;
 $3 = $108;
 $136 = $2;
 $137 = $3;
 $0 = $136;
 $1 = $137;
 $138 = $0;
 $139 = HEAP32[$138>>2]|0;
 $140 = $1;
 $141 = HEAP32[$140>>2]|0;
 $142 = ($139|0)==($141|0);
 $143 = $142 ^ 1;
 if ($143) {
  $6 = $109;
  $144 = $6;
  $145 = ((($144)) + 8|0);
  $5 = $145;
  $146 = $5;
  $4 = $146;
  $147 = $4;
  $148 = $107;
  $7 = $__p;
  $149 = $7;
  $150 = HEAP32[$149>>2]|0;
  $151 = ((($150)) + 16|0);
  $87 = $147;
  $88 = $148;
  $89 = $151;
  $152 = $87;
  $153 = $88;
  $154 = $89;
  $84 = $152;
  $85 = $153;
  $86 = $154;
  $155 = $85;
  $156 = $86;
  $82 = $155;
  $83 = $156;
  $157 = $82;
  $158 = $83;
  $80 = $157;
  $81 = $158;
  $159 = $80;
  $78 = $159;
  $160 = $78;
  $77 = $160;
  $161 = $77;
  $76 = $161;
  $162 = $76;
  $75 = $162;
  $163 = $75;
  $164 = HEAP8[$163>>0]|0;
  $165 = $164&255;
  $166 = $165 & 1;
  $167 = ($166|0)!=(0);
  if ($167) {
   $71 = $160;
   $168 = $71;
   $70 = $168;
   $169 = $70;
   $69 = $169;
   $170 = $69;
   $171 = ((($170)) + 4|0);
   $172 = HEAP32[$171>>2]|0;
   $179 = $172;
  } else {
   $74 = $160;
   $173 = $74;
   $73 = $173;
   $174 = $73;
   $72 = $174;
   $175 = $72;
   $176 = HEAP8[$175>>0]|0;
   $177 = $176&255;
   $178 = $177 >> 1;
   $179 = $178;
  }
  HEAP32[$__lhs_sz$i$i$i$i>>2] = $179;
  $180 = $81;
  $68 = $180;
  $181 = $68;
  $67 = $181;
  $182 = $67;
  $66 = $182;
  $183 = $66;
  $65 = $183;
  $184 = $65;
  $185 = HEAP8[$184>>0]|0;
  $186 = $185&255;
  $187 = $186 & 1;
  $188 = ($187|0)!=(0);
  if ($188) {
   $61 = $181;
   $189 = $61;
   $60 = $189;
   $190 = $60;
   $59 = $190;
   $191 = $59;
   $192 = ((($191)) + 4|0);
   $193 = HEAP32[$192>>2]|0;
   $200 = $193;
  } else {
   $64 = $181;
   $194 = $64;
   $63 = $194;
   $195 = $63;
   $62 = $195;
   $196 = $62;
   $197 = HEAP8[$196>>0]|0;
   $198 = $197&255;
   $199 = $198 >> 1;
   $200 = $199;
  }
  HEAP32[$__rhs_sz$i$i$i$i>>2] = $200;
  $58 = $159;
  $201 = $58;
  $57 = $201;
  $202 = $57;
  $56 = $202;
  $203 = $56;
  $55 = $203;
  $204 = $55;
  $54 = $204;
  $205 = $54;
  $206 = HEAP8[$205>>0]|0;
  $207 = $206&255;
  $208 = $207 & 1;
  $209 = ($208|0)!=(0);
  if ($209) {
   $48 = $202;
   $210 = $48;
   $47 = $210;
   $211 = $47;
   $46 = $211;
   $212 = $46;
   $213 = ((($212)) + 8|0);
   $214 = HEAP32[$213>>2]|0;
   $221 = $214;
  } else {
   $53 = $202;
   $215 = $53;
   $52 = $215;
   $216 = $52;
   $51 = $216;
   $217 = $51;
   $218 = ((($217)) + 1|0);
   $50 = $218;
   $219 = $50;
   $49 = $219;
   $220 = $49;
   $221 = $220;
  }
  $45 = $221;
  $222 = $45;
  $223 = $81;
  $35 = $223;
  $224 = $35;
  $34 = $224;
  $225 = $34;
  $33 = $225;
  $226 = $33;
  $32 = $226;
  $227 = $32;
  $31 = $227;
  $228 = $31;
  $229 = HEAP8[$228>>0]|0;
  $230 = $229&255;
  $231 = $230 & 1;
  $232 = ($231|0)!=(0);
  if ($232) {
   $25 = $225;
   $233 = $25;
   $24 = $233;
   $234 = $24;
   $23 = $234;
   $235 = $23;
   $236 = ((($235)) + 8|0);
   $237 = HEAP32[$236>>2]|0;
   $244 = $237;
  } else {
   $30 = $225;
   $238 = $30;
   $29 = $238;
   $239 = $29;
   $28 = $239;
   $240 = $28;
   $241 = ((($240)) + 1|0);
   $27 = $241;
   $242 = $27;
   $26 = $242;
   $243 = $26;
   $244 = $243;
  }
  $22 = $244;
  $245 = $22;
  $42 = $__lhs_sz$i$i$i$i;
  $43 = $__rhs_sz$i$i$i$i;
  $246 = $42;
  $247 = $43;
  ;HEAP8[$41>>0]=HEAP8[$44>>0]|0;
  $39 = $246;
  $40 = $247;
  $248 = $40;
  $249 = $39;
  $36 = $41;
  $37 = $248;
  $38 = $249;
  $250 = $37;
  $251 = HEAP32[$250>>2]|0;
  $252 = $38;
  $253 = HEAP32[$252>>2]|0;
  $254 = ($251>>>0)<($253>>>0);
  $255 = $40;
  $256 = $39;
  $257 = $254 ? $255 : $256;
  $258 = HEAP32[$257>>2]|0;
  __THREW__ = 0;
  $259 = (invoke_iiii(615,($222|0),($245|0),($258|0))|0);
  $260 = __THREW__; __THREW__ = 0;
  $261 = $260&1;
  if ($261) {
   $271 = ___cxa_find_matching_catch_3(0|0)|0;
   $272 = tempRet0;
   ___clang_call_terminate($271);
   // unreachable;
  }
  $__result$i$i$i$i = $259;
  $262 = $__result$i$i$i$i;
  $263 = ($262|0)!=(0);
  do {
   if ($263) {
    $264 = $__result$i$i$i$i;
    $79 = $264;
   } else {
    $265 = HEAP32[$__lhs_sz$i$i$i$i>>2]|0;
    $266 = HEAP32[$__rhs_sz$i$i$i$i>>2]|0;
    $267 = ($265>>>0)<($266>>>0);
    if ($267) {
     $79 = -1;
     break;
    }
    $268 = HEAP32[$__lhs_sz$i$i$i$i>>2]|0;
    $269 = HEAP32[$__rhs_sz$i$i$i$i>>2]|0;
    $270 = ($268>>>0)>($269>>>0);
    if ($270) {
     $79 = 1;
     break;
    } else {
     $79 = 0;
     break;
    }
   }
  } while(0);
  $273 = $79;
  $274 = ($273|0)<(0);
  if (!($274)) {
   ;HEAP32[$105>>2]=HEAP32[$__p>>2]|0;
   $285 = HEAP32[$105>>2]|0;
   STACKTOP = sp;return ($285|0);
  }
 }
 $98 = $109;
 $275 = $98;
 $96 = $275;
 $276 = $96;
 $277 = ((($276)) + 4|0);
 $95 = $277;
 $278 = $95;
 $94 = $278;
 $279 = $94;
 $93 = $279;
 $280 = $93;
 $92 = $280;
 $281 = $92;
 $90 = $97;
 $91 = $281;
 $282 = $90;
 $283 = $91;
 HEAP32[$282>>2] = $283;
 $284 = HEAP32[$97>>2]|0;
 HEAP32[$105>>2] = $284;
 $285 = HEAP32[$105>>2]|0;
 STACKTOP = sp;return ($285|0);
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE13__lower_boundIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_SL_SL_($this,$__v,$__root,$__result) {
 $this = $this|0;
 $__v = $__v|0;
 $__root = $__root|0;
 $__result = $__result|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__lhs_sz$i$i$i$i = 0, $__result$i$i$i$i = 0, $__rhs_sz$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $19 = sp;
 $22 = sp + 320|0;
 $__lhs_sz$i$i$i$i = sp + 84|0;
 $__rhs_sz$i$i$i$i = sp + 80|0;
 $73 = sp + 20|0;
 $74 = $this;
 $75 = $__v;
 $76 = $__root;
 $77 = $__result;
 $78 = $74;
 while(1) {
  $79 = $76;
  $80 = ($79|0)!=(0|0);
  if (!($80)) {
   label = 27;
   break;
  }
  $72 = $78;
  $81 = $72;
  $82 = ((($81)) + 8|0);
  $71 = $82;
  $83 = $71;
  $70 = $83;
  $84 = $70;
  $85 = $76;
  $86 = ((($85)) + 16|0);
  $87 = $75;
  $65 = $84;
  $66 = $86;
  $67 = $87;
  $88 = $65;
  $89 = $66;
  $90 = $67;
  $62 = $88;
  $63 = $89;
  $64 = $90;
  $91 = $63;
  $92 = $64;
  $60 = $91;
  $61 = $92;
  $93 = $60;
  $94 = $61;
  $58 = $93;
  $59 = $94;
  $95 = $58;
  $56 = $95;
  $96 = $56;
  $55 = $96;
  $97 = $55;
  $54 = $97;
  $98 = $54;
  $53 = $98;
  $99 = $53;
  $100 = HEAP8[$99>>0]|0;
  $101 = $100&255;
  $102 = $101 & 1;
  $103 = ($102|0)!=(0);
  if ($103) {
   $49 = $96;
   $104 = $49;
   $48 = $104;
   $105 = $48;
   $47 = $105;
   $106 = $47;
   $107 = ((($106)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $115 = $108;
  } else {
   $52 = $96;
   $109 = $52;
   $51 = $109;
   $110 = $51;
   $50 = $110;
   $111 = $50;
   $112 = HEAP8[$111>>0]|0;
   $113 = $112&255;
   $114 = $113 >> 1;
   $115 = $114;
  }
  HEAP32[$__lhs_sz$i$i$i$i>>2] = $115;
  $116 = $59;
  $46 = $116;
  $117 = $46;
  $45 = $117;
  $118 = $45;
  $44 = $118;
  $119 = $44;
  $43 = $119;
  $120 = $43;
  $121 = HEAP8[$120>>0]|0;
  $122 = $121&255;
  $123 = $122 & 1;
  $124 = ($123|0)!=(0);
  if ($124) {
   $39 = $117;
   $125 = $39;
   $38 = $125;
   $126 = $38;
   $37 = $126;
   $127 = $37;
   $128 = ((($127)) + 4|0);
   $129 = HEAP32[$128>>2]|0;
   $136 = $129;
  } else {
   $42 = $117;
   $130 = $42;
   $41 = $130;
   $131 = $41;
   $40 = $131;
   $132 = $40;
   $133 = HEAP8[$132>>0]|0;
   $134 = $133&255;
   $135 = $134 >> 1;
   $136 = $135;
  }
  HEAP32[$__rhs_sz$i$i$i$i>>2] = $136;
  $36 = $95;
  $137 = $36;
  $35 = $137;
  $138 = $35;
  $34 = $138;
  $139 = $34;
  $33 = $139;
  $140 = $33;
  $32 = $140;
  $141 = $32;
  $142 = HEAP8[$141>>0]|0;
  $143 = $142&255;
  $144 = $143 & 1;
  $145 = ($144|0)!=(0);
  if ($145) {
   $26 = $138;
   $146 = $26;
   $25 = $146;
   $147 = $25;
   $24 = $147;
   $148 = $24;
   $149 = ((($148)) + 8|0);
   $150 = HEAP32[$149>>2]|0;
   $157 = $150;
  } else {
   $31 = $138;
   $151 = $31;
   $30 = $151;
   $152 = $30;
   $29 = $152;
   $153 = $29;
   $154 = ((($153)) + 1|0);
   $28 = $154;
   $155 = $28;
   $27 = $155;
   $156 = $27;
   $157 = $156;
  }
  $23 = $157;
  $158 = $23;
  $159 = $59;
  $13 = $159;
  $160 = $13;
  $12 = $160;
  $161 = $12;
  $11 = $161;
  $162 = $11;
  $10 = $162;
  $163 = $10;
  $9 = $163;
  $164 = $9;
  $165 = HEAP8[$164>>0]|0;
  $166 = $165&255;
  $167 = $166 & 1;
  $168 = ($167|0)!=(0);
  if ($168) {
   $3 = $161;
   $169 = $3;
   $2 = $169;
   $170 = $2;
   $1 = $170;
   $171 = $1;
   $172 = ((($171)) + 8|0);
   $173 = HEAP32[$172>>2]|0;
   $180 = $173;
  } else {
   $8 = $161;
   $174 = $8;
   $7 = $174;
   $175 = $7;
   $6 = $175;
   $176 = $6;
   $177 = ((($176)) + 1|0);
   $5 = $177;
   $178 = $5;
   $4 = $178;
   $179 = $4;
   $180 = $179;
  }
  $0 = $180;
  $181 = $0;
  $20 = $__lhs_sz$i$i$i$i;
  $21 = $__rhs_sz$i$i$i$i;
  $182 = $20;
  $183 = $21;
  ;HEAP8[$19>>0]=HEAP8[$22>>0]|0;
  $17 = $182;
  $18 = $183;
  $184 = $18;
  $185 = $17;
  $14 = $19;
  $15 = $184;
  $16 = $185;
  $186 = $15;
  $187 = HEAP32[$186>>2]|0;
  $188 = $16;
  $189 = HEAP32[$188>>2]|0;
  $190 = ($187>>>0)<($189>>>0);
  $191 = $18;
  $192 = $17;
  $193 = $190 ? $191 : $192;
  $194 = HEAP32[$193>>2]|0;
  __THREW__ = 0;
  $195 = (invoke_iiii(615,($158|0),($181|0),($194|0))|0);
  $196 = __THREW__; __THREW__ = 0;
  $197 = $196&1;
  if ($197) {
   label = 23;
   break;
  }
  $__result$i$i$i$i = $195;
  $198 = $__result$i$i$i$i;
  $199 = ($198|0)!=(0);
  do {
   if ($199) {
    $200 = $__result$i$i$i$i;
    $57 = $200;
   } else {
    $201 = HEAP32[$__lhs_sz$i$i$i$i>>2]|0;
    $202 = HEAP32[$__rhs_sz$i$i$i$i>>2]|0;
    $203 = ($201>>>0)<($202>>>0);
    if ($203) {
     $57 = -1;
     break;
    }
    $204 = HEAP32[$__lhs_sz$i$i$i$i>>2]|0;
    $205 = HEAP32[$__rhs_sz$i$i$i$i>>2]|0;
    $206 = ($204>>>0)>($205>>>0);
    if ($206) {
     $57 = 1;
     break;
    } else {
     $57 = 0;
     break;
    }
   }
  } while(0);
  $209 = $57;
  $210 = ($209|0)<(0);
  $211 = $76;
  if ($210) {
   $214 = ((($211)) + 4|0);
   $215 = HEAP32[$214>>2]|0;
   $76 = $215;
   continue;
  } else {
   $77 = $211;
   $212 = $76;
   $213 = HEAP32[$212>>2]|0;
   $76 = $213;
   continue;
  }
 }
 if ((label|0) == 23) {
  $207 = ___cxa_find_matching_catch_3(0|0)|0;
  $208 = tempRet0;
  ___clang_call_terminate($207);
  // unreachable;
 }
 else if ((label|0) == 27) {
  $216 = $77;
  $68 = $73;
  $69 = $216;
  $217 = $68;
  $218 = $69;
  HEAP32[$217>>2] = $218;
  $219 = HEAP32[$73>>2]|0;
  STACKTOP = sp;return ($219|0);
 }
 return (0)|0;
}
function __ZNSt3__111char_traitsIcE7compareEPKcS3_j($__s1,$__s2,$__n) {
 $__s1 = $__s1|0;
 $__s2 = $__s2|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__s1;
 $1 = $__s2;
 $2 = $__n;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (_memcmp($3,$4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEEixERSB_($this,$__k) {
 $this = $this|0;
 $__k = $__k|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__child = 0, $__h = 0, $__parent = 0;
 var $__r = 0, $__t$i = 0, $__tmp$i$i = 0, $__tmp$i$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 24|0;
 $9 = sp + 339|0;
 $20 = sp + 16|0;
 $23 = sp + 338|0;
 $43 = sp + 8|0;
 $46 = sp + 337|0;
 $57 = sp;
 $60 = sp + 336|0;
 $__parent = sp + 56|0;
 $__h = sp + 36|0;
 $72 = $this;
 $73 = $__k;
 $76 = $72;
 $77 = $73;
 $78 = (__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($76,$__parent,$77)|0);
 $__child = $78;
 $79 = $__child;
 $80 = HEAP32[$79>>2]|0;
 $__r = $80;
 $81 = $__child;
 $82 = HEAP32[$81>>2]|0;
 $83 = ($82|0)==(0|0);
 if (!($83)) {
  $192 = $__r;
  $193 = ((($192)) + 16|0);
  $194 = ((($193)) + 12|0);
  STACKTOP = sp;return ($194|0);
 }
 $84 = $73;
 __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE25__construct_node_with_keyERSB_($__h,$76,$84);
 $85 = HEAP32[$__parent>>2]|0;
 $86 = $__child;
 $71 = $__h;
 $87 = $71;
 $70 = $87;
 $88 = $70;
 $69 = $88;
 $89 = $69;
 $90 = HEAP32[$89>>2]|0;
 __THREW__ = 0;
 invoke_viiii(616,($76|0),($85|0),($86|0),($90|0));
 $91 = __THREW__; __THREW__ = 0;
 $92 = $91&1;
 if ($92) {
  $145 = ___cxa_find_matching_catch_2()|0;
  $146 = tempRet0;
  $74 = $145;
  $75 = $146;
  $68 = $__h;
  $147 = $68;
  $66 = $147;
  $67 = 0;
  $148 = $66;
  $65 = $148;
  $149 = $65;
  $64 = $149;
  $150 = $64;
  $151 = HEAP32[$150>>2]|0;
  $__tmp$i$i = $151;
  $152 = $67;
  $40 = $148;
  $153 = $40;
  $39 = $153;
  $154 = $39;
  HEAP32[$154>>2] = $152;
  $155 = $__tmp$i$i;
  $156 = ($155|0)!=(0|0);
  if (!($156)) {
   $195 = $74;
   $196 = $75;
   ___resumeException($195|0);
   // unreachable;
  }
  $38 = $148;
  $157 = $38;
  $37 = $157;
  $158 = $37;
  $159 = ((($158)) + 4|0);
  $160 = $__tmp$i$i;
  $62 = $159;
  $63 = $160;
  $161 = $62;
  $162 = ((($161)) + 5|0);
  $163 = HEAP8[$162>>0]|0;
  $164 = $163&1;
  if ($164) {
   $165 = HEAP32[$161>>2]|0;
   $166 = $63;
   $167 = ((($166)) + 16|0);
   $168 = ((($167)) + 12|0);
   $61 = $168;
   $169 = $61;
   $58 = $165;
   $59 = $169;
   $170 = $58;
   $171 = $59;
   ;HEAP8[$57>>0]=HEAP8[$60>>0]|0;
   $55 = $170;
   $56 = $171;
   $172 = $56;
   __ZN3VarD2Ev($172);
  }
  $173 = ((($161)) + 4|0);
  $174 = HEAP8[$173>>0]|0;
  $175 = $174&1;
  if ($175) {
   $176 = HEAP32[$161>>2]|0;
   $177 = $63;
   $178 = ((($177)) + 16|0);
   $54 = $178;
   $179 = $54;
   $44 = $176;
   $45 = $179;
   $180 = $44;
   $181 = $45;
   ;HEAP8[$43>>0]=HEAP8[$46>>0]|0;
   $41 = $180;
   $42 = $181;
   $182 = $42;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($182);
  }
  $183 = $63;
  $184 = ($183|0)!=(0|0);
  if (!($184)) {
   $195 = $74;
   $196 = $75;
   ___resumeException($195|0);
   // unreachable;
  }
  $185 = HEAP32[$161>>2]|0;
  $186 = $63;
  $51 = $185;
  $52 = $186;
  $53 = 1;
  $187 = $51;
  $188 = $52;
  $189 = $53;
  $48 = $187;
  $49 = $188;
  $50 = $189;
  $190 = $49;
  $47 = $190;
  $191 = $47;
  __ZdlPv($191);
  $195 = $74;
  $196 = $75;
  ___resumeException($195|0);
  // unreachable;
 } else {
  $36 = $__h;
  $93 = $36;
  $35 = $93;
  $94 = $35;
  $34 = $94;
  $95 = $34;
  $96 = HEAP32[$95>>2]|0;
  $__t$i = $96;
  $33 = $93;
  $97 = $33;
  $32 = $97;
  $98 = $32;
  HEAP32[$98>>2] = 0;
  $99 = $__t$i;
  $__r = $99;
  $31 = $__h;
  $100 = $31;
  $29 = $100;
  $30 = 0;
  $101 = $29;
  $28 = $101;
  $102 = $28;
  $27 = $102;
  $103 = $27;
  $104 = HEAP32[$103>>2]|0;
  $__tmp$i$i1 = $104;
  $105 = $30;
  $3 = $101;
  $106 = $3;
  $2 = $106;
  $107 = $2;
  HEAP32[$107>>2] = $105;
  $108 = $__tmp$i$i1;
  $109 = ($108|0)!=(0|0);
  if (!($109)) {
   $192 = $__r;
   $193 = ((($192)) + 16|0);
   $194 = ((($193)) + 12|0);
   STACKTOP = sp;return ($194|0);
  }
  $1 = $101;
  $110 = $1;
  $0 = $110;
  $111 = $0;
  $112 = ((($111)) + 4|0);
  $113 = $__tmp$i$i1;
  $25 = $112;
  $26 = $113;
  $114 = $25;
  $115 = ((($114)) + 5|0);
  $116 = HEAP8[$115>>0]|0;
  $117 = $116&1;
  if ($117) {
   $118 = HEAP32[$114>>2]|0;
   $119 = $26;
   $120 = ((($119)) + 16|0);
   $121 = ((($120)) + 12|0);
   $24 = $121;
   $122 = $24;
   $21 = $118;
   $22 = $122;
   $123 = $21;
   $124 = $22;
   ;HEAP8[$20>>0]=HEAP8[$23>>0]|0;
   $18 = $123;
   $19 = $124;
   $125 = $19;
   __ZN3VarD2Ev($125);
  }
  $126 = ((($114)) + 4|0);
  $127 = HEAP8[$126>>0]|0;
  $128 = $127&1;
  if ($128) {
   $129 = HEAP32[$114>>2]|0;
   $130 = $26;
   $131 = ((($130)) + 16|0);
   $17 = $131;
   $132 = $17;
   $7 = $129;
   $8 = $132;
   $133 = $7;
   $134 = $8;
   ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
   $4 = $133;
   $5 = $134;
   $135 = $5;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($135);
  }
  $136 = $26;
  $137 = ($136|0)!=(0|0);
  if (!($137)) {
   $192 = $__r;
   $193 = ((($192)) + 16|0);
   $194 = ((($193)) + 12|0);
   STACKTOP = sp;return ($194|0);
  }
  $138 = HEAP32[$114>>2]|0;
  $139 = $26;
  $14 = $138;
  $15 = $139;
  $16 = 1;
  $140 = $14;
  $141 = $15;
  $142 = $16;
  $11 = $140;
  $12 = $141;
  $13 = $142;
  $143 = $12;
  $10 = $143;
  $144 = $10;
  __ZdlPv($144);
  $192 = $__r;
  $193 = ((($192)) + 16|0);
  $194 = ((($193)) + 12|0);
  STACKTOP = sp;return ($194|0);
 }
 return (0)|0;
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this,$__parent,$__k) {
 $this = $this|0;
 $__parent = $__parent|0;
 $__k = $__k|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lhs_sz$i$i$i = 0, $__lhs_sz$i$i$i1 = 0, $__nd = 0, $__result$i$i$i = 0, $__result$i$i$i3 = 0, $__rhs_sz$i$i$i = 0, $__rhs_sz$i$i$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 640|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $19 = sp + 8|0;
 $22 = sp + 637|0;
 $__lhs_sz$i$i$i1 = sp + 400|0;
 $__rhs_sz$i$i$i2 = sp + 396|0;
 $92 = sp;
 $95 = sp + 636|0;
 $__lhs_sz$i$i$i = sp + 104|0;
 $__rhs_sz$i$i$i = sp + 100|0;
 $150 = $this;
 $151 = $__parent;
 $152 = $__k;
 $153 = $150;
 $148 = $153;
 $154 = $148;
 $147 = $154;
 $155 = $147;
 $156 = ((($155)) + 4|0);
 $146 = $156;
 $157 = $146;
 $145 = $157;
 $158 = $145;
 $144 = $158;
 $159 = $144;
 $143 = $159;
 $160 = $143;
 $161 = HEAP32[$160>>2]|0;
 $__nd = $161;
 $162 = $__nd;
 $163 = ($162|0)!=(0|0);
 if (!($163)) {
  $142 = $153;
  $441 = $142;
  $442 = ((($441)) + 4|0);
  $141 = $442;
  $443 = $141;
  $140 = $443;
  $444 = $140;
  $139 = $444;
  $445 = $139;
  $138 = $445;
  $446 = $138;
  $447 = $151;
  HEAP32[$447>>2] = $446;
  $448 = $151;
  $449 = HEAP32[$448>>2]|0;
  $149 = $449;
  $450 = $149;
  STACKTOP = sp;return ($450|0);
 }
 while(1) {
  $72 = $153;
  $164 = $72;
  $165 = ((($164)) + 8|0);
  $71 = $165;
  $166 = $71;
  $70 = $166;
  $167 = $70;
  $69 = $167;
  $168 = $69;
  $169 = $152;
  $170 = $__nd;
  $171 = ((($170)) + 16|0);
  $62 = $168;
  $63 = $169;
  $64 = $171;
  $172 = $63;
  $173 = $64;
  $60 = $172;
  $61 = $173;
  $174 = $60;
  $175 = $61;
  $58 = $174;
  $59 = $175;
  $176 = $58;
  $56 = $176;
  $177 = $56;
  $55 = $177;
  $178 = $55;
  $54 = $178;
  $179 = $54;
  $53 = $179;
  $180 = $53;
  $181 = HEAP8[$180>>0]|0;
  $182 = $181&255;
  $183 = $182 & 1;
  $184 = ($183|0)!=(0);
  if ($184) {
   $49 = $177;
   $185 = $49;
   $48 = $185;
   $186 = $48;
   $47 = $186;
   $187 = $47;
   $188 = ((($187)) + 4|0);
   $189 = HEAP32[$188>>2]|0;
   $196 = $189;
  } else {
   $52 = $177;
   $190 = $52;
   $51 = $190;
   $191 = $51;
   $50 = $191;
   $192 = $50;
   $193 = HEAP8[$192>>0]|0;
   $194 = $193&255;
   $195 = $194 >> 1;
   $196 = $195;
  }
  HEAP32[$__lhs_sz$i$i$i1>>2] = $196;
  $197 = $59;
  $46 = $197;
  $198 = $46;
  $45 = $198;
  $199 = $45;
  $44 = $199;
  $200 = $44;
  $43 = $200;
  $201 = $43;
  $202 = HEAP8[$201>>0]|0;
  $203 = $202&255;
  $204 = $203 & 1;
  $205 = ($204|0)!=(0);
  if ($205) {
   $39 = $198;
   $206 = $39;
   $38 = $206;
   $207 = $38;
   $37 = $207;
   $208 = $37;
   $209 = ((($208)) + 4|0);
   $210 = HEAP32[$209>>2]|0;
   $217 = $210;
  } else {
   $42 = $198;
   $211 = $42;
   $41 = $211;
   $212 = $41;
   $40 = $212;
   $213 = $40;
   $214 = HEAP8[$213>>0]|0;
   $215 = $214&255;
   $216 = $215 >> 1;
   $217 = $216;
  }
  HEAP32[$__rhs_sz$i$i$i2>>2] = $217;
  $36 = $176;
  $218 = $36;
  $35 = $218;
  $219 = $35;
  $34 = $219;
  $220 = $34;
  $33 = $220;
  $221 = $33;
  $32 = $221;
  $222 = $32;
  $223 = HEAP8[$222>>0]|0;
  $224 = $223&255;
  $225 = $224 & 1;
  $226 = ($225|0)!=(0);
  if ($226) {
   $26 = $219;
   $227 = $26;
   $25 = $227;
   $228 = $25;
   $24 = $228;
   $229 = $24;
   $230 = ((($229)) + 8|0);
   $231 = HEAP32[$230>>2]|0;
   $238 = $231;
  } else {
   $31 = $219;
   $232 = $31;
   $30 = $232;
   $233 = $30;
   $29 = $233;
   $234 = $29;
   $235 = ((($234)) + 1|0);
   $28 = $235;
   $236 = $28;
   $27 = $236;
   $237 = $27;
   $238 = $237;
  }
  $23 = $238;
  $239 = $23;
  $240 = $59;
  $13 = $240;
  $241 = $13;
  $12 = $241;
  $242 = $12;
  $11 = $242;
  $243 = $11;
  $10 = $243;
  $244 = $10;
  $9 = $244;
  $245 = $9;
  $246 = HEAP8[$245>>0]|0;
  $247 = $246&255;
  $248 = $247 & 1;
  $249 = ($248|0)!=(0);
  if ($249) {
   $3 = $242;
   $250 = $3;
   $2 = $250;
   $251 = $2;
   $1 = $251;
   $252 = $1;
   $253 = ((($252)) + 8|0);
   $254 = HEAP32[$253>>2]|0;
   $261 = $254;
  } else {
   $8 = $242;
   $255 = $8;
   $7 = $255;
   $256 = $7;
   $6 = $256;
   $257 = $6;
   $258 = ((($257)) + 1|0);
   $5 = $258;
   $259 = $5;
   $4 = $259;
   $260 = $4;
   $261 = $260;
  }
  $0 = $261;
  $262 = $0;
  $20 = $__lhs_sz$i$i$i1;
  $21 = $__rhs_sz$i$i$i2;
  $263 = $20;
  $264 = $21;
  ;HEAP8[$19>>0]=HEAP8[$22>>0]|0;
  $17 = $263;
  $18 = $264;
  $265 = $18;
  $266 = $17;
  $14 = $19;
  $15 = $265;
  $16 = $266;
  $267 = $15;
  $268 = HEAP32[$267>>2]|0;
  $269 = $16;
  $270 = HEAP32[$269>>2]|0;
  $271 = ($268>>>0)<($270>>>0);
  $272 = $18;
  $273 = $17;
  $274 = $271 ? $272 : $273;
  $275 = HEAP32[$274>>2]|0;
  __THREW__ = 0;
  $276 = (invoke_iiii(615,($239|0),($262|0),($275|0))|0);
  $277 = __THREW__; __THREW__ = 0;
  $278 = $277&1;
  if ($278) {
   label = 22;
   break;
  }
  $__result$i$i$i3 = $276;
  $279 = $__result$i$i$i3;
  $280 = ($279|0)!=(0);
  do {
   if ($280) {
    $281 = $__result$i$i$i3;
    $57 = $281;
   } else {
    $282 = HEAP32[$__lhs_sz$i$i$i1>>2]|0;
    $283 = HEAP32[$__rhs_sz$i$i$i2>>2]|0;
    $284 = ($282>>>0)<($283>>>0);
    if ($284) {
     $57 = -1;
     break;
    }
    $285 = HEAP32[$__lhs_sz$i$i$i1>>2]|0;
    $286 = HEAP32[$__rhs_sz$i$i$i2>>2]|0;
    $287 = ($285>>>0)>($286>>>0);
    if ($287) {
     $57 = 1;
     break;
    } else {
     $57 = 0;
     break;
    }
   }
  } while(0);
  $290 = $57;
  $291 = ($290|0)<(0);
  if ($291) {
   $292 = $__nd;
   $293 = HEAP32[$292>>2]|0;
   $294 = ($293|0)!=(0|0);
   $295 = $__nd;
   if (!($294)) {
    label = 26;
    break;
   }
   $296 = HEAP32[$295>>2]|0;
   $__nd = $296;
   continue;
  }
  $67 = $153;
  $300 = $67;
  $301 = ((($300)) + 8|0);
  $66 = $301;
  $302 = $66;
  $65 = $302;
  $303 = $65;
  $68 = $303;
  $304 = $68;
  $305 = $__nd;
  $306 = ((($305)) + 16|0);
  $307 = $152;
  $135 = $304;
  $136 = $306;
  $137 = $307;
  $308 = $136;
  $309 = $137;
  $133 = $308;
  $134 = $309;
  $310 = $133;
  $311 = $134;
  $131 = $310;
  $132 = $311;
  $312 = $131;
  $129 = $312;
  $313 = $129;
  $128 = $313;
  $314 = $128;
  $127 = $314;
  $315 = $127;
  $126 = $315;
  $316 = $126;
  $317 = HEAP8[$316>>0]|0;
  $318 = $317&255;
  $319 = $318 & 1;
  $320 = ($319|0)!=(0);
  if ($320) {
   $122 = $313;
   $321 = $122;
   $121 = $321;
   $322 = $121;
   $120 = $322;
   $323 = $120;
   $324 = ((($323)) + 4|0);
   $325 = HEAP32[$324>>2]|0;
   $332 = $325;
  } else {
   $125 = $313;
   $326 = $125;
   $124 = $326;
   $327 = $124;
   $123 = $327;
   $328 = $123;
   $329 = HEAP8[$328>>0]|0;
   $330 = $329&255;
   $331 = $330 >> 1;
   $332 = $331;
  }
  HEAP32[$__lhs_sz$i$i$i>>2] = $332;
  $333 = $132;
  $119 = $333;
  $334 = $119;
  $118 = $334;
  $335 = $118;
  $117 = $335;
  $336 = $117;
  $116 = $336;
  $337 = $116;
  $338 = HEAP8[$337>>0]|0;
  $339 = $338&255;
  $340 = $339 & 1;
  $341 = ($340|0)!=(0);
  if ($341) {
   $112 = $334;
   $342 = $112;
   $111 = $342;
   $343 = $111;
   $110 = $343;
   $344 = $110;
   $345 = ((($344)) + 4|0);
   $346 = HEAP32[$345>>2]|0;
   $353 = $346;
  } else {
   $115 = $334;
   $347 = $115;
   $114 = $347;
   $348 = $114;
   $113 = $348;
   $349 = $113;
   $350 = HEAP8[$349>>0]|0;
   $351 = $350&255;
   $352 = $351 >> 1;
   $353 = $352;
  }
  HEAP32[$__rhs_sz$i$i$i>>2] = $353;
  $109 = $312;
  $354 = $109;
  $108 = $354;
  $355 = $108;
  $107 = $355;
  $356 = $107;
  $106 = $356;
  $357 = $106;
  $105 = $357;
  $358 = $105;
  $359 = HEAP8[$358>>0]|0;
  $360 = $359&255;
  $361 = $360 & 1;
  $362 = ($361|0)!=(0);
  if ($362) {
   $99 = $355;
   $363 = $99;
   $98 = $363;
   $364 = $98;
   $97 = $364;
   $365 = $97;
   $366 = ((($365)) + 8|0);
   $367 = HEAP32[$366>>2]|0;
   $374 = $367;
  } else {
   $104 = $355;
   $368 = $104;
   $103 = $368;
   $369 = $103;
   $102 = $369;
   $370 = $102;
   $371 = ((($370)) + 1|0);
   $101 = $371;
   $372 = $101;
   $100 = $372;
   $373 = $100;
   $374 = $373;
  }
  $96 = $374;
  $375 = $96;
  $376 = $132;
  $86 = $376;
  $377 = $86;
  $85 = $377;
  $378 = $85;
  $84 = $378;
  $379 = $84;
  $83 = $379;
  $380 = $83;
  $82 = $380;
  $381 = $82;
  $382 = HEAP8[$381>>0]|0;
  $383 = $382&255;
  $384 = $383 & 1;
  $385 = ($384|0)!=(0);
  if ($385) {
   $76 = $378;
   $386 = $76;
   $75 = $386;
   $387 = $75;
   $74 = $387;
   $388 = $74;
   $389 = ((($388)) + 8|0);
   $390 = HEAP32[$389>>2]|0;
   $397 = $390;
  } else {
   $81 = $378;
   $391 = $81;
   $80 = $391;
   $392 = $80;
   $79 = $392;
   $393 = $79;
   $394 = ((($393)) + 1|0);
   $78 = $394;
   $395 = $78;
   $77 = $395;
   $396 = $77;
   $397 = $396;
  }
  $73 = $397;
  $398 = $73;
  $93 = $__lhs_sz$i$i$i;
  $94 = $__rhs_sz$i$i$i;
  $399 = $93;
  $400 = $94;
  ;HEAP8[$92>>0]=HEAP8[$95>>0]|0;
  $90 = $399;
  $91 = $400;
  $401 = $91;
  $402 = $90;
  $87 = $92;
  $88 = $401;
  $89 = $402;
  $403 = $88;
  $404 = HEAP32[$403>>2]|0;
  $405 = $89;
  $406 = HEAP32[$405>>2]|0;
  $407 = ($404>>>0)<($406>>>0);
  $408 = $91;
  $409 = $90;
  $410 = $407 ? $408 : $409;
  $411 = HEAP32[$410>>2]|0;
  __THREW__ = 0;
  $412 = (invoke_iiii(615,($375|0),($398|0),($411|0))|0);
  $413 = __THREW__; __THREW__ = 0;
  $414 = $413&1;
  if ($414) {
   label = 47;
   break;
  }
  $__result$i$i$i = $412;
  $415 = $__result$i$i$i;
  $416 = ($415|0)!=(0);
  do {
   if ($416) {
    $417 = $__result$i$i$i;
    $130 = $417;
   } else {
    $418 = HEAP32[$__lhs_sz$i$i$i>>2]|0;
    $419 = HEAP32[$__rhs_sz$i$i$i>>2]|0;
    $420 = ($418>>>0)<($419>>>0);
    if ($420) {
     $130 = -1;
     break;
    }
    $421 = HEAP32[$__lhs_sz$i$i$i>>2]|0;
    $422 = HEAP32[$__rhs_sz$i$i$i>>2]|0;
    $423 = ($421>>>0)>($422>>>0);
    if ($423) {
     $130 = 1;
     break;
    } else {
     $130 = 0;
     break;
    }
   }
  } while(0);
  $426 = $130;
  $427 = ($426|0)<(0);
  $428 = $__nd;
  if (!($427)) {
   label = 52;
   break;
  }
  $429 = ((($428)) + 4|0);
  $430 = HEAP32[$429>>2]|0;
  $431 = ($430|0)!=(0|0);
  $432 = $__nd;
  if (!($431)) {
   label = 51;
   break;
  }
  $433 = ((($432)) + 4|0);
  $434 = HEAP32[$433>>2]|0;
  $__nd = $434;
 }
 if ((label|0) == 22) {
  $288 = ___cxa_find_matching_catch_3(0|0)|0;
  $289 = tempRet0;
  ___clang_call_terminate($288);
  // unreachable;
 }
 else if ((label|0) == 26) {
  $297 = $151;
  HEAP32[$297>>2] = $295;
  $298 = $151;
  $299 = HEAP32[$298>>2]|0;
  $149 = $299;
  $450 = $149;
  STACKTOP = sp;return ($450|0);
 }
 else if ((label|0) == 47) {
  $424 = ___cxa_find_matching_catch_3(0|0)|0;
  $425 = tempRet0;
  ___clang_call_terminate($424);
  // unreachable;
 }
 else if ((label|0) == 51) {
  $435 = $151;
  HEAP32[$435>>2] = $432;
  $436 = $151;
  $437 = HEAP32[$436>>2]|0;
  $438 = ((($437)) + 4|0);
  $149 = $438;
  $450 = $149;
  STACKTOP = sp;return ($450|0);
 }
 else if ((label|0) == 52) {
  $439 = $151;
  HEAP32[$439>>2] = $428;
  $440 = $151;
  $149 = $440;
  $450 = $149;
  STACKTOP = sp;return ($450|0);
 }
 return (0)|0;
}
function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE25__construct_node_with_keyERSB_($agg$result,$this,$__k) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__k = $__k|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__h = 0, $__na = 0, $__t$i$i = 0, $__tmp$i$i = 0, $__tmp$i$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 704|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 72|0;
 $8 = sp + 701|0;
 $18 = sp + 628|0;
 $19 = sp + 64|0;
 $22 = sp + 616|0;
 $23 = sp + 608|0;
 $24 = sp + 56|0;
 $35 = sp + 552|0;
 $50 = sp + 48|0;
 $55 = sp + 700|0;
 $63 = sp + 40|0;
 $66 = sp + 699|0;
 $77 = sp + 32|0;
 $80 = sp + 698|0;
 $96 = sp + 324|0;
 $97 = sp + 24|0;
 $100 = sp + 312|0;
 $101 = sp + 304|0;
 $102 = sp + 16|0;
 $107 = sp + 280|0;
 $122 = sp + 8|0;
 $125 = sp + 697|0;
 $136 = sp;
 $139 = sp + 696|0;
 $__h = sp + 96|0;
 $153 = sp + 88|0;
 $151 = $this;
 $152 = $__k;
 $156 = $151;
 $150 = $156;
 $157 = $150;
 $158 = ((($157)) + 4|0);
 $149 = $158;
 $159 = $149;
 $148 = $159;
 $160 = $148;
 $__na = $160;
 $161 = $__na;
 $114 = $161;
 $115 = 1;
 $162 = $114;
 $163 = $115;
 $111 = $162;
 $112 = $163;
 $113 = 0;
 $164 = $112;
 $165 = ($164*44)|0;
 $110 = $165;
 $166 = $110;
 $167 = (__Znwj($166)|0);
 $168 = $__na;
 $108 = $153;
 $109 = $168;
 $169 = $108;
 $170 = $109;
 HEAP32[$169>>2] = $170;
 $171 = ((($169)) + 4|0);
 HEAP8[$171>>0] = 0;
 $172 = ((($169)) + 5|0);
 HEAP8[$172>>0] = 0;
 $104 = $__h;
 $105 = $167;
 $106 = $153;
 $173 = $104;
 $174 = $105;
 $175 = $106;
 $103 = $175;
 $176 = $103;
 ;HEAP32[$107>>2]=HEAP32[$176>>2]|0;HEAP32[$107+4>>2]=HEAP32[$176+4>>2]|0;
 ;HEAP8[$102>>0]=HEAP8[$107>>0]|0;HEAP8[$102+1>>0]=HEAP8[$107+1>>0]|0;HEAP8[$102+2>>0]=HEAP8[$107+2>>0]|0;HEAP8[$102+3>>0]=HEAP8[$107+3>>0]|0;HEAP8[$102+4>>0]=HEAP8[$107+4>>0]|0;HEAP8[$102+5>>0]=HEAP8[$107+5>>0]|0;HEAP8[$102+6>>0]=HEAP8[$107+6>>0]|0;HEAP8[$102+7>>0]=HEAP8[$107+7>>0]|0;
 $99 = $173;
 HEAP32[$100>>2] = $174;
 $177 = $99;
 $98 = $100;
 $178 = $98;
 $179 = HEAP32[$178>>2]|0;
 $92 = $102;
 $180 = $92;
 ;HEAP32[$101>>2]=HEAP32[$180>>2]|0;HEAP32[$101+4>>2]=HEAP32[$180+4>>2]|0;
 ;HEAP8[$97>>0]=HEAP8[$101>>0]|0;HEAP8[$97+1>>0]=HEAP8[$101+1>>0]|0;HEAP8[$97+2>>0]=HEAP8[$101+2>>0]|0;HEAP8[$97+3>>0]=HEAP8[$101+3>>0]|0;HEAP8[$97+4>>0]=HEAP8[$101+4>>0]|0;HEAP8[$97+5>>0]=HEAP8[$101+5>>0]|0;HEAP8[$97+6>>0]=HEAP8[$101+6>>0]|0;HEAP8[$97+7>>0]=HEAP8[$101+7>>0]|0;
 $95 = $177;
 HEAP32[$96>>2] = $179;
 $181 = $95;
 $94 = $96;
 $182 = $94;
 $183 = HEAP32[$182>>2]|0;
 HEAP32[$181>>2] = $183;
 $184 = ((($181)) + 4|0);
 $93 = $97;
 $185 = $93;
 ;HEAP32[$184>>2]=HEAP32[$185>>2]|0;HEAP32[$184+4>>2]=HEAP32[$185+4>>2]|0;
 $186 = $__na;
 $91 = $__h;
 $187 = $91;
 $90 = $187;
 $188 = $90;
 $89 = $188;
 $189 = $89;
 $190 = HEAP32[$189>>2]|0;
 $191 = ((($190)) + 16|0);
 $56 = $191;
 $192 = $56;
 $193 = $152;
 $52 = $186;
 $53 = $192;
 $54 = $193;
 $194 = $52;
 $195 = $53;
 $196 = $54;
 $51 = $196;
 $197 = $51;
 ;HEAP8[$50>>0]=HEAP8[$55>>0]|0;
 $47 = $194;
 $48 = $195;
 $49 = $197;
 $198 = $47;
 $199 = $48;
 $200 = $49;
 $46 = $200;
 $201 = $46;
 $43 = $198;
 $44 = $199;
 $45 = $201;
 $202 = $44;
 $203 = $45;
 $42 = $203;
 $204 = $42;
 __THREW__ = 0;
 invoke_vii(617,($202|0),($204|0));
 $205 = __THREW__; __THREW__ = 0;
 $206 = $205&1;
 if (!($206)) {
  $41 = $__h;
  $207 = $41;
  $40 = $207;
  $208 = $40;
  $39 = $208;
  $209 = $39;
  $210 = ((($209)) + 4|0);
  $211 = ((($210)) + 4|0);
  HEAP8[$211>>0] = 1;
  $212 = $__na;
  $38 = $__h;
  $213 = $38;
  $37 = $213;
  $214 = $37;
  $36 = $214;
  $215 = $36;
  $216 = HEAP32[$215>>2]|0;
  $217 = ((($216)) + 16|0);
  $218 = ((($217)) + 12|0);
  $0 = $218;
  $219 = $0;
  $6 = $212;
  $7 = $219;
  $220 = $6;
  $221 = $7;
  ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
  $3 = $220;
  $4 = $221;
  $222 = $3;
  $223 = $4;
  $1 = $222;
  $2 = $223;
  $224 = $2;
  __THREW__ = 0;
  invoke_vi(618,($224|0));
  $225 = __THREW__; __THREW__ = 0;
  $226 = $225&1;
  if (!($226)) {
   $11 = $__h;
   $227 = $11;
   $10 = $227;
   $228 = $10;
   $9 = $228;
   $229 = $9;
   $230 = ((($229)) + 4|0);
   $231 = ((($230)) + 5|0);
   HEAP8[$231>>0] = 1;
   $12 = $__h;
   $232 = $12;
   $33 = $agg$result;
   $34 = $232;
   $233 = $33;
   $234 = $34;
   $32 = $234;
   $235 = $32;
   $31 = $235;
   $236 = $31;
   $30 = $236;
   $237 = $30;
   $238 = HEAP32[$237>>2]|0;
   $__t$i$i = $238;
   $29 = $235;
   $239 = $29;
   $28 = $239;
   $240 = $28;
   HEAP32[$240>>2] = 0;
   $241 = $__t$i$i;
   $242 = $34;
   $27 = $242;
   $243 = $27;
   $26 = $243;
   $244 = $26;
   $25 = $244;
   $245 = $25;
   $246 = ((($245)) + 4|0);
   $13 = $246;
   $247 = $13;
   ;HEAP32[$35>>2]=HEAP32[$247>>2]|0;HEAP32[$35+4>>2]=HEAP32[$247+4>>2]|0;
   ;HEAP8[$24>>0]=HEAP8[$35>>0]|0;HEAP8[$24+1>>0]=HEAP8[$35+1>>0]|0;HEAP8[$24+2>>0]=HEAP8[$35+2>>0]|0;HEAP8[$24+3>>0]=HEAP8[$35+3>>0]|0;HEAP8[$24+4>>0]=HEAP8[$35+4>>0]|0;HEAP8[$24+5>>0]=HEAP8[$35+5>>0]|0;HEAP8[$24+6>>0]=HEAP8[$35+6>>0]|0;HEAP8[$24+7>>0]=HEAP8[$35+7>>0]|0;
   $21 = $233;
   HEAP32[$22>>2] = $241;
   $248 = $21;
   $20 = $22;
   $249 = $20;
   $250 = HEAP32[$249>>2]|0;
   $14 = $24;
   $251 = $14;
   ;HEAP32[$23>>2]=HEAP32[$251>>2]|0;HEAP32[$23+4>>2]=HEAP32[$251+4>>2]|0;
   ;HEAP8[$19>>0]=HEAP8[$23>>0]|0;HEAP8[$19+1>>0]=HEAP8[$23+1>>0]|0;HEAP8[$19+2>>0]=HEAP8[$23+2>>0]|0;HEAP8[$19+3>>0]=HEAP8[$23+3>>0]|0;HEAP8[$19+4>>0]=HEAP8[$23+4>>0]|0;HEAP8[$19+5>>0]=HEAP8[$23+5>>0]|0;HEAP8[$19+6>>0]=HEAP8[$23+6>>0]|0;HEAP8[$19+7>>0]=HEAP8[$23+7>>0]|0;
   $17 = $248;
   HEAP32[$18>>2] = $250;
   $252 = $17;
   $16 = $18;
   $253 = $16;
   $254 = HEAP32[$253>>2]|0;
   HEAP32[$252>>2] = $254;
   $255 = ((($252)) + 4|0);
   $15 = $19;
   $256 = $15;
   ;HEAP32[$255>>2]=HEAP32[$256>>2]|0;HEAP32[$255+4>>2]=HEAP32[$256+4>>2]|0;
   $88 = $__h;
   $257 = $88;
   $86 = $257;
   $87 = 0;
   $258 = $86;
   $85 = $258;
   $259 = $85;
   $84 = $259;
   $260 = $84;
   $261 = HEAP32[$260>>2]|0;
   $__tmp$i$i1 = $261;
   $262 = $87;
   $60 = $258;
   $263 = $60;
   $59 = $263;
   $264 = $59;
   HEAP32[$264>>2] = $262;
   $265 = $__tmp$i$i1;
   $266 = ($265|0)!=(0|0);
   if (!($266)) {
    STACKTOP = sp;return;
   }
   $58 = $258;
   $267 = $58;
   $57 = $267;
   $268 = $57;
   $269 = ((($268)) + 4|0);
   $270 = $__tmp$i$i1;
   $82 = $269;
   $83 = $270;
   $271 = $82;
   $272 = ((($271)) + 5|0);
   $273 = HEAP8[$272>>0]|0;
   $274 = $273&1;
   if ($274) {
    $275 = HEAP32[$271>>2]|0;
    $276 = $83;
    $277 = ((($276)) + 16|0);
    $278 = ((($277)) + 12|0);
    $81 = $278;
    $279 = $81;
    $78 = $275;
    $79 = $279;
    $280 = $78;
    $281 = $79;
    ;HEAP8[$77>>0]=HEAP8[$80>>0]|0;
    $75 = $280;
    $76 = $281;
    $282 = $76;
    __ZN3VarD2Ev($282);
   }
   $283 = ((($271)) + 4|0);
   $284 = HEAP8[$283>>0]|0;
   $285 = $284&1;
   if ($285) {
    $286 = HEAP32[$271>>2]|0;
    $287 = $83;
    $288 = ((($287)) + 16|0);
    $74 = $288;
    $289 = $74;
    $64 = $286;
    $65 = $289;
    $290 = $64;
    $291 = $65;
    ;HEAP8[$63>>0]=HEAP8[$66>>0]|0;
    $61 = $290;
    $62 = $291;
    $292 = $62;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($292);
   }
   $293 = $83;
   $294 = ($293|0)!=(0|0);
   if (!($294)) {
    STACKTOP = sp;return;
   }
   $295 = HEAP32[$271>>2]|0;
   $296 = $83;
   $71 = $295;
   $72 = $296;
   $73 = 1;
   $297 = $71;
   $298 = $72;
   $299 = $73;
   $68 = $297;
   $69 = $298;
   $70 = $299;
   $300 = $69;
   $67 = $300;
   $301 = $67;
   __ZdlPv($301);
   STACKTOP = sp;return;
  }
 }
 $302 = ___cxa_find_matching_catch_2()|0;
 $303 = tempRet0;
 $154 = $302;
 $155 = $303;
 $147 = $__h;
 $304 = $147;
 $145 = $304;
 $146 = 0;
 $305 = $145;
 $144 = $305;
 $306 = $144;
 $143 = $306;
 $307 = $143;
 $308 = HEAP32[$307>>2]|0;
 $__tmp$i$i = $308;
 $309 = $146;
 $119 = $305;
 $310 = $119;
 $118 = $310;
 $311 = $118;
 HEAP32[$311>>2] = $309;
 $312 = $__tmp$i$i;
 $313 = ($312|0)!=(0|0);
 if (!($313)) {
  $349 = $154;
  $350 = $155;
  ___resumeException($349|0);
  // unreachable;
 }
 $117 = $305;
 $314 = $117;
 $116 = $314;
 $315 = $116;
 $316 = ((($315)) + 4|0);
 $317 = $__tmp$i$i;
 $141 = $316;
 $142 = $317;
 $318 = $141;
 $319 = ((($318)) + 5|0);
 $320 = HEAP8[$319>>0]|0;
 $321 = $320&1;
 if ($321) {
  $322 = HEAP32[$318>>2]|0;
  $323 = $142;
  $324 = ((($323)) + 16|0);
  $325 = ((($324)) + 12|0);
  $140 = $325;
  $326 = $140;
  $137 = $322;
  $138 = $326;
  $327 = $137;
  $328 = $138;
  ;HEAP8[$136>>0]=HEAP8[$139>>0]|0;
  $134 = $327;
  $135 = $328;
  $329 = $135;
  __ZN3VarD2Ev($329);
 }
 $330 = ((($318)) + 4|0);
 $331 = HEAP8[$330>>0]|0;
 $332 = $331&1;
 if ($332) {
  $333 = HEAP32[$318>>2]|0;
  $334 = $142;
  $335 = ((($334)) + 16|0);
  $133 = $335;
  $336 = $133;
  $123 = $333;
  $124 = $336;
  $337 = $123;
  $338 = $124;
  ;HEAP8[$122>>0]=HEAP8[$125>>0]|0;
  $120 = $337;
  $121 = $338;
  $339 = $121;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($339);
 }
 $340 = $142;
 $341 = ($340|0)!=(0|0);
 if (!($341)) {
  $349 = $154;
  $350 = $155;
  ___resumeException($349|0);
  // unreachable;
 }
 $342 = HEAP32[$318>>2]|0;
 $343 = $142;
 $130 = $342;
 $131 = $343;
 $132 = 1;
 $344 = $130;
 $345 = $131;
 $346 = $132;
 $127 = $344;
 $128 = $345;
 $129 = $346;
 $347 = $128;
 $126 = $347;
 $348 = $126;
 __ZdlPv($348);
 $349 = $154;
 $350 = $155;
 ___resumeException($349|0);
 // unreachable;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_($this,$__parent,$__child,$__new_node) {
 $this = $this|0;
 $__parent = $__parent|0;
 $__child = $__child|0;
 $__new_node = $__new_node|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $11 = $this;
 $12 = $__parent;
 $13 = $__child;
 $14 = $__new_node;
 $15 = $11;
 $16 = $14;
 HEAP32[$16>>2] = 0;
 $17 = $14;
 $18 = ((($17)) + 4|0);
 HEAP32[$18>>2] = 0;
 $19 = $12;
 $20 = $14;
 $21 = ((($20)) + 8|0);
 HEAP32[$21>>2] = $19;
 $22 = $14;
 $23 = $13;
 HEAP32[$23>>2] = $22;
 $10 = $15;
 $24 = $10;
 $25 = HEAP32[$24>>2]|0;
 $26 = HEAP32[$25>>2]|0;
 $27 = ($26|0)!=(0|0);
 if ($27) {
  $6 = $15;
  $28 = $6;
  $29 = HEAP32[$28>>2]|0;
  $30 = HEAP32[$29>>2]|0;
  $0 = $15;
  $31 = $0;
  HEAP32[$31>>2] = $30;
 }
 $5 = $15;
 $32 = $5;
 $33 = ((($32)) + 4|0);
 $4 = $33;
 $34 = $4;
 $3 = $34;
 $35 = $3;
 $2 = $35;
 $36 = $2;
 $1 = $36;
 $37 = $1;
 $38 = HEAP32[$37>>2]|0;
 $39 = $13;
 $40 = HEAP32[$39>>2]|0;
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($38,$40);
 $9 = $15;
 $41 = $9;
 $42 = ((($41)) + 8|0);
 $8 = $42;
 $43 = $8;
 $7 = $43;
 $44 = $7;
 $45 = HEAP32[$44>>2]|0;
 $46 = (($45) + 1)|0;
 HEAP32[$44>>2] = $46;
 STACKTOP = sp;return;
}
function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root,$__x) {
 $__root = $__root|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__y = 0, $__y1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = $__root;
 $4 = $__x;
 $5 = $4;
 $6 = $3;
 $7 = ($5|0)==($6|0);
 $8 = $4;
 $9 = ((($8)) + 12|0);
 $10 = $7&1;
 HEAP8[$9>>0] = $10;
 while(1) {
  $11 = $4;
  $12 = $3;
  $13 = ($11|0)!=($12|0);
  if (!($13)) {
   label = 17;
   break;
  }
  $14 = $4;
  $15 = ((($14)) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($16)) + 12|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = $18&1;
  $20 = $19 ^ 1;
  if (!($20)) {
   label = 17;
   break;
  }
  $21 = $4;
  $22 = ((($21)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $2 = $23;
  $24 = $2;
  $25 = $2;
  $26 = ((($25)) + 8|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = HEAP32[$27>>2]|0;
  $29 = ($24|0)==($28|0);
  $30 = $4;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  if ($29) {
   $35 = ((($34)) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $__y = $36;
   $37 = $__y;
   $38 = ($37|0)!=(0|0);
   if (!($38)) {
    label = 8;
    break;
   }
   $39 = $__y;
   $40 = ((($39)) + 12|0);
   $41 = HEAP8[$40>>0]|0;
   $42 = $41&1;
   if ($42) {
    label = 8;
    break;
   }
   $43 = $4;
   $44 = ((($43)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $4 = $45;
   $46 = $4;
   $47 = ((($46)) + 12|0);
   HEAP8[$47>>0] = 1;
   $48 = $4;
   $49 = ((($48)) + 8|0);
   $50 = HEAP32[$49>>2]|0;
   $4 = $50;
   $51 = $4;
   $52 = $3;
   $53 = ($51|0)==($52|0);
   $54 = $4;
   $55 = ((($54)) + 12|0);
   $56 = $53&1;
   HEAP8[$55>>0] = $56;
   $57 = $__y;
   $58 = ((($57)) + 12|0);
   HEAP8[$58>>0] = 1;
   continue;
  } else {
   $81 = HEAP32[$34>>2]|0;
   $__y1 = $81;
   $82 = $__y1;
   $83 = ($82|0)!=(0|0);
   if (!($83)) {
    label = 14;
    break;
   }
   $84 = $__y1;
   $85 = ((($84)) + 12|0);
   $86 = HEAP8[$85>>0]|0;
   $87 = $86&1;
   if ($87) {
    label = 14;
    break;
   }
   $88 = $4;
   $89 = ((($88)) + 8|0);
   $90 = HEAP32[$89>>2]|0;
   $4 = $90;
   $91 = $4;
   $92 = ((($91)) + 12|0);
   HEAP8[$92>>0] = 1;
   $93 = $4;
   $94 = ((($93)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   $4 = $95;
   $96 = $4;
   $97 = $3;
   $98 = ($96|0)==($97|0);
   $99 = $4;
   $100 = ((($99)) + 12|0);
   $101 = $98&1;
   HEAP8[$100>>0] = $101;
   $102 = $__y1;
   $103 = ((($102)) + 12|0);
   HEAP8[$103>>0] = 1;
   continue;
  }
 }
 if ((label|0) == 8) {
  $59 = $4;
  $1 = $59;
  $60 = $1;
  $61 = $1;
  $62 = ((($61)) + 8|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = HEAP32[$63>>2]|0;
  $65 = ($60|0)==($64|0);
  if (!($65)) {
   $66 = $4;
   $67 = ((($66)) + 8|0);
   $68 = HEAP32[$67>>2]|0;
   $4 = $68;
   $69 = $4;
   __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_($69);
  }
  $70 = $4;
  $71 = ((($70)) + 8|0);
  $72 = HEAP32[$71>>2]|0;
  $4 = $72;
  $73 = $4;
  $74 = ((($73)) + 12|0);
  HEAP8[$74>>0] = 1;
  $75 = $4;
  $76 = ((($75)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $4 = $77;
  $78 = $4;
  $79 = ((($78)) + 12|0);
  HEAP8[$79>>0] = 0;
  $80 = $4;
  __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_($80);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 14) {
  $104 = $4;
  $0 = $104;
  $105 = $0;
  $106 = $0;
  $107 = ((($106)) + 8|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = HEAP32[$108>>2]|0;
  $110 = ($105|0)==($109|0);
  if ($110) {
   $111 = $4;
   $112 = ((($111)) + 8|0);
   $113 = HEAP32[$112>>2]|0;
   $4 = $113;
   $114 = $4;
   __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_($114);
  }
  $115 = $4;
  $116 = ((($115)) + 8|0);
  $117 = HEAP32[$116>>2]|0;
  $4 = $117;
  $118 = $4;
  $119 = ((($118)) + 12|0);
  HEAP8[$119>>0] = 1;
  $120 = $4;
  $121 = ((($120)) + 8|0);
  $122 = HEAP32[$121>>2]|0;
  $4 = $122;
  $123 = $4;
  $124 = ((($123)) + 12|0);
  HEAP8[$124>>0] = 0;
  $125 = $4;
  __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_($125);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 17) {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__x;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $__y = $4;
 $5 = $__y;
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 $8 = ((($7)) + 4|0);
 HEAP32[$8>>2] = $6;
 $9 = $1;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $1;
  $14 = $1;
  $15 = ((($14)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($16)) + 8|0);
  HEAP32[$17>>2] = $13;
 }
 $18 = $1;
 $19 = ((($18)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $__y;
 $22 = ((($21)) + 8|0);
 HEAP32[$22>>2] = $20;
 $23 = $1;
 $0 = $23;
 $24 = $0;
 $25 = $0;
 $26 = ((($25)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = HEAP32[$27>>2]|0;
 $29 = ($24|0)==($28|0);
 $30 = $__y;
 $31 = $1;
 $32 = ((($31)) + 8|0);
 $33 = HEAP32[$32>>2]|0;
 if ($29) {
  HEAP32[$33>>2] = $30;
  $35 = $1;
  $36 = $__y;
  HEAP32[$36>>2] = $35;
  $37 = $__y;
  $38 = $1;
  $39 = ((($38)) + 8|0);
  HEAP32[$39>>2] = $37;
  STACKTOP = sp;return;
 } else {
  $34 = ((($33)) + 4|0);
  HEAP32[$34>>2] = $30;
  $35 = $1;
  $36 = $__y;
  HEAP32[$36>>2] = $35;
  $37 = $__y;
  $38 = $1;
  $39 = ((($38)) + 8|0);
  HEAP32[$39>>2] = $37;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_($__x) {
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__y = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $__x;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $__y = $3;
 $4 = $__y;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $1;
 HEAP32[$7>>2] = $6;
 $8 = $1;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $11 = $1;
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 8|0);
  HEAP32[$14>>2] = $11;
 }
 $15 = $1;
 $16 = ((($15)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $__y;
 $19 = ((($18)) + 8|0);
 HEAP32[$19>>2] = $17;
 $20 = $1;
 $0 = $20;
 $21 = $0;
 $22 = $0;
 $23 = ((($22)) + 8|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = HEAP32[$24>>2]|0;
 $26 = ($21|0)==($25|0);
 $27 = $__y;
 $28 = $1;
 $29 = ((($28)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 if ($26) {
  HEAP32[$30>>2] = $27;
  $32 = $1;
  $33 = $__y;
  $34 = ((($33)) + 4|0);
  HEAP32[$34>>2] = $32;
  $35 = $__y;
  $36 = $1;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $35;
  STACKTOP = sp;return;
 } else {
  $31 = ((($30)) + 4|0);
  HEAP32[$31>>2] = $27;
  $32 = $1;
  $33 = $__y;
  $34 = ((($33)) + 4|0);
  HEAP32[$34>>2] = $32;
  $35 = $__y;
  $36 = $1;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $35;
  STACKTOP = sp;return;
 }
}
function __ZN3VarC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5,$6);
 $7 = ((($5)) + 12|0);
 $8 = $2;
 $9 = ((($8)) + 12|0);
 __THREW__ = 0;
 invoke_vii(596,($7|0),($9|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $12 = ___cxa_find_matching_catch_2()|0;
  $13 = tempRet0;
  $3 = $12;
  $4 = $13;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $14 = $3;
  $15 = $4;
  ___resumeException($14|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE15__insert_uniqueINS_4pairIS7_S8_EEEENSH_INS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEEbEEOT_($agg$result,$this,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__h = 0, $__t$i = 0, $__tmp$i$i = 0;
 var $__tmp$i$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $14 = sp + 8|0;
 $17 = sp + 281|0;
 $48 = sp;
 $51 = sp + 280|0;
 $__h = sp + 20|0;
 $61 = $this;
 $62 = $__v;
 $65 = $61;
 $66 = $62;
 $60 = $66;
 $67 = $60;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__construct_nodeIJNS_4pairIS7_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS5_ISM_EEEEEEDpOT_($__h,$65,$67);
 $33 = $__h;
 $68 = $33;
 $32 = $68;
 $69 = $32;
 $31 = $69;
 $70 = $31;
 $71 = HEAP32[$70>>2]|0;
 __THREW__ = 0;
 invoke_viii(619,($agg$result|0),($65|0),($71|0));
 $72 = __THREW__; __THREW__ = 0;
 $73 = $72&1;
 if ($73) {
  $83 = ___cxa_find_matching_catch_2()|0;
  $84 = tempRet0;
  $63 = $83;
  $64 = $84;
  $25 = $__h;
  $85 = $25;
  $23 = $85;
  $24 = 0;
  $86 = $23;
  $22 = $86;
  $87 = $22;
  $21 = $87;
  $88 = $21;
  $89 = HEAP32[$88>>2]|0;
  $__tmp$i$i1 = $89;
  $90 = $24;
  $3 = $86;
  $91 = $3;
  $2 = $91;
  $92 = $2;
  HEAP32[$92>>2] = $90;
  $93 = $__tmp$i$i1;
  $94 = ($93|0)!=(0|0);
  if (!($94)) {
   $155 = $63;
   $156 = $64;
   ___resumeException($155|0);
   // unreachable;
  }
  $1 = $86;
  $95 = $1;
  $0 = $95;
  $96 = $0;
  $97 = ((($96)) + 4|0);
  $98 = $__tmp$i$i1;
  $19 = $97;
  $20 = $98;
  $99 = $19;
  $100 = ((($99)) + 4|0);
  $101 = HEAP8[$100>>0]|0;
  $102 = $101&1;
  if ($102) {
   $103 = HEAP32[$99>>2]|0;
   $104 = $20;
   $105 = ((($104)) + 16|0);
   $18 = $105;
   $106 = $18;
   $15 = $103;
   $16 = $106;
   $107 = $15;
   $108 = $16;
   ;HEAP8[$14>>0]=HEAP8[$17>>0]|0;
   $12 = $107;
   $13 = $108;
   $109 = $13;
   $11 = $109;
   $110 = $11;
   __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($110);
  }
  $111 = $20;
  $112 = ($111|0)!=(0|0);
  if (!($112)) {
   $155 = $63;
   $156 = $64;
   ___resumeException($155|0);
   // unreachable;
  }
  $113 = HEAP32[$99>>2]|0;
  $114 = $20;
  $8 = $113;
  $9 = $114;
  $10 = 1;
  $115 = $8;
  $116 = $9;
  $117 = $10;
  $5 = $115;
  $6 = $116;
  $7 = $117;
  $118 = $6;
  $4 = $118;
  $119 = $4;
  __ZdlPv($119);
  $155 = $63;
  $156 = $64;
  ___resumeException($155|0);
  // unreachable;
 }
 $74 = ((($agg$result)) + 4|0);
 $75 = HEAP8[$74>>0]|0;
 $76 = $75&1;
 if ($76) {
  $30 = $__h;
  $77 = $30;
  $29 = $77;
  $78 = $29;
  $28 = $78;
  $79 = $28;
  $80 = HEAP32[$79>>2]|0;
  $__t$i = $80;
  $27 = $77;
  $81 = $27;
  $26 = $81;
  $82 = $26;
  HEAP32[$82>>2] = 0;
 }
 $59 = $__h;
 $120 = $59;
 $57 = $120;
 $58 = 0;
 $121 = $57;
 $56 = $121;
 $122 = $56;
 $55 = $122;
 $123 = $55;
 $124 = HEAP32[$123>>2]|0;
 $__tmp$i$i = $124;
 $125 = $58;
 $37 = $121;
 $126 = $37;
 $36 = $126;
 $127 = $36;
 HEAP32[$127>>2] = $125;
 $128 = $__tmp$i$i;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $35 = $121;
 $130 = $35;
 $34 = $130;
 $131 = $34;
 $132 = ((($131)) + 4|0);
 $133 = $__tmp$i$i;
 $53 = $132;
 $54 = $133;
 $134 = $53;
 $135 = ((($134)) + 4|0);
 $136 = HEAP8[$135>>0]|0;
 $137 = $136&1;
 if ($137) {
  $138 = HEAP32[$134>>2]|0;
  $139 = $54;
  $140 = ((($139)) + 16|0);
  $52 = $140;
  $141 = $52;
  $49 = $138;
  $50 = $141;
  $142 = $49;
  $143 = $50;
  ;HEAP8[$48>>0]=HEAP8[$51>>0]|0;
  $46 = $142;
  $47 = $143;
  $144 = $47;
  $45 = $144;
  $145 = $45;
  __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($145);
 }
 $146 = $54;
 $147 = ($146|0)!=(0|0);
 if (!($147)) {
  STACKTOP = sp;return;
 }
 $148 = HEAP32[$134>>2]|0;
 $149 = $54;
 $42 = $148;
 $43 = $149;
 $44 = 1;
 $150 = $42;
 $151 = $43;
 $152 = $44;
 $39 = $150;
 $40 = $151;
 $41 = $152;
 $153 = $40;
 $38 = $153;
 $154 = $38;
 __ZdlPv($154);
 STACKTOP = sp;return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__construct_nodeIJNS_4pairIS7_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS5_ISM_EEEEEEDpOT_($agg$result,$this,$__args) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__args = $__args|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i$i$i$i$i = 0, $__i$i$i$i$i$i$i$i = 0, $__na = 0, $__tmp$i$i = 0, $__tmp$i$i1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $25 = sp + 32|0;
 $30 = sp + 535|0;
 $52 = sp + 24|0;
 $55 = sp + 534|0;
 $68 = sp + 260|0;
 $69 = sp + 16|0;
 $72 = sp + 248|0;
 $73 = sp + 240|0;
 $74 = sp + 8|0;
 $79 = sp + 216|0;
 $102 = sp;
 $105 = sp + 533|0;
 $119 = sp + 532|0;
 $120 = sp + 48|0;
 $117 = $this;
 $118 = $__args;
 $123 = $117;
 $116 = $123;
 $124 = $116;
 $125 = ((($124)) + 4|0);
 $115 = $125;
 $126 = $115;
 $114 = $126;
 $127 = $114;
 $__na = $127;
 $$expand_i1_val = 0;
 HEAP8[$119>>0] = $$expand_i1_val;
 $128 = $__na;
 $86 = $128;
 $87 = 1;
 $129 = $86;
 $130 = $87;
 $83 = $129;
 $84 = $130;
 $85 = 0;
 $131 = $84;
 $132 = ($131*44)|0;
 $82 = $132;
 $133 = $82;
 $134 = (__Znwj($133)|0);
 $135 = $__na;
 $80 = $120;
 $81 = $135;
 $136 = $80;
 $137 = $81;
 HEAP32[$136>>2] = $137;
 $138 = ((($136)) + 4|0);
 HEAP8[$138>>0] = 0;
 $76 = $agg$result;
 $77 = $134;
 $78 = $120;
 $139 = $76;
 $140 = $77;
 $141 = $78;
 $75 = $141;
 $142 = $75;
 ;HEAP32[$79>>2]=HEAP32[$142>>2]|0;HEAP32[$79+4>>2]=HEAP32[$142+4>>2]|0;
 ;HEAP8[$74>>0]=HEAP8[$79>>0]|0;HEAP8[$74+1>>0]=HEAP8[$79+1>>0]|0;HEAP8[$74+2>>0]=HEAP8[$79+2>>0]|0;HEAP8[$74+3>>0]=HEAP8[$79+3>>0]|0;HEAP8[$74+4>>0]=HEAP8[$79+4>>0]|0;HEAP8[$74+5>>0]=HEAP8[$79+5>>0]|0;HEAP8[$74+6>>0]=HEAP8[$79+6>>0]|0;HEAP8[$74+7>>0]=HEAP8[$79+7>>0]|0;
 $71 = $139;
 HEAP32[$72>>2] = $140;
 $143 = $71;
 $70 = $72;
 $144 = $70;
 $145 = HEAP32[$144>>2]|0;
 $64 = $74;
 $146 = $64;
 ;HEAP32[$73>>2]=HEAP32[$146>>2]|0;HEAP32[$73+4>>2]=HEAP32[$146+4>>2]|0;
 ;HEAP8[$69>>0]=HEAP8[$73>>0]|0;HEAP8[$69+1>>0]=HEAP8[$73+1>>0]|0;HEAP8[$69+2>>0]=HEAP8[$73+2>>0]|0;HEAP8[$69+3>>0]=HEAP8[$73+3>>0]|0;HEAP8[$69+4>>0]=HEAP8[$73+4>>0]|0;HEAP8[$69+5>>0]=HEAP8[$73+5>>0]|0;HEAP8[$69+6>>0]=HEAP8[$73+6>>0]|0;HEAP8[$69+7>>0]=HEAP8[$73+7>>0]|0;
 $67 = $143;
 HEAP32[$68>>2] = $145;
 $147 = $67;
 $66 = $68;
 $148 = $66;
 $149 = HEAP32[$148>>2]|0;
 HEAP32[$147>>2] = $149;
 $150 = ((($147)) + 4|0);
 $65 = $69;
 $151 = $65;
 ;HEAP32[$150>>2]=HEAP32[$151>>2]|0;HEAP32[$150+4>>2]=HEAP32[$151+4>>2]|0;
 $152 = $__na;
 $37 = $agg$result;
 $153 = $37;
 $36 = $153;
 $154 = $36;
 $35 = $154;
 $155 = $35;
 $156 = HEAP32[$155>>2]|0;
 $157 = ((($156)) + 16|0);
 $34 = $157;
 $158 = $34;
 $159 = $118;
 $0 = $159;
 $160 = $0;
 $27 = $152;
 $28 = $158;
 $29 = $160;
 $161 = $27;
 $162 = $28;
 $163 = $29;
 $26 = $163;
 $164 = $26;
 ;HEAP8[$25>>0]=HEAP8[$30>>0]|0;
 $22 = $161;
 $23 = $162;
 $24 = $164;
 $165 = $22;
 $166 = $23;
 $167 = $24;
 $21 = $167;
 $168 = $21;
 $18 = $165;
 $19 = $166;
 $20 = $168;
 $169 = $19;
 $170 = $20;
 $17 = $170;
 $171 = $17;
 $15 = $169;
 $16 = $171;
 $172 = $15;
 $173 = $16;
 $14 = $173;
 $174 = $14;
 $9 = $172;
 $10 = $174;
 $11 = 0;
 $175 = $9;
 $176 = $10;
 $8 = $176;
 $177 = $8;
 $6 = $175;
 $7 = $177;
 $178 = $6;
 $179 = $7;
 $5 = $179;
 $180 = $5;
 ;HEAP32[$178>>2]=HEAP32[$180>>2]|0;HEAP32[$178+4>>2]=HEAP32[$180+4>>2]|0;HEAP32[$178+8>>2]=HEAP32[$180+8>>2]|0;
 $181 = $7;
 $4 = $181;
 $182 = $4;
 $3 = $182;
 $183 = $3;
 $2 = $183;
 $184 = $2;
 $__a$i$i$i$i$i$i$i = $184;
 $__i$i$i$i$i$i$i$i = 0;
 while(1) {
  $185 = $__i$i$i$i$i$i$i$i;
  $186 = ($185>>>0)<(3);
  if (!($186)) {
   break;
  }
  $187 = $__i$i$i$i$i$i$i$i;
  $188 = $__a$i$i$i$i$i$i$i;
  $189 = (($188) + ($187<<2)|0);
  HEAP32[$189>>2] = 0;
  $190 = $__i$i$i$i$i$i$i$i;
  $191 = (($190) + 1)|0;
  $__i$i$i$i$i$i$i$i = $191;
 }
 $192 = ((($175)) + 12|0);
 $193 = $10;
 $194 = ((($193)) + 12|0);
 $1 = $194;
 $195 = $1;
 __THREW__ = 0;
 invoke_vii(620,($192|0),($195|0));
 $196 = __THREW__; __THREW__ = 0;
 $197 = $196&1;
 if ($197) {
  $198 = ___cxa_find_matching_catch_2()|0;
  $199 = tempRet0;
  $12 = $198;
  $13 = $199;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($175);
  $200 = $12;
  $201 = $13;
  $121 = $200;
  $122 = $201;
  $63 = $agg$result;
  $202 = $63;
  $61 = $202;
  $62 = 0;
  $203 = $61;
  $60 = $203;
  $204 = $60;
  $59 = $204;
  $205 = $59;
  $206 = HEAP32[$205>>2]|0;
  $__tmp$i$i1 = $206;
  $207 = $62;
  $41 = $203;
  $208 = $41;
  $40 = $208;
  $209 = $40;
  HEAP32[$209>>2] = $207;
  $210 = $__tmp$i$i1;
  $211 = ($210|0)!=(0|0);
  if (!($211)) {
   $278 = $121;
   $279 = $122;
   ___resumeException($278|0);
   // unreachable;
  }
  $39 = $203;
  $218 = $39;
  $38 = $218;
  $219 = $38;
  $220 = ((($219)) + 4|0);
  $221 = $__tmp$i$i1;
  $57 = $220;
  $58 = $221;
  $222 = $57;
  $223 = ((($222)) + 4|0);
  $224 = HEAP8[$223>>0]|0;
  $225 = $224&1;
  if ($225) {
   $226 = HEAP32[$222>>2]|0;
   $227 = $58;
   $228 = ((($227)) + 16|0);
   $56 = $228;
   $229 = $56;
   $53 = $226;
   $54 = $229;
   $230 = $53;
   $231 = $54;
   ;HEAP8[$52>>0]=HEAP8[$55>>0]|0;
   $50 = $230;
   $51 = $231;
   $232 = $51;
   $49 = $232;
   $233 = $49;
   __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($233);
  }
  $234 = $58;
  $235 = ($234|0)!=(0|0);
  if (!($235)) {
   $278 = $121;
   $279 = $122;
   ___resumeException($278|0);
   // unreachable;
  }
  $236 = HEAP32[$222>>2]|0;
  $237 = $58;
  $46 = $236;
  $47 = $237;
  $48 = 1;
  $238 = $46;
  $239 = $47;
  $240 = $48;
  $43 = $238;
  $44 = $239;
  $45 = $240;
  $241 = $44;
  $42 = $241;
  $242 = $42;
  __ZdlPv($242);
  $278 = $121;
  $279 = $122;
  ___resumeException($278|0);
  // unreachable;
 }
 $33 = $agg$result;
 $212 = $33;
 $32 = $212;
 $213 = $32;
 $31 = $213;
 $214 = $31;
 $215 = ((($214)) + 4|0);
 $216 = ((($215)) + 4|0);
 HEAP8[$216>>0] = 1;
 $$expand_i1_val2 = 1;
 HEAP8[$119>>0] = $$expand_i1_val2;
 $$pre_trunc = HEAP8[$119>>0]|0;
 $217 = $$pre_trunc&1;
 if ($217) {
  STACKTOP = sp;return;
 }
 $113 = $agg$result;
 $243 = $113;
 $111 = $243;
 $112 = 0;
 $244 = $111;
 $110 = $244;
 $245 = $110;
 $109 = $245;
 $246 = $109;
 $247 = HEAP32[$246>>2]|0;
 $__tmp$i$i = $247;
 $248 = $112;
 $91 = $244;
 $249 = $91;
 $90 = $249;
 $250 = $90;
 HEAP32[$250>>2] = $248;
 $251 = $__tmp$i$i;
 $252 = ($251|0)!=(0|0);
 if (!($252)) {
  STACKTOP = sp;return;
 }
 $89 = $244;
 $253 = $89;
 $88 = $253;
 $254 = $88;
 $255 = ((($254)) + 4|0);
 $256 = $__tmp$i$i;
 $107 = $255;
 $108 = $256;
 $257 = $107;
 $258 = ((($257)) + 4|0);
 $259 = HEAP8[$258>>0]|0;
 $260 = $259&1;
 if ($260) {
  $261 = HEAP32[$257>>2]|0;
  $262 = $108;
  $263 = ((($262)) + 16|0);
  $106 = $263;
  $264 = $106;
  $103 = $261;
  $104 = $264;
  $265 = $103;
  $266 = $104;
  ;HEAP8[$102>>0]=HEAP8[$105>>0]|0;
  $100 = $265;
  $101 = $266;
  $267 = $101;
  $99 = $267;
  $268 = $99;
  __ZNSt3__14pairIKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($268);
 }
 $269 = $108;
 $270 = ($269|0)!=(0|0);
 if (!($270)) {
  STACKTOP = sp;return;
 }
 $271 = HEAP32[$257>>2]|0;
 $272 = $108;
 $96 = $271;
 $97 = $272;
 $98 = 1;
 $273 = $96;
 $274 = $97;
 $275 = $98;
 $93 = $273;
 $94 = $274;
 $95 = $275;
 $276 = $94;
 $92 = $276;
 $277 = $92;
 __ZdlPv($277);
 STACKTOP = sp;return;
}
function __ZN3VarC2EOS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = $this;
 $8 = $0;
 $11 = $7;
 $12 = $8;
 $5 = $11;
 $6 = $12;
 $13 = $5;
 $14 = $6;
 $4 = $14;
 $15 = $4;
 ;HEAP32[$13>>2]=HEAP32[$15>>2]|0;HEAP32[$13+4>>2]=HEAP32[$15+4>>2]|0;HEAP32[$13+8>>2]=HEAP32[$15+8>>2]|0;
 $16 = $6;
 $3 = $16;
 $17 = $3;
 $2 = $17;
 $18 = $2;
 $1 = $18;
 $19 = $1;
 $__a$i$i = $19;
 $__i$i$i = 0;
 while(1) {
  $20 = $__i$i$i;
  $21 = ($20>>>0)<(3);
  if (!($21)) {
   break;
  }
  $22 = $__i$i$i;
  $23 = $__a$i$i;
  $24 = (($23) + ($22<<2)|0);
  HEAP32[$24>>2] = 0;
  $25 = $__i$i$i;
  $26 = (($25) + 1)|0;
  $__i$i$i = $26;
 }
 $27 = ((($11)) + 12|0);
 $28 = $8;
 $29 = ((($28)) + 12|0);
 __THREW__ = 0;
 invoke_vii(596,($27|0),($29|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $32 = ___cxa_find_matching_catch_2()|0;
  $33 = tempRet0;
  $9 = $32;
  $10 = $33;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $34 = $9;
  $35 = $10;
  ___resumeException($34|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE20__node_insert_uniqueEPNS_11__tree_nodeIS9_PvEE($agg$result,$this,$__nd) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__nd = $__nd|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__child = 0, $__inserted = 0, $__parent = 0, $__r = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__parent = sp + 12|0;
 $__inserted = sp + 52|0;
 $9 = sp;
 $7 = $this;
 $8 = $__nd;
 $10 = $7;
 $11 = $8;
 $12 = ((($11)) + 16|0);
 $13 = (__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($10,$__parent,$12)|0);
 $__child = $13;
 $14 = $__child;
 $15 = HEAP32[$14>>2]|0;
 $__r = $15;
 HEAP8[$__inserted>>0] = 0;
 $16 = $__child;
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $19 = HEAP32[$__parent>>2]|0;
  $20 = $__child;
  $21 = $8;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_($10,$19,$20,$21);
  $22 = $8;
  $__r = $22;
  HEAP8[$__inserted>>0] = 1;
 }
 $23 = $__r;
 $5 = $9;
 $6 = $23;
 $24 = $5;
 $25 = $6;
 HEAP32[$24>>2] = $25;
 $2 = $agg$result;
 $3 = $9;
 $4 = $__inserted;
 $26 = $2;
 $27 = $3;
 $1 = $27;
 $28 = $1;
 ;HEAP32[$26>>2]=HEAP32[$28>>2]|0;
 $29 = ((($26)) + 4|0);
 $30 = $4;
 $0 = $30;
 $31 = $0;
 $32 = HEAP8[$31>>0]|0;
 $33 = $32&1;
 $34 = $33&1;
 HEAP8[$29>>0] = $34;
 STACKTOP = sp;return;
}
function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE12__find_equalIS9_EERPNS_16__tree_node_baseIPvEESL_RKT_($this,$__parent,$__v) {
 $this = $this|0;
 $__parent = $__parent|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lhs_sz$i$i$i$i = 0;
 var $__lhs_sz$i$i$i$i1 = 0, $__nd = 0, $__result$i$i$i$i = 0, $__result$i$i$i$i3 = 0, $__rhs_sz$i$i$i$i = 0, $__rhs_sz$i$i$i$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 656|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $22 = sp + 8|0;
 $25 = sp + 653|0;
 $__lhs_sz$i$i$i$i1 = sp + 404|0;
 $__rhs_sz$i$i$i$i2 = sp + 400|0;
 $93 = sp;
 $96 = sp + 652|0;
 $__lhs_sz$i$i$i$i = sp + 116|0;
 $__rhs_sz$i$i$i$i = sp + 112|0;
 $154 = $this;
 $155 = $__parent;
 $156 = $__v;
 $157 = $154;
 $152 = $157;
 $158 = $152;
 $151 = $158;
 $159 = $151;
 $160 = ((($159)) + 4|0);
 $150 = $160;
 $161 = $150;
 $149 = $161;
 $162 = $149;
 $148 = $162;
 $163 = $148;
 $147 = $163;
 $164 = $147;
 $165 = HEAP32[$164>>2]|0;
 $__nd = $165;
 $166 = $__nd;
 $167 = ($166|0)!=(0|0);
 if (!($167)) {
  $146 = $157;
  $449 = $146;
  $450 = ((($449)) + 4|0);
  $145 = $450;
  $451 = $145;
  $144 = $451;
  $452 = $144;
  $143 = $452;
  $453 = $143;
  $142 = $453;
  $454 = $142;
  $455 = $155;
  HEAP32[$455>>2] = $454;
  $456 = $155;
  $457 = HEAP32[$456>>2]|0;
  $153 = $457;
  $458 = $153;
  STACKTOP = sp;return ($458|0);
 }
 while(1) {
  $73 = $157;
  $168 = $73;
  $169 = ((($168)) + 8|0);
  $72 = $169;
  $170 = $72;
  $71 = $170;
  $171 = $71;
  $172 = $156;
  $173 = $__nd;
  $174 = ((($173)) + 16|0);
  $68 = $171;
  $69 = $172;
  $70 = $174;
  $175 = $68;
  $176 = $69;
  $177 = $70;
  $65 = $175;
  $66 = $176;
  $67 = $177;
  $178 = $66;
  $179 = $67;
  $63 = $178;
  $64 = $179;
  $180 = $63;
  $181 = $64;
  $61 = $180;
  $62 = $181;
  $182 = $61;
  $59 = $182;
  $183 = $59;
  $58 = $183;
  $184 = $58;
  $57 = $184;
  $185 = $57;
  $56 = $185;
  $186 = $56;
  $187 = HEAP8[$186>>0]|0;
  $188 = $187&255;
  $189 = $188 & 1;
  $190 = ($189|0)!=(0);
  if ($190) {
   $52 = $183;
   $191 = $52;
   $51 = $191;
   $192 = $51;
   $50 = $192;
   $193 = $50;
   $194 = ((($193)) + 4|0);
   $195 = HEAP32[$194>>2]|0;
   $202 = $195;
  } else {
   $55 = $183;
   $196 = $55;
   $54 = $196;
   $197 = $54;
   $53 = $197;
   $198 = $53;
   $199 = HEAP8[$198>>0]|0;
   $200 = $199&255;
   $201 = $200 >> 1;
   $202 = $201;
  }
  HEAP32[$__lhs_sz$i$i$i$i1>>2] = $202;
  $203 = $62;
  $49 = $203;
  $204 = $49;
  $48 = $204;
  $205 = $48;
  $47 = $205;
  $206 = $47;
  $46 = $206;
  $207 = $46;
  $208 = HEAP8[$207>>0]|0;
  $209 = $208&255;
  $210 = $209 & 1;
  $211 = ($210|0)!=(0);
  if ($211) {
   $42 = $204;
   $212 = $42;
   $41 = $212;
   $213 = $41;
   $40 = $213;
   $214 = $40;
   $215 = ((($214)) + 4|0);
   $216 = HEAP32[$215>>2]|0;
   $223 = $216;
  } else {
   $45 = $204;
   $217 = $45;
   $44 = $217;
   $218 = $44;
   $43 = $218;
   $219 = $43;
   $220 = HEAP8[$219>>0]|0;
   $221 = $220&255;
   $222 = $221 >> 1;
   $223 = $222;
  }
  HEAP32[$__rhs_sz$i$i$i$i2>>2] = $223;
  $39 = $182;
  $224 = $39;
  $38 = $224;
  $225 = $38;
  $37 = $225;
  $226 = $37;
  $36 = $226;
  $227 = $36;
  $35 = $227;
  $228 = $35;
  $229 = HEAP8[$228>>0]|0;
  $230 = $229&255;
  $231 = $230 & 1;
  $232 = ($231|0)!=(0);
  if ($232) {
   $29 = $225;
   $233 = $29;
   $28 = $233;
   $234 = $28;
   $27 = $234;
   $235 = $27;
   $236 = ((($235)) + 8|0);
   $237 = HEAP32[$236>>2]|0;
   $244 = $237;
  } else {
   $34 = $225;
   $238 = $34;
   $33 = $238;
   $239 = $33;
   $32 = $239;
   $240 = $32;
   $241 = ((($240)) + 1|0);
   $31 = $241;
   $242 = $31;
   $30 = $242;
   $243 = $30;
   $244 = $243;
  }
  $26 = $244;
  $245 = $26;
  $246 = $62;
  $16 = $246;
  $247 = $16;
  $15 = $247;
  $248 = $15;
  $14 = $248;
  $249 = $14;
  $13 = $249;
  $250 = $13;
  $12 = $250;
  $251 = $12;
  $252 = HEAP8[$251>>0]|0;
  $253 = $252&255;
  $254 = $253 & 1;
  $255 = ($254|0)!=(0);
  if ($255) {
   $6 = $248;
   $256 = $6;
   $5 = $256;
   $257 = $5;
   $4 = $257;
   $258 = $4;
   $259 = ((($258)) + 8|0);
   $260 = HEAP32[$259>>2]|0;
   $267 = $260;
  } else {
   $11 = $248;
   $261 = $11;
   $10 = $261;
   $262 = $10;
   $9 = $262;
   $263 = $9;
   $264 = ((($263)) + 1|0);
   $8 = $264;
   $265 = $8;
   $7 = $265;
   $266 = $7;
   $267 = $266;
  }
  $3 = $267;
  $268 = $3;
  $23 = $__lhs_sz$i$i$i$i1;
  $24 = $__rhs_sz$i$i$i$i2;
  $269 = $23;
  $270 = $24;
  ;HEAP8[$22>>0]=HEAP8[$25>>0]|0;
  $20 = $269;
  $21 = $270;
  $271 = $21;
  $272 = $20;
  $17 = $22;
  $18 = $271;
  $19 = $272;
  $273 = $18;
  $274 = HEAP32[$273>>2]|0;
  $275 = $19;
  $276 = HEAP32[$275>>2]|0;
  $277 = ($274>>>0)<($276>>>0);
  $278 = $21;
  $279 = $20;
  $280 = $277 ? $278 : $279;
  $281 = HEAP32[$280>>2]|0;
  __THREW__ = 0;
  $282 = (invoke_iiii(615,($245|0),($268|0),($281|0))|0);
  $283 = __THREW__; __THREW__ = 0;
  $284 = $283&1;
  if ($284) {
   label = 22;
   break;
  }
  $__result$i$i$i$i3 = $282;
  $285 = $__result$i$i$i$i3;
  $286 = ($285|0)!=(0);
  do {
   if ($286) {
    $287 = $__result$i$i$i$i3;
    $60 = $287;
   } else {
    $288 = HEAP32[$__lhs_sz$i$i$i$i1>>2]|0;
    $289 = HEAP32[$__rhs_sz$i$i$i$i2>>2]|0;
    $290 = ($288>>>0)<($289>>>0);
    if ($290) {
     $60 = -1;
     break;
    }
    $291 = HEAP32[$__lhs_sz$i$i$i$i1>>2]|0;
    $292 = HEAP32[$__rhs_sz$i$i$i$i2>>2]|0;
    $293 = ($291>>>0)>($292>>>0);
    if ($293) {
     $60 = 1;
     break;
    } else {
     $60 = 0;
     break;
    }
   }
  } while(0);
  $296 = $60;
  $297 = ($296|0)<(0);
  if ($297) {
   $298 = $__nd;
   $299 = HEAP32[$298>>2]|0;
   $300 = ($299|0)!=(0|0);
   $301 = $__nd;
   if (!($300)) {
    label = 26;
    break;
   }
   $302 = HEAP32[$301>>2]|0;
   $__nd = $302;
   continue;
  }
  $2 = $157;
  $306 = $2;
  $307 = ((($306)) + 8|0);
  $1 = $307;
  $308 = $1;
  $0 = $308;
  $309 = $0;
  $310 = $__nd;
  $311 = ((($310)) + 16|0);
  $312 = $156;
  $139 = $309;
  $140 = $311;
  $141 = $312;
  $313 = $139;
  $314 = $140;
  $315 = $141;
  $136 = $313;
  $137 = $314;
  $138 = $315;
  $316 = $137;
  $317 = $138;
  $134 = $316;
  $135 = $317;
  $318 = $134;
  $319 = $135;
  $132 = $318;
  $133 = $319;
  $320 = $132;
  $130 = $320;
  $321 = $130;
  $129 = $321;
  $322 = $129;
  $128 = $322;
  $323 = $128;
  $127 = $323;
  $324 = $127;
  $325 = HEAP8[$324>>0]|0;
  $326 = $325&255;
  $327 = $326 & 1;
  $328 = ($327|0)!=(0);
  if ($328) {
   $123 = $321;
   $329 = $123;
   $122 = $329;
   $330 = $122;
   $121 = $330;
   $331 = $121;
   $332 = ((($331)) + 4|0);
   $333 = HEAP32[$332>>2]|0;
   $340 = $333;
  } else {
   $126 = $321;
   $334 = $126;
   $125 = $334;
   $335 = $125;
   $124 = $335;
   $336 = $124;
   $337 = HEAP8[$336>>0]|0;
   $338 = $337&255;
   $339 = $338 >> 1;
   $340 = $339;
  }
  HEAP32[$__lhs_sz$i$i$i$i>>2] = $340;
  $341 = $133;
  $120 = $341;
  $342 = $120;
  $119 = $342;
  $343 = $119;
  $118 = $343;
  $344 = $118;
  $117 = $344;
  $345 = $117;
  $346 = HEAP8[$345>>0]|0;
  $347 = $346&255;
  $348 = $347 & 1;
  $349 = ($348|0)!=(0);
  if ($349) {
   $113 = $342;
   $350 = $113;
   $112 = $350;
   $351 = $112;
   $111 = $351;
   $352 = $111;
   $353 = ((($352)) + 4|0);
   $354 = HEAP32[$353>>2]|0;
   $361 = $354;
  } else {
   $116 = $342;
   $355 = $116;
   $115 = $355;
   $356 = $115;
   $114 = $356;
   $357 = $114;
   $358 = HEAP8[$357>>0]|0;
   $359 = $358&255;
   $360 = $359 >> 1;
   $361 = $360;
  }
  HEAP32[$__rhs_sz$i$i$i$i>>2] = $361;
  $110 = $320;
  $362 = $110;
  $109 = $362;
  $363 = $109;
  $108 = $363;
  $364 = $108;
  $107 = $364;
  $365 = $107;
  $106 = $365;
  $366 = $106;
  $367 = HEAP8[$366>>0]|0;
  $368 = $367&255;
  $369 = $368 & 1;
  $370 = ($369|0)!=(0);
  if ($370) {
   $100 = $363;
   $371 = $100;
   $99 = $371;
   $372 = $99;
   $98 = $372;
   $373 = $98;
   $374 = ((($373)) + 8|0);
   $375 = HEAP32[$374>>2]|0;
   $382 = $375;
  } else {
   $105 = $363;
   $376 = $105;
   $104 = $376;
   $377 = $104;
   $103 = $377;
   $378 = $103;
   $379 = ((($378)) + 1|0);
   $102 = $379;
   $380 = $102;
   $101 = $380;
   $381 = $101;
   $382 = $381;
  }
  $97 = $382;
  $383 = $97;
  $384 = $133;
  $87 = $384;
  $385 = $87;
  $86 = $385;
  $386 = $86;
  $85 = $386;
  $387 = $85;
  $84 = $387;
  $388 = $84;
  $83 = $388;
  $389 = $83;
  $390 = HEAP8[$389>>0]|0;
  $391 = $390&255;
  $392 = $391 & 1;
  $393 = ($392|0)!=(0);
  if ($393) {
   $77 = $386;
   $394 = $77;
   $76 = $394;
   $395 = $76;
   $75 = $395;
   $396 = $75;
   $397 = ((($396)) + 8|0);
   $398 = HEAP32[$397>>2]|0;
   $405 = $398;
  } else {
   $82 = $386;
   $399 = $82;
   $81 = $399;
   $400 = $81;
   $80 = $400;
   $401 = $80;
   $402 = ((($401)) + 1|0);
   $79 = $402;
   $403 = $79;
   $78 = $403;
   $404 = $78;
   $405 = $404;
  }
  $74 = $405;
  $406 = $74;
  $94 = $__lhs_sz$i$i$i$i;
  $95 = $__rhs_sz$i$i$i$i;
  $407 = $94;
  $408 = $95;
  ;HEAP8[$93>>0]=HEAP8[$96>>0]|0;
  $91 = $407;
  $92 = $408;
  $409 = $92;
  $410 = $91;
  $88 = $93;
  $89 = $409;
  $90 = $410;
  $411 = $89;
  $412 = HEAP32[$411>>2]|0;
  $413 = $90;
  $414 = HEAP32[$413>>2]|0;
  $415 = ($412>>>0)<($414>>>0);
  $416 = $92;
  $417 = $91;
  $418 = $415 ? $416 : $417;
  $419 = HEAP32[$418>>2]|0;
  __THREW__ = 0;
  $420 = (invoke_iiii(615,($383|0),($406|0),($419|0))|0);
  $421 = __THREW__; __THREW__ = 0;
  $422 = $421&1;
  if ($422) {
   label = 47;
   break;
  }
  $__result$i$i$i$i = $420;
  $423 = $__result$i$i$i$i;
  $424 = ($423|0)!=(0);
  do {
   if ($424) {
    $425 = $__result$i$i$i$i;
    $131 = $425;
   } else {
    $426 = HEAP32[$__lhs_sz$i$i$i$i>>2]|0;
    $427 = HEAP32[$__rhs_sz$i$i$i$i>>2]|0;
    $428 = ($426>>>0)<($427>>>0);
    if ($428) {
     $131 = -1;
     break;
    }
    $429 = HEAP32[$__lhs_sz$i$i$i$i>>2]|0;
    $430 = HEAP32[$__rhs_sz$i$i$i$i>>2]|0;
    $431 = ($429>>>0)>($430>>>0);
    if ($431) {
     $131 = 1;
     break;
    } else {
     $131 = 0;
     break;
    }
   }
  } while(0);
  $434 = $131;
  $435 = ($434|0)<(0);
  $436 = $__nd;
  if (!($435)) {
   label = 52;
   break;
  }
  $437 = ((($436)) + 4|0);
  $438 = HEAP32[$437>>2]|0;
  $439 = ($438|0)!=(0|0);
  $440 = $__nd;
  if (!($439)) {
   label = 51;
   break;
  }
  $441 = ((($440)) + 4|0);
  $442 = HEAP32[$441>>2]|0;
  $__nd = $442;
 }
 if ((label|0) == 22) {
  $294 = ___cxa_find_matching_catch_3(0|0)|0;
  $295 = tempRet0;
  ___clang_call_terminate($294);
  // unreachable;
 }
 else if ((label|0) == 26) {
  $303 = $155;
  HEAP32[$303>>2] = $301;
  $304 = $155;
  $305 = HEAP32[$304>>2]|0;
  $153 = $305;
  $458 = $153;
  STACKTOP = sp;return ($458|0);
 }
 else if ((label|0) == 47) {
  $432 = ___cxa_find_matching_catch_3(0|0)|0;
  $433 = tempRet0;
  ___clang_call_terminate($432);
  // unreachable;
 }
 else if ((label|0) == 51) {
  $443 = $155;
  HEAP32[$443>>2] = $440;
  $444 = $155;
  $445 = HEAP32[$444>>2]|0;
  $446 = ((($445)) + 4|0);
  $153 = $446;
  $458 = $153;
  STACKTOP = sp;return ($458|0);
 }
 else if ((label|0) == 52) {
  $447 = $155;
  HEAP32[$447>>2] = $436;
  $448 = $155;
  $153 = $448;
  $458 = $153;
  STACKTOP = sp;return ($458|0);
 }
 return (0)|0;
}
function __ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 12|0);
 __ZN3VarD2Ev($2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZN3VaraSERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($3,$4)|0);
 $5 = ((($3)) + 12|0);
 $6 = $2;
 $7 = ((($6)) + 12|0);
 (__ZN5ValueaSERKS_($5,$7)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN6Memory7findVarENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($agg$result,$this,$name) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $name = $name|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = sp + 8|0;
 $15 = sp + 132|0;
 $17 = sp + 124|0;
 $19 = sp + 116|0;
 $21 = sp;
 $22 = sp + 108|0;
 $25 = sp + 96|0;
 $37 = sp + 48|0;
 $38 = sp + 44|0;
 $39 = sp + 32|0;
 $42 = sp + 12|0;
 $43 = sp + 192|0;
 $36 = $this;
 $44 = $36;
 $35 = $name;
 $45 = $35;
 $34 = $45;
 $46 = $34;
 $33 = $46;
 $47 = $33;
 $32 = $47;
 $48 = $32;
 $49 = HEAP8[$48>>0]|0;
 $50 = $49&255;
 $51 = $50 & 1;
 $52 = ($51|0)!=(0);
 if ($52) {
  $28 = $45;
  $53 = $28;
  $27 = $53;
  $54 = $27;
  $26 = $54;
  $55 = $26;
  $56 = ((($55)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $64 = $57;
 } else {
  $31 = $45;
  $58 = $31;
  $30 = $58;
  $59 = $30;
  $29 = $59;
  $60 = $29;
  $61 = HEAP8[$60>>0]|0;
  $62 = $61&255;
  $63 = $62 >> 1;
  $64 = $63;
 }
 $65 = ($64>>>0)>(0);
 if (!($65)) {
  ___assert_fail((11860|0),(11811|0),22,(11891|0));
  // unreachable;
 }
 $66 = ((($44)) + 4|0);
 $23 = $66;
 $24 = $name;
 $67 = $23;
 $68 = $24;
 $69 = (__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($67,$68)|0);
 HEAP32[$25>>2] = $69;
 ;HEAP8[$21>>0]=HEAP8[$25>>0]|0;HEAP8[$21+1>>0]=HEAP8[$25+1>>0]|0;HEAP8[$21+2>>0]=HEAP8[$25+2>>0]|0;HEAP8[$21+3>>0]=HEAP8[$25+3>>0]|0;
 $20 = $22;
 $70 = $20;
 ;HEAP32[$70>>2]=HEAP32[$21>>2]|0;
 $71 = HEAP32[$22>>2]|0;
 HEAP32[$37>>2] = $71;
 $72 = ((($44)) + 4|0);
 $18 = $72;
 $73 = $18;
 $16 = $73;
 $74 = $16;
 $14 = $74;
 $75 = $14;
 $76 = ((($75)) + 4|0);
 $13 = $76;
 $77 = $13;
 $12 = $77;
 $78 = $12;
 $11 = $78;
 $79 = $11;
 $10 = $79;
 $80 = $10;
 $8 = $15;
 $9 = $80;
 $81 = $8;
 $82 = $9;
 HEAP32[$81>>2] = $82;
 $83 = HEAP32[$15>>2]|0;
 HEAP32[$19>>2] = $83;
 ;HEAP8[$7>>0]=HEAP8[$19>>0]|0;HEAP8[$7+1>>0]=HEAP8[$19+1>>0]|0;HEAP8[$7+2>>0]=HEAP8[$19+2>>0]|0;HEAP8[$7+3>>0]=HEAP8[$19+3>>0]|0;
 $6 = $17;
 $84 = $6;
 ;HEAP32[$84>>2]=HEAP32[$7>>2]|0;
 $85 = HEAP32[$17>>2]|0;
 HEAP32[$38>>2] = $85;
 $4 = $37;
 $5 = $38;
 $86 = $4;
 $87 = $5;
 $2 = $86;
 $3 = $87;
 $88 = $2;
 $89 = $3;
 $0 = $88;
 $1 = $89;
 $90 = $0;
 $91 = HEAP32[$90>>2]|0;
 $92 = $1;
 $93 = HEAP32[$92>>2]|0;
 $94 = ($91|0)==($93|0);
 $95 = $94 ^ 1;
 if ($95) {
  $96 = ((($44)) + 4|0);
  $97 = (__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEEixERSB_($96,$name)|0);
  __ZN3VarC2ERKS_($agg$result,$97);
  STACKTOP = sp;return;
 }
 $98 = HEAP32[$44>>2]|0;
 $99 = ($98|0)!=(0|0);
 if ($99) {
  $100 = HEAP32[$44>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($39,$name);
  __THREW__ = 0;
  invoke_viii(604,($agg$result|0),($100|0),($39|0));
  $101 = __THREW__; __THREW__ = 0;
  $102 = $101&1;
  if ($102) {
   $103 = ___cxa_find_matching_catch_2()|0;
   $104 = tempRet0;
   $40 = $103;
   $41 = $104;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
   $116 = $40;
   $117 = $41;
   ___resumeException($116|0);
   // unreachable;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
   STACKTOP = sp;return;
  }
 }
 $105 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$43>>0] = $$expand_i1_val;
 __THREW__ = 0;
 invoke_viii(621,($42|0),(11899|0),($name|0));
 $106 = __THREW__; __THREW__ = 0;
 $107 = $106&1;
 if ($107) {
  $111 = ___cxa_find_matching_catch_2()|0;
  $112 = tempRet0;
  $40 = $111;
  $41 = $112;
 } else {
  __THREW__ = 0;
  invoke_viii(601,($105|0),($42|0),0);
  $108 = __THREW__; __THREW__ = 0;
  $109 = $108&1;
  if (!($109)) {
   $$expand_i1_val2 = 0;
   HEAP8[$43>>0] = $$expand_i1_val2;
   __THREW__ = 0;
   invoke_viii(602,($105|0),(80|0),(603|0));
   $110 = __THREW__; __THREW__ = 0;
  }
  $113 = ___cxa_find_matching_catch_2()|0;
  $114 = tempRet0;
  $40 = $113;
  $41 = $114;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
 }
 $$pre_trunc = HEAP8[$43>>0]|0;
 $115 = $$pre_trunc&1;
 if (!($115)) {
  $116 = $40;
  $117 = $41;
  ___resumeException($116|0);
  // unreachable;
 }
 ___cxa_free_exception(($105|0));
 $116 = $40;
 $117 = $41;
 ___resumeException($116|0);
 // unreachable;
}
function __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i = 0, $__i$i$i = 0, $__lhs_sz = 0, $__rhs_sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 195|0;
 $9 = sp;
 $12 = sp + 194|0;
 $43 = sp + 193|0;
 $44 = sp + 192|0;
 $41 = $__lhs;
 $42 = $__rhs;
 $$expand_i1_val = 0;
 HEAP8[$43>>0] = $$expand_i1_val;
 $47 = $42;
 $40 = $47;
 $48 = $40;
 $39 = $48;
 $49 = $39;
 $38 = $49;
 $50 = $38;
 $37 = $50;
 $10 = $agg$result;
 $11 = $44;
 $51 = $10;
 ;HEAP8[$9>>0]=HEAP8[$12>>0]|0;
 $7 = $51;
 $52 = $7;
 $6 = $9;
 ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
 $4 = $52;
 $3 = $5;
 $2 = $51;
 $53 = $2;
 $1 = $53;
 $54 = $1;
 $0 = $54;
 $55 = $0;
 $__a$i$i = $55;
 $__i$i$i = 0;
 while(1) {
  $56 = $__i$i$i;
  $57 = ($56>>>0)<(3);
  if (!($57)) {
   break;
  }
  $58 = $__i$i$i;
  $59 = $__a$i$i;
  $60 = (($59) + ($58<<2)|0);
  HEAP32[$60>>2] = 0;
  $61 = $__i$i$i;
  $62 = (($61) + 1)|0;
  $__i$i$i = $62;
 }
 $63 = $41;
 __THREW__ = 0;
 $64 = (invoke_ii(550,($63|0))|0);
 $65 = __THREW__; __THREW__ = 0;
 $66 = $65&1;
 if ($66) {
  $122 = ___cxa_find_matching_catch_2()|0;
  $123 = tempRet0;
  $45 = $122;
  $46 = $123;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $124 = $45;
  $125 = $46;
  ___resumeException($124|0);
  // unreachable;
 }
 $__lhs_sz = $64;
 $67 = $42;
 $22 = $67;
 $68 = $22;
 $21 = $68;
 $69 = $21;
 $20 = $69;
 $70 = $20;
 $19 = $70;
 $71 = $19;
 $72 = HEAP8[$71>>0]|0;
 $73 = $72&255;
 $74 = $73 & 1;
 $75 = ($74|0)!=(0);
 if ($75) {
  $15 = $68;
  $76 = $15;
  $14 = $76;
  $77 = $14;
  $13 = $77;
  $78 = $13;
  $79 = ((($78)) + 4|0);
  $80 = HEAP32[$79>>2]|0;
  $87 = $80;
 } else {
  $18 = $68;
  $81 = $18;
  $17 = $81;
  $82 = $17;
  $16 = $82;
  $83 = $16;
  $84 = HEAP8[$83>>0]|0;
  $85 = $84&255;
  $86 = $85 >> 1;
  $87 = $86;
 }
 $__rhs_sz = $87;
 $88 = $41;
 $89 = $__lhs_sz;
 $90 = $__lhs_sz;
 $91 = $__rhs_sz;
 $92 = (($90) + ($91))|0;
 __THREW__ = 0;
 invoke_viiii(622,($agg$result|0),($88|0),($89|0),($92|0));
 $93 = __THREW__; __THREW__ = 0;
 $94 = $93&1;
 if ($94) {
  $122 = ___cxa_find_matching_catch_2()|0;
  $123 = tempRet0;
  $45 = $122;
  $46 = $123;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $124 = $45;
  $125 = $46;
  ___resumeException($124|0);
  // unreachable;
 }
 $95 = $42;
 $36 = $95;
 $96 = $36;
 $35 = $96;
 $97 = $35;
 $34 = $97;
 $98 = $34;
 $33 = $98;
 $99 = $33;
 $32 = $99;
 $100 = $32;
 $101 = HEAP8[$100>>0]|0;
 $102 = $101&255;
 $103 = $102 & 1;
 $104 = ($103|0)!=(0);
 if ($104) {
  $26 = $97;
  $105 = $26;
  $25 = $105;
  $106 = $25;
  $24 = $106;
  $107 = $24;
  $108 = ((($107)) + 8|0);
  $109 = HEAP32[$108>>2]|0;
  $116 = $109;
 } else {
  $31 = $97;
  $110 = $31;
  $30 = $110;
  $111 = $30;
  $29 = $111;
  $112 = $29;
  $113 = ((($112)) + 1|0);
  $28 = $113;
  $114 = $28;
  $27 = $114;
  $115 = $27;
  $116 = $115;
 }
 $23 = $116;
 $117 = $23;
 $118 = $__rhs_sz;
 __THREW__ = 0;
 (invoke_iiii(543,($agg$result|0),($117|0),($118|0))|0);
 $119 = __THREW__; __THREW__ = 0;
 $120 = $119&1;
 if ($120) {
  $122 = ___cxa_find_matching_catch_2()|0;
  $123 = tempRet0;
  $45 = $122;
  $46 = $123;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $124 = $45;
  $125 = $46;
  ___resumeException($124|0);
  // unreachable;
 }
 $$expand_i1_val2 = 1;
 HEAP8[$43>>0] = $$expand_i1_val2;
 $$pre_trunc = HEAP8[$43>>0]|0;
 $121 = $$pre_trunc&1;
 if ($121) {
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 STACKTOP = sp;return;
}
function __ZN3VarC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEP4Data($this,$name,$data) {
 $this = $this|0;
 $name = $name|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $name;
 $2 = $data;
 $5 = $0;
 $6 = $1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5,$6);
 $7 = ((($5)) + 12|0);
 $8 = $2;
 __THREW__ = 0;
 invoke_vii(584,($7|0),($8|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  $3 = $11;
  $4 = $12;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $13 = $3;
  $14 = $4;
  ___resumeException($13|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZN3VarC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = $this;
 $10 = $7;
 $6 = $10;
 $11 = $6;
 $5 = $11;
 $12 = $5;
 $4 = $12;
 $13 = $4;
 $3 = $13;
 $2 = $11;
 $14 = $2;
 $1 = $14;
 $15 = $1;
 $0 = $15;
 $16 = $0;
 $__a$i$i = $16;
 $__i$i$i = 0;
 while(1) {
  $17 = $__i$i$i;
  $18 = ($17>>>0)<(3);
  if (!($18)) {
   break;
  }
  $19 = $__i$i$i;
  $20 = $__a$i$i;
  $21 = (($20) + ($19<<2)|0);
  HEAP32[$21>>2] = 0;
  $22 = $__i$i$i;
  $23 = (($22) + 1)|0;
  $__i$i$i = $23;
 }
 $24 = ((($10)) + 12|0);
 __THREW__ = 0;
 $25 = (invoke_ii(548,4)|0);
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if (!($27)) {
  ;HEAP32[$25>>2]=0|0;
  __ZN11AtomNilDataC2Ev($25);
  __THREW__ = 0;
  invoke_vii(584,($24|0),($25|0));
  $28 = __THREW__; __THREW__ = 0;
  $29 = $28&1;
  if (!($29)) {
   STACKTOP = sp;return;
  }
 }
 $30 = ___cxa_find_matching_catch_2()|0;
 $31 = tempRet0;
 $8 = $30;
 $9 = $31;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 $32 = $8;
 $33 = $9;
 ___resumeException($32|0);
 // unreachable;
}
function __ZN11AtomNilDataC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataC2Ev($1);
 $2 = 2492;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN11AtomNilDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN11AtomNilDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN11AtomNilDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK11AtomNilData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13515;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK11AtomNilData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 64;
}
function __ZNK11AtomNilData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__Znwj(4)|0);
 __ZN11AtomNilDataC2ERKS_($2,$1);
 STACKTOP = sp;return ($2|0);
}
function __ZN11AtomNilDataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN4DataC2ERKS_($3,$4);
 $5 = 2492;
 HEAP32[$3>>2] = $5;
 STACKTOP = sp;return;
}
function __ZNK11AtomNilData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $data;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_ii[$6 & 1023]($3)|0);
 $8 = ($7|0)==(64);
 if ($8) {
  $$expand_i1_val = 1;
  HEAP8[$0>>0] = $$expand_i1_val;
 } else {
  $$expand_i1_val2 = 0;
  HEAP8[$0>>0] = $$expand_i1_val2;
 }
 $$pre_trunc = HEAP8[$0>>0]|0;
 $9 = $$pre_trunc&1;
 STACKTOP = sp;return ($9|0);
}
function __ZNK11AtomNilData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1;
}
function __ZN10Func__Equ_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN8FunctionD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZN10Func__Equ_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func__Equ_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func__Equ_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 11967;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func__Equ_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 184|0;
 $15 = sp + 136|0;
 $18 = sp + 124|0;
 $22 = sp + 108|0;
 $27 = sp + 88|0;
 $30 = sp + 76|0;
 $34 = sp + 60|0;
 $37 = sp + 48|0;
 $40 = sp + 36|0;
 $i = sp + 20|0;
 $44 = sp + 16|0;
 $45 = sp + 12|0;
 $46 = sp + 8|0;
 $47 = sp + 4|0;
 $48 = sp;
 $41 = $this;
 $42 = $arguments;
 $43 = $stack;
 $result = 1;
 $39 = $i;
 $49 = $39;
 HEAP32[$49>>2] = 0;
 $50 = $42;
 $38 = $50;
 $51 = $38;
 $52 = HEAP32[$51>>2]|0;
 $35 = $51;
 $36 = $52;
 $53 = $36;
 $32 = $34;
 $33 = $53;
 $54 = $32;
 $55 = $33;
 HEAP32[$54>>2] = $55;
 $56 = HEAP32[$34>>2]|0;
 HEAP32[$37>>2] = $56;
 $57 = HEAP32[$37>>2]|0;
 HEAP32[$44>>2] = $57;
 ;HEAP32[$i>>2]=HEAP32[$44>>2]|0;
 while(1) {
  $58 = $42;
  $31 = $58;
  $59 = $31;
  $60 = ((($59)) + 4|0);
  $61 = HEAP32[$60>>2]|0;
  $28 = $59;
  $29 = $61;
  $62 = $29;
  $25 = $27;
  $26 = $62;
  $63 = $25;
  $64 = $26;
  HEAP32[$63>>2] = $64;
  $65 = HEAP32[$27>>2]|0;
  HEAP32[$30>>2] = $65;
  $66 = HEAP32[$30>>2]|0;
  HEAP32[$46>>2] = $66;
  $19 = $46;
  $20 = 1;
  $67 = $19;
  $68 = $20;
  $69 = (0 - ($68))|0;
  $16 = $67;
  $17 = $69;
  $70 = $16;
  ;HEAP32[$15>>2]=HEAP32[$70>>2]|0;
  $71 = $17;
  $13 = $15;
  $14 = $71;
  $72 = $13;
  $73 = $14;
  $74 = HEAP32[$72>>2]|0;
  $75 = (($74) + ($73<<2)|0);
  HEAP32[$72>>2] = $75;
  $76 = HEAP32[$15>>2]|0;
  HEAP32[$18>>2] = $76;
  $77 = HEAP32[$18>>2]|0;
  HEAP32[$45>>2] = $77;
  $11 = $i;
  $12 = $45;
  $78 = $11;
  $79 = $12;
  $9 = $78;
  $10 = $79;
  $80 = $9;
  $8 = $80;
  $81 = $8;
  $82 = HEAP32[$81>>2]|0;
  $83 = $10;
  $7 = $83;
  $84 = $7;
  $85 = HEAP32[$84>>2]|0;
  $86 = ($82|0)==($85|0);
  $87 = $86 ^ 1;
  if (!($87)) {
   break;
  }
  $0 = $i;
  $88 = $0;
  $89 = HEAP32[$88>>2]|0;
  $90 = (__ZNK5Value7getDataEv($89)|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = ((($91)) + 20|0);
  $93 = HEAP32[$92>>2]|0;
  $4 = $i;
  $5 = 1;
  $94 = $4;
  ;HEAP32[$3>>2]=HEAP32[$94>>2]|0;
  $95 = $5;
  $1 = $3;
  $2 = $95;
  $96 = $1;
  $97 = $2;
  $98 = HEAP32[$96>>2]|0;
  $99 = (($98) + ($97<<2)|0);
  HEAP32[$96>>2] = $99;
  $100 = HEAP32[$3>>2]|0;
  HEAP32[$47>>2] = $100;
  $6 = $47;
  $101 = $6;
  $102 = HEAP32[$101>>2]|0;
  $103 = (__ZNK5Value7getDataEv($102)|0);
  $104 = (FUNCTION_TABLE_iii[$93 & 1023]($90,$103)|0);
  if (!($104)) {
   label = 4;
   break;
  }
  $23 = $i;
  $24 = 0;
  $105 = $23;
  ;HEAP32[$22>>2]=HEAP32[$105>>2]|0;
  $21 = $105;
  $106 = $21;
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($107)) + 4|0);
  HEAP32[$106>>2] = $108;
  $109 = HEAP32[$22>>2]|0;
  HEAP32[$48>>2] = $109;
 }
 if ((label|0) == 4) {
  $result = 0;
 }
 $110 = $result;
 $111 = $110&1;
 $112 = (__Znwj(4)|0);
 ;HEAP32[$112>>2]=0|0;
 if ($111) {
  __ZN9AtomTDataC2Ev($112);
  __ZN5ValueC2EP4Data($40,$112);
  $113 = HEAP32[$40>>2]|0;
  STACKTOP = sp;return ($113|0);
 } else {
  __ZN11AtomNilDataC2Ev($112);
  __ZN5ValueC2EP4Data($40,$112);
  $113 = HEAP32[$40>>2]|0;
  STACKTOP = sp;return ($113|0);
 }
 return (0)|0;
}
function __ZN9AtomTDataC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataC2Ev($1);
 $2 = 2552;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN9AtomTDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9AtomTDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9AtomTDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9AtomTData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13513;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9AtomTData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 32;
}
function __ZNK9AtomTData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = (__Znwj(4)|0);
 __ZN9AtomTDataC2ERKS_($2,$1);
 STACKTOP = sp;return ($2|0);
}
function __ZN9AtomTDataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN4DataC2ERKS_($3,$4);
 $5 = 2552;
 HEAP32[$3>>2] = $5;
 STACKTOP = sp;return;
}
function __ZNK9AtomTData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 8|0;
 $1 = $this;
 $2 = $data;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_ii[$6 & 1023]($3)|0);
 $8 = ($7|0)==(32);
 if ($8) {
  $$expand_i1_val = 1;
  HEAP8[$0>>0] = $$expand_i1_val;
 } else {
  $$expand_i1_val2 = 0;
  HEAP8[$0>>0] = $$expand_i1_val2;
 }
 $$pre_trunc = HEAP8[$0>>0]|0;
 $9 = $$pre_trunc&1;
 STACKTOP = sp;return ($9|0);
}
function __ZNK9AtomTData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 1;
}
function __ZN8Func_carD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN8Func_carD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8Func_carD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8Func_car7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 11992;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK8Func_car4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $24 = sp + 56|0;
 $28 = sp + 32|0;
 $29 = sp + 20|0;
 $30 = sp + 8|0;
 $33 = sp + 172|0;
 $25 = $this;
 $26 = $arguments;
 $27 = $stack;
 $34 = $25;
 $35 = $26;
 $22 = $35;
 $23 = 0;
 $36 = $22;
 $37 = $23;
 $38 = HEAP32[$36>>2]|0;
 $39 = (($38) + ($37<<2)|0);
 $40 = (__ZNK5Value7getDataEv($39)|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($41)) + 12|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = (FUNCTION_TABLE_ii[$43 & 1023]($40)|0);
 $45 = $44 & 1;
 $46 = ($45|0)!=(0);
 if ($46) {
  $105 = $26;
  $2 = $105;
  $3 = 0;
  $106 = $2;
  $107 = $3;
  $108 = HEAP32[$106>>2]|0;
  $109 = (($108) + ($107<<2)|0);
  $110 = (__ZNK5Value7getDataEv($109)|0);
  $111 = ((($110)) + 4|0);
  $0 = $111;
  $1 = 0;
  $112 = $0;
  $113 = $1;
  $114 = HEAP32[$112>>2]|0;
  $115 = (($114) + (($113*12)|0)|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = HEAP32[$116>>2]|0;
  $118 = ((($117)) + 16|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = (FUNCTION_TABLE_ii[$119 & 1023]($116)|0);
  __ZN5ValueC2EP4Data($24,$120);
  $121 = HEAP32[$24>>2]|0;
  STACKTOP = sp;return ($121|0);
 }
 $47 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$33>>0] = $$expand_i1_val;
 $48 = HEAP32[$34>>2]|0;
 $49 = ((($48)) + 8|0);
 $50 = HEAP32[$49>>2]|0;
 __THREW__ = 0;
 invoke_vii($50|0,($30|0),($34|0));
 $51 = __THREW__; __THREW__ = 0;
 $52 = $51&1;
 if ($52) {
  $96 = ___cxa_find_matching_catch_2()|0;
  $97 = tempRet0;
  $31 = $96;
  $32 = $97;
 } else {
  $20 = 13003;
  $21 = $30;
  $53 = $21;
  $54 = $20;
  __THREW__ = 0;
  $55 = (invoke_iiii(600,($53|0),0,($54|0))|0);
  $56 = __THREW__; __THREW__ = 0;
  $57 = $56&1;
  if ($57) {
   $98 = ___cxa_find_matching_catch_2()|0;
   $99 = tempRet0;
   $31 = $98;
   $32 = $99;
  } else {
   $19 = $55;
   $58 = $19;
   $17 = $29;
   $18 = $58;
   $59 = $17;
   $60 = $18;
   $16 = $60;
   $61 = $16;
   ;HEAP32[$59>>2]=HEAP32[$61>>2]|0;HEAP32[$59+4>>2]=HEAP32[$61+4>>2]|0;HEAP32[$59+8>>2]=HEAP32[$61+8>>2]|0;
   $62 = $18;
   $15 = $62;
   $63 = $15;
   $14 = $63;
   $64 = $14;
   $13 = $64;
   $65 = $13;
   $__a$i$i$i = $65;
   $__i$i$i$i = 0;
   while(1) {
    $66 = $__i$i$i$i;
    $67 = ($66>>>0)<(3);
    if (!($67)) {
     break;
    }
    $68 = $__i$i$i$i;
    $69 = $__a$i$i$i;
    $70 = (($69) + ($68<<2)|0);
    HEAP32[$70>>2] = 0;
    $71 = $__i$i$i$i;
    $72 = (($71) + 1)|0;
    $__i$i$i$i = $72;
   }
   $11 = $29;
   $12 = 12953;
   $73 = $11;
   $74 = $12;
   __THREW__ = 0;
   $75 = (invoke_iii(542,($73|0),($74|0))|0);
   $76 = __THREW__; __THREW__ = 0;
   $77 = $76&1;
   if ($77) {
    $100 = ___cxa_find_matching_catch_2()|0;
    $101 = tempRet0;
    $31 = $100;
    $32 = $101;
   } else {
    $10 = $75;
    $78 = $10;
    $8 = $28;
    $9 = $78;
    $79 = $8;
    $80 = $9;
    $7 = $80;
    $81 = $7;
    ;HEAP32[$79>>2]=HEAP32[$81>>2]|0;HEAP32[$79+4>>2]=HEAP32[$81+4>>2]|0;HEAP32[$79+8>>2]=HEAP32[$81+8>>2]|0;
    $82 = $9;
    $6 = $82;
    $83 = $6;
    $5 = $83;
    $84 = $5;
    $4 = $84;
    $85 = $4;
    $__a$i$i$i1 = $85;
    $__i$i$i$i2 = 0;
    while(1) {
     $86 = $__i$i$i$i2;
     $87 = ($86>>>0)<(3);
     if (!($87)) {
      break;
     }
     $88 = $__i$i$i$i2;
     $89 = $__a$i$i$i1;
     $90 = (($89) + ($88<<2)|0);
     HEAP32[$90>>2] = 0;
     $91 = $__i$i$i$i2;
     $92 = (($91) + 1)|0;
     $__i$i$i$i2 = $92;
    }
    __THREW__ = 0;
    invoke_viii(601,($47|0),($28|0),0);
    $93 = __THREW__; __THREW__ = 0;
    $94 = $93&1;
    if (!($94)) {
     $$expand_i1_val2 = 0;
     HEAP8[$33>>0] = $$expand_i1_val2;
     __THREW__ = 0;
     invoke_viii(602,($47|0),(80|0),(603|0));
     $95 = __THREW__; __THREW__ = 0;
    }
    $102 = ___cxa_find_matching_catch_2()|0;
    $103 = tempRet0;
    $31 = $102;
    $32 = $103;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
 }
 $$pre_trunc = HEAP8[$33>>0]|0;
 $104 = $$pre_trunc&1;
 if (!($104)) {
  $122 = $31;
  $123 = $32;
  ___resumeException($122|0);
  // unreachable;
 }
 ___cxa_free_exception(($47|0));
 $122 = $31;
 $123 = $32;
 ___resumeException($122|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func__Mul_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func__Mul_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func__Mul_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func__Mul_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12009;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func__Mul_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $data = 0, $i = 0, $sum = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 256|0;
 $9 = sp + 244|0;
 $17 = sp + 212|0;
 $20 = sp + 200|0;
 $31 = sp + 156|0;
 $34 = sp + 144|0;
 $42 = sp + 112|0;
 $47 = sp + 92|0;
 $50 = sp + 80|0;
 $53 = sp + 68|0;
 $i = sp + 52|0;
 $57 = sp + 48|0;
 $58 = sp + 44|0;
 $59 = sp + 36|0;
 $60 = sp + 32|0;
 $61 = sp + 20|0;
 $64 = sp + 284|0;
 $65 = sp + 8|0;
 $54 = $this;
 $55 = $arguments;
 $56 = $stack;
 $52 = $i;
 $66 = $52;
 HEAP32[$66>>2] = 0;
 $67 = $55;
 $51 = $67;
 $68 = $51;
 $69 = HEAP32[$68>>2]|0;
 $48 = $68;
 $49 = $69;
 $70 = $49;
 $45 = $47;
 $46 = $70;
 $71 = $45;
 $72 = $46;
 HEAP32[$71>>2] = $72;
 $73 = HEAP32[$47>>2]|0;
 HEAP32[$50>>2] = $73;
 $74 = HEAP32[$50>>2]|0;
 HEAP32[$57>>2] = $74;
 ;HEAP32[$i>>2]=HEAP32[$57>>2]|0;
 L1: while(1) {
  $75 = $55;
  $35 = $75;
  $76 = $35;
  $77 = ((($76)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $32 = $76;
  $33 = $78;
  $79 = $33;
  $29 = $31;
  $30 = $79;
  $80 = $29;
  $81 = $30;
  HEAP32[$80>>2] = $81;
  $82 = HEAP32[$31>>2]|0;
  HEAP32[$34>>2] = $82;
  $83 = HEAP32[$34>>2]|0;
  HEAP32[$58>>2] = $83;
  $27 = $i;
  $28 = $58;
  $84 = $27;
  $85 = $28;
  $25 = $84;
  $26 = $85;
  $86 = $25;
  $24 = $86;
  $87 = $24;
  $88 = HEAP32[$87>>2]|0;
  $89 = $26;
  $23 = $89;
  $90 = $23;
  $91 = HEAP32[$90>>2]|0;
  $92 = ($88|0)==($91|0);
  $93 = $92 ^ 1;
  if (!($93)) {
   label = 20;
   break;
  }
  $22 = $i;
  $94 = $22;
  $95 = HEAP32[$94>>2]|0;
  $96 = (__ZNK5Value7getDataEv($95)|0);
  $data = $96;
  $97 = $data;
  $98 = HEAP32[$97>>2]|0;
  $99 = ((($98)) + 12|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (FUNCTION_TABLE_ii[$100 & 1023]($97)|0);
  $102 = ($101|0)==(16);
  do {
   if ($102) {
    $103 = $55;
    $21 = $103;
    $104 = $21;
    $105 = HEAP32[$104>>2]|0;
    $18 = $104;
    $19 = $105;
    $106 = $19;
    $15 = $17;
    $16 = $106;
    $107 = $15;
    $108 = $16;
    HEAP32[$107>>2] = $108;
    $109 = HEAP32[$17>>2]|0;
    HEAP32[$20>>2] = $109;
    $110 = HEAP32[$20>>2]|0;
    HEAP32[$59>>2] = $110;
    $2 = $i;
    $3 = $59;
    $111 = $2;
    $1 = $111;
    $112 = $1;
    $113 = HEAP32[$112>>2]|0;
    $114 = $3;
    $0 = $114;
    $115 = $0;
    $116 = HEAP32[$115>>2]|0;
    $117 = ($113|0)==($116|0);
    $118 = $data;
    $119 = (+__ZNK13AtomFloatData6getNumEv($118));
    if ($117) {
     $sum = $119;
     break;
    } else {
     $120 = $sum;
     $121 = $120 * $119;
     $sum = $121;
     break;
    }
   } else {
    $122 = $data;
    $123 = HEAP32[$122>>2]|0;
    $124 = ((($123)) + 12|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 1023]($122)|0);
    $127 = ($126|0)==(8);
    if (!($127)) {
     break L1;
    }
    $128 = $55;
    $10 = $128;
    $129 = $10;
    $130 = HEAP32[$129>>2]|0;
    $7 = $129;
    $8 = $130;
    $131 = $8;
    $4 = $6;
    $5 = $131;
    $132 = $4;
    $133 = $5;
    HEAP32[$132>>2] = $133;
    $134 = HEAP32[$6>>2]|0;
    HEAP32[$9>>2] = $134;
    $135 = HEAP32[$9>>2]|0;
    HEAP32[$60>>2] = $135;
    $13 = $i;
    $14 = $60;
    $136 = $13;
    $12 = $136;
    $137 = $12;
    $138 = HEAP32[$137>>2]|0;
    $139 = $14;
    $11 = $139;
    $140 = $11;
    $141 = HEAP32[$140>>2]|0;
    $142 = ($138|0)==($141|0);
    $143 = $data;
    $144 = (__ZNK11AtomIntData6getNumEv($143)|0);
    $145 = (+($144|0));
    if ($142) {
     $sum = $145;
     break;
    } else {
     $146 = $sum;
     $147 = $146 * $145;
     $sum = $147;
     break;
    }
   }
  } while(0);
  $43 = $i;
  $44 = 0;
  $167 = $43;
  ;HEAP32[$42>>2]=HEAP32[$167>>2]|0;
  $41 = $167;
  $168 = $41;
  $169 = HEAP32[$168>>2]|0;
  $170 = ((($169)) + 4|0);
  HEAP32[$168>>2] = $170;
  $171 = HEAP32[$42>>2]|0;
  HEAP32[$65>>2] = $171;
 }
 if ((label|0) == 20) {
  $172 = (__Znwj(16)|0);
  $173 = $sum;
  __THREW__ = 0;
  invoke_vid(623,($172|0),(+$173));
  $174 = __THREW__; __THREW__ = 0;
  $175 = $174&1;
  if (!($175)) {
   __ZN5ValueC2EP4Data($53,$172);
   $176 = HEAP32[$53>>2]|0;
   STACKTOP = sp;return ($176|0);
  }
  $177 = ___cxa_find_matching_catch_2()|0;
  $178 = tempRet0;
  $62 = $177;
  $63 = $178;
  __ZdlPv($172);
  $179 = $62;
  $180 = $63;
  ___resumeException($179|0);
  // unreachable;
 }
 $148 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$64>>0] = $$expand_i1_val;
 $39 = $61;
 $40 = 12459;
 $149 = $39;
 $38 = $149;
 $150 = $38;
 $37 = $150;
 $151 = $37;
 $36 = $151;
 $152 = $40;
 $153 = $40;
 __THREW__ = 0;
 $154 = (invoke_ii(550,($153|0))|0);
 $155 = __THREW__; __THREW__ = 0;
 $156 = $155&1;
 if ($156) {
  label = 15;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($149|0),($152|0),($154|0));
  $157 = __THREW__; __THREW__ = 0;
  $158 = $157&1;
  if ($158) {
   label = 15;
  } else {
   __THREW__ = 0;
   invoke_viii(601,($148|0),($61|0),0);
   $159 = __THREW__; __THREW__ = 0;
   $160 = $159&1;
   if (!($160)) {
    $$expand_i1_val2 = 0;
    HEAP8[$64>>0] = $$expand_i1_val2;
    __THREW__ = 0;
    invoke_viii(602,($148|0),(80|0),(603|0));
    $161 = __THREW__; __THREW__ = 0;
   }
   $164 = ___cxa_find_matching_catch_2()|0;
   $165 = tempRet0;
   $62 = $164;
   $63 = $165;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
  }
 }
 if ((label|0) == 15) {
  $162 = ___cxa_find_matching_catch_2()|0;
  $163 = tempRet0;
  $62 = $162;
  $63 = $163;
 }
 $$pre_trunc = HEAP8[$64>>0]|0;
 $166 = $$pre_trunc&1;
 if (!($166)) {
  $179 = $62;
  $180 = $63;
  ___resumeException($179|0);
  // unreachable;
 }
 ___cxa_free_exception(($148|0));
 $179 = $62;
 $180 = $63;
 ___resumeException($179|0);
 // unreachable;
 return (0)|0;
}
function __ZNK13AtomFloatData6getNumEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 8|0);
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZNK11AtomIntData6getNumEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN13AtomFloatDataC2Ed($this,$num) {
 $this = $this|0;
 $num = +$num;
 var $0 = 0, $1 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $num;
 $2 = $0;
 __ZN4DataC2Ev($2);
 $3 = 2456;
 HEAP32[$2>>2] = $3;
 $4 = $1;
 $5 = ((($2)) + 8|0);
 HEAPF64[$5>>3] = $4;
 STACKTOP = sp;return;
}
function __ZN8Func_askD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN8Func_askD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8Func_askD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8Func_ask7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12023;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK8Func_ask4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0.0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $buff = 0, $i = 0, $i1 = 0, $pointCount = 0, $str = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1824|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 800|0;
 $12 = sp + 772|0;
 $171 = sp + 136|0;
 $174 = sp + 124|0;
 $178 = sp + 108|0;
 $181 = sp + 96|0;
 $184 = sp + 84|0;
 $i = sp + 68|0;
 $188 = sp + 64|0;
 $189 = sp + 60|0;
 $190 = sp + 48|0;
 $193 = sp + 28|0;
 $194 = sp + 24|0;
 $buff = sp + 816|0;
 $str = sp + 12|0;
 $185 = $this;
 $186 = $arguments;
 $187 = $stack;
 $196 = $185;
 $183 = $i;
 $197 = $183;
 HEAP32[$197>>2] = 0;
 $198 = ((($196)) + 20|0);
 $199 = HEAP32[$198>>2]|0;
 $200 = ($199|0)!=(0|0);
 L1: do {
  if ($200) {
   $201 = $186;
   $182 = $201;
   $202 = $182;
   $203 = HEAP32[$202>>2]|0;
   $179 = $202;
   $180 = $203;
   $204 = $180;
   $176 = $178;
   $177 = $204;
   $205 = $176;
   $206 = $177;
   HEAP32[$205>>2] = $206;
   $207 = HEAP32[$178>>2]|0;
   HEAP32[$181>>2] = $207;
   $208 = HEAP32[$181>>2]|0;
   HEAP32[$188>>2] = $208;
   ;HEAP32[$i>>2]=HEAP32[$188>>2]|0;
   while(1) {
    $209 = $186;
    $175 = $209;
    $210 = $175;
    $211 = ((($210)) + 4|0);
    $212 = HEAP32[$211>>2]|0;
    $172 = $210;
    $173 = $212;
    $213 = $173;
    $169 = $171;
    $170 = $213;
    $214 = $169;
    $215 = $170;
    HEAP32[$214>>2] = $215;
    $216 = HEAP32[$171>>2]|0;
    HEAP32[$174>>2] = $216;
    $217 = HEAP32[$174>>2]|0;
    HEAP32[$189>>2] = $217;
    $152 = $i;
    $153 = $189;
    $218 = $152;
    $219 = $153;
    $150 = $218;
    $151 = $219;
    $220 = $150;
    $149 = $220;
    $221 = $149;
    $222 = HEAP32[$221>>2]|0;
    $223 = $151;
    $148 = $223;
    $224 = $148;
    $225 = HEAP32[$224>>2]|0;
    $226 = ($222|0)==($225|0);
    $227 = $226 ^ 1;
    if (!($227)) {
     break L1;
    }
    $132 = $i;
    $228 = $132;
    $229 = HEAP32[$228>>2]|0;
    $230 = (__ZNK5Value7getDataEv($229)|0);
    $231 = HEAP32[$230>>2]|0;
    $232 = ((($231)) + 12|0);
    $233 = HEAP32[$232>>2]|0;
    $234 = (FUNCTION_TABLE_ii[$233 & 1023]($230)|0);
    $235 = ($234|0)==(4);
    $236 = ((($196)) + 20|0);
    $237 = HEAP32[$236>>2]|0;
    if ($235) {
     $21 = $i;
     $238 = $21;
     $239 = HEAP32[$238>>2]|0;
     $240 = (__ZNK5Value7getDataEv($239)|0);
     __ZNK11AtomStrData9getStringEv($190,$240);
     __THREW__ = 0;
     (invoke_iii(589,($237|0),($190|0))|0);
     $241 = __THREW__; __THREW__ = 0;
     $242 = $241&1;
     if ($242) {
      label = 7;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($190);
    } else {
     $15 = $i;
     $245 = $15;
     $246 = HEAP32[$245>>2]|0;
     $247 = (__ZNK5Value7getDataEv($246)|0);
     $248 = HEAP32[$247>>2]|0;
     $249 = ((($248)) + 8|0);
     $250 = HEAP32[$249>>2]|0;
     FUNCTION_TABLE_vii[$250 & 1023]($193,$247);
     __THREW__ = 0;
     (invoke_iii(589,($237|0),($193|0))|0);
     $251 = __THREW__; __THREW__ = 0;
     $252 = $251&1;
     if ($252) {
      label = 10;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
    }
    $13 = $i;
    $14 = 0;
    $255 = $13;
    ;HEAP32[$12>>2]=HEAP32[$255>>2]|0;
    $11 = $255;
    $256 = $11;
    $257 = HEAP32[$256>>2]|0;
    $258 = ((($257)) + 4|0);
    HEAP32[$256>>2] = $258;
    $259 = HEAP32[$12>>2]|0;
    HEAP32[$194>>2] = $259;
   }
   if ((label|0) == 7) {
    $243 = ___cxa_find_matching_catch_2()|0;
    $244 = tempRet0;
    $191 = $243;
    $192 = $244;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($190);
    $605 = $191;
    $606 = $192;
    ___resumeException($605|0);
    // unreachable;
   }
   else if ((label|0) == 10) {
    $253 = ___cxa_find_matching_catch_2()|0;
    $254 = tempRet0;
    $191 = $253;
    $192 = $254;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
    $605 = $191;
    $606 = $192;
    ___resumeException($605|0);
    // unreachable;
   }
  }
 } while(0);
 $260 = ((($196)) + 16|0);
 $261 = HEAP32[$260>>2]|0;
 $8 = $261;
 $9 = $buff;
 $10 = 1000;
 $262 = $8;
 $263 = $9;
 $264 = $10;
 $265 = HEAP32[$262>>2]|0;
 $266 = ((($265)) + -12|0);
 $267 = HEAP32[$266>>2]|0;
 $268 = (($262) + ($267)|0);
 $3 = $268;
 $4 = 10;
 $269 = $3;
 $270 = (__ZNKSt3__18ios_base6getlocEv($269)|0);
 HEAP32[$5>>2] = $270;
 $2 = $5;
 $271 = $2;
 __THREW__ = 0;
 $272 = (invoke_iii(608,($271|0),(22416|0))|0);
 $273 = __THREW__; __THREW__ = 0;
 $274 = $273&1;
 if ($274) {
  $284 = ___cxa_find_matching_catch_2()|0;
  $285 = tempRet0;
  $6 = $284;
  $7 = $285;
  __ZNSt3__16localeD2Ev($5);
  $286 = $6;
  $287 = $7;
  ___resumeException($286|0);
  // unreachable;
 }
 $275 = $4;
 $0 = $272;
 $1 = $275;
 $276 = $0;
 $277 = HEAP32[$276>>2]|0;
 $278 = ((($277)) + 28|0);
 $279 = HEAP32[$278>>2]|0;
 $280 = $1;
 __THREW__ = 0;
 $281 = (invoke_iii($279|0,($276|0),($280|0))|0);
 $282 = __THREW__; __THREW__ = 0;
 $283 = $282&1;
 if ($283) {
  $284 = ___cxa_find_matching_catch_2()|0;
  $285 = tempRet0;
  $6 = $284;
  $7 = $285;
  __ZNSt3__16localeD2Ev($5);
  $286 = $6;
  $287 = $7;
  ___resumeException($286|0);
  // unreachable;
 }
 __ZNSt3__16localeD2Ev($5);
 (__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE7getlineEPcic($262,$263,$264,$281)|0);
 $19 = $str;
 $20 = $buff;
 $288 = $19;
 $18 = $288;
 $289 = $18;
 $17 = $289;
 $290 = $17;
 $16 = $290;
 $291 = $20;
 $292 = $20;
 $293 = (__ZNSt3__111char_traitsIcE6lengthEPKc($292)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($288,$291,$293);
 $294 = ((($196)) + 20|0);
 $295 = HEAP32[$294>>2]|0;
 $22 = $295;
 $23 = 590;
 $296 = $22;
 $297 = $23;
 __THREW__ = 0;
 (invoke_ii($297|0,($296|0))|0);
 $298 = __THREW__; __THREW__ = 0;
 $299 = $298&1;
 L24: do {
  if ($299) {
   label = 50;
  } else {
   $36 = $str;
   $37 = 0;
   $300 = $36;
   $35 = $300;
   $301 = $35;
   $34 = $301;
   $302 = $34;
   $33 = $302;
   $303 = $33;
   $32 = $303;
   $304 = $32;
   $305 = HEAP8[$304>>0]|0;
   $306 = $305&255;
   $307 = $306 & 1;
   $308 = ($307|0)!=(0);
   if ($308) {
    $26 = $301;
    $309 = $26;
    $25 = $309;
    $310 = $25;
    $24 = $310;
    $311 = $24;
    $312 = ((($311)) + 8|0);
    $313 = HEAP32[$312>>2]|0;
    $322 = $313;
   } else {
    $31 = $301;
    $314 = $31;
    $30 = $314;
    $315 = $30;
    $29 = $315;
    $316 = $29;
    $317 = ((($316)) + 1|0);
    $28 = $317;
    $318 = $28;
    $27 = $318;
    $319 = $27;
    $322 = $319;
   }
   $320 = $37;
   $321 = (($322) + ($320)|0);
   $323 = HEAP8[$321>>0]|0;
   $324 = $323 << 24 >> 24;
   $325 = ($324|0)>=(48);
   if ($325) {
    $50 = $str;
    $51 = 0;
    $326 = $50;
    $49 = $326;
    $327 = $49;
    $48 = $327;
    $328 = $48;
    $47 = $328;
    $329 = $47;
    $46 = $329;
    $330 = $46;
    $331 = HEAP8[$330>>0]|0;
    $332 = $331&255;
    $333 = $332 & 1;
    $334 = ($333|0)!=(0);
    if ($334) {
     $40 = $327;
     $335 = $40;
     $39 = $335;
     $336 = $39;
     $38 = $336;
     $337 = $38;
     $338 = ((($337)) + 8|0);
     $339 = HEAP32[$338>>2]|0;
     $348 = $339;
    } else {
     $45 = $327;
     $340 = $45;
     $44 = $340;
     $341 = $44;
     $43 = $341;
     $342 = $43;
     $343 = ((($342)) + 1|0);
     $42 = $343;
     $344 = $42;
     $41 = $344;
     $345 = $41;
     $348 = $345;
    }
    $346 = $51;
    $347 = (($348) + ($346)|0);
    $349 = HEAP8[$347>>0]|0;
    $350 = $349 << 24 >> 24;
    $351 = ($350|0)<=(57);
    if (!($351)) {
     label = 24;
    }
   } else {
    label = 24;
   }
   do {
    if ((label|0) == 24) {
     $64 = $str;
     $65 = 0;
     $352 = $64;
     $63 = $352;
     $353 = $63;
     $62 = $353;
     $354 = $62;
     $61 = $354;
     $355 = $61;
     $60 = $355;
     $356 = $60;
     $357 = HEAP8[$356>>0]|0;
     $358 = $357&255;
     $359 = $358 & 1;
     $360 = ($359|0)!=(0);
     if ($360) {
      $54 = $353;
      $361 = $54;
      $53 = $361;
      $362 = $53;
      $52 = $362;
      $363 = $52;
      $364 = ((($363)) + 8|0);
      $365 = HEAP32[$364>>2]|0;
      $374 = $365;
     } else {
      $59 = $353;
      $366 = $59;
      $58 = $366;
      $367 = $58;
      $57 = $367;
      $368 = $57;
      $369 = ((($368)) + 1|0);
      $56 = $369;
      $370 = $56;
      $55 = $370;
      $371 = $55;
      $374 = $371;
     }
     $372 = $65;
     $373 = (($374) + ($372)|0);
     $375 = HEAP8[$373>>0]|0;
     $376 = $375 << 24 >> 24;
     $377 = ($376|0)==(45);
     if ($377) {
      $78 = $str;
      $79 = 1;
      $378 = $78;
      $77 = $378;
      $379 = $77;
      $76 = $379;
      $380 = $76;
      $75 = $380;
      $381 = $75;
      $74 = $381;
      $382 = $74;
      $383 = HEAP8[$382>>0]|0;
      $384 = $383&255;
      $385 = $384 & 1;
      $386 = ($385|0)!=(0);
      if ($386) {
       $68 = $379;
       $387 = $68;
       $67 = $387;
       $388 = $67;
       $66 = $388;
       $389 = $66;
       $390 = ((($389)) + 8|0);
       $391 = HEAP32[$390>>2]|0;
       $400 = $391;
      } else {
       $73 = $379;
       $392 = $73;
       $72 = $392;
       $393 = $72;
       $71 = $393;
       $394 = $71;
       $395 = ((($394)) + 1|0);
       $70 = $395;
       $396 = $70;
       $69 = $396;
       $397 = $69;
       $400 = $397;
      }
      $398 = $79;
      $399 = (($400) + ($398)|0);
      $401 = HEAP8[$399>>0]|0;
      $402 = $401 << 24 >> 24;
      $403 = ($402|0)>=(48);
      if ($403) {
       $92 = $str;
       $93 = 1;
       $404 = $92;
       $91 = $404;
       $405 = $91;
       $90 = $405;
       $406 = $90;
       $89 = $406;
       $407 = $89;
       $88 = $407;
       $408 = $88;
       $409 = HEAP8[$408>>0]|0;
       $410 = $409&255;
       $411 = $410 & 1;
       $412 = ($411|0)!=(0);
       if ($412) {
        $82 = $405;
        $413 = $82;
        $81 = $413;
        $414 = $81;
        $80 = $414;
        $415 = $80;
        $416 = ((($415)) + 8|0);
        $417 = HEAP32[$416>>2]|0;
        $426 = $417;
       } else {
        $87 = $405;
        $418 = $87;
        $86 = $418;
        $419 = $86;
        $85 = $419;
        $420 = $85;
        $421 = ((($420)) + 1|0);
        $84 = $421;
        $422 = $84;
        $83 = $422;
        $423 = $83;
        $426 = $423;
       }
       $424 = $93;
       $425 = (($426) + ($424)|0);
       $427 = HEAP8[$425>>0]|0;
       $428 = $427 << 24 >> 24;
       $429 = ($428|0)<=(57);
       if ($429) {
        break;
       }
      }
     }
     __THREW__ = 0;
     $595 = (invoke_ii(548,16)|0);
     $596 = __THREW__; __THREW__ = 0;
     $597 = $596&1;
     if ($597) {
      label = 50;
      break L24;
     }
     __THREW__ = 0;
     invoke_vii(624,($595|0),($str|0));
     $598 = __THREW__; __THREW__ = 0;
     $599 = $598&1;
     if ($599) {
      $602 = ___cxa_find_matching_catch_2()|0;
      $603 = tempRet0;
      $191 = $602;
      $192 = $603;
      __ZdlPv($595);
      break L24;
     }
     __THREW__ = 0;
     invoke_vii(584,($184|0),($595|0));
     $600 = __THREW__; __THREW__ = 0;
     $601 = $600&1;
     if ($601) {
      label = 50;
      break L24;
     }
     $195 = 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
     $604 = HEAP32[$184>>2]|0;
     STACKTOP = sp;return ($604|0);
    }
   } while(0);
   $pointCount = 0;
   $i1 = 0;
   while(1) {
    $430 = $i1;
    $103 = $str;
    $431 = $103;
    $102 = $431;
    $432 = $102;
    $101 = $432;
    $433 = $101;
    $100 = $433;
    $434 = $100;
    $435 = HEAP8[$434>>0]|0;
    $436 = $435&255;
    $437 = $436 & 1;
    $438 = ($437|0)!=(0);
    if ($438) {
     $96 = $431;
     $439 = $96;
     $95 = $439;
     $440 = $95;
     $94 = $440;
     $441 = $94;
     $442 = ((($441)) + 4|0);
     $443 = HEAP32[$442>>2]|0;
     $451 = $443;
    } else {
     $99 = $431;
     $444 = $99;
     $98 = $444;
     $445 = $98;
     $97 = $445;
     $446 = $97;
     $447 = HEAP8[$446>>0]|0;
     $448 = $447&255;
     $449 = $448 >> 1;
     $451 = $449;
    }
    $450 = ($430>>>0)<($451>>>0);
    if (!($450)) {
     break;
    }
    $452 = $i1;
    $116 = $str;
    $117 = $452;
    $453 = $116;
    $115 = $453;
    $454 = $115;
    $114 = $454;
    $455 = $114;
    $113 = $455;
    $456 = $113;
    $112 = $456;
    $457 = $112;
    $458 = HEAP8[$457>>0]|0;
    $459 = $458&255;
    $460 = $459 & 1;
    $461 = ($460|0)!=(0);
    if ($461) {
     $106 = $454;
     $462 = $106;
     $105 = $462;
     $463 = $105;
     $104 = $463;
     $464 = $104;
     $465 = ((($464)) + 8|0);
     $466 = HEAP32[$465>>2]|0;
     $475 = $466;
    } else {
     $111 = $454;
     $467 = $111;
     $110 = $467;
     $468 = $110;
     $109 = $468;
     $469 = $109;
     $470 = ((($469)) + 1|0);
     $108 = $470;
     $471 = $108;
     $107 = $471;
     $472 = $107;
     $475 = $472;
    }
    $473 = $117;
    $474 = (($475) + ($473)|0);
    $476 = HEAP8[$474>>0]|0;
    $477 = $476 << 24 >> 24;
    $478 = ($477|0)==(46);
    if ($478) {
     label = 49;
    } else {
     $479 = $i1;
     $130 = $str;
     $131 = $479;
     $480 = $130;
     $129 = $480;
     $481 = $129;
     $128 = $481;
     $482 = $128;
     $127 = $482;
     $483 = $127;
     $126 = $483;
     $484 = $126;
     $485 = HEAP8[$484>>0]|0;
     $486 = $485&255;
     $487 = $486 & 1;
     $488 = ($487|0)!=(0);
     if ($488) {
      $120 = $481;
      $489 = $120;
      $119 = $489;
      $490 = $119;
      $118 = $490;
      $491 = $118;
      $492 = ((($491)) + 8|0);
      $493 = HEAP32[$492>>2]|0;
      $502 = $493;
     } else {
      $125 = $481;
      $494 = $125;
      $124 = $494;
      $495 = $124;
      $123 = $495;
      $496 = $123;
      $497 = ((($496)) + 1|0);
      $122 = $497;
      $498 = $122;
      $121 = $498;
      $499 = $121;
      $502 = $499;
     }
     $500 = $131;
     $501 = (($502) + ($500)|0);
     $503 = HEAP8[$501>>0]|0;
     $504 = $503 << 24 >> 24;
     $505 = ($504|0)==(44);
     if ($505) {
      label = 49;
     }
    }
    if ((label|0) == 49) {
     label = 0;
     $506 = $pointCount;
     $507 = (($506) + 1)|0;
     $pointCount = $507;
    }
    $510 = $i1;
    $511 = (($510) + 1)|0;
    $i1 = $511;
   }
   $512 = $pointCount;
   $513 = ($512|0)>(1);
   if ($513) {
    __THREW__ = 0;
    $514 = (invoke_ii(548,16)|0);
    $515 = __THREW__; __THREW__ = 0;
    $516 = $515&1;
    if ($516) {
     label = 50;
     break;
    }
    __THREW__ = 0;
    invoke_vii(624,($514|0),($str|0));
    $517 = __THREW__; __THREW__ = 0;
    $518 = $517&1;
    if ($518) {
     $521 = ___cxa_find_matching_catch_2()|0;
     $522 = tempRet0;
     $191 = $521;
     $192 = $522;
     __ZdlPv($514);
     break;
    }
    __THREW__ = 0;
    invoke_vii(584,($184|0),($514|0));
    $519 = __THREW__; __THREW__ = 0;
    $520 = $519&1;
    if ($520) {
     label = 50;
     break;
    }
    $195 = 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
    $604 = HEAP32[$184>>2]|0;
    STACKTOP = sp;return ($604|0);
   }
   $523 = $pointCount;
   $524 = ($523|0)==(1);
   if ($524) {
    __THREW__ = 0;
    $525 = (invoke_ii(548,16)|0);
    $526 = __THREW__; __THREW__ = 0;
    $527 = $526&1;
    if ($527) {
     label = 50;
     break;
    }
    $147 = $str;
    $528 = $147;
    $146 = $528;
    $529 = $146;
    $145 = $529;
    $530 = $145;
    $144 = $530;
    $531 = $144;
    $143 = $531;
    $532 = $143;
    $142 = $532;
    $533 = $142;
    $534 = HEAP8[$533>>0]|0;
    $535 = $534&255;
    $536 = $535 & 1;
    $537 = ($536|0)!=(0);
    if ($537) {
     $136 = $530;
     $538 = $136;
     $135 = $538;
     $539 = $135;
     $134 = $539;
     $540 = $134;
     $541 = ((($540)) + 8|0);
     $542 = HEAP32[$541>>2]|0;
     $549 = $542;
    } else {
     $141 = $530;
     $543 = $141;
     $140 = $543;
     $544 = $140;
     $139 = $544;
     $545 = $139;
     $546 = ((($545)) + 1|0);
     $138 = $546;
     $547 = $138;
     $137 = $547;
     $548 = $137;
     $549 = $548;
    }
    $133 = $549;
    $550 = $133;
    __THREW__ = 0;
    $551 = (+invoke_di(625,($550|0)));
    $552 = __THREW__; __THREW__ = 0;
    $553 = $552&1;
    if (!($553)) {
     __THREW__ = 0;
     invoke_vid(623,($525|0),(+$551));
     $554 = __THREW__; __THREW__ = 0;
     $555 = $554&1;
     if (!($555)) {
      __THREW__ = 0;
      invoke_vii(584,($184|0),($525|0));
      $556 = __THREW__; __THREW__ = 0;
      $557 = $556&1;
      if ($557) {
       label = 50;
       break;
      }
      $195 = 1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
      $604 = HEAP32[$184>>2]|0;
      STACKTOP = sp;return ($604|0);
     }
    }
    $558 = ___cxa_find_matching_catch_2()|0;
    $559 = tempRet0;
    $191 = $558;
    $192 = $559;
    __ZdlPv($525);
    break;
   } else {
    __THREW__ = 0;
    $560 = (invoke_ii(548,8)|0);
    $561 = __THREW__; __THREW__ = 0;
    $562 = $561&1;
    if ($562) {
     label = 50;
     break;
    }
    $168 = $str;
    $563 = $168;
    $167 = $563;
    $564 = $167;
    $166 = $564;
    $565 = $166;
    $165 = $565;
    $566 = $165;
    $164 = $566;
    $567 = $164;
    $163 = $567;
    $568 = $163;
    $569 = HEAP8[$568>>0]|0;
    $570 = $569&255;
    $571 = $570 & 1;
    $572 = ($571|0)!=(0);
    if ($572) {
     $157 = $565;
     $573 = $157;
     $156 = $573;
     $574 = $156;
     $155 = $574;
     $575 = $155;
     $576 = ((($575)) + 8|0);
     $577 = HEAP32[$576>>2]|0;
     $584 = $577;
    } else {
     $162 = $565;
     $578 = $162;
     $161 = $578;
     $579 = $161;
     $160 = $579;
     $580 = $160;
     $581 = ((($580)) + 1|0);
     $159 = $581;
     $582 = $159;
     $158 = $582;
     $583 = $158;
     $584 = $583;
    }
    $154 = $584;
    $585 = $154;
    __THREW__ = 0;
    $586 = (invoke_ii(626,($585|0))|0);
    $587 = __THREW__; __THREW__ = 0;
    $588 = $587&1;
    if (!($588)) {
     __THREW__ = 0;
     invoke_vii(627,($560|0),($586|0));
     $589 = __THREW__; __THREW__ = 0;
     $590 = $589&1;
     if (!($590)) {
      __THREW__ = 0;
      invoke_vii(584,($184|0),($560|0));
      $591 = __THREW__; __THREW__ = 0;
      $592 = $591&1;
      if ($592) {
       label = 50;
       break;
      }
      $195 = 1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
      $604 = HEAP32[$184>>2]|0;
      STACKTOP = sp;return ($604|0);
     }
    }
    $593 = ___cxa_find_matching_catch_2()|0;
    $594 = tempRet0;
    $191 = $593;
    $192 = $594;
    __ZdlPv($560);
    break;
   }
  }
 } while(0);
 if ((label|0) == 50) {
  $508 = ___cxa_find_matching_catch_2()|0;
  $509 = tempRet0;
  $191 = $508;
  $192 = $509;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
 $605 = $191;
 $606 = $192;
 ___resumeException($605|0);
 // unreachable;
 return (0)|0;
}
function __ZNK11AtomStrData9getStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$2);
 STACKTOP = sp;return;
}
function __ZN11AtomStrDataC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$str) {
 $this = $this|0;
 $str = $str|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i = 0, $__i$i$i = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $73 = $this;
 $74 = $str;
 $77 = $73;
 __ZN4DataC2Ev($77);
 $78 = 2660;
 HEAP32[$77>>2] = $78;
 $79 = ((($77)) + 4|0);
 $72 = $79;
 $80 = $72;
 $71 = $80;
 $81 = $71;
 $70 = $81;
 $82 = $70;
 $69 = $82;
 $68 = $80;
 $83 = $68;
 $67 = $83;
 $84 = $67;
 $66 = $84;
 $85 = $66;
 $__a$i$i = $85;
 $__i$i$i = 0;
 while(1) {
  $86 = $__i$i$i;
  $87 = ($86>>>0)<(3);
  if (!($87)) {
   break;
  }
  $88 = $__i$i$i;
  $89 = $__a$i$i;
  $90 = (($89) + ($88<<2)|0);
  HEAP32[$90>>2] = 0;
  $91 = $__i$i$i;
  $92 = (($91) + 1)|0;
  $__i$i$i = $92;
 }
 $i = 0;
 L5: while(1) {
  $93 = $i;
  $94 = $74;
  $63 = $94;
  $95 = $63;
  $62 = $95;
  $96 = $62;
  $61 = $96;
  $97 = $61;
  $60 = $97;
  $98 = $60;
  $99 = HEAP8[$98>>0]|0;
  $100 = $99&255;
  $101 = $100 & 1;
  $102 = ($101|0)!=(0);
  if ($102) {
   $56 = $95;
   $103 = $56;
   $55 = $103;
   $104 = $55;
   $54 = $104;
   $105 = $54;
   $106 = ((($105)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $115 = $107;
  } else {
   $59 = $95;
   $108 = $59;
   $58 = $108;
   $109 = $58;
   $57 = $109;
   $110 = $57;
   $111 = HEAP8[$110>>0]|0;
   $112 = $111&255;
   $113 = $112 >> 1;
   $115 = $113;
  }
  $114 = ($93>>>0)<($115>>>0);
  if (!($114)) {
   label = 29;
   break;
  }
  $116 = $74;
  $117 = $i;
  $34 = $116;
  $35 = $117;
  $118 = $34;
  $33 = $118;
  $119 = $33;
  $32 = $119;
  $120 = $32;
  $31 = $120;
  $121 = $31;
  $30 = $121;
  $122 = $30;
  $29 = $122;
  $123 = $29;
  $124 = HEAP8[$123>>0]|0;
  $125 = $124&255;
  $126 = $125 & 1;
  $127 = ($126|0)!=(0);
  if ($127) {
   $23 = $120;
   $128 = $23;
   $22 = $128;
   $129 = $22;
   $21 = $129;
   $130 = $21;
   $131 = ((($130)) + 8|0);
   $132 = HEAP32[$131>>2]|0;
   $139 = $132;
  } else {
   $28 = $120;
   $133 = $28;
   $27 = $133;
   $134 = $27;
   $26 = $134;
   $135 = $26;
   $136 = ((($135)) + 1|0);
   $25 = $136;
   $137 = $25;
   $24 = $137;
   $138 = $24;
   $139 = $138;
  }
  $20 = $139;
  $140 = $20;
  $141 = $35;
  $142 = (($140) + ($141)|0);
  $143 = HEAP8[$142>>0]|0;
  $144 = $143 << 24 >> 24;
  $145 = ($144|0)==(92);
  L16: do {
   if ($145) {
    $146 = $74;
    $147 = $i;
    $148 = (($147) + 1)|0;
    $16 = $146;
    $17 = $148;
    $149 = $16;
    $15 = $149;
    $150 = $15;
    $14 = $150;
    $151 = $14;
    $13 = $151;
    $152 = $13;
    $12 = $152;
    $153 = $12;
    $11 = $153;
    $154 = $11;
    $155 = HEAP8[$154>>0]|0;
    $156 = $155&255;
    $157 = $156 & 1;
    $158 = ($157|0)!=(0);
    if ($158) {
     $5 = $151;
     $159 = $5;
     $4 = $159;
     $160 = $4;
     $3 = $160;
     $161 = $3;
     $162 = ((($161)) + 8|0);
     $163 = HEAP32[$162>>2]|0;
     $170 = $163;
    } else {
     $10 = $151;
     $164 = $10;
     $9 = $164;
     $165 = $9;
     $8 = $165;
     $166 = $8;
     $167 = ((($166)) + 1|0);
     $7 = $167;
     $168 = $7;
     $6 = $168;
     $169 = $6;
     $170 = $169;
    }
    $2 = $170;
    $171 = $2;
    $172 = $17;
    $173 = (($171) + ($172)|0);
    $174 = HEAP8[$173>>0]|0;
    $175 = $174 << 24 >> 24;
    switch ($175|0) {
    case 110:  {
     $180 = ((($77)) + 4|0);
     $0 = $180;
     $1 = 10;
     $181 = $0;
     $182 = $1;
     __THREW__ = 0;
     invoke_vii(628,($181|0),($182|0));
     $183 = __THREW__; __THREW__ = 0;
     $184 = $183&1;
     if ($184) {
      label = 17;
      break L5;
     }
     $185 = $i;
     $186 = (($185) + 1)|0;
     $i = $186;
     break L16;
     break;
    }
    case 92:  {
     $187 = ((($77)) + 4|0);
     $18 = $187;
     $19 = 92;
     $188 = $18;
     $189 = $19;
     __THREW__ = 0;
     invoke_vii(628,($188|0),($189|0));
     $190 = __THREW__; __THREW__ = 0;
     $191 = $190&1;
     if ($191) {
      label = 17;
      break L5;
     }
     $192 = $i;
     $193 = (($192) + 1)|0;
     $i = $193;
     break L16;
     break;
    }
    case 34:  {
     $194 = ((($77)) + 4|0);
     $36 = $194;
     $37 = 34;
     $195 = $36;
     $196 = $37;
     __THREW__ = 0;
     invoke_vii(628,($195|0),($196|0));
     $197 = __THREW__; __THREW__ = 0;
     $198 = $197&1;
     if ($198) {
      label = 17;
      break L5;
     }
     $199 = $i;
     $200 = (($199) + 1)|0;
     $i = $200;
     break L16;
     break;
    }
    default: {
     break L16;
    }
    }
   } else {
    $201 = ((($77)) + 4|0);
    $202 = $74;
    $203 = $i;
    $52 = $202;
    $53 = $203;
    $204 = $52;
    $51 = $204;
    $205 = $51;
    $50 = $205;
    $206 = $50;
    $49 = $206;
    $207 = $49;
    $48 = $207;
    $208 = $48;
    $47 = $208;
    $209 = $47;
    $210 = HEAP8[$209>>0]|0;
    $211 = $210&255;
    $212 = $211 & 1;
    $213 = ($212|0)!=(0);
    if ($213) {
     $41 = $206;
     $214 = $41;
     $40 = $214;
     $215 = $40;
     $39 = $215;
     $216 = $39;
     $217 = ((($216)) + 8|0);
     $218 = HEAP32[$217>>2]|0;
     $225 = $218;
    } else {
     $46 = $206;
     $219 = $46;
     $45 = $219;
     $220 = $45;
     $44 = $220;
     $221 = $44;
     $222 = ((($221)) + 1|0);
     $43 = $222;
     $223 = $43;
     $42 = $223;
     $224 = $42;
     $225 = $224;
    }
    $38 = $225;
    $226 = $38;
    $227 = $53;
    $228 = (($226) + ($227)|0);
    $229 = HEAP8[$228>>0]|0;
    $64 = $201;
    $65 = $229;
    $230 = $64;
    $231 = $65;
    __THREW__ = 0;
    invoke_vii(628,($230|0),($231|0));
    $232 = __THREW__; __THREW__ = 0;
    $233 = $232&1;
    if ($233) {
     label = 17;
     break L5;
    }
   }
  } while(0);
  $234 = $i;
  $235 = (($234) + 1)|0;
  $i = $235;
 }
 if ((label|0) == 17) {
  $176 = ___cxa_find_matching_catch_2()|0;
  $177 = tempRet0;
  $75 = $176;
  $76 = $177;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($79);
  __ZN4DataD2Ev($77);
  $178 = $75;
  $179 = $76;
  ___resumeException($178|0);
  // unreachable;
 }
 else if ((label|0) == 29) {
  STACKTOP = sp;return;
 }
}
function __ZN11AtomStrDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 2660;
 HEAP32[$1>>2] = $2;
 $3 = ((($1)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN11AtomStrDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN11AtomStrDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK11AtomStrData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i$i = 0;
 var $__i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = sp + 8|0;
 $9 = $this;
 $13 = $9;
 $14 = ((($13)) + 4|0);
 __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EES6_RKS9_($10,34,$14);
 $7 = $10;
 $8 = 34;
 $15 = $7;
 $16 = $8;
 __THREW__ = 0;
 invoke_vii(628,($15|0),($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $35 = ___cxa_find_matching_catch_2()|0;
  $36 = tempRet0;
  $11 = $35;
  $12 = $36;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $37 = $11;
  $38 = $12;
  ___resumeException($37|0);
  // unreachable;
 }
 $19 = $7;
 $6 = $19;
 $20 = $6;
 $4 = $agg$result;
 $5 = $20;
 $21 = $4;
 $22 = $5;
 $3 = $22;
 $23 = $3;
 ;HEAP32[$21>>2]=HEAP32[$23>>2]|0;HEAP32[$21+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$21+8>>2]=HEAP32[$23+8>>2]|0;
 $24 = $5;
 $2 = $24;
 $25 = $2;
 $1 = $25;
 $26 = $1;
 $0 = $26;
 $27 = $0;
 $__a$i$i$i = $27;
 $__i$i$i$i = 0;
 while(1) {
  $28 = $__i$i$i$i;
  $29 = ($28>>>0)<(3);
  if (!($29)) {
   break;
  }
  $30 = $__i$i$i$i;
  $31 = $__a$i$i$i;
  $32 = (($31) + ($30<<2)|0);
  HEAP32[$32>>2] = 0;
  $33 = $__i$i$i$i;
  $34 = (($33) + 1)|0;
  $__i$i$i$i = $34;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 STACKTOP = sp;return;
}
function __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EES6_RKS9_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__a$i$i = 0, $__i$i$i = 0, $__rhs_sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 188|0;
 $9 = sp;
 $12 = sp + 187|0;
 $41 = sp + 186|0;
 $43 = sp + 185|0;
 $44 = sp + 184|0;
 HEAP8[$41>>0] = $__lhs;
 $42 = $__rhs;
 $$expand_i1_val = 0;
 HEAP8[$43>>0] = $$expand_i1_val;
 $47 = $42;
 $40 = $47;
 $48 = $40;
 $39 = $48;
 $49 = $39;
 $38 = $49;
 $50 = $38;
 $37 = $50;
 $10 = $agg$result;
 $11 = $44;
 $51 = $10;
 ;HEAP8[$9>>0]=HEAP8[$12>>0]|0;
 $7 = $51;
 $52 = $7;
 $6 = $9;
 ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
 $4 = $52;
 $3 = $5;
 $2 = $51;
 $53 = $2;
 $1 = $53;
 $54 = $1;
 $0 = $54;
 $55 = $0;
 $__a$i$i = $55;
 $__i$i$i = 0;
 while(1) {
  $56 = $__i$i$i;
  $57 = ($56>>>0)<(3);
  if (!($57)) {
   break;
  }
  $58 = $__i$i$i;
  $59 = $__a$i$i;
  $60 = (($59) + ($58<<2)|0);
  HEAP32[$60>>2] = 0;
  $61 = $__i$i$i;
  $62 = (($61) + 1)|0;
  $__i$i$i = $62;
 }
 $63 = $42;
 $22 = $63;
 $64 = $22;
 $21 = $64;
 $65 = $21;
 $20 = $65;
 $66 = $20;
 $19 = $66;
 $67 = $19;
 $68 = HEAP8[$67>>0]|0;
 $69 = $68&255;
 $70 = $69 & 1;
 $71 = ($70|0)!=(0);
 if ($71) {
  $15 = $64;
  $72 = $15;
  $14 = $72;
  $73 = $14;
  $13 = $73;
  $74 = $13;
  $75 = ((($74)) + 4|0);
  $76 = HEAP32[$75>>2]|0;
  $83 = $76;
 } else {
  $18 = $64;
  $77 = $18;
  $17 = $77;
  $78 = $17;
  $16 = $78;
  $79 = $16;
  $80 = HEAP8[$79>>0]|0;
  $81 = $80&255;
  $82 = $81 >> 1;
  $83 = $82;
 }
 $__rhs_sz = $83;
 $84 = $__rhs_sz;
 $85 = (1 + ($84))|0;
 __THREW__ = 0;
 invoke_viiii(622,($agg$result|0),($41|0),1,($85|0));
 $86 = __THREW__; __THREW__ = 0;
 $87 = $86&1;
 if ($87) {
  $115 = ___cxa_find_matching_catch_2()|0;
  $116 = tempRet0;
  $45 = $115;
  $46 = $116;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $117 = $45;
  $118 = $46;
  ___resumeException($117|0);
  // unreachable;
 }
 $88 = $42;
 $36 = $88;
 $89 = $36;
 $35 = $89;
 $90 = $35;
 $34 = $90;
 $91 = $34;
 $33 = $91;
 $92 = $33;
 $32 = $92;
 $93 = $32;
 $94 = HEAP8[$93>>0]|0;
 $95 = $94&255;
 $96 = $95 & 1;
 $97 = ($96|0)!=(0);
 if ($97) {
  $26 = $90;
  $98 = $26;
  $25 = $98;
  $99 = $25;
  $24 = $99;
  $100 = $24;
  $101 = ((($100)) + 8|0);
  $102 = HEAP32[$101>>2]|0;
  $109 = $102;
 } else {
  $31 = $90;
  $103 = $31;
  $30 = $103;
  $104 = $30;
  $29 = $104;
  $105 = $29;
  $106 = ((($105)) + 1|0);
  $28 = $106;
  $107 = $28;
  $27 = $107;
  $108 = $27;
  $109 = $108;
 }
 $23 = $109;
 $110 = $23;
 $111 = $__rhs_sz;
 __THREW__ = 0;
 (invoke_iiii(543,($agg$result|0),($110|0),($111|0))|0);
 $112 = __THREW__; __THREW__ = 0;
 $113 = $112&1;
 if ($113) {
  $115 = ___cxa_find_matching_catch_2()|0;
  $116 = tempRet0;
  $45 = $115;
  $46 = $116;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $117 = $45;
  $118 = $46;
  ___resumeException($117|0);
  // unreachable;
 }
 $$expand_i1_val2 = 1;
 HEAP8[$43>>0] = $$expand_i1_val2;
 $$pre_trunc = HEAP8[$43>>0]|0;
 $114 = $$pre_trunc&1;
 if ($114) {
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 STACKTOP = sp;return;
}
function __ZNK11AtomStrData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 4;
}
function __ZNK11AtomStrData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__Znwj(16)|0);
 __THREW__ = 0;
 invoke_vii(629,($4|0),($3|0));
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $7 = ___cxa_find_matching_catch_2()|0;
  $8 = tempRet0;
  $1 = $7;
  $2 = $8;
  __ZdlPv($4);
  $9 = $1;
  $10 = $2;
  ___resumeException($9|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($4|0);
 }
 return (0)|0;
}
function __ZN11AtomStrDataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZN4DataC2ERKS_($5,$6);
 $7 = 2660;
 HEAP32[$5>>2] = $7;
 $8 = ((($5)) + 4|0);
 $9 = $2;
 $10 = ((($9)) + 4|0);
 __THREW__ = 0;
 invoke_vii(617,($8|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $3 = $13;
  $4 = $14;
  __ZN4DataD2Ev($5);
  $15 = $3;
  $16 = $4;
  ___resumeException($15|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNK11AtomStrData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val9 = 0, $$pre_trunc = 0, $$pre_trunc13 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lhs_sz$i = 0;
 var $__lp$i = 0, $__rp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $51 = sp + 233|0;
 $54 = sp + 232|0;
 $55 = $this;
 $56 = $data;
 $57 = $55;
 $58 = $56;
 $59 = HEAP32[$58>>2]|0;
 $60 = ((($59)) + 12|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = (FUNCTION_TABLE_ii[$61 & 1023]($58)|0);
 $63 = ($62|0)==(4);
 if (!($63)) {
  $$expand_i1_val11 = 0;
  HEAP8[$54>>0] = $$expand_i1_val11;
  $$pre_trunc13 = HEAP8[$54>>0]|0;
  $190 = $$pre_trunc13&1;
  STACKTOP = sp;return ($190|0);
 }
 $64 = $56;
 $65 = ((($64)) + 4|0);
 $66 = ((($57)) + 4|0);
 $52 = $65;
 $53 = $66;
 $67 = $52;
 $50 = $67;
 $68 = $50;
 $49 = $68;
 $69 = $49;
 $48 = $69;
 $70 = $48;
 $47 = $70;
 $71 = $47;
 $72 = HEAP8[$71>>0]|0;
 $73 = $72&255;
 $74 = $73 & 1;
 $75 = ($74|0)!=(0);
 if ($75) {
  $43 = $68;
  $76 = $43;
  $42 = $76;
  $77 = $42;
  $41 = $77;
  $78 = $41;
  $79 = ((($78)) + 4|0);
  $80 = HEAP32[$79>>2]|0;
  $87 = $80;
 } else {
  $46 = $68;
  $81 = $46;
  $45 = $81;
  $82 = $45;
  $44 = $82;
  $83 = $44;
  $84 = HEAP8[$83>>0]|0;
  $85 = $84&255;
  $86 = $85 >> 1;
  $87 = $86;
 }
 $__lhs_sz$i = $87;
 $88 = $__lhs_sz$i;
 $89 = $53;
 $40 = $89;
 $90 = $40;
 $39 = $90;
 $91 = $39;
 $38 = $91;
 $92 = $38;
 $37 = $92;
 $93 = $37;
 $94 = HEAP8[$93>>0]|0;
 $95 = $94&255;
 $96 = $95 & 1;
 $97 = ($96|0)!=(0);
 if ($97) {
  $33 = $90;
  $98 = $33;
  $32 = $98;
  $99 = $32;
  $31 = $99;
  $100 = $31;
  $101 = ((($100)) + 4|0);
  $102 = HEAP32[$101>>2]|0;
  $110 = $102;
 } else {
  $36 = $90;
  $103 = $36;
  $35 = $103;
  $104 = $35;
  $34 = $104;
  $105 = $34;
  $106 = HEAP8[$105>>0]|0;
  $107 = $106&255;
  $108 = $107 >> 1;
  $110 = $108;
 }
 $109 = ($88|0)!=($110|0);
 do {
  if ($109) {
   $$expand_i1_val = 0;
   HEAP8[$51>>0] = $$expand_i1_val;
  } else {
   $111 = $52;
   $30 = $111;
   $112 = $30;
   $29 = $112;
   $113 = $29;
   $28 = $113;
   $114 = $28;
   $27 = $114;
   $115 = $27;
   $26 = $115;
   $116 = $26;
   $117 = HEAP8[$116>>0]|0;
   $118 = $117&255;
   $119 = $118 & 1;
   $120 = ($119|0)!=(0);
   if ($120) {
    $20 = $113;
    $121 = $20;
    $19 = $121;
    $122 = $19;
    $18 = $122;
    $123 = $18;
    $124 = ((($123)) + 8|0);
    $125 = HEAP32[$124>>2]|0;
    $132 = $125;
   } else {
    $25 = $113;
    $126 = $25;
    $24 = $126;
    $127 = $24;
    $23 = $127;
    $128 = $23;
    $129 = ((($128)) + 1|0);
    $22 = $129;
    $130 = $22;
    $21 = $130;
    $131 = $21;
    $132 = $131;
   }
   $17 = $132;
   $133 = $17;
   $__lp$i = $133;
   $134 = $53;
   $13 = $134;
   $135 = $13;
   $12 = $135;
   $136 = $12;
   $11 = $136;
   $137 = $11;
   $10 = $137;
   $138 = $10;
   $9 = $138;
   $139 = $9;
   $140 = HEAP8[$139>>0]|0;
   $141 = $140&255;
   $142 = $141 & 1;
   $143 = ($142|0)!=(0);
   if ($143) {
    $3 = $136;
    $144 = $3;
    $2 = $144;
    $145 = $2;
    $1 = $145;
    $146 = $1;
    $147 = ((($146)) + 8|0);
    $148 = HEAP32[$147>>2]|0;
    $155 = $148;
   } else {
    $8 = $136;
    $149 = $8;
    $7 = $149;
    $150 = $7;
    $6 = $150;
    $151 = $6;
    $152 = ((($151)) + 1|0);
    $5 = $152;
    $153 = $5;
    $4 = $153;
    $154 = $4;
    $155 = $154;
   }
   $0 = $155;
   $156 = $0;
   $__rp$i = $156;
   $157 = $52;
   $16 = $157;
   $158 = $16;
   $15 = $158;
   $159 = $15;
   $14 = $159;
   $160 = $14;
   $161 = HEAP8[$160>>0]|0;
   $162 = $161&255;
   $163 = $162 & 1;
   $164 = ($163|0)!=(0);
   if ($164) {
    $165 = $__lp$i;
    $166 = $__rp$i;
    $167 = $__lhs_sz$i;
    __THREW__ = 0;
    $168 = (invoke_iiii(615,($165|0),($166|0),($167|0))|0);
    $169 = __THREW__; __THREW__ = 0;
    $170 = $169&1;
    if ($170) {
     $187 = ___cxa_find_matching_catch_3(0|0)|0;
     $188 = tempRet0;
     ___clang_call_terminate($187);
     // unreachable;
    } else {
     $171 = ($168|0)==(0);
     $$expand_i1_val2 = $171&1;
     HEAP8[$51>>0] = $$expand_i1_val2;
     break;
    }
   }
   while(1) {
    $172 = $__lhs_sz$i;
    $173 = ($172|0)!=(0);
    if (!($173)) {
     label = 23;
     break;
    }
    $174 = $__lp$i;
    $175 = HEAP8[$174>>0]|0;
    $176 = $175 << 24 >> 24;
    $177 = $__rp$i;
    $178 = HEAP8[$177>>0]|0;
    $179 = $178 << 24 >> 24;
    $180 = ($176|0)!=($179|0);
    if ($180) {
     label = 21;
     break;
    }
    $181 = $__lhs_sz$i;
    $182 = (($181) + -1)|0;
    $__lhs_sz$i = $182;
    $183 = $__lp$i;
    $184 = ((($183)) + 1|0);
    $__lp$i = $184;
    $185 = $__rp$i;
    $186 = ((($185)) + 1|0);
    $__rp$i = $186;
   }
   if ((label|0) == 21) {
    $$expand_i1_val4 = 0;
    HEAP8[$51>>0] = $$expand_i1_val4;
    break;
   }
   else if ((label|0) == 23) {
    $$expand_i1_val6 = 1;
    HEAP8[$51>>0] = $$expand_i1_val6;
    break;
   }
  }
 } while(0);
 $$pre_trunc = HEAP8[$51>>0]|0;
 $189 = $$pre_trunc&1;
 $$expand_i1_val9 = $189&1;
 HEAP8[$54>>0] = $$expand_i1_val9;
 $$pre_trunc13 = HEAP8[$54>>0]|0;
 $190 = $$pre_trunc13&1;
 STACKTOP = sp;return ($190|0);
}
function __ZNK11AtomStrData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = $this;
 $11 = $10;
 $12 = ((($11)) + 4|0);
 $9 = $12;
 $13 = $9;
 $8 = $13;
 $14 = $8;
 $7 = $14;
 $15 = $7;
 $6 = $15;
 $16 = $6;
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = $18 & 1;
 $20 = ($19|0)!=(0);
 if ($20) {
  $2 = $13;
  $21 = $2;
  $1 = $21;
  $22 = $1;
  $0 = $22;
  $23 = $0;
  $24 = ((($23)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $32 = $25;
  STACKTOP = sp;return ($32|0);
 } else {
  $5 = $13;
  $26 = $5;
  $4 = $26;
  $27 = $4;
  $3 = $27;
  $28 = $3;
  $29 = HEAP8[$28>>0]|0;
  $30 = $29&255;
  $31 = $30 >> 1;
  $32 = $31;
  STACKTOP = sp;return ($32|0);
 }
 return (0)|0;
}
function __ZN11AtomIntDataC2Ei($this,$num) {
 $this = $this|0;
 $num = $num|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $num;
 $2 = $0;
 __ZN4DataC2Ev($2);
 $3 = 2420;
 HEAP32[$2>>2] = $3;
 $4 = $1;
 $5 = ((($2)) + 4|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN11Func__Less_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN11Func__Less_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN11Func__Less_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK11Func__Less_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12055;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK11Func__Less_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0;
 var $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $operand1 = 0.0;
 var $operand2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $26 = sp + 60|0;
 $30 = sp + 36|0;
 $33 = sp + 169|0;
 $34 = sp + 16|0;
 $35 = sp + 168|0;
 $27 = $this;
 $28 = $arguments;
 $29 = $stack;
 $36 = $28;
 $24 = $36;
 $25 = 0;
 $37 = $24;
 $38 = $25;
 $39 = HEAP32[$37>>2]|0;
 $40 = (($39) + ($38<<2)|0);
 $41 = (__ZNK5Value7getDataEv($40)|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ((($42)) + 12|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (FUNCTION_TABLE_ii[$44 & 1023]($41)|0);
 $46 = ($45|0)==(16);
 $47 = $28;
 do {
  if ($46) {
   $22 = $47;
   $23 = 0;
   $48 = $22;
   $49 = $23;
   $50 = HEAP32[$48>>2]|0;
   $51 = (($50) + ($49<<2)|0);
   $52 = (__ZNK5Value7getDataEv($51)|0);
   $53 = (+__ZNK13AtomFloatData6getNumEv($52));
   $operand1 = $53;
  } else {
   $20 = $47;
   $21 = 0;
   $54 = $20;
   $55 = $21;
   $56 = HEAP32[$54>>2]|0;
   $57 = (($56) + ($55<<2)|0);
   $58 = (__ZNK5Value7getDataEv($57)|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($59)) + 12|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 1023]($58)|0);
   $63 = ($62|0)==(8);
   if ($63) {
    $64 = $28;
    $13 = $64;
    $14 = 0;
    $65 = $13;
    $66 = $14;
    $67 = HEAP32[$65>>2]|0;
    $68 = (($67) + ($66<<2)|0);
    $69 = (__ZNK5Value7getDataEv($68)|0);
    $70 = (__ZNK11AtomIntData6getNumEv($69)|0);
    $71 = (+($70|0));
    $operand1 = $71;
    break;
   }
   $72 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$33>>0] = $$expand_i1_val;
   $11 = $30;
   $12 = 12060;
   $73 = $11;
   $10 = $73;
   $74 = $10;
   $9 = $74;
   $75 = $9;
   $8 = $75;
   $76 = $12;
   $77 = $12;
   __THREW__ = 0;
   $78 = (invoke_ii(550,($77|0))|0);
   $79 = __THREW__; __THREW__ = 0;
   $80 = $79&1;
   if ($80) {
    label = 9;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($73|0),($76|0),($78|0));
    $81 = __THREW__; __THREW__ = 0;
    $82 = $81&1;
    if ($82) {
     label = 9;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($72|0),($30|0),0);
     $83 = __THREW__; __THREW__ = 0;
     $84 = $83&1;
     if (!($84)) {
      $$expand_i1_val2 = 0;
      HEAP8[$33>>0] = $$expand_i1_val2;
      __THREW__ = 0;
      invoke_viii(602,($72|0),(80|0),(603|0));
      $85 = __THREW__; __THREW__ = 0;
     }
     $88 = ___cxa_find_matching_catch_2()|0;
     $89 = tempRet0;
     $31 = $88;
     $32 = $89;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    }
   }
   if ((label|0) == 9) {
    $86 = ___cxa_find_matching_catch_2()|0;
    $87 = tempRet0;
    $31 = $86;
    $32 = $87;
   }
   $$pre_trunc = HEAP8[$33>>0]|0;
   $90 = $$pre_trunc&1;
   if (!($90)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($72|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $91 = $28;
 $6 = $91;
 $7 = 1;
 $92 = $6;
 $93 = $7;
 $94 = HEAP32[$92>>2]|0;
 $95 = (($94) + ($93<<2)|0);
 $96 = (__ZNK5Value7getDataEv($95)|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = ((($97)) + 12|0);
 $99 = HEAP32[$98>>2]|0;
 $100 = (FUNCTION_TABLE_ii[$99 & 1023]($96)|0);
 $101 = ($100|0)==(16);
 $102 = $28;
 do {
  if ($101) {
   $4 = $102;
   $5 = 1;
   $103 = $4;
   $104 = $5;
   $105 = HEAP32[$103>>2]|0;
   $106 = (($105) + ($104<<2)|0);
   $107 = (__ZNK5Value7getDataEv($106)|0);
   $108 = (+__ZNK13AtomFloatData6getNumEv($107));
   $operand2 = $108;
  } else {
   $2 = $102;
   $3 = 1;
   $109 = $2;
   $110 = $3;
   $111 = HEAP32[$109>>2]|0;
   $112 = (($111) + ($110<<2)|0);
   $113 = (__ZNK5Value7getDataEv($112)|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($114)) + 12|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = ($117|0)==(8);
   if ($118) {
    $119 = $28;
    $0 = $119;
    $1 = 1;
    $120 = $0;
    $121 = $1;
    $122 = HEAP32[$120>>2]|0;
    $123 = (($122) + ($121<<2)|0);
    $124 = (__ZNK5Value7getDataEv($123)|0);
    $125 = (__ZNK11AtomIntData6getNumEv($124)|0);
    $126 = (+($125|0));
    $operand2 = $126;
    break;
   }
   $127 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val5 = 1;
   HEAP8[$35>>0] = $$expand_i1_val5;
   $18 = $34;
   $19 = 12095;
   $128 = $18;
   $17 = $128;
   $129 = $17;
   $16 = $129;
   $130 = $16;
   $15 = $130;
   $131 = $19;
   $132 = $19;
   __THREW__ = 0;
   $133 = (invoke_ii(550,($132|0))|0);
   $134 = __THREW__; __THREW__ = 0;
   $135 = $134&1;
   if ($135) {
    label = 21;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($128|0),($131|0),($133|0));
    $136 = __THREW__; __THREW__ = 0;
    $137 = $136&1;
    if ($137) {
     label = 21;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($127|0),($34|0),0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if (!($139)) {
      $$expand_i1_val7 = 0;
      HEAP8[$35>>0] = $$expand_i1_val7;
      __THREW__ = 0;
      invoke_viii(602,($127|0),(80|0),(603|0));
      $140 = __THREW__; __THREW__ = 0;
     }
     $143 = ___cxa_find_matching_catch_2()|0;
     $144 = tempRet0;
     $31 = $143;
     $32 = $144;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
    }
   }
   if ((label|0) == 21) {
    $141 = ___cxa_find_matching_catch_2()|0;
    $142 = tempRet0;
    $31 = $141;
    $32 = $142;
   }
   $$pre_trunc9 = HEAP8[$35>>0]|0;
   $145 = $$pre_trunc9&1;
   if (!($145)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($127|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $146 = $operand1;
 $147 = $operand2;
 $148 = $146 < $147;
 $149 = (__Znwj(4)|0);
 ;HEAP32[$149>>2]=0|0;
 if ($148) {
  __ZN9AtomTDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 } else {
  __ZN11AtomNilDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 }
 return (0)|0;
}
function __ZN11Func_returnD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN11Func_returnD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN11Func_returnD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK11Func_return7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12145;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK11Func_return4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 32|0;
 $2 = $this;
 $3 = $arguments;
 $4 = $stack;
 $9 = (___cxa_allocate_exception(4)|0);
 $$expand_i1_val = 1;
 HEAP8[$8>>0] = $$expand_i1_val;
 $10 = $3;
 $0 = $10;
 $1 = 0;
 $11 = $0;
 $12 = $1;
 $13 = HEAP32[$11>>2]|0;
 $14 = (($13) + ($12<<2)|0);
 __THREW__ = 0;
 invoke_vii(596,($5|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $20 = ___cxa_find_matching_catch_2()|0;
  $21 = tempRet0;
  $6 = $20;
  $7 = $21;
 } else {
  __THREW__ = 0;
  invoke_vii(630,($9|0),($5|0));
  $17 = __THREW__; __THREW__ = 0;
  $18 = $17&1;
  if (!($18)) {
   $$expand_i1_val2 = 0;
   HEAP8[$8>>0] = $$expand_i1_val2;
   __THREW__ = 0;
   invoke_viii(602,($9|0),(240|0),(631|0));
   $19 = __THREW__; __THREW__ = 0;
  }
  $22 = ___cxa_find_matching_catch_2()|0;
  $23 = tempRet0;
  $6 = $22;
  $7 = $23;
  __ZN5ValueD2Ev($5);
 }
 $$pre_trunc = HEAP8[$8>>0]|0;
 $24 = $$pre_trunc&1;
 if (!($24)) {
  $25 = $6;
  $26 = $7;
  ___resumeException($25|0);
  // unreachable;
 }
 ___cxa_free_exception(($9|0));
 $25 = $6;
 $26 = $7;
 ___resumeException($25|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func_while16return_exceptionC2ERK5Value($this,$result) {
 $this = $this|0;
 $result = $result|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $result;
 $2 = $0;
 $3 = $1;
 __ZN5ValueC2ERKS_($2,$3);
 STACKTOP = sp;return;
}
function __ZN10Func_while16return_exceptionD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN5ValueD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN13Func__NotEqu_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN13Func__NotEqu_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN13Func__NotEqu_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK13Func__NotEqu_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12201;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK13Func__NotEqu_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp + 184|0;
 $15 = sp + 136|0;
 $18 = sp + 124|0;
 $22 = sp + 108|0;
 $27 = sp + 88|0;
 $30 = sp + 76|0;
 $34 = sp + 60|0;
 $37 = sp + 48|0;
 $40 = sp + 36|0;
 $i = sp + 20|0;
 $44 = sp + 16|0;
 $45 = sp + 12|0;
 $46 = sp + 8|0;
 $47 = sp + 4|0;
 $48 = sp;
 $41 = $this;
 $42 = $arguments;
 $43 = $stack;
 $result = 1;
 $39 = $i;
 $49 = $39;
 HEAP32[$49>>2] = 0;
 $50 = $42;
 $38 = $50;
 $51 = $38;
 $52 = HEAP32[$51>>2]|0;
 $35 = $51;
 $36 = $52;
 $53 = $36;
 $32 = $34;
 $33 = $53;
 $54 = $32;
 $55 = $33;
 HEAP32[$54>>2] = $55;
 $56 = HEAP32[$34>>2]|0;
 HEAP32[$37>>2] = $56;
 $57 = HEAP32[$37>>2]|0;
 HEAP32[$44>>2] = $57;
 ;HEAP32[$i>>2]=HEAP32[$44>>2]|0;
 while(1) {
  $58 = $42;
  $31 = $58;
  $59 = $31;
  $60 = ((($59)) + 4|0);
  $61 = HEAP32[$60>>2]|0;
  $28 = $59;
  $29 = $61;
  $62 = $29;
  $25 = $27;
  $26 = $62;
  $63 = $25;
  $64 = $26;
  HEAP32[$63>>2] = $64;
  $65 = HEAP32[$27>>2]|0;
  HEAP32[$30>>2] = $65;
  $66 = HEAP32[$30>>2]|0;
  HEAP32[$46>>2] = $66;
  $19 = $46;
  $20 = 1;
  $67 = $19;
  $68 = $20;
  $69 = (0 - ($68))|0;
  $16 = $67;
  $17 = $69;
  $70 = $16;
  ;HEAP32[$15>>2]=HEAP32[$70>>2]|0;
  $71 = $17;
  $13 = $15;
  $14 = $71;
  $72 = $13;
  $73 = $14;
  $74 = HEAP32[$72>>2]|0;
  $75 = (($74) + ($73<<2)|0);
  HEAP32[$72>>2] = $75;
  $76 = HEAP32[$15>>2]|0;
  HEAP32[$18>>2] = $76;
  $77 = HEAP32[$18>>2]|0;
  HEAP32[$45>>2] = $77;
  $11 = $i;
  $12 = $45;
  $78 = $11;
  $79 = $12;
  $9 = $78;
  $10 = $79;
  $80 = $9;
  $8 = $80;
  $81 = $8;
  $82 = HEAP32[$81>>2]|0;
  $83 = $10;
  $7 = $83;
  $84 = $7;
  $85 = HEAP32[$84>>2]|0;
  $86 = ($82|0)==($85|0);
  $87 = $86 ^ 1;
  if (!($87)) {
   break;
  }
  $0 = $i;
  $88 = $0;
  $89 = HEAP32[$88>>2]|0;
  $90 = (__ZNK5Value7getDataEv($89)|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = ((($91)) + 20|0);
  $93 = HEAP32[$92>>2]|0;
  $4 = $i;
  $5 = 1;
  $94 = $4;
  ;HEAP32[$3>>2]=HEAP32[$94>>2]|0;
  $95 = $5;
  $1 = $3;
  $2 = $95;
  $96 = $1;
  $97 = $2;
  $98 = HEAP32[$96>>2]|0;
  $99 = (($98) + ($97<<2)|0);
  HEAP32[$96>>2] = $99;
  $100 = HEAP32[$3>>2]|0;
  HEAP32[$47>>2] = $100;
  $6 = $47;
  $101 = $6;
  $102 = HEAP32[$101>>2]|0;
  $103 = (__ZNK5Value7getDataEv($102)|0);
  $104 = (FUNCTION_TABLE_iii[$93 & 1023]($90,$103)|0);
  if (!($104)) {
   label = 4;
   break;
  }
  $23 = $i;
  $24 = 0;
  $105 = $23;
  ;HEAP32[$22>>2]=HEAP32[$105>>2]|0;
  $21 = $105;
  $106 = $21;
  $107 = HEAP32[$106>>2]|0;
  $108 = ((($107)) + 4|0);
  HEAP32[$106>>2] = $108;
  $109 = HEAP32[$22>>2]|0;
  HEAP32[$48>>2] = $109;
 }
 if ((label|0) == 4) {
  $result = 0;
 }
 $110 = $result;
 $111 = $110&1;
 $112 = (__Znwj(4)|0);
 ;HEAP32[$112>>2]=0|0;
 if ($111) {
  __ZN11AtomNilDataC2Ev($112);
  __ZN5ValueC2EP4Data($40,$112);
  $113 = HEAP32[$40>>2]|0;
  STACKTOP = sp;return ($113|0);
 } else {
  __ZN9AtomTDataC2Ev($112);
  __ZN5ValueC2EP4Data($40,$112);
  $113 = HEAP32[$40>>2]|0;
  STACKTOP = sp;return ($113|0);
 }
 return (0)|0;
}
function __ZN9Func_sizeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9Func_sizeD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9Func_sizeD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9Func_size7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12222;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9Func_size4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $23 = sp + 56|0;
 $27 = sp + 32|0;
 $28 = sp + 20|0;
 $29 = sp + 8|0;
 $32 = sp + 168|0;
 $24 = $this;
 $25 = $arguments;
 $26 = $stack;
 $33 = $24;
 $34 = $25;
 $21 = $34;
 $22 = 0;
 $35 = $21;
 $36 = $22;
 $37 = HEAP32[$35>>2]|0;
 $38 = (($37) + ($36<<2)|0);
 $39 = (__ZNK5Value7getDataEv($38)|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($40)) + 12|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = (FUNCTION_TABLE_ii[$42 & 1023]($39)|0);
 $44 = $43 & 1;
 $45 = ($44|0)!=(0);
 if ($45) {
  $104 = (__Znwj(8)|0);
  $105 = $25;
  $1 = $105;
  $2 = 0;
  $106 = $1;
  $107 = $2;
  $108 = HEAP32[$106>>2]|0;
  $109 = (($108) + ($107<<2)|0);
  __THREW__ = 0;
  $110 = (invoke_ii(588,($109|0))|0);
  $111 = __THREW__; __THREW__ = 0;
  $112 = $111&1;
  if (!($112)) {
   $113 = ((($110)) + 4|0);
   $0 = $113;
   $114 = $0;
   $115 = ((($114)) + 4|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = HEAP32[$114>>2]|0;
   $118 = $116;
   $119 = $117;
   $120 = (($118) - ($119))|0;
   $121 = (($120|0) / 12)&-1;
   __THREW__ = 0;
   invoke_vii(627,($104|0),($121|0));
   $122 = __THREW__; __THREW__ = 0;
   $123 = $122&1;
   if (!($123)) {
    __ZN5ValueC2EP4Data($23,$104);
    $124 = HEAP32[$23>>2]|0;
    STACKTOP = sp;return ($124|0);
   }
  }
  $125 = ___cxa_find_matching_catch_2()|0;
  $126 = tempRet0;
  $30 = $125;
  $31 = $126;
  __ZdlPv($104);
  $127 = $30;
  $128 = $31;
  ___resumeException($127|0);
  // unreachable;
 }
 $46 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$32>>0] = $$expand_i1_val;
 $47 = HEAP32[$33>>2]|0;
 $48 = ((($47)) + 8|0);
 $49 = HEAP32[$48>>2]|0;
 __THREW__ = 0;
 invoke_vii($49|0,($29|0),($33|0));
 $50 = __THREW__; __THREW__ = 0;
 $51 = $50&1;
 if ($51) {
  $95 = ___cxa_find_matching_catch_2()|0;
  $96 = tempRet0;
  $30 = $95;
  $31 = $96;
 } else {
  $19 = 13003;
  $20 = $29;
  $52 = $20;
  $53 = $19;
  __THREW__ = 0;
  $54 = (invoke_iiii(600,($52|0),0,($53|0))|0);
  $55 = __THREW__; __THREW__ = 0;
  $56 = $55&1;
  if ($56) {
   $97 = ___cxa_find_matching_catch_2()|0;
   $98 = tempRet0;
   $30 = $97;
   $31 = $98;
  } else {
   $18 = $54;
   $57 = $18;
   $16 = $28;
   $17 = $57;
   $58 = $16;
   $59 = $17;
   $15 = $59;
   $60 = $15;
   ;HEAP32[$58>>2]=HEAP32[$60>>2]|0;HEAP32[$58+4>>2]=HEAP32[$60+4>>2]|0;HEAP32[$58+8>>2]=HEAP32[$60+8>>2]|0;
   $61 = $17;
   $14 = $61;
   $62 = $14;
   $13 = $62;
   $63 = $13;
   $12 = $63;
   $64 = $12;
   $__a$i$i$i = $64;
   $__i$i$i$i = 0;
   while(1) {
    $65 = $__i$i$i$i;
    $66 = ($65>>>0)<(3);
    if (!($66)) {
     break;
    }
    $67 = $__i$i$i$i;
    $68 = $__a$i$i$i;
    $69 = (($68) + ($67<<2)|0);
    HEAP32[$69>>2] = 0;
    $70 = $__i$i$i$i;
    $71 = (($70) + 1)|0;
    $__i$i$i$i = $71;
   }
   $10 = $28;
   $11 = 12953;
   $72 = $10;
   $73 = $11;
   __THREW__ = 0;
   $74 = (invoke_iii(542,($72|0),($73|0))|0);
   $75 = __THREW__; __THREW__ = 0;
   $76 = $75&1;
   if ($76) {
    $99 = ___cxa_find_matching_catch_2()|0;
    $100 = tempRet0;
    $30 = $99;
    $31 = $100;
   } else {
    $9 = $74;
    $77 = $9;
    $7 = $27;
    $8 = $77;
    $78 = $7;
    $79 = $8;
    $6 = $79;
    $80 = $6;
    ;HEAP32[$78>>2]=HEAP32[$80>>2]|0;HEAP32[$78+4>>2]=HEAP32[$80+4>>2]|0;HEAP32[$78+8>>2]=HEAP32[$80+8>>2]|0;
    $81 = $8;
    $5 = $81;
    $82 = $5;
    $4 = $82;
    $83 = $4;
    $3 = $83;
    $84 = $3;
    $__a$i$i$i1 = $84;
    $__i$i$i$i2 = 0;
    while(1) {
     $85 = $__i$i$i$i2;
     $86 = ($85>>>0)<(3);
     if (!($86)) {
      break;
     }
     $87 = $__i$i$i$i2;
     $88 = $__a$i$i$i1;
     $89 = (($88) + ($87<<2)|0);
     HEAP32[$89>>2] = 0;
     $90 = $__i$i$i$i2;
     $91 = (($90) + 1)|0;
     $__i$i$i$i2 = $91;
    }
    __THREW__ = 0;
    invoke_viii(601,($46|0),($27|0),0);
    $92 = __THREW__; __THREW__ = 0;
    $93 = $92&1;
    if (!($93)) {
     $$expand_i1_val2 = 0;
     HEAP8[$32>>0] = $$expand_i1_val2;
     __THREW__ = 0;
     invoke_viii(602,($46|0),(80|0),(603|0));
     $94 = __THREW__; __THREW__ = 0;
    }
    $101 = ___cxa_find_matching_catch_2()|0;
    $102 = tempRet0;
    $30 = $101;
    $31 = $102;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
 }
 $$pre_trunc = HEAP8[$32>>0]|0;
 $103 = $$pre_trunc&1;
 if (!($103)) {
  $127 = $30;
  $128 = $31;
  ___resumeException($127|0);
  // unreachable;
 }
 ___cxa_free_exception(($46|0));
 $127 = $30;
 $128 = $31;
 ___resumeException($127|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func_defunD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func_defunD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func_defunD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func_defun7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12240;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func_defun4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $argCount = 0, $i = 0, $name = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = sp + 56|0;
 $i = sp + 36|0;
 $name = sp + 24|0;
 $14 = sp + 8|0;
 $11 = $this;
 $12 = $arguments;
 $13 = $stack;
 $17 = $11;
 $argCount = 0;
 $18 = $12;
 $8 = $18;
 $9 = 1;
 $19 = $8;
 $20 = $9;
 $21 = HEAP32[$19>>2]|0;
 $22 = (($21) + ($20<<2)|0);
 $23 = (__ZNK5Value7getDataEv($22)|0);
 $24 = ((($23)) + 4|0);
 $7 = $24;
 $25 = $7;
 $26 = ((($25)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = HEAP32[$25>>2]|0;
 $29 = $27;
 $30 = $28;
 $31 = (($29) - ($30))|0;
 $32 = (($31|0) / 12)&-1;
 $argCount = $32;
 $6 = $i;
 $33 = $6;
 HEAP32[$33>>2] = 0;
 $34 = $12;
 $4 = $34;
 $5 = 0;
 $35 = $4;
 $36 = $5;
 $37 = HEAP32[$35>>2]|0;
 $38 = (($37) + ($36<<2)|0);
 $39 = (__ZNK5Value7getDataEv($38)|0);
 __ZNK8AtomData7getNameEv($name,$39);
 $40 = $13;
 __THREW__ = 0;
 $41 = (invoke_ii(548,12)|0);
 $42 = __THREW__; __THREW__ = 0;
 $43 = $42&1;
 L1: do {
  if (!($43)) {
   __THREW__ = 0;
   $44 = (invoke_ii(548,36)|0);
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   do {
    if ($46) {
     label = 15;
    } else {
     $47 = $argCount;
     $48 = $12;
     $2 = $48;
     $3 = 2;
     $49 = $2;
     $50 = $3;
     $51 = HEAP32[$49>>2]|0;
     $52 = (($51) + ($50<<2)|0);
     __THREW__ = 0;
     $53 = (invoke_ii(588,($52|0))|0);
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if (!($55)) {
      $56 = HEAP32[$53>>2]|0;
      $57 = ((($56)) + 16|0);
      $58 = HEAP32[$57>>2]|0;
      __THREW__ = 0;
      $59 = (invoke_ii($58|0,($53|0))|0);
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      if (!($61)) {
       $62 = $12;
       $0 = $62;
       $1 = 1;
       $63 = $0;
       $64 = $1;
       $65 = HEAP32[$63>>2]|0;
       $66 = (($65) + ($64<<2)|0);
       __THREW__ = 0;
       $67 = (invoke_ii(588,($66|0))|0);
       $68 = __THREW__; __THREW__ = 0;
       $69 = $68&1;
       if (!($69)) {
        $70 = HEAP32[$67>>2]|0;
        $71 = ((($70)) + 16|0);
        $72 = HEAP32[$71>>2]|0;
        __THREW__ = 0;
        $73 = (invoke_ii($72|0,($67|0))|0);
        $74 = __THREW__; __THREW__ = 0;
        $75 = $74&1;
        if (!($75)) {
         $76 = ((($17)) + 16|0);
         $77 = HEAP32[$76>>2]|0;
         __THREW__ = 0;
         invoke_viiiiiii(632,($44|0),2,($47|0),0,($59|0),($73|0),($77|0));
         $78 = __THREW__; __THREW__ = 0;
         $79 = $78&1;
         if (!($79)) {
          $80 = $13;
          __THREW__ = 0;
          invoke_viii(547,($41|0),($44|0),($80|0));
          $81 = __THREW__; __THREW__ = 0;
          $82 = $81&1;
          if ($82) {
           label = 15;
           break;
          }
          __THREW__ = 0;
          invoke_viii(553,($14|0),($name|0),($41|0));
          $83 = __THREW__; __THREW__ = 0;
          $84 = $83&1;
          if ($84) {
           break L1;
          }
          __THREW__ = 0;
          invoke_vii(554,($40|0),($14|0));
          $85 = __THREW__; __THREW__ = 0;
          $86 = $85&1;
          if ($86) {
           $99 = ___cxa_find_matching_catch_2()|0;
           $100 = tempRet0;
           $15 = $99;
           $16 = $100;
           __ZN3VarD2Ev($14);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
           $101 = $15;
           $102 = $16;
           ___resumeException($101|0);
           // unreachable;
          }
          __ZN3VarD2Ev($14);
          __THREW__ = 0;
          $87 = (invoke_ii(548,4)|0);
          $88 = __THREW__; __THREW__ = 0;
          $89 = $88&1;
          if ($89) {
           break L1;
          }
          ;HEAP32[$87>>2]=0|0;
          __ZN11AtomNilDataC2Ev($87);
          __THREW__ = 0;
          invoke_vii(584,($10|0),($87|0));
          $90 = __THREW__; __THREW__ = 0;
          $91 = $90&1;
          if ($91) {
           break L1;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
          $92 = HEAP32[$10>>2]|0;
          STACKTOP = sp;return ($92|0);
         }
        }
       }
      }
     }
     $97 = ___cxa_find_matching_catch_2()|0;
     $98 = tempRet0;
     $15 = $97;
     $16 = $98;
     __ZdlPv($44);
    }
   } while(0);
   if ((label|0) == 15) {
    $95 = ___cxa_find_matching_catch_2()|0;
    $96 = tempRet0;
    $15 = $95;
    $16 = $96;
   }
   __ZdlPv($41);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
   $101 = $15;
   $102 = $16;
   ___resumeException($101|0);
   // unreachable;
  }
 } while(0);
 $93 = ___cxa_find_matching_catch_2()|0;
 $94 = tempRet0;
 $15 = $93;
 $16 = $94;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
 $101 = $15;
 $102 = $16;
 ___resumeException($101|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func__And_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func__And_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func__And_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func__And_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12259;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func__And_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nil = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 28|0;
 $nil = sp + 12|0;
 $5 = $this;
 $6 = $arguments;
 $7 = $stack;
 __ZN11AtomNilDataC2Ev($nil);
 $11 = $6;
 $2 = $11;
 $3 = 0;
 $12 = $2;
 $13 = $3;
 $14 = HEAP32[$12>>2]|0;
 $15 = (($14) + ($13<<2)|0);
 __THREW__ = 0;
 $16 = (invoke_ii(588,($15|0))|0);
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 do {
  if (!($18)) {
   $19 = HEAP32[$16>>2]|0;
   $20 = ((($19)) + 20|0);
   $21 = HEAP32[$20>>2]|0;
   __THREW__ = 0;
   $22 = (invoke_iii($21|0,($16|0),($nil|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if (!($24)) {
    if (!($22)) {
     $25 = $6;
     $0 = $25;
     $1 = 1;
     $26 = $0;
     $27 = $1;
     $28 = HEAP32[$26>>2]|0;
     $29 = (($28) + ($27<<2)|0);
     __THREW__ = 0;
     $30 = (invoke_ii(588,($29|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      break;
     }
     $33 = HEAP32[$30>>2]|0;
     $34 = ((($33)) + 20|0);
     $35 = HEAP32[$34>>2]|0;
     __THREW__ = 0;
     $36 = (invoke_iii($35|0,($30|0),($nil|0))|0);
     $37 = __THREW__; __THREW__ = 0;
     $38 = $37&1;
     if ($38) {
      break;
     }
     if (!($36)) {
      __THREW__ = 0;
      $39 = (invoke_ii(548,4)|0);
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break;
      }
      ;HEAP32[$39>>2]=0|0;
      __ZN9AtomTDataC2Ev($39);
      __THREW__ = 0;
      invoke_vii(584,($4|0),($39|0));
      $42 = __THREW__; __THREW__ = 0;
      $43 = $42&1;
      if ($43) {
       break;
      }
      $10 = 1;
      __ZN11AtomNilDataD2Ev($nil);
      $53 = HEAP32[$4>>2]|0;
      STACKTOP = sp;return ($53|0);
     }
    }
    __THREW__ = 0;
    $48 = (invoke_ii(548,4)|0);
    $49 = __THREW__; __THREW__ = 0;
    $50 = $49&1;
    if (!($50)) {
     ;HEAP32[$48>>2]=0|0;
     __ZN11AtomNilDataC2Ev($48);
     __THREW__ = 0;
     invoke_vii(584,($4|0),($48|0));
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if (!($52)) {
      $10 = 1;
      __ZN11AtomNilDataD2Ev($nil);
      $53 = HEAP32[$4>>2]|0;
      STACKTOP = sp;return ($53|0);
     }
    }
   }
  }
 } while(0);
 $44 = ___cxa_find_matching_catch_2()|0;
 $45 = tempRet0;
 $8 = $44;
 $9 = $45;
 __ZN11AtomNilDataD2Ev($nil);
 $46 = $8;
 $47 = $9;
 ___resumeException($46|0);
 // unreachable;
 return (0)|0;
}
function __ZN14Func__LessEqu_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN14Func__LessEqu_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN14Func__LessEqu_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK14Func__LessEqu_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12280;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK14Func__LessEqu_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0;
 var $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $operand1 = 0.0;
 var $operand2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $26 = sp + 60|0;
 $30 = sp + 36|0;
 $33 = sp + 169|0;
 $34 = sp + 16|0;
 $35 = sp + 168|0;
 $27 = $this;
 $28 = $arguments;
 $29 = $stack;
 $36 = $28;
 $24 = $36;
 $25 = 0;
 $37 = $24;
 $38 = $25;
 $39 = HEAP32[$37>>2]|0;
 $40 = (($39) + ($38<<2)|0);
 $41 = (__ZNK5Value7getDataEv($40)|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ((($42)) + 12|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (FUNCTION_TABLE_ii[$44 & 1023]($41)|0);
 $46 = ($45|0)==(16);
 $47 = $28;
 do {
  if ($46) {
   $22 = $47;
   $23 = 0;
   $48 = $22;
   $49 = $23;
   $50 = HEAP32[$48>>2]|0;
   $51 = (($50) + ($49<<2)|0);
   $52 = (__ZNK5Value7getDataEv($51)|0);
   $53 = (+__ZNK13AtomFloatData6getNumEv($52));
   $operand1 = $53;
  } else {
   $20 = $47;
   $21 = 0;
   $54 = $20;
   $55 = $21;
   $56 = HEAP32[$54>>2]|0;
   $57 = (($56) + ($55<<2)|0);
   $58 = (__ZNK5Value7getDataEv($57)|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($59)) + 12|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 1023]($58)|0);
   $63 = ($62|0)==(8);
   if ($63) {
    $64 = $28;
    $13 = $64;
    $14 = 0;
    $65 = $13;
    $66 = $14;
    $67 = HEAP32[$65>>2]|0;
    $68 = (($67) + ($66<<2)|0);
    $69 = (__ZNK5Value7getDataEv($68)|0);
    $70 = (__ZNK11AtomIntData6getNumEv($69)|0);
    $71 = (+($70|0));
    $operand1 = $71;
    break;
   }
   $72 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$33>>0] = $$expand_i1_val;
   $11 = $30;
   $12 = 13134;
   $73 = $11;
   $10 = $73;
   $74 = $10;
   $9 = $74;
   $75 = $9;
   $8 = $75;
   $76 = $12;
   $77 = $12;
   __THREW__ = 0;
   $78 = (invoke_ii(550,($77|0))|0);
   $79 = __THREW__; __THREW__ = 0;
   $80 = $79&1;
   if ($80) {
    label = 9;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($73|0),($76|0),($78|0));
    $81 = __THREW__; __THREW__ = 0;
    $82 = $81&1;
    if ($82) {
     label = 9;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($72|0),($30|0),0);
     $83 = __THREW__; __THREW__ = 0;
     $84 = $83&1;
     if (!($84)) {
      $$expand_i1_val2 = 0;
      HEAP8[$33>>0] = $$expand_i1_val2;
      __THREW__ = 0;
      invoke_viii(602,($72|0),(80|0),(603|0));
      $85 = __THREW__; __THREW__ = 0;
     }
     $88 = ___cxa_find_matching_catch_2()|0;
     $89 = tempRet0;
     $31 = $88;
     $32 = $89;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    }
   }
   if ((label|0) == 9) {
    $86 = ___cxa_find_matching_catch_2()|0;
    $87 = tempRet0;
    $31 = $86;
    $32 = $87;
   }
   $$pre_trunc = HEAP8[$33>>0]|0;
   $90 = $$pre_trunc&1;
   if (!($90)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($72|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $91 = $28;
 $6 = $91;
 $7 = 1;
 $92 = $6;
 $93 = $7;
 $94 = HEAP32[$92>>2]|0;
 $95 = (($94) + ($93<<2)|0);
 $96 = (__ZNK5Value7getDataEv($95)|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = ((($97)) + 12|0);
 $99 = HEAP32[$98>>2]|0;
 $100 = (FUNCTION_TABLE_ii[$99 & 1023]($96)|0);
 $101 = ($100|0)==(16);
 $102 = $28;
 do {
  if ($101) {
   $4 = $102;
   $5 = 1;
   $103 = $4;
   $104 = $5;
   $105 = HEAP32[$103>>2]|0;
   $106 = (($105) + ($104<<2)|0);
   $107 = (__ZNK5Value7getDataEv($106)|0);
   $108 = (+__ZNK13AtomFloatData6getNumEv($107));
   $operand2 = $108;
  } else {
   $2 = $102;
   $3 = 1;
   $109 = $2;
   $110 = $3;
   $111 = HEAP32[$109>>2]|0;
   $112 = (($111) + ($110<<2)|0);
   $113 = (__ZNK5Value7getDataEv($112)|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($114)) + 12|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = ($117|0)==(8);
   if ($118) {
    $119 = $28;
    $0 = $119;
    $1 = 1;
    $120 = $0;
    $121 = $1;
    $122 = HEAP32[$120>>2]|0;
    $123 = (($122) + ($121<<2)|0);
    $124 = (__ZNK5Value7getDataEv($123)|0);
    $125 = (__ZNK11AtomIntData6getNumEv($124)|0);
    $126 = (+($125|0));
    $operand2 = $126;
    break;
   }
   $127 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val5 = 1;
   HEAP8[$35>>0] = $$expand_i1_val5;
   $18 = $34;
   $19 = 13170;
   $128 = $18;
   $17 = $128;
   $129 = $17;
   $16 = $129;
   $130 = $16;
   $15 = $130;
   $131 = $19;
   $132 = $19;
   __THREW__ = 0;
   $133 = (invoke_ii(550,($132|0))|0);
   $134 = __THREW__; __THREW__ = 0;
   $135 = $134&1;
   if ($135) {
    label = 21;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($128|0),($131|0),($133|0));
    $136 = __THREW__; __THREW__ = 0;
    $137 = $136&1;
    if ($137) {
     label = 21;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($127|0),($34|0),0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if (!($139)) {
      $$expand_i1_val7 = 0;
      HEAP8[$35>>0] = $$expand_i1_val7;
      __THREW__ = 0;
      invoke_viii(602,($127|0),(80|0),(603|0));
      $140 = __THREW__; __THREW__ = 0;
     }
     $143 = ___cxa_find_matching_catch_2()|0;
     $144 = tempRet0;
     $31 = $143;
     $32 = $144;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
    }
   }
   if ((label|0) == 21) {
    $141 = ___cxa_find_matching_catch_2()|0;
    $142 = tempRet0;
    $31 = $141;
    $32 = $142;
   }
   $$pre_trunc9 = HEAP8[$35>>0]|0;
   $145 = $$pre_trunc9&1;
   if (!($145)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($127|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $146 = $operand1;
 $147 = $operand2;
 $148 = $146 <= $147;
 $149 = (__Znwj(4)|0);
 ;HEAP32[$149>>2]=0|0;
 if ($148) {
  __ZN9AtomTDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 } else {
  __ZN11AtomNilDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 }
 return (0)|0;
}
function __ZN10Func_whileD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func_whileD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func_whileD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func_while7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12307;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func_while4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i2 = 0, $__i$i$i$i = 0, $__i$i$i$i3 = 0, $e = 0, $e1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $24 = sp + 72|0;
 $28 = sp + 48|0;
 $29 = sp + 36|0;
 $30 = sp + 24|0;
 $33 = sp + 188|0;
 $34 = sp + 12|0;
 $35 = sp + 8|0;
 $25 = $this;
 $26 = $arguments;
 $27 = $stack;
 $36 = $25;
 $37 = $26;
 $22 = $37;
 $23 = 1;
 $38 = $22;
 $39 = $23;
 $40 = HEAP32[$38>>2]|0;
 $41 = (($40) + ($39<<2)|0);
 $42 = (__ZNK5Value7getDataEv($41)|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 12|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = (FUNCTION_TABLE_ii[$45 & 1023]($42)|0);
 $47 = $46 & 1;
 $48 = ($47|0)!=(0);
 if ($48) {
  while(1) {
   $107 = ((($36)) + 16|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $26;
   $2 = $109;
   $3 = 0;
   $110 = $2;
   $111 = $3;
   $112 = HEAP32[$110>>2]|0;
   $113 = (($112) + ($111<<2)|0);
   $114 = (__ZNK5Value7getDataEv($113)|0);
   $115 = $27;
   $116 = (__ZN12LispExecuter15functionHandlerEPK4DataP6Memory($108,$114,$115)|0);
   HEAP32[$34>>2] = $116;
   __THREW__ = 0;
   $117 = (invoke_ii(588,($34|0))|0);
   $118 = __THREW__; __THREW__ = 0;
   $119 = $118&1;
   if ($119) {
    label = 27;
    break;
   }
   $120 = HEAP32[$117>>2]|0;
   $121 = ((($120)) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_ii($122|0,($117|0))|0);
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 27;
    break;
   }
   $126 = ($123|0)==(32);
   __ZN5ValueD2Ev($34);
   if (!($126)) {
    label = 34;
    break;
   }
   $127 = ((($36)) + 16|0);
   $128 = HEAP32[$127>>2]|0;
   $129 = $26;
   $0 = $129;
   $1 = 1;
   $130 = $0;
   $131 = $1;
   $132 = HEAP32[$130>>2]|0;
   $133 = (($132) + ($131<<2)|0);
   __THREW__ = 0;
   $134 = (invoke_ii(588,($133|0))|0);
   $135 = __THREW__; __THREW__ = 0;
   $136 = $135&1;
   if (!($136)) {
    $137 = $27;
    __THREW__ = 0;
    $138 = (invoke_iiii(586,($128|0),($134|0),($137|0))|0);
    $139 = __THREW__; __THREW__ = 0;
    $140 = $139&1;
    if (!($140)) {
     HEAP32[$35>>2] = $138;
     __ZN5ValueD2Ev($35);
     continue;
    }
   }
   $143 = ___cxa_find_matching_catch_4(240|0,344|0)|0;
   $144 = tempRet0;
   $31 = $143;
   $32 = $144;
   $145 = $32;
   $146 = (_llvm_eh_typeid_for((240|0))|0);
   $147 = ($145|0)==($146|0);
   if ($147) {
    label = 29;
    break;
   }
   $154 = (_llvm_eh_typeid_for((344|0))|0);
   $155 = ($145|0)==($154|0);
   if (!($155)) {
    label = 36;
    break;
   }
   $156 = $31;
   $157 = (___cxa_begin_catch(($156|0))|0);
   $e = $157;
   ___cxa_end_catch();
  }
  if ((label|0) == 27) {
   $141 = ___cxa_find_matching_catch_2()|0;
   $142 = tempRet0;
   $31 = $141;
   $32 = $142;
   __ZN5ValueD2Ev($34);
   $164 = $31;
   $165 = $32;
   ___resumeException($164|0);
   // unreachable;
  }
  else if ((label|0) == 29) {
   $148 = $31;
   $149 = (___cxa_begin_catch(($148|0))|0);
   $e1 = $149;
   $150 = $e1;
   __THREW__ = 0;
   $151 = (invoke_ii(633,($150|0))|0);
   $152 = __THREW__; __THREW__ = 0;
   $153 = $152&1;
   if (!($153)) {
    HEAP32[$24>>2] = $151;
    ___cxa_end_catch();
    $163 = HEAP32[$24>>2]|0;
    STACKTOP = sp;return ($163|0);
   }
   $158 = ___cxa_find_matching_catch_2()|0;
   $159 = tempRet0;
   $31 = $158;
   $32 = $159;
   __THREW__ = 0;
   invoke_v(593);
   $160 = __THREW__; __THREW__ = 0;
   $161 = $160&1;
   if ($161) {
    $166 = ___cxa_find_matching_catch_3(0|0)|0;
    $167 = tempRet0;
    ___clang_call_terminate($166);
    // unreachable;
   } else {
    $164 = $31;
    $165 = $32;
    ___resumeException($164|0);
    // unreachable;
   }
  }
  else if ((label|0) == 34) {
   $162 = (__Znwj(4)|0);
   ;HEAP32[$162>>2]=0|0;
   __ZN11AtomNilDataC2Ev($162);
   __ZN5ValueC2EP4Data($24,$162);
   $163 = HEAP32[$24>>2]|0;
   STACKTOP = sp;return ($163|0);
  }
  else if ((label|0) == 36) {
   $164 = $31;
   $165 = $32;
   ___resumeException($164|0);
   // unreachable;
  }
 }
 $49 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$33>>0] = $$expand_i1_val;
 $50 = HEAP32[$36>>2]|0;
 $51 = ((($50)) + 8|0);
 $52 = HEAP32[$51>>2]|0;
 __THREW__ = 0;
 invoke_vii($52|0,($30|0),($36|0));
 $53 = __THREW__; __THREW__ = 0;
 $54 = $53&1;
 if ($54) {
  $98 = ___cxa_find_matching_catch_2()|0;
  $99 = tempRet0;
  $31 = $98;
  $32 = $99;
 } else {
  $20 = 13003;
  $21 = $30;
  $55 = $21;
  $56 = $20;
  __THREW__ = 0;
  $57 = (invoke_iiii(600,($55|0),0,($56|0))|0);
  $58 = __THREW__; __THREW__ = 0;
  $59 = $58&1;
  if ($59) {
   $100 = ___cxa_find_matching_catch_2()|0;
   $101 = tempRet0;
   $31 = $100;
   $32 = $101;
  } else {
   $19 = $57;
   $60 = $19;
   $17 = $29;
   $18 = $60;
   $61 = $17;
   $62 = $18;
   $16 = $62;
   $63 = $16;
   ;HEAP32[$61>>2]=HEAP32[$63>>2]|0;HEAP32[$61+4>>2]=HEAP32[$63+4>>2]|0;HEAP32[$61+8>>2]=HEAP32[$63+8>>2]|0;
   $64 = $18;
   $15 = $64;
   $65 = $15;
   $14 = $65;
   $66 = $14;
   $13 = $66;
   $67 = $13;
   $__a$i$i$i = $67;
   $__i$i$i$i = 0;
   while(1) {
    $68 = $__i$i$i$i;
    $69 = ($68>>>0)<(3);
    if (!($69)) {
     break;
    }
    $70 = $__i$i$i$i;
    $71 = $__a$i$i$i;
    $72 = (($71) + ($70<<2)|0);
    HEAP32[$72>>2] = 0;
    $73 = $__i$i$i$i;
    $74 = (($73) + 1)|0;
    $__i$i$i$i = $74;
   }
   $11 = $29;
   $12 = 12604;
   $75 = $11;
   $76 = $12;
   __THREW__ = 0;
   $77 = (invoke_iii(542,($75|0),($76|0))|0);
   $78 = __THREW__; __THREW__ = 0;
   $79 = $78&1;
   if ($79) {
    $102 = ___cxa_find_matching_catch_2()|0;
    $103 = tempRet0;
    $31 = $102;
    $32 = $103;
   } else {
    $10 = $77;
    $80 = $10;
    $8 = $28;
    $9 = $80;
    $81 = $8;
    $82 = $9;
    $7 = $82;
    $83 = $7;
    ;HEAP32[$81>>2]=HEAP32[$83>>2]|0;HEAP32[$81+4>>2]=HEAP32[$83+4>>2]|0;HEAP32[$81+8>>2]=HEAP32[$83+8>>2]|0;
    $84 = $9;
    $6 = $84;
    $85 = $6;
    $5 = $85;
    $86 = $5;
    $4 = $86;
    $87 = $4;
    $__a$i$i$i2 = $87;
    $__i$i$i$i3 = 0;
    while(1) {
     $88 = $__i$i$i$i3;
     $89 = ($88>>>0)<(3);
     if (!($89)) {
      break;
     }
     $90 = $__i$i$i$i3;
     $91 = $__a$i$i$i2;
     $92 = (($91) + ($90<<2)|0);
     HEAP32[$92>>2] = 0;
     $93 = $__i$i$i$i3;
     $94 = (($93) + 1)|0;
     $__i$i$i$i3 = $94;
    }
    __THREW__ = 0;
    invoke_viii(601,($49|0),($28|0),0);
    $95 = __THREW__; __THREW__ = 0;
    $96 = $95&1;
    if (!($96)) {
     $$expand_i1_val2 = 0;
     HEAP8[$33>>0] = $$expand_i1_val2;
     __THREW__ = 0;
     invoke_viii(602,($49|0),(80|0),(603|0));
     $97 = __THREW__; __THREW__ = 0;
    }
    $104 = ___cxa_find_matching_catch_2()|0;
    $105 = tempRet0;
    $31 = $104;
    $32 = $105;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
 }
 $$pre_trunc = HEAP8[$33>>0]|0;
 $106 = $$pre_trunc&1;
 if (!($106)) {
  $164 = $31;
  $165 = $32;
  ___resumeException($164|0);
  // unreachable;
 }
 ___cxa_free_exception(($49|0));
 $164 = $31;
 $165 = $32;
 ___resumeException($164|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func_while16return_exception9getResultEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = $this;
 $2 = $1;
 __ZN5ValueC2ERKS_($0,$2);
 $3 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN10Func_printD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func_printD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func_printD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func_print7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12361;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func_print4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = sp + 140|0;
 $15 = sp + 120|0;
 $18 = sp + 108|0;
 $24 = sp + 84|0;
 $27 = sp + 72|0;
 $30 = sp + 60|0;
 $i = sp + 44|0;
 $34 = sp + 40|0;
 $35 = sp + 36|0;
 $36 = sp + 24|0;
 $39 = sp + 4|0;
 $40 = sp;
 $31 = $this;
 $32 = $arguments;
 $33 = $stack;
 $41 = $31;
 $29 = $i;
 $42 = $29;
 HEAP32[$42>>2] = 0;
 $43 = ((($41)) + 16|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ($44|0)!=(0|0);
 if (!($45)) {
  $109 = (__Znwj(4)|0);
  ;HEAP32[$109>>2]=0|0;
  __ZN11AtomNilDataC2Ev($109);
  __ZN5ValueC2EP4Data($30,$109);
  $110 = HEAP32[$30>>2]|0;
  STACKTOP = sp;return ($110|0);
 }
 $46 = $32;
 $28 = $46;
 $47 = $28;
 $48 = HEAP32[$47>>2]|0;
 $25 = $47;
 $26 = $48;
 $49 = $26;
 $22 = $24;
 $23 = $49;
 $50 = $22;
 $51 = $23;
 HEAP32[$50>>2] = $51;
 $52 = HEAP32[$24>>2]|0;
 HEAP32[$27>>2] = $52;
 $53 = HEAP32[$27>>2]|0;
 HEAP32[$34>>2] = $53;
 ;HEAP32[$i>>2]=HEAP32[$34>>2]|0;
 while(1) {
  $54 = $32;
  $19 = $54;
  $55 = $19;
  $56 = ((($55)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $16 = $55;
  $17 = $57;
  $58 = $17;
  $13 = $15;
  $14 = $58;
  $59 = $13;
  $60 = $14;
  HEAP32[$59>>2] = $60;
  $61 = HEAP32[$15>>2]|0;
  HEAP32[$18>>2] = $61;
  $62 = HEAP32[$18>>2]|0;
  HEAP32[$35>>2] = $62;
  $7 = $i;
  $8 = $35;
  $63 = $7;
  $64 = $8;
  $5 = $63;
  $6 = $64;
  $65 = $5;
  $4 = $65;
  $66 = $4;
  $67 = HEAP32[$66>>2]|0;
  $68 = $6;
  $3 = $68;
  $69 = $3;
  $70 = HEAP32[$69>>2]|0;
  $71 = ($67|0)==($70|0);
  $72 = $71 ^ 1;
  if (!($72)) {
   label = 12;
   break;
  }
  $2 = $i;
  $73 = $2;
  $74 = HEAP32[$73>>2]|0;
  $75 = (__ZNK5Value7getDataEv($74)|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 12|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (FUNCTION_TABLE_ii[$78 & 1023]($75)|0);
  $80 = ($79|0)==(4);
  $81 = ((($41)) + 16|0);
  $82 = HEAP32[$81>>2]|0;
  if ($80) {
   $1 = $i;
   $83 = $1;
   $84 = HEAP32[$83>>2]|0;
   $85 = (__ZNK5Value7getDataEv($84)|0);
   __ZNK11AtomStrData9getStringEv($36,$85);
   __THREW__ = 0;
   (invoke_iii(589,($82|0),($36|0))|0);
   $86 = __THREW__; __THREW__ = 0;
   $87 = $86&1;
   if ($87) {
    label = 7;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  } else {
   $0 = $i;
   $90 = $0;
   $91 = HEAP32[$90>>2]|0;
   $92 = (__ZNK5Value7getDataEv($91)|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = ((($93)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   FUNCTION_TABLE_vii[$95 & 1023]($39,$92);
   __THREW__ = 0;
   (invoke_iii(589,($82|0),($39|0))|0);
   $96 = __THREW__; __THREW__ = 0;
   $97 = $96&1;
   if ($97) {
    label = 10;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
  }
  $11 = $i;
  $12 = 0;
  $100 = $11;
  ;HEAP32[$10>>2]=HEAP32[$100>>2]|0;
  $9 = $100;
  $101 = $9;
  $102 = HEAP32[$101>>2]|0;
  $103 = ((($102)) + 4|0);
  HEAP32[$101>>2] = $103;
  $104 = HEAP32[$10>>2]|0;
  HEAP32[$40>>2] = $104;
 }
 if ((label|0) == 7) {
  $88 = ___cxa_find_matching_catch_2()|0;
  $89 = tempRet0;
  $37 = $88;
  $38 = $89;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  $111 = $37;
  $112 = $38;
  ___resumeException($111|0);
  // unreachable;
 }
 else if ((label|0) == 10) {
  $98 = ___cxa_find_matching_catch_2()|0;
  $99 = tempRet0;
  $37 = $98;
  $38 = $99;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
  $111 = $37;
  $112 = $38;
  ___resumeException($111|0);
  // unreachable;
 }
 else if ((label|0) == 12) {
  $105 = ((($41)) + 16|0);
  $106 = HEAP32[$105>>2]|0;
  $20 = $106;
  $21 = 590;
  $107 = $20;
  $108 = $21;
  (FUNCTION_TABLE_ii[$108 & 1023]($107)|0);
  $109 = (__Znwj(4)|0);
  ;HEAP32[$109>>2]=0|0;
  __ZN11AtomNilDataC2Ev($109);
  __ZN5ValueC2EP4Data($30,$109);
  $110 = HEAP32[$30>>2]|0;
  STACKTOP = sp;return ($110|0);
 }
 return (0)|0;
}
function __ZN10Func__Not_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func__Not_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func__Not_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func__Not_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12380;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func__Not_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nil = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 28|0;
 $nil = sp + 12|0;
 $3 = $this;
 $4 = $arguments;
 $5 = $stack;
 __ZN11AtomNilDataC2Ev($nil);
 $9 = $4;
 $0 = $9;
 $1 = 0;
 $10 = $0;
 $11 = $1;
 $12 = HEAP32[$10>>2]|0;
 $13 = (($12) + ($11<<2)|0);
 __THREW__ = 0;
 $14 = (invoke_ii(588,($13|0))|0);
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if (!($16)) {
   $17 = HEAP32[$14>>2]|0;
   $18 = ((($17)) + 20|0);
   $19 = HEAP32[$18>>2]|0;
   __THREW__ = 0;
   $20 = (invoke_iii($19|0,($14|0),($nil|0))|0);
   $21 = __THREW__; __THREW__ = 0;
   $22 = $21&1;
   if (!($22)) {
    if ($20) {
     __THREW__ = 0;
     $23 = (invoke_ii(548,4)|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      break;
     }
     ;HEAP32[$23>>2]=0|0;
     __ZN9AtomTDataC2Ev($23);
     __THREW__ = 0;
     invoke_vii(584,($2|0),($23|0));
     $26 = __THREW__; __THREW__ = 0;
     $27 = $26&1;
     if ($27) {
      break;
     }
     $8 = 1;
     __ZN11AtomNilDataD2Ev($nil);
     $37 = HEAP32[$2>>2]|0;
     STACKTOP = sp;return ($37|0);
    } else {
     __THREW__ = 0;
     $32 = (invoke_ii(548,4)|0);
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if ($34) {
      break;
     }
     ;HEAP32[$32>>2]=0|0;
     __ZN11AtomNilDataC2Ev($32);
     __THREW__ = 0;
     invoke_vii(584,($2|0),($32|0));
     $35 = __THREW__; __THREW__ = 0;
     $36 = $35&1;
     if ($36) {
      break;
     }
     $8 = 1;
     __ZN11AtomNilDataD2Ev($nil);
     $37 = HEAP32[$2>>2]|0;
     STACKTOP = sp;return ($37|0);
    }
   }
  }
 } while(0);
 $28 = ___cxa_find_matching_catch_2()|0;
 $29 = tempRet0;
 $6 = $28;
 $7 = $29;
 __ZN11AtomNilDataD2Ev($nil);
 $30 = $6;
 $31 = $7;
 ___resumeException($30|0);
 // unreachable;
 return (0)|0;
}
function __ZN12Func__Minus_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN12Func__Minus_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN12Func__Minus_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK12Func__Minus_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12399;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK12Func__Minus_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $data = 0, $i = 0, $sum = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 256|0;
 $9 = sp + 244|0;
 $17 = sp + 212|0;
 $20 = sp + 200|0;
 $31 = sp + 156|0;
 $34 = sp + 144|0;
 $42 = sp + 112|0;
 $47 = sp + 92|0;
 $50 = sp + 80|0;
 $53 = sp + 68|0;
 $i = sp + 52|0;
 $57 = sp + 48|0;
 $58 = sp + 44|0;
 $59 = sp + 36|0;
 $60 = sp + 32|0;
 $61 = sp + 20|0;
 $64 = sp + 284|0;
 $65 = sp + 8|0;
 $54 = $this;
 $55 = $arguments;
 $56 = $stack;
 $52 = $i;
 $66 = $52;
 HEAP32[$66>>2] = 0;
 $67 = $55;
 $51 = $67;
 $68 = $51;
 $69 = HEAP32[$68>>2]|0;
 $48 = $68;
 $49 = $69;
 $70 = $49;
 $45 = $47;
 $46 = $70;
 $71 = $45;
 $72 = $46;
 HEAP32[$71>>2] = $72;
 $73 = HEAP32[$47>>2]|0;
 HEAP32[$50>>2] = $73;
 $74 = HEAP32[$50>>2]|0;
 HEAP32[$57>>2] = $74;
 ;HEAP32[$i>>2]=HEAP32[$57>>2]|0;
 L1: while(1) {
  $75 = $55;
  $35 = $75;
  $76 = $35;
  $77 = ((($76)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $32 = $76;
  $33 = $78;
  $79 = $33;
  $29 = $31;
  $30 = $79;
  $80 = $29;
  $81 = $30;
  HEAP32[$80>>2] = $81;
  $82 = HEAP32[$31>>2]|0;
  HEAP32[$34>>2] = $82;
  $83 = HEAP32[$34>>2]|0;
  HEAP32[$58>>2] = $83;
  $27 = $i;
  $28 = $58;
  $84 = $27;
  $85 = $28;
  $25 = $84;
  $26 = $85;
  $86 = $25;
  $24 = $86;
  $87 = $24;
  $88 = HEAP32[$87>>2]|0;
  $89 = $26;
  $23 = $89;
  $90 = $23;
  $91 = HEAP32[$90>>2]|0;
  $92 = ($88|0)==($91|0);
  $93 = $92 ^ 1;
  if (!($93)) {
   label = 20;
   break;
  }
  $22 = $i;
  $94 = $22;
  $95 = HEAP32[$94>>2]|0;
  $96 = (__ZNK5Value7getDataEv($95)|0);
  $data = $96;
  $97 = $data;
  $98 = HEAP32[$97>>2]|0;
  $99 = ((($98)) + 12|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (FUNCTION_TABLE_ii[$100 & 1023]($97)|0);
  $102 = ($101|0)==(16);
  do {
   if ($102) {
    $103 = $55;
    $21 = $103;
    $104 = $21;
    $105 = HEAP32[$104>>2]|0;
    $18 = $104;
    $19 = $105;
    $106 = $19;
    $15 = $17;
    $16 = $106;
    $107 = $15;
    $108 = $16;
    HEAP32[$107>>2] = $108;
    $109 = HEAP32[$17>>2]|0;
    HEAP32[$20>>2] = $109;
    $110 = HEAP32[$20>>2]|0;
    HEAP32[$59>>2] = $110;
    $2 = $i;
    $3 = $59;
    $111 = $2;
    $1 = $111;
    $112 = $1;
    $113 = HEAP32[$112>>2]|0;
    $114 = $3;
    $0 = $114;
    $115 = $0;
    $116 = HEAP32[$115>>2]|0;
    $117 = ($113|0)==($116|0);
    $118 = $data;
    $119 = (+__ZNK13AtomFloatData6getNumEv($118));
    if ($117) {
     $sum = $119;
     break;
    } else {
     $120 = $sum;
     $121 = $120 - $119;
     $sum = $121;
     break;
    }
   } else {
    $122 = $data;
    $123 = HEAP32[$122>>2]|0;
    $124 = ((($123)) + 12|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 1023]($122)|0);
    $127 = ($126|0)==(8);
    if (!($127)) {
     break L1;
    }
    $128 = $55;
    $10 = $128;
    $129 = $10;
    $130 = HEAP32[$129>>2]|0;
    $7 = $129;
    $8 = $130;
    $131 = $8;
    $4 = $6;
    $5 = $131;
    $132 = $4;
    $133 = $5;
    HEAP32[$132>>2] = $133;
    $134 = HEAP32[$6>>2]|0;
    HEAP32[$9>>2] = $134;
    $135 = HEAP32[$9>>2]|0;
    HEAP32[$60>>2] = $135;
    $13 = $i;
    $14 = $60;
    $136 = $13;
    $12 = $136;
    $137 = $12;
    $138 = HEAP32[$137>>2]|0;
    $139 = $14;
    $11 = $139;
    $140 = $11;
    $141 = HEAP32[$140>>2]|0;
    $142 = ($138|0)==($141|0);
    $143 = $data;
    $144 = (__ZNK11AtomIntData6getNumEv($143)|0);
    $145 = (+($144|0));
    if ($142) {
     $sum = $145;
     break;
    } else {
     $146 = $sum;
     $147 = $146 - $145;
     $sum = $147;
     break;
    }
   }
  } while(0);
  $43 = $i;
  $44 = 0;
  $167 = $43;
  ;HEAP32[$42>>2]=HEAP32[$167>>2]|0;
  $41 = $167;
  $168 = $41;
  $169 = HEAP32[$168>>2]|0;
  $170 = ((($169)) + 4|0);
  HEAP32[$168>>2] = $170;
  $171 = HEAP32[$42>>2]|0;
  HEAP32[$65>>2] = $171;
 }
 if ((label|0) == 20) {
  $172 = (__Znwj(16)|0);
  $173 = $sum;
  __THREW__ = 0;
  invoke_vid(623,($172|0),(+$173));
  $174 = __THREW__; __THREW__ = 0;
  $175 = $174&1;
  if (!($175)) {
   __ZN5ValueC2EP4Data($53,$172);
   $176 = HEAP32[$53>>2]|0;
   STACKTOP = sp;return ($176|0);
  }
  $177 = ___cxa_find_matching_catch_2()|0;
  $178 = tempRet0;
  $62 = $177;
  $63 = $178;
  __ZdlPv($172);
  $179 = $62;
  $180 = $63;
  ___resumeException($179|0);
  // unreachable;
 }
 $148 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$64>>0] = $$expand_i1_val;
 $39 = $61;
 $40 = 12459;
 $149 = $39;
 $38 = $149;
 $150 = $38;
 $37 = $150;
 $151 = $37;
 $36 = $151;
 $152 = $40;
 $153 = $40;
 __THREW__ = 0;
 $154 = (invoke_ii(550,($153|0))|0);
 $155 = __THREW__; __THREW__ = 0;
 $156 = $155&1;
 if ($156) {
  label = 15;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($149|0),($152|0),($154|0));
  $157 = __THREW__; __THREW__ = 0;
  $158 = $157&1;
  if ($158) {
   label = 15;
  } else {
   __THREW__ = 0;
   invoke_viii(601,($148|0),($61|0),0);
   $159 = __THREW__; __THREW__ = 0;
   $160 = $159&1;
   if (!($160)) {
    $$expand_i1_val2 = 0;
    HEAP8[$64>>0] = $$expand_i1_val2;
    __THREW__ = 0;
    invoke_viii(602,($148|0),(80|0),(603|0));
    $161 = __THREW__; __THREW__ = 0;
   }
   $164 = ___cxa_find_matching_catch_2()|0;
   $165 = tempRet0;
   $62 = $164;
   $63 = $165;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
  }
 }
 if ((label|0) == 15) {
  $162 = ___cxa_find_matching_catch_2()|0;
  $163 = tempRet0;
  $62 = $162;
  $63 = $163;
 }
 $$pre_trunc = HEAP8[$64>>0]|0;
 $166 = $$pre_trunc&1;
 if (!($166)) {
  $179 = $62;
  $180 = $63;
  ___resumeException($179|0);
  // unreachable;
 }
 ___cxa_free_exception(($148|0));
 $179 = $62;
 $180 = $63;
 ___resumeException($179|0);
 // unreachable;
 return (0)|0;
}
function __ZN17Func__GreaterEqu_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN17Func__GreaterEqu_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN17Func__GreaterEqu_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK17Func__GreaterEqu_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12425;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK17Func__GreaterEqu_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0;
 var $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $operand1 = 0.0;
 var $operand2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $26 = sp + 60|0;
 $30 = sp + 36|0;
 $33 = sp + 169|0;
 $34 = sp + 16|0;
 $35 = sp + 168|0;
 $27 = $this;
 $28 = $arguments;
 $29 = $stack;
 $36 = $28;
 $24 = $36;
 $25 = 0;
 $37 = $24;
 $38 = $25;
 $39 = HEAP32[$37>>2]|0;
 $40 = (($39) + ($38<<2)|0);
 $41 = (__ZNK5Value7getDataEv($40)|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ((($42)) + 12|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (FUNCTION_TABLE_ii[$44 & 1023]($41)|0);
 $46 = ($45|0)==(16);
 $47 = $28;
 do {
  if ($46) {
   $22 = $47;
   $23 = 0;
   $48 = $22;
   $49 = $23;
   $50 = HEAP32[$48>>2]|0;
   $51 = (($50) + ($49<<2)|0);
   $52 = (__ZNK5Value7getDataEv($51)|0);
   $53 = (+__ZNK13AtomFloatData6getNumEv($52));
   $operand1 = $53;
  } else {
   $20 = $47;
   $21 = 0;
   $54 = $20;
   $55 = $21;
   $56 = HEAP32[$54>>2]|0;
   $57 = (($56) + ($55<<2)|0);
   $58 = (__ZNK5Value7getDataEv($57)|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($59)) + 12|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 1023]($58)|0);
   $63 = ($62|0)==(8);
   if ($63) {
    $64 = $28;
    $13 = $64;
    $14 = 0;
    $65 = $13;
    $66 = $14;
    $67 = HEAP32[$65>>2]|0;
    $68 = (($67) + ($66<<2)|0);
    $69 = (__ZNK5Value7getDataEv($68)|0);
    $70 = (__ZNK11AtomIntData6getNumEv($69)|0);
    $71 = (+($70|0));
    $operand1 = $71;
    break;
   }
   $72 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$33>>0] = $$expand_i1_val;
   $11 = $30;
   $12 = 13134;
   $73 = $11;
   $10 = $73;
   $74 = $10;
   $9 = $74;
   $75 = $9;
   $8 = $75;
   $76 = $12;
   $77 = $12;
   __THREW__ = 0;
   $78 = (invoke_ii(550,($77|0))|0);
   $79 = __THREW__; __THREW__ = 0;
   $80 = $79&1;
   if ($80) {
    label = 9;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($73|0),($76|0),($78|0));
    $81 = __THREW__; __THREW__ = 0;
    $82 = $81&1;
    if ($82) {
     label = 9;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($72|0),($30|0),0);
     $83 = __THREW__; __THREW__ = 0;
     $84 = $83&1;
     if (!($84)) {
      $$expand_i1_val2 = 0;
      HEAP8[$33>>0] = $$expand_i1_val2;
      __THREW__ = 0;
      invoke_viii(602,($72|0),(80|0),(603|0));
      $85 = __THREW__; __THREW__ = 0;
     }
     $88 = ___cxa_find_matching_catch_2()|0;
     $89 = tempRet0;
     $31 = $88;
     $32 = $89;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    }
   }
   if ((label|0) == 9) {
    $86 = ___cxa_find_matching_catch_2()|0;
    $87 = tempRet0;
    $31 = $86;
    $32 = $87;
   }
   $$pre_trunc = HEAP8[$33>>0]|0;
   $90 = $$pre_trunc&1;
   if (!($90)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($72|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $91 = $28;
 $6 = $91;
 $7 = 1;
 $92 = $6;
 $93 = $7;
 $94 = HEAP32[$92>>2]|0;
 $95 = (($94) + ($93<<2)|0);
 $96 = (__ZNK5Value7getDataEv($95)|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = ((($97)) + 12|0);
 $99 = HEAP32[$98>>2]|0;
 $100 = (FUNCTION_TABLE_ii[$99 & 1023]($96)|0);
 $101 = ($100|0)==(16);
 $102 = $28;
 do {
  if ($101) {
   $4 = $102;
   $5 = 1;
   $103 = $4;
   $104 = $5;
   $105 = HEAP32[$103>>2]|0;
   $106 = (($105) + ($104<<2)|0);
   $107 = (__ZNK5Value7getDataEv($106)|0);
   $108 = (+__ZNK13AtomFloatData6getNumEv($107));
   $operand2 = $108;
  } else {
   $2 = $102;
   $3 = 1;
   $109 = $2;
   $110 = $3;
   $111 = HEAP32[$109>>2]|0;
   $112 = (($111) + ($110<<2)|0);
   $113 = (__ZNK5Value7getDataEv($112)|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($114)) + 12|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = ($117|0)==(8);
   if ($118) {
    $119 = $28;
    $0 = $119;
    $1 = 1;
    $120 = $0;
    $121 = $1;
    $122 = HEAP32[$120>>2]|0;
    $123 = (($122) + ($121<<2)|0);
    $124 = (__ZNK5Value7getDataEv($123)|0);
    $125 = (__ZNK11AtomIntData6getNumEv($124)|0);
    $126 = (+($125|0));
    $operand2 = $126;
    break;
   }
   $127 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val5 = 1;
   HEAP8[$35>>0] = $$expand_i1_val5;
   $18 = $34;
   $19 = 13170;
   $128 = $18;
   $17 = $128;
   $129 = $17;
   $16 = $129;
   $130 = $16;
   $15 = $130;
   $131 = $19;
   $132 = $19;
   __THREW__ = 0;
   $133 = (invoke_ii(550,($132|0))|0);
   $134 = __THREW__; __THREW__ = 0;
   $135 = $134&1;
   if ($135) {
    label = 21;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($128|0),($131|0),($133|0));
    $136 = __THREW__; __THREW__ = 0;
    $137 = $136&1;
    if ($137) {
     label = 21;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($127|0),($34|0),0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if (!($139)) {
      $$expand_i1_val7 = 0;
      HEAP8[$35>>0] = $$expand_i1_val7;
      __THREW__ = 0;
      invoke_viii(602,($127|0),(80|0),(603|0));
      $140 = __THREW__; __THREW__ = 0;
     }
     $143 = ___cxa_find_matching_catch_2()|0;
     $144 = tempRet0;
     $31 = $143;
     $32 = $144;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
    }
   }
   if ((label|0) == 21) {
    $141 = ___cxa_find_matching_catch_2()|0;
    $142 = tempRet0;
    $31 = $141;
    $32 = $142;
   }
   $$pre_trunc9 = HEAP8[$35>>0]|0;
   $145 = $$pre_trunc9&1;
   if (!($145)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($127|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $146 = $operand1;
 $147 = $operand2;
 $148 = $146 >= $147;
 $149 = (__Znwj(4)|0);
 ;HEAP32[$149>>2]=0|0;
 if ($148) {
  __ZN9AtomTDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 } else {
  __ZN11AtomNilDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 }
 return (0)|0;
}
function __ZN10Func__Div_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func__Div_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func__Div_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func__Div_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12455;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func__Div_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $data = 0, $i = 0, $sum = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $6 = sp + 256|0;
 $9 = sp + 244|0;
 $17 = sp + 212|0;
 $20 = sp + 200|0;
 $31 = sp + 156|0;
 $34 = sp + 144|0;
 $42 = sp + 112|0;
 $47 = sp + 92|0;
 $50 = sp + 80|0;
 $53 = sp + 68|0;
 $i = sp + 52|0;
 $57 = sp + 48|0;
 $58 = sp + 44|0;
 $59 = sp + 36|0;
 $60 = sp + 32|0;
 $61 = sp + 20|0;
 $64 = sp + 284|0;
 $65 = sp + 8|0;
 $54 = $this;
 $55 = $arguments;
 $56 = $stack;
 $52 = $i;
 $66 = $52;
 HEAP32[$66>>2] = 0;
 $67 = $55;
 $51 = $67;
 $68 = $51;
 $69 = HEAP32[$68>>2]|0;
 $48 = $68;
 $49 = $69;
 $70 = $49;
 $45 = $47;
 $46 = $70;
 $71 = $45;
 $72 = $46;
 HEAP32[$71>>2] = $72;
 $73 = HEAP32[$47>>2]|0;
 HEAP32[$50>>2] = $73;
 $74 = HEAP32[$50>>2]|0;
 HEAP32[$57>>2] = $74;
 ;HEAP32[$i>>2]=HEAP32[$57>>2]|0;
 L1: while(1) {
  $75 = $55;
  $35 = $75;
  $76 = $35;
  $77 = ((($76)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $32 = $76;
  $33 = $78;
  $79 = $33;
  $29 = $31;
  $30 = $79;
  $80 = $29;
  $81 = $30;
  HEAP32[$80>>2] = $81;
  $82 = HEAP32[$31>>2]|0;
  HEAP32[$34>>2] = $82;
  $83 = HEAP32[$34>>2]|0;
  HEAP32[$58>>2] = $83;
  $27 = $i;
  $28 = $58;
  $84 = $27;
  $85 = $28;
  $25 = $84;
  $26 = $85;
  $86 = $25;
  $24 = $86;
  $87 = $24;
  $88 = HEAP32[$87>>2]|0;
  $89 = $26;
  $23 = $89;
  $90 = $23;
  $91 = HEAP32[$90>>2]|0;
  $92 = ($88|0)==($91|0);
  $93 = $92 ^ 1;
  if (!($93)) {
   label = 20;
   break;
  }
  $22 = $i;
  $94 = $22;
  $95 = HEAP32[$94>>2]|0;
  $96 = (__ZNK5Value7getDataEv($95)|0);
  $data = $96;
  $97 = $data;
  $98 = HEAP32[$97>>2]|0;
  $99 = ((($98)) + 12|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (FUNCTION_TABLE_ii[$100 & 1023]($97)|0);
  $102 = ($101|0)==(16);
  do {
   if ($102) {
    $103 = $55;
    $21 = $103;
    $104 = $21;
    $105 = HEAP32[$104>>2]|0;
    $18 = $104;
    $19 = $105;
    $106 = $19;
    $15 = $17;
    $16 = $106;
    $107 = $15;
    $108 = $16;
    HEAP32[$107>>2] = $108;
    $109 = HEAP32[$17>>2]|0;
    HEAP32[$20>>2] = $109;
    $110 = HEAP32[$20>>2]|0;
    HEAP32[$59>>2] = $110;
    $2 = $i;
    $3 = $59;
    $111 = $2;
    $1 = $111;
    $112 = $1;
    $113 = HEAP32[$112>>2]|0;
    $114 = $3;
    $0 = $114;
    $115 = $0;
    $116 = HEAP32[$115>>2]|0;
    $117 = ($113|0)==($116|0);
    $118 = $data;
    $119 = (+__ZNK13AtomFloatData6getNumEv($118));
    if ($117) {
     $sum = $119;
     break;
    } else {
     $120 = $sum;
     $121 = $120 / $119;
     $sum = $121;
     break;
    }
   } else {
    $122 = $data;
    $123 = HEAP32[$122>>2]|0;
    $124 = ((($123)) + 12|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_ii[$125 & 1023]($122)|0);
    $127 = ($126|0)==(8);
    if (!($127)) {
     break L1;
    }
    $128 = $55;
    $10 = $128;
    $129 = $10;
    $130 = HEAP32[$129>>2]|0;
    $7 = $129;
    $8 = $130;
    $131 = $8;
    $4 = $6;
    $5 = $131;
    $132 = $4;
    $133 = $5;
    HEAP32[$132>>2] = $133;
    $134 = HEAP32[$6>>2]|0;
    HEAP32[$9>>2] = $134;
    $135 = HEAP32[$9>>2]|0;
    HEAP32[$60>>2] = $135;
    $13 = $i;
    $14 = $60;
    $136 = $13;
    $12 = $136;
    $137 = $12;
    $138 = HEAP32[$137>>2]|0;
    $139 = $14;
    $11 = $139;
    $140 = $11;
    $141 = HEAP32[$140>>2]|0;
    $142 = ($138|0)==($141|0);
    $143 = $data;
    $144 = (__ZNK11AtomIntData6getNumEv($143)|0);
    $145 = (+($144|0));
    if ($142) {
     $sum = $145;
     break;
    } else {
     $146 = $sum;
     $147 = $146 / $145;
     $sum = $147;
     break;
    }
   }
  } while(0);
  $43 = $i;
  $44 = 0;
  $167 = $43;
  ;HEAP32[$42>>2]=HEAP32[$167>>2]|0;
  $41 = $167;
  $168 = $41;
  $169 = HEAP32[$168>>2]|0;
  $170 = ((($169)) + 4|0);
  HEAP32[$168>>2] = $170;
  $171 = HEAP32[$42>>2]|0;
  HEAP32[$65>>2] = $171;
 }
 if ((label|0) == 20) {
  $172 = (__Znwj(16)|0);
  $173 = $sum;
  __THREW__ = 0;
  invoke_vid(623,($172|0),(+$173));
  $174 = __THREW__; __THREW__ = 0;
  $175 = $174&1;
  if (!($175)) {
   __ZN5ValueC2EP4Data($53,$172);
   $176 = HEAP32[$53>>2]|0;
   STACKTOP = sp;return ($176|0);
  }
  $177 = ___cxa_find_matching_catch_2()|0;
  $178 = tempRet0;
  $62 = $177;
  $63 = $178;
  __ZdlPv($172);
  $179 = $62;
  $180 = $63;
  ___resumeException($179|0);
  // unreachable;
 }
 $148 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$64>>0] = $$expand_i1_val;
 $39 = $61;
 $40 = 12459;
 $149 = $39;
 $38 = $149;
 $150 = $38;
 $37 = $150;
 $151 = $37;
 $36 = $151;
 $152 = $40;
 $153 = $40;
 __THREW__ = 0;
 $154 = (invoke_ii(550,($153|0))|0);
 $155 = __THREW__; __THREW__ = 0;
 $156 = $155&1;
 if ($156) {
  label = 15;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($149|0),($152|0),($154|0));
  $157 = __THREW__; __THREW__ = 0;
  $158 = $157&1;
  if ($158) {
   label = 15;
  } else {
   __THREW__ = 0;
   invoke_viii(601,($148|0),($61|0),0);
   $159 = __THREW__; __THREW__ = 0;
   $160 = $159&1;
   if (!($160)) {
    $$expand_i1_val2 = 0;
    HEAP8[$64>>0] = $$expand_i1_val2;
    __THREW__ = 0;
    invoke_viii(602,($148|0),(80|0),(603|0));
    $161 = __THREW__; __THREW__ = 0;
   }
   $164 = ___cxa_find_matching_catch_2()|0;
   $165 = tempRet0;
   $62 = $164;
   $63 = $165;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
  }
 }
 if ((label|0) == 15) {
  $162 = ___cxa_find_matching_catch_2()|0;
  $163 = tempRet0;
  $62 = $162;
  $63 = $163;
 }
 $$pre_trunc = HEAP8[$64>>0]|0;
 $166 = $$pre_trunc&1;
 if (!($166)) {
  $179 = $62;
  $180 = $63;
  ___resumeException($179|0);
  // unreachable;
 }
 ___cxa_free_exception(($148|0));
 $179 = $62;
 $180 = $63;
 ___resumeException($179|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func__Div_C2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionC2ENS_12FunctionTypeEii($1,0,-1,2);
 $2 = 2984;
 HEAP32[$1>>2] = $2;
 STACKTOP = sp;return;
}
function __ZN10Func_parseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func_parseD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func_parseD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func_parse7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12533;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func_parse4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__a$i$i$i4 = 0;
 var $__i$i$i = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, $__i$i$i$i5 = 0, $lispStr = 0, $str = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $12 = sp + 8|0;
 $15 = sp + 460|0;
 $42 = sp + 459|0;
 $43 = sp + 458|0;
 $46 = sp;
 $49 = sp + 457|0;
 $79 = sp + 128|0;
 $str = sp + 104|0;
 $85 = sp + 84|0;
 $86 = sp + 72|0;
 $87 = sp + 60|0;
 $88 = sp + 456|0;
 $89 = sp + 48|0;
 $lispStr = sp + 16|0;
 $80 = $this;
 $81 = $arguments;
 $82 = $stack;
 $90 = $80;
 $78 = $str;
 $91 = $78;
 $77 = $91;
 $92 = $77;
 $76 = $92;
 $93 = $76;
 $75 = $93;
 $74 = $91;
 $94 = $74;
 $73 = $94;
 $95 = $73;
 $72 = $95;
 $96 = $72;
 $__a$i$i = $96;
 $__i$i$i = 0;
 while(1) {
  $97 = $__i$i$i;
  $98 = ($97>>>0)<(3);
  if (!($98)) {
   break;
  }
  $99 = $__i$i$i;
  $100 = $__a$i$i;
  $101 = (($100) + ($99<<2)|0);
  HEAP32[$101>>2] = 0;
  $102 = $__i$i$i;
  $103 = (($102) + 1)|0;
  $__i$i$i = $103;
 }
 $104 = $81;
 $70 = $104;
 $71 = 0;
 $105 = $70;
 $106 = $71;
 $107 = HEAP32[$105>>2]|0;
 $108 = (($107) + ($106<<2)|0);
 __THREW__ = 0;
 $109 = (invoke_ii(588,($108|0))|0);
 $110 = __THREW__; __THREW__ = 0;
 $111 = $110&1;
 do {
  if (!($111)) {
   $112 = HEAP32[$109>>2]|0;
   $113 = ((($112)) + 12|0);
   $114 = HEAP32[$113>>2]|0;
   __THREW__ = 0;
   $115 = (invoke_ii($114|0,($109|0))|0);
   $116 = __THREW__; __THREW__ = 0;
   $117 = $116&1;
   if (!($117)) {
    $118 = $115 & 4;
    $119 = ($118|0)!=(0);
    if ($119) {
     $180 = $81;
     $50 = $180;
     $51 = 0;
     $181 = $50;
     $182 = $51;
     $183 = HEAP32[$181>>2]|0;
     $184 = (($183) + ($182<<2)|0);
     __THREW__ = 0;
     $185 = (invoke_ii(588,($184|0))|0);
     $186 = __THREW__; __THREW__ = 0;
     $187 = $186&1;
     if ($187) {
      break;
     }
     __THREW__ = 0;
     invoke_vii(634,($89|0),($185|0));
     $188 = __THREW__; __THREW__ = 0;
     $189 = $188&1;
     if ($189) {
      break;
     }
     $47 = $str;
     $48 = $89;
     $190 = $47;
     $191 = $48;
     ;HEAP8[$46>>0]=HEAP8[$49>>0]|0;
     $44 = $190;
     $45 = $191;
     $192 = $44;
     $41 = $192;
     $193 = $41;
     $40 = $193;
     $39 = $193;
     $194 = $39;
     $38 = $194;
     $195 = $38;
     $37 = $195;
     $196 = $37;
     $197 = HEAP8[$196>>0]|0;
     $198 = $197&255;
     $199 = $198 & 1;
     $200 = ($199|0)!=(0);
     if ($200) {
      $32 = $193;
      $201 = $32;
      $31 = $201;
      $202 = $31;
      $30 = $202;
      $203 = $30;
      $204 = ((($203)) + 8|0);
      $205 = HEAP32[$204>>2]|0;
      HEAP8[$42>>0] = 0;
      __ZNSt3__111char_traitsIcE6assignERcRKc($205,$42);
      $23 = $193;
      $24 = 0;
      $206 = $23;
      $207 = $24;
      $22 = $206;
      $208 = $22;
      $21 = $208;
      $209 = $21;
      $210 = ((($209)) + 4|0);
      HEAP32[$210>>2] = $207;
     } else {
      $29 = $193;
      $211 = $29;
      $28 = $211;
      $212 = $28;
      $27 = $212;
      $213 = $27;
      $214 = ((($213)) + 1|0);
      $26 = $214;
      $215 = $26;
      $25 = $215;
      $216 = $25;
      HEAP8[$43>>0] = 0;
      __ZNSt3__111char_traitsIcE6assignERcRKc($216,$43);
      $35 = $193;
      $36 = 0;
      $217 = $35;
      $218 = $36;
      $219 = $218 << 1;
      $220 = $219&255;
      $34 = $217;
      $221 = $34;
      $33 = $221;
      $222 = $33;
      HEAP8[$222>>0] = $220;
     }
     $20 = $192;
     $223 = $20;
     __THREW__ = 0;
     invoke_vii(635,($223|0),0);
     $224 = __THREW__; __THREW__ = 0;
     $225 = $224&1;
     if ($225) {
      $226 = ___cxa_find_matching_catch_3(0|0)|0;
      $227 = tempRet0;
      ___clang_call_terminate($226);
      // unreachable;
     }
     $19 = $192;
     $228 = $19;
     $18 = $228;
     $229 = $18;
     $230 = $45;
     $17 = $230;
     $231 = $17;
     $16 = $231;
     $232 = $16;
     ;HEAP32[$229>>2]=HEAP32[$232>>2]|0;HEAP32[$229+4>>2]=HEAP32[$232+4>>2]|0;HEAP32[$229+8>>2]=HEAP32[$232+8>>2]|0;
     $233 = $45;
     $13 = $192;
     $14 = $233;
     $234 = $13;
     $235 = $14;
     ;HEAP8[$12>>0]=HEAP8[$15>>0]|0;
     $10 = $234;
     $11 = $235;
     $236 = $10;
     $9 = $236;
     $237 = $9;
     $8 = $237;
     $238 = $8;
     $7 = $238;
     $239 = $11;
     $5 = $239;
     $240 = $5;
     $4 = $240;
     $241 = $4;
     $3 = $241;
     $242 = $3;
     $6 = $242;
     $243 = $45;
     $2 = $243;
     $244 = $2;
     $1 = $244;
     $245 = $1;
     $0 = $245;
     $246 = $0;
     $__a$i$i$i4 = $246;
     $__i$i$i$i5 = 0;
     while(1) {
      $247 = $__i$i$i$i5;
      $248 = ($247>>>0)<(3);
      if (!($248)) {
       break;
      }
      $249 = $__i$i$i$i5;
      $250 = $__a$i$i$i4;
      $251 = (($250) + ($249<<2)|0);
      HEAP32[$251>>2] = 0;
      $252 = $__i$i$i$i5;
      $253 = (($252) + 1)|0;
      $__i$i$i$i5 = $253;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
     __THREW__ = 0;
     invoke_vii(636,($lispStr|0),($str|0));
     $254 = __THREW__; __THREW__ = 0;
     $255 = $254&1;
     if ($255) {
      break;
     }
     __THREW__ = 0;
     $256 = (invoke_ii(585,($lispStr|0))|0);
     $257 = __THREW__; __THREW__ = 0;
     $258 = $257&1;
     if (!($258)) {
      $259 = HEAP32[$256>>2]|0;
      $260 = HEAP32[$259>>2]|0;
      $261 = ((($260)) + 16|0);
      $262 = HEAP32[$261>>2]|0;
      __THREW__ = 0;
      $263 = (invoke_ii($262|0,($259|0))|0);
      $264 = __THREW__; __THREW__ = 0;
      $265 = $264&1;
      if (!($265)) {
       __THREW__ = 0;
       invoke_vii(584,($79|0),($263|0));
       $266 = __THREW__; __THREW__ = 0;
       $267 = $266&1;
       if (!($267)) {
        __ZN10LispStringD2Ev($lispStr);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
        $268 = HEAP32[$79>>2]|0;
        STACKTOP = sp;return ($268|0);
       }
      }
     }
     $269 = ___cxa_find_matching_catch_2()|0;
     $270 = tempRet0;
     $83 = $269;
     $84 = $270;
     __ZN10LispStringD2Ev($lispStr);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
     $271 = $83;
     $272 = $84;
     ___resumeException($271|0);
     // unreachable;
    }
    $120 = (___cxa_allocate_exception(24)|0);
    $$expand_i1_val = 1;
    HEAP8[$88>>0] = $$expand_i1_val;
    $121 = HEAP32[$90>>2]|0;
    $122 = ((($121)) + 8|0);
    $123 = HEAP32[$122>>2]|0;
    __THREW__ = 0;
    invoke_vii($123|0,($87|0),($90|0));
    $124 = __THREW__; __THREW__ = 0;
    $125 = $124&1;
    if ($125) {
     $171 = ___cxa_find_matching_catch_2()|0;
     $172 = tempRet0;
     $83 = $171;
     $84 = $172;
    } else {
     $68 = 13003;
     $69 = $87;
     $126 = $69;
     $127 = $68;
     __THREW__ = 0;
     $128 = (invoke_iiii(600,($126|0),0,($127|0))|0);
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      $173 = ___cxa_find_matching_catch_2()|0;
      $174 = tempRet0;
      $83 = $173;
      $84 = $174;
     } else {
      $67 = $128;
      $131 = $67;
      $65 = $86;
      $66 = $131;
      $132 = $65;
      $133 = $66;
      $64 = $133;
      $134 = $64;
      ;HEAP32[$132>>2]=HEAP32[$134>>2]|0;HEAP32[$132+4>>2]=HEAP32[$134+4>>2]|0;HEAP32[$132+8>>2]=HEAP32[$134+8>>2]|0;
      $135 = $66;
      $63 = $135;
      $136 = $63;
      $62 = $136;
      $137 = $62;
      $61 = $137;
      $138 = $61;
      $__a$i$i$i = $138;
      $__i$i$i$i = 0;
      while(1) {
       $139 = $__i$i$i$i;
       $140 = ($139>>>0)<(3);
       if (!($140)) {
        break;
       }
       $141 = $__i$i$i$i;
       $142 = $__a$i$i$i;
       $143 = (($142) + ($141<<2)|0);
       HEAP32[$143>>2] = 0;
       $144 = $__i$i$i$i;
       $145 = (($144) + 1)|0;
       $__i$i$i$i = $145;
      }
      $59 = $86;
      $60 = 12539;
      $146 = $59;
      $147 = $60;
      __THREW__ = 0;
      $148 = (invoke_iii(542,($146|0),($147|0))|0);
      $149 = __THREW__; __THREW__ = 0;
      $150 = $149&1;
      if ($150) {
       $175 = ___cxa_find_matching_catch_2()|0;
       $176 = tempRet0;
       $83 = $175;
       $84 = $176;
      } else {
       $58 = $148;
       $151 = $58;
       $56 = $85;
       $57 = $151;
       $152 = $56;
       $153 = $57;
       $55 = $153;
       $154 = $55;
       ;HEAP32[$152>>2]=HEAP32[$154>>2]|0;HEAP32[$152+4>>2]=HEAP32[$154+4>>2]|0;HEAP32[$152+8>>2]=HEAP32[$154+8>>2]|0;
       $155 = $57;
       $54 = $155;
       $156 = $54;
       $53 = $156;
       $157 = $53;
       $52 = $157;
       $158 = $52;
       $__a$i$i$i1 = $158;
       $__i$i$i$i2 = 0;
       while(1) {
        $159 = $__i$i$i$i2;
        $160 = ($159>>>0)<(3);
        if (!($160)) {
         break;
        }
        $161 = $__i$i$i$i2;
        $162 = $__a$i$i$i1;
        $163 = (($162) + ($161<<2)|0);
        HEAP32[$163>>2] = 0;
        $164 = $__i$i$i$i2;
        $165 = (($164) + 1)|0;
        $__i$i$i$i2 = $165;
       }
       __THREW__ = 0;
       invoke_viii(601,($120|0),($85|0),0);
       $166 = __THREW__; __THREW__ = 0;
       $167 = $166&1;
       if (!($167)) {
        $$expand_i1_val2 = 0;
        HEAP8[$88>>0] = $$expand_i1_val2;
        __THREW__ = 0;
        invoke_viii(602,($120|0),(80|0),(603|0));
        $168 = __THREW__; __THREW__ = 0;
       }
       $177 = ___cxa_find_matching_catch_2()|0;
       $178 = tempRet0;
       $83 = $177;
       $84 = $178;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($85);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
    }
    $$pre_trunc = HEAP8[$88>>0]|0;
    $179 = $$pre_trunc&1;
    if (!($179)) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
     $271 = $83;
     $272 = $84;
     ___resumeException($271|0);
     // unreachable;
    }
    ___cxa_free_exception(($120|0));
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
    $271 = $83;
    $272 = $84;
    ___resumeException($271|0);
    // unreachable;
   }
  }
 } while(0);
 $169 = ___cxa_find_matching_catch_2()|0;
 $170 = tempRet0;
 $83 = $169;
 $84 = $170;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($str);
 $271 = $83;
 $272 = $84;
 ___resumeException($271|0);
 // unreachable;
 return (0)|0;
}
function __ZN9Func_progD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9Func_progD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9Func_progD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9Func_prog7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13389;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9Func_prog4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $i = 0;
 var $localStack = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 160|0;
 $13 = sp + 112|0;
 $16 = sp + 100|0;
 $20 = sp + 84|0;
 $23 = sp + 72|0;
 $26 = sp + 60|0;
 $localStack = sp + 32|0;
 $i = sp + 24|0;
 $30 = sp + 168|0;
 $33 = sp + 12|0;
 $34 = sp + 8|0;
 $35 = sp + 4|0;
 $36 = sp;
 $27 = $this;
 $28 = $arguments;
 $29 = $stack;
 $37 = $27;
 $38 = $29;
 __ZN6MemoryC2EPS_($localStack,$38);
 $25 = $i;
 $39 = $25;
 HEAP32[$39>>2] = 0;
 $$expand_i1_val = 0;
 HEAP8[$30>>0] = $$expand_i1_val;
 __THREW__ = 0;
 invoke_vii(584,($26|0),(0|0));
 $40 = __THREW__; __THREW__ = 0;
 $41 = $40&1;
 if ($41) {
  $86 = ___cxa_find_matching_catch_2()|0;
  $87 = tempRet0;
  $31 = $86;
  $32 = $87;
  __ZN6MemoryD2Ev($localStack);
  $94 = $31;
  $95 = $32;
  ___resumeException($94|0);
  // unreachable;
 }
 $42 = $28;
 $24 = $42;
 $43 = $24;
 $44 = HEAP32[$43>>2]|0;
 $21 = $43;
 $22 = $44;
 $45 = $22;
 $18 = $20;
 $19 = $45;
 $46 = $18;
 $47 = $19;
 HEAP32[$46>>2] = $47;
 $48 = HEAP32[$20>>2]|0;
 HEAP32[$23>>2] = $48;
 $49 = HEAP32[$23>>2]|0;
 HEAP32[$33>>2] = $49;
 ;HEAP32[$i>>2]=HEAP32[$33>>2]|0;
 while(1) {
  $50 = $28;
  $17 = $50;
  $51 = $17;
  $52 = ((($51)) + 4|0);
  $53 = HEAP32[$52>>2]|0;
  $14 = $51;
  $15 = $53;
  $54 = $15;
  $11 = $13;
  $12 = $54;
  $55 = $11;
  $56 = $12;
  HEAP32[$55>>2] = $56;
  $57 = HEAP32[$13>>2]|0;
  HEAP32[$16>>2] = $57;
  $58 = HEAP32[$16>>2]|0;
  HEAP32[$34>>2] = $58;
  $9 = $i;
  $10 = $34;
  $59 = $9;
  $60 = $10;
  $7 = $59;
  $8 = $60;
  $61 = $7;
  $6 = $61;
  $62 = $6;
  $63 = HEAP32[$62>>2]|0;
  $64 = $8;
  $5 = $64;
  $65 = $5;
  $66 = HEAP32[$65>>2]|0;
  $67 = ($63|0)==($66|0);
  $68 = $67 ^ 1;
  if (!($68)) {
   label = 11;
   break;
  }
  $69 = ((($37)) + 16|0);
  $70 = HEAP32[$69>>2]|0;
  $4 = $i;
  $71 = $4;
  $72 = HEAP32[$71>>2]|0;
  __THREW__ = 0;
  $73 = (invoke_ii(588,($72|0))|0);
  $74 = __THREW__; __THREW__ = 0;
  $75 = $74&1;
  if ($75) {
   label = 9;
   break;
  }
  __THREW__ = 0;
  $76 = (invoke_iiii(586,($70|0),($73|0),($localStack|0))|0);
  $77 = __THREW__; __THREW__ = 0;
  $78 = $77&1;
  if ($78) {
   label = 9;
   break;
  }
  HEAP32[$35>>2] = $76;
  __THREW__ = 0;
  (invoke_iii(587,($26|0),($35|0))|0);
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if ($80) {
   label = 10;
   break;
  }
  __ZN5ValueD2Ev($35);
  $2 = $i;
  $3 = 0;
  $81 = $2;
  ;HEAP32[$1>>2]=HEAP32[$81>>2]|0;
  $0 = $81;
  $82 = $0;
  $83 = HEAP32[$82>>2]|0;
  $84 = ((($83)) + 4|0);
  HEAP32[$82>>2] = $84;
  $85 = HEAP32[$1>>2]|0;
  HEAP32[$36>>2] = $85;
 }
 if ((label|0) == 9) {
  $88 = ___cxa_find_matching_catch_2()|0;
  $89 = tempRet0;
  $31 = $88;
  $32 = $89;
 }
 else if ((label|0) == 10) {
  $90 = ___cxa_find_matching_catch_2()|0;
  $91 = tempRet0;
  $31 = $90;
  $32 = $91;
  __ZN5ValueD2Ev($35);
 }
 else if ((label|0) == 11) {
  $$expand_i1_val2 = 1;
  HEAP8[$30>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$30>>0]|0;
  $92 = $$pre_trunc&1;
  if ($92) {
   __ZN6MemoryD2Ev($localStack);
   $93 = HEAP32[$26>>2]|0;
   STACKTOP = sp;return ($93|0);
  }
  __ZN5ValueD2Ev($26);
  __ZN6MemoryD2Ev($localStack);
  $93 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($93|0);
 }
 __ZN5ValueD2Ev($26);
 __ZN6MemoryD2Ev($localStack);
 $94 = $31;
 $95 = $32;
 ___resumeException($94|0);
 // unreachable;
 return (0)|0;
}
function __ZN9Func_execD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9Func_execD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9Func_execD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9Func_exec7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12599;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9Func_exec4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, $i = 0, $listData = 0, $localStack = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = sp + 428|0;
 $19 = sp + 380|0;
 $22 = sp + 368|0;
 $35 = sp + 316|0;
 $38 = sp + 304|0;
 $68 = sp + 168|0;
 $72 = sp + 144|0;
 $73 = sp + 132|0;
 $74 = sp + 120|0;
 $77 = sp + 461|0;
 $localStack = sp + 96|0;
 $i = sp + 92|0;
 $78 = sp + 84|0;
 $79 = sp + 80|0;
 $80 = sp + 76|0;
 $81 = sp + 64|0;
 $82 = sp + 460|0;
 $83 = sp + 48|0;
 $84 = sp + 36|0;
 $85 = sp + 32|0;
 $86 = sp + 16|0;
 $87 = sp;
 $69 = $this;
 $70 = $arguments;
 $71 = $stack;
 $88 = $69;
 $89 = $70;
 $67 = $89;
 $90 = $67;
 $91 = ((($90)) + 4|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = HEAP32[$90>>2]|0;
 $94 = $92;
 $95 = $93;
 $96 = (($94) - ($95))|0;
 $97 = (($96|0) / 4)&-1;
 $98 = ($97|0)==(1);
 if ($98) {
  $99 = ((($88)) + 16|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = $70;
  $65 = $101;
  $66 = 0;
  $102 = $65;
  $103 = $66;
  $104 = HEAP32[$102>>2]|0;
  $105 = (($104) + ($103<<2)|0);
  $106 = (__ZNK5Value7getDataEv($105)|0);
  $107 = $71;
  $108 = (__ZN12LispExecuter15functionHandlerEPK4DataP6Memory($100,$106,$107)|0);
  HEAP32[$68>>2] = $108;
  $318 = HEAP32[$68>>2]|0;
  STACKTOP = sp;return ($318|0);
 }
 $109 = $70;
 $63 = $109;
 $64 = 1;
 $110 = $63;
 $111 = $64;
 $112 = HEAP32[$110>>2]|0;
 $113 = (($112) + ($111<<2)|0);
 $114 = (__ZNK5Value7getDataEv($113)|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = ((($115)) + 12|0);
 $117 = HEAP32[$116>>2]|0;
 $118 = (FUNCTION_TABLE_ii[$117 & 1023]($114)|0);
 $119 = $118 & 1;
 $120 = ($119|0)!=(0);
 if (!($120)) {
  $121 = (___cxa_allocate_exception(24)|0);
  $$expand_i1_val = 1;
  HEAP8[$77>>0] = $$expand_i1_val;
  $122 = HEAP32[$88>>2]|0;
  $123 = ((($122)) + 8|0);
  $124 = HEAP32[$123>>2]|0;
  __THREW__ = 0;
  invoke_vii($124|0,($74|0),($88|0));
  $125 = __THREW__; __THREW__ = 0;
  $126 = $125&1;
  if ($126) {
   $170 = ___cxa_find_matching_catch_2()|0;
   $171 = tempRet0;
   $75 = $170;
   $76 = $171;
  } else {
   $61 = 13003;
   $62 = $74;
   $127 = $62;
   $128 = $61;
   __THREW__ = 0;
   $129 = (invoke_iiii(600,($127|0),0,($128|0))|0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    $172 = ___cxa_find_matching_catch_2()|0;
    $173 = tempRet0;
    $75 = $172;
    $76 = $173;
   } else {
    $60 = $129;
    $132 = $60;
    $58 = $73;
    $59 = $132;
    $133 = $58;
    $134 = $59;
    $57 = $134;
    $135 = $57;
    ;HEAP32[$133>>2]=HEAP32[$135>>2]|0;HEAP32[$133+4>>2]=HEAP32[$135+4>>2]|0;HEAP32[$133+8>>2]=HEAP32[$135+8>>2]|0;
    $136 = $59;
    $56 = $136;
    $137 = $56;
    $55 = $137;
    $138 = $55;
    $54 = $138;
    $139 = $54;
    $__a$i$i$i = $139;
    $__i$i$i$i = 0;
    while(1) {
     $140 = $__i$i$i$i;
     $141 = ($140>>>0)<(3);
     if (!($141)) {
      break;
     }
     $142 = $__i$i$i$i;
     $143 = $__a$i$i$i;
     $144 = (($143) + ($142<<2)|0);
     HEAP32[$144>>2] = 0;
     $145 = $__i$i$i$i;
     $146 = (($145) + 1)|0;
     $__i$i$i$i = $146;
    }
    $52 = $73;
    $53 = 12604;
    $147 = $52;
    $148 = $53;
    __THREW__ = 0;
    $149 = (invoke_iii(542,($147|0),($148|0))|0);
    $150 = __THREW__; __THREW__ = 0;
    $151 = $150&1;
    if ($151) {
     $174 = ___cxa_find_matching_catch_2()|0;
     $175 = tempRet0;
     $75 = $174;
     $76 = $175;
    } else {
     $51 = $149;
     $152 = $51;
     $49 = $72;
     $50 = $152;
     $153 = $49;
     $154 = $50;
     $48 = $154;
     $155 = $48;
     ;HEAP32[$153>>2]=HEAP32[$155>>2]|0;HEAP32[$153+4>>2]=HEAP32[$155+4>>2]|0;HEAP32[$153+8>>2]=HEAP32[$155+8>>2]|0;
     $156 = $50;
     $47 = $156;
     $157 = $47;
     $46 = $157;
     $158 = $46;
     $45 = $158;
     $159 = $45;
     $__a$i$i$i1 = $159;
     $__i$i$i$i2 = 0;
     while(1) {
      $160 = $__i$i$i$i2;
      $161 = ($160>>>0)<(3);
      if (!($161)) {
       break;
      }
      $162 = $__i$i$i$i2;
      $163 = $__a$i$i$i1;
      $164 = (($163) + ($162<<2)|0);
      HEAP32[$164>>2] = 0;
      $165 = $__i$i$i$i2;
      $166 = (($165) + 1)|0;
      $__i$i$i$i2 = $166;
     }
     __THREW__ = 0;
     invoke_viii(601,($121|0),($72|0),0);
     $167 = __THREW__; __THREW__ = 0;
     $168 = $167&1;
     if (!($168)) {
      $$expand_i1_val2 = 0;
      HEAP8[$77>>0] = $$expand_i1_val2;
      __THREW__ = 0;
      invoke_viii(602,($121|0),(80|0),(603|0));
      $169 = __THREW__; __THREW__ = 0;
     }
     $176 = ___cxa_find_matching_catch_2()|0;
     $177 = tempRet0;
     $75 = $176;
     $76 = $177;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
  }
  $$pre_trunc = HEAP8[$77>>0]|0;
  $178 = $$pre_trunc&1;
  if (!($178)) {
   $319 = $75;
   $320 = $76;
   ___resumeException($319|0);
   // unreachable;
  }
  ___cxa_free_exception(($121|0));
  $319 = $75;
  $320 = $76;
  ___resumeException($319|0);
  // unreachable;
 }
 __ZN6MemoryC2EPS_($localStack,0);
 $44 = $i;
 $179 = $44;
 HEAP32[$179>>2] = 0;
 $180 = $70;
 $42 = $180;
 $43 = 1;
 $181 = $42;
 $182 = $43;
 $183 = HEAP32[$181>>2]|0;
 $184 = (($183) + ($182<<2)|0);
 __THREW__ = 0;
 $185 = (invoke_ii(588,($184|0))|0);
 $186 = __THREW__; __THREW__ = 0;
 $187 = $186&1;
 L35: do {
  if ($187) {
   label = 32;
  } else {
   $listData = $185;
   $188 = $listData;
   $189 = ((($188)) + 4|0);
   $39 = $189;
   $190 = $39;
   $191 = HEAP32[$190>>2]|0;
   $36 = $190;
   $37 = $191;
   $192 = $37;
   $33 = $35;
   $34 = $192;
   $193 = $33;
   $194 = $34;
   HEAP32[$193>>2] = $194;
   $195 = HEAP32[$35>>2]|0;
   HEAP32[$38>>2] = $195;
   $196 = HEAP32[$38>>2]|0;
   HEAP32[$79>>2] = $196;
   $30 = $78;
   $31 = $79;
   $32 = 0;
   $197 = $30;
   $198 = $31;
   $29 = $198;
   $199 = $29;
   $200 = HEAP32[$199>>2]|0;
   HEAP32[$197>>2] = $200;
   ;HEAP32[$i>>2]=HEAP32[$78>>2]|0;
   while(1) {
    $201 = $listData;
    $202 = ((($201)) + 4|0);
    $23 = $202;
    $203 = $23;
    $204 = ((($203)) + 4|0);
    $205 = HEAP32[$204>>2]|0;
    $20 = $203;
    $21 = $205;
    $206 = $21;
    $17 = $19;
    $18 = $206;
    $207 = $17;
    $208 = $18;
    HEAP32[$207>>2] = $208;
    $209 = HEAP32[$19>>2]|0;
    HEAP32[$22>>2] = $209;
    $210 = HEAP32[$22>>2]|0;
    HEAP32[$80>>2] = $210;
    $15 = $i;
    $16 = $80;
    $211 = $15;
    $212 = $16;
    $13 = $211;
    $14 = $212;
    $213 = $13;
    $12 = $213;
    $214 = $12;
    $215 = HEAP32[$214>>2]|0;
    $216 = $14;
    $11 = $216;
    $217 = $11;
    $218 = HEAP32[$217>>2]|0;
    $219 = ($215|0)==($218|0);
    $220 = $219 ^ 1;
    if (!($220)) {
     label = 44;
     break;
    }
    $10 = $i;
    $221 = $10;
    $222 = HEAP32[$221>>2]|0;
    $223 = HEAP32[$222>>2]|0;
    $224 = HEAP32[$223>>2]|0;
    $225 = ((($224)) + 12|0);
    $226 = HEAP32[$225>>2]|0;
    __THREW__ = 0;
    $227 = (invoke_ii($226|0,($223|0))|0);
    $228 = __THREW__; __THREW__ = 0;
    $229 = $228&1;
    if ($229) {
     label = 32;
     break L35;
    }
    $230 = ($227|0)!=(2);
    if ($230) {
     label = 28;
     break;
    }
    $252 = $71;
    $0 = $i;
    $253 = $0;
    $254 = HEAP32[$253>>2]|0;
    $255 = HEAP32[$254>>2]|0;
    __THREW__ = 0;
    invoke_vii(637,($84|0),($255|0));
    $256 = __THREW__; __THREW__ = 0;
    $257 = $256&1;
    if ($257) {
     label = 32;
     break L35;
    }
    __THREW__ = 0;
    invoke_viii(604,($83|0),($252|0),($84|0));
    $258 = __THREW__; __THREW__ = 0;
    $259 = $258&1;
    if ($259) {
     label = 41;
     break;
    }
    __THREW__ = 0;
    invoke_vii(554,($localStack|0),($83|0));
    $260 = __THREW__; __THREW__ = 0;
    $261 = $260&1;
    if ($261) {
     label = 42;
     break;
    }
    __ZN3VarD2Ev($83);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
    $8 = $i;
    $9 = 0;
    $262 = $8;
    ;HEAP32[$7>>2]=HEAP32[$262>>2]|0;
    $6 = $262;
    $263 = $6;
    $264 = HEAP32[$263>>2]|0;
    $265 = ((($264)) + 12|0);
    HEAP32[$263>>2] = $265;
    $266 = HEAP32[$7>>2]|0;
    HEAP32[$85>>2] = $266;
   }
   if ((label|0) == 28) {
    $231 = (___cxa_allocate_exception(24)|0);
    $$expand_i1_val5 = 1;
    HEAP8[$82>>0] = $$expand_i1_val5;
    $4 = $81;
    $5 = 12638;
    $232 = $4;
    $3 = $232;
    $233 = $3;
    $2 = $233;
    $234 = $2;
    $1 = $234;
    $235 = $5;
    $236 = $5;
    __THREW__ = 0;
    $237 = (invoke_ii(550,($236|0))|0);
    $238 = __THREW__; __THREW__ = 0;
    $239 = $238&1;
    if ($239) {
     label = 33;
    } else {
     __THREW__ = 0;
     invoke_viii(551,($232|0),($235|0),($237|0));
     $240 = __THREW__; __THREW__ = 0;
     $241 = $240&1;
     if ($241) {
      label = 33;
     } else {
      __THREW__ = 0;
      invoke_viii(601,($231|0),($81|0),0);
      $242 = __THREW__; __THREW__ = 0;
      $243 = $242&1;
      if (!($243)) {
       $$expand_i1_val7 = 0;
       HEAP8[$82>>0] = $$expand_i1_val7;
       __THREW__ = 0;
       invoke_viii(602,($231|0),(80|0),(603|0));
       $244 = __THREW__; __THREW__ = 0;
      }
      $249 = ___cxa_find_matching_catch_2()|0;
      $250 = tempRet0;
      $75 = $249;
      $76 = $250;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
     }
    }
    if ((label|0) == 33) {
     $247 = ___cxa_find_matching_catch_2()|0;
     $248 = tempRet0;
     $75 = $247;
     $76 = $248;
    }
    $$pre_trunc9 = HEAP8[$82>>0]|0;
    $251 = $$pre_trunc9&1;
    if (!($251)) {
     break;
    }
    ___cxa_free_exception(($231|0));
    break;
   }
   else if ((label|0) == 41) {
    $267 = ___cxa_find_matching_catch_2()|0;
    $268 = tempRet0;
    $75 = $267;
    $76 = $268;
   }
   else if ((label|0) == 42) {
    $269 = ___cxa_find_matching_catch_2()|0;
    $270 = tempRet0;
    $75 = $269;
    $76 = $270;
    __ZN3VarD2Ev($83);
   }
   else if ((label|0) == 44) {
    $27 = $87;
    $28 = 13389;
    $271 = $27;
    $26 = $271;
    $272 = $26;
    $25 = $272;
    $273 = $25;
    $24 = $273;
    $274 = $28;
    $275 = $28;
    __THREW__ = 0;
    $276 = (invoke_ii(550,($275|0))|0);
    $277 = __THREW__; __THREW__ = 0;
    $278 = $277&1;
    if ($278) {
     label = 32;
     break;
    }
    __THREW__ = 0;
    invoke_viii(551,($271|0),($274|0),($276|0));
    $279 = __THREW__; __THREW__ = 0;
    $280 = $279&1;
    if ($280) {
     label = 32;
     break;
    }
    __THREW__ = 0;
    $281 = (invoke_ii(548,12)|0);
    $282 = __THREW__; __THREW__ = 0;
    $283 = $282&1;
    L49: do {
     if ($283) {
      label = 55;
     } else {
      __THREW__ = 0;
      $284 = (invoke_ii(548,20)|0);
      $285 = __THREW__; __THREW__ = 0;
      $286 = $285&1;
      do {
       if ($286) {
        label = 56;
       } else {
        $287 = ((($88)) + 16|0);
        $288 = HEAP32[$287>>2]|0;
        __THREW__ = 0;
        invoke_vii(559,($284|0),($288|0));
        $289 = __THREW__; __THREW__ = 0;
        $290 = $289&1;
        if ($290) {
         $314 = ___cxa_find_matching_catch_2()|0;
         $315 = tempRet0;
         $75 = $314;
         $76 = $315;
         __ZdlPv($284);
         break;
        }
        __THREW__ = 0;
        invoke_viii(547,($281|0),($284|0),(0|0));
        $291 = __THREW__; __THREW__ = 0;
        $292 = $291&1;
        if ($292) {
         label = 56;
        } else {
         __THREW__ = 0;
         invoke_viii(553,($86|0),($87|0),($281|0));
         $293 = __THREW__; __THREW__ = 0;
         $294 = $293&1;
         if ($294) {
          label = 55;
          break L49;
         }
         __THREW__ = 0;
         invoke_vii(554,($localStack|0),($86|0));
         $295 = __THREW__; __THREW__ = 0;
         $296 = $295&1;
         if ($296) {
          $316 = ___cxa_find_matching_catch_2()|0;
          $317 = tempRet0;
          $75 = $316;
          $76 = $317;
          __ZN3VarD2Ev($86);
          break L49;
         }
         __ZN3VarD2Ev($86);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
         $297 = ((($88)) + 16|0);
         $298 = HEAP32[$297>>2]|0;
         $299 = $70;
         $40 = $299;
         $41 = 0;
         $300 = $40;
         $301 = $41;
         $302 = HEAP32[$300>>2]|0;
         $303 = (($302) + ($301<<2)|0);
         __THREW__ = 0;
         $304 = (invoke_ii(588,($303|0))|0);
         $305 = __THREW__; __THREW__ = 0;
         $306 = $305&1;
         if ($306) {
          label = 32;
          break L35;
         }
         __THREW__ = 0;
         $307 = (invoke_iiii(586,($298|0),($304|0),($localStack|0))|0);
         $308 = __THREW__; __THREW__ = 0;
         $309 = $308&1;
         if ($309) {
          label = 32;
          break L35;
         }
         HEAP32[$68>>2] = $307;
         __ZN6MemoryD2Ev($localStack);
         $318 = HEAP32[$68>>2]|0;
         STACKTOP = sp;return ($318|0);
        }
       }
      } while(0);
      if ((label|0) == 56) {
       $312 = ___cxa_find_matching_catch_2()|0;
       $313 = tempRet0;
       $75 = $312;
       $76 = $313;
      }
      __ZdlPv($281);
     }
    } while(0);
    if ((label|0) == 55) {
     $310 = ___cxa_find_matching_catch_2()|0;
     $311 = tempRet0;
     $75 = $310;
     $76 = $311;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
  }
 } while(0);
 if ((label|0) == 32) {
  $245 = ___cxa_find_matching_catch_2()|0;
  $246 = tempRet0;
  $75 = $245;
  $76 = $246;
 }
 __ZN6MemoryD2Ev($localStack);
 $319 = $75;
 $320 = $76;
 ___resumeException($319|0);
 // unreachable;
 return (0)|0;
}
function __ZN9Func_funcD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9Func_funcD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9Func_funcD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9Func_func7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12697;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9Func_func4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $argCount = 0, $i = 0, $listData = 0, $minArgCount = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $16 = sp + 188|0;
 $23 = sp + 160|0;
 $26 = sp + 148|0;
 $36 = sp + 108|0;
 $39 = sp + 96|0;
 $44 = sp + 76|0;
 $i = sp + 52|0;
 $48 = sp + 44|0;
 $49 = sp + 40|0;
 $50 = sp + 36|0;
 $51 = sp + 24|0;
 $52 = sp + 12|0;
 $55 = sp + 256|0;
 $56 = sp;
 $45 = $this;
 $46 = $arguments;
 $47 = $stack;
 $57 = $45;
 $argCount = 0;
 $minArgCount = 0;
 $43 = $i;
 $58 = $43;
 HEAP32[$58>>2] = 0;
 $59 = $46;
 $41 = $59;
 $42 = 0;
 $60 = $41;
 $61 = $42;
 $62 = HEAP32[$60>>2]|0;
 $63 = (($62) + ($61<<2)|0);
 $64 = (__ZNK5Value7getDataEv($63)|0);
 $listData = $64;
 $65 = $listData;
 $66 = ((($65)) + 4|0);
 $40 = $66;
 $67 = $40;
 $68 = HEAP32[$67>>2]|0;
 $37 = $67;
 $38 = $68;
 $69 = $38;
 $34 = $36;
 $35 = $69;
 $70 = $34;
 $71 = $35;
 HEAP32[$70>>2] = $71;
 $72 = HEAP32[$36>>2]|0;
 HEAP32[$39>>2] = $72;
 $73 = HEAP32[$39>>2]|0;
 HEAP32[$49>>2] = $73;
 $29 = $48;
 $30 = $49;
 $31 = 0;
 $74 = $29;
 $75 = $30;
 $28 = $75;
 $76 = $28;
 $77 = HEAP32[$76>>2]|0;
 HEAP32[$74>>2] = $77;
 ;HEAP32[$i>>2]=HEAP32[$48>>2]|0;
 while(1) {
  $78 = $listData;
  $79 = ((($78)) + 4|0);
  $27 = $79;
  $80 = $27;
  $81 = ((($80)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $24 = $80;
  $25 = $82;
  $83 = $25;
  $21 = $23;
  $22 = $83;
  $84 = $21;
  $85 = $22;
  HEAP32[$84>>2] = $85;
  $86 = HEAP32[$23>>2]|0;
  HEAP32[$26>>2] = $86;
  $87 = HEAP32[$26>>2]|0;
  HEAP32[$50>>2] = $87;
  $8 = $i;
  $9 = $50;
  $88 = $8;
  $89 = $9;
  $6 = $88;
  $7 = $89;
  $90 = $6;
  $5 = $90;
  $91 = $5;
  $92 = HEAP32[$91>>2]|0;
  $93 = $7;
  $4 = $93;
  $94 = $4;
  $95 = HEAP32[$94>>2]|0;
  $96 = ($92|0)==($95|0);
  $97 = $96 ^ 1;
  if (!($97)) {
   break;
  }
  $3 = $i;
  $98 = $3;
  $99 = HEAP32[$98>>2]|0;
  $100 = HEAP32[$99>>2]|0;
  $101 = HEAP32[$100>>2]|0;
  $102 = ((($101)) + 12|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = (FUNCTION_TABLE_ii[$103 & 1023]($100)|0);
  $105 = ($104|0)==(2);
  if (!($105)) {
   label = 7;
   break;
  }
  $0 = $i;
  $106 = $0;
  $107 = HEAP32[$106>>2]|0;
  $108 = HEAP32[$107>>2]|0;
  __ZNK8AtomData7getNameEv($51,$108);
  $1 = $51;
  $2 = 12702;
  $109 = $1;
  $110 = $2;
  $111 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($109,$110)|0);
  $112 = ($111|0)==(0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
  $113 = $argCount;
  if ($112) {
   label = 5;
   break;
  }
  $114 = (($113) + 1)|0;
  $argCount = $114;
  $17 = $i;
  $18 = 0;
  $115 = $17;
  ;HEAP32[$16>>2]=HEAP32[$115>>2]|0;
  $15 = $115;
  $116 = $15;
  $117 = HEAP32[$116>>2]|0;
  $118 = ((($117)) + 12|0);
  HEAP32[$116>>2] = $118;
  $119 = HEAP32[$16>>2]|0;
  HEAP32[$56>>2] = $119;
 }
 if ((label|0) == 5) {
  $minArgCount = $113;
  $argCount = -1;
 }
 else if ((label|0) == 7) {
  $120 = (___cxa_allocate_exception(24)|0);
  $$expand_i1_val = 1;
  HEAP8[$55>>0] = $$expand_i1_val;
  $13 = $52;
  $14 = 12706;
  $121 = $13;
  $12 = $121;
  $122 = $12;
  $11 = $122;
  $123 = $11;
  $10 = $123;
  $124 = $14;
  $125 = $14;
  __THREW__ = 0;
  $126 = (invoke_ii(550,($125|0))|0);
  $127 = __THREW__; __THREW__ = 0;
  $128 = $127&1;
  if ($128) {
   label = 11;
  } else {
   __THREW__ = 0;
   invoke_viii(551,($121|0),($124|0),($126|0));
   $129 = __THREW__; __THREW__ = 0;
   $130 = $129&1;
   if ($130) {
    label = 11;
   } else {
    __THREW__ = 0;
    invoke_viii(601,($120|0),($52|0),0);
    $131 = __THREW__; __THREW__ = 0;
    $132 = $131&1;
    if (!($132)) {
     $$expand_i1_val2 = 0;
     HEAP8[$55>>0] = $$expand_i1_val2;
     __THREW__ = 0;
     invoke_viii(602,($120|0),(80|0),(603|0));
     $133 = __THREW__; __THREW__ = 0;
    }
    $136 = ___cxa_find_matching_catch_2()|0;
    $137 = tempRet0;
    $53 = $136;
    $54 = $137;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
   }
  }
  if ((label|0) == 11) {
   $134 = ___cxa_find_matching_catch_2()|0;
   $135 = tempRet0;
   $53 = $134;
   $54 = $135;
  }
  $$pre_trunc = HEAP8[$55>>0]|0;
  $138 = $$pre_trunc&1;
  if (!($138)) {
   $184 = $53;
   $185 = $54;
   ___resumeException($184|0);
   // unreachable;
  }
  ___cxa_free_exception(($120|0));
  $184 = $53;
  $185 = $54;
  ___resumeException($184|0);
  // unreachable;
 }
 $139 = (__Znwj(12)|0);
 __THREW__ = 0;
 $140 = (invoke_ii(548,36)|0);
 $141 = __THREW__; __THREW__ = 0;
 $142 = $141&1;
 do {
  if ($142) {
   label = 23;
  } else {
   $143 = $argCount;
   $144 = $minArgCount;
   $145 = $46;
   $19 = $145;
   $20 = 1;
   $146 = $19;
   $147 = $20;
   $148 = HEAP32[$146>>2]|0;
   $149 = (($148) + ($147<<2)|0);
   __THREW__ = 0;
   $150 = (invoke_ii(588,($149|0))|0);
   $151 = __THREW__; __THREW__ = 0;
   $152 = $151&1;
   if (!($152)) {
    $153 = HEAP32[$150>>2]|0;
    $154 = ((($153)) + 16|0);
    $155 = HEAP32[$154>>2]|0;
    __THREW__ = 0;
    $156 = (invoke_ii($155|0,($150|0))|0);
    $157 = __THREW__; __THREW__ = 0;
    $158 = $157&1;
    if (!($158)) {
     $159 = $46;
     $32 = $159;
     $33 = 0;
     $160 = $32;
     $161 = $33;
     $162 = HEAP32[$160>>2]|0;
     $163 = (($162) + ($161<<2)|0);
     __THREW__ = 0;
     $164 = (invoke_ii(588,($163|0))|0);
     $165 = __THREW__; __THREW__ = 0;
     $166 = $165&1;
     if (!($166)) {
      $167 = HEAP32[$164>>2]|0;
      $168 = ((($167)) + 16|0);
      $169 = HEAP32[$168>>2]|0;
      __THREW__ = 0;
      $170 = (invoke_ii($169|0,($164|0))|0);
      $171 = __THREW__; __THREW__ = 0;
      $172 = $171&1;
      if (!($172)) {
       $173 = ((($57)) + 16|0);
       $174 = HEAP32[$173>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiii(632,($140|0),2,($143|0),($144|0),($156|0),($170|0),($174|0));
       $175 = __THREW__; __THREW__ = 0;
       $176 = $175&1;
       if (!($176)) {
        __THREW__ = 0;
        invoke_viii(547,($139|0),($140|0),(0|0));
        $177 = __THREW__; __THREW__ = 0;
        $178 = $177&1;
        if ($178) {
         label = 23;
         break;
        }
        __ZN5ValueC2EP4Data($44,$139);
        $179 = HEAP32[$44>>2]|0;
        STACKTOP = sp;return ($179|0);
       }
      }
     }
    }
   }
   $182 = ___cxa_find_matching_catch_2()|0;
   $183 = tempRet0;
   $53 = $182;
   $54 = $183;
   __ZdlPv($140);
  }
 } while(0);
 if ((label|0) == 23) {
  $180 = ___cxa_find_matching_catch_2()|0;
  $181 = tempRet0;
  $53 = $180;
  $54 = $181;
 }
 __ZdlPv($139);
 $184 = $53;
 $185 = $54;
 ___resumeException($184|0);
 // unreachable;
 return (0)|0;
}
function __ZN12Func__Power_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN12Func__Power_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN12Func__Power_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK12Func__Power_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12755;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK12Func__Power_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0.0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__a$i$i$i4 = 0, $__a$i$i$i8 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0;
 var $__i$i$i$i5 = 0, $__i$i$i$i9 = 0, $operand1 = 0.0, $operand2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $52 = sp + 108|0;
 $56 = sp + 84|0;
 $57 = sp + 72|0;
 $58 = sp + 60|0;
 $61 = sp + 353|0;
 $62 = sp + 40|0;
 $63 = sp + 28|0;
 $64 = sp + 16|0;
 $65 = sp + 352|0;
 $53 = $this;
 $54 = $arguments;
 $55 = $stack;
 $66 = $53;
 $67 = $54;
 $50 = $67;
 $51 = 0;
 $68 = $50;
 $69 = $51;
 $70 = HEAP32[$68>>2]|0;
 $71 = (($70) + ($69<<2)|0);
 $72 = (__ZNK5Value7getDataEv($71)|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = ((($73)) + 12|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = (FUNCTION_TABLE_ii[$75 & 1023]($72)|0);
 $77 = ($76|0)==(16);
 $78 = $54;
 do {
  if ($77) {
   $48 = $78;
   $49 = 0;
   $79 = $48;
   $80 = $49;
   $81 = HEAP32[$79>>2]|0;
   $82 = (($81) + ($80<<2)|0);
   $83 = (__ZNK5Value7getDataEv($82)|0);
   $84 = (+__ZNK13AtomFloatData6getNumEv($83));
   $operand1 = $84;
  } else {
   $46 = $78;
   $47 = 0;
   $85 = $46;
   $86 = $47;
   $87 = HEAP32[$85>>2]|0;
   $88 = (($87) + ($86<<2)|0);
   $89 = (__ZNK5Value7getDataEv($88)|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = ((($90)) + 12|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = (FUNCTION_TABLE_ii[$92 & 1023]($89)|0);
   $94 = $93 & 8;
   $95 = ($94|0)!=(0);
   if ($95) {
    $154 = $54;
    $26 = $154;
    $27 = 0;
    $155 = $26;
    $156 = $27;
    $157 = HEAP32[$155>>2]|0;
    $158 = (($157) + ($156<<2)|0);
    $159 = (__ZNK5Value7getDataEv($158)|0);
    $160 = (__ZNK11AtomIntData6getNumEv($159)|0);
    $161 = (+($160|0));
    $operand1 = $161;
    break;
   }
   $96 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$61>>0] = $$expand_i1_val;
   $97 = HEAP32[$66>>2]|0;
   $98 = ((($97)) + 8|0);
   $99 = HEAP32[$98>>2]|0;
   __THREW__ = 0;
   invoke_vii($99|0,($58|0),($66|0));
   $100 = __THREW__; __THREW__ = 0;
   $101 = $100&1;
   if ($101) {
    $145 = ___cxa_find_matching_catch_2()|0;
    $146 = tempRet0;
    $59 = $145;
    $60 = $146;
   } else {
    $44 = 13003;
    $45 = $58;
    $102 = $45;
    $103 = $44;
    __THREW__ = 0;
    $104 = (invoke_iiii(600,($102|0),0,($103|0))|0);
    $105 = __THREW__; __THREW__ = 0;
    $106 = $105&1;
    if ($106) {
     $147 = ___cxa_find_matching_catch_2()|0;
     $148 = tempRet0;
     $59 = $147;
     $60 = $148;
    } else {
     $43 = $104;
     $107 = $43;
     $41 = $57;
     $42 = $107;
     $108 = $41;
     $109 = $42;
     $40 = $109;
     $110 = $40;
     ;HEAP32[$108>>2]=HEAP32[$110>>2]|0;HEAP32[$108+4>>2]=HEAP32[$110+4>>2]|0;HEAP32[$108+8>>2]=HEAP32[$110+8>>2]|0;
     $111 = $42;
     $39 = $111;
     $112 = $39;
     $38 = $112;
     $113 = $38;
     $37 = $113;
     $114 = $37;
     $__a$i$i$i = $114;
     $__i$i$i$i = 0;
     while(1) {
      $115 = $__i$i$i$i;
      $116 = ($115>>>0)<(3);
      if (!($116)) {
       break;
      }
      $117 = $__i$i$i$i;
      $118 = $__a$i$i$i;
      $119 = (($118) + ($117<<2)|0);
      HEAP32[$119>>2] = 0;
      $120 = $__i$i$i$i;
      $121 = (($120) + 1)|0;
      $__i$i$i$i = $121;
     }
     $35 = $57;
     $36 = 12761;
     $122 = $35;
     $123 = $36;
     __THREW__ = 0;
     $124 = (invoke_iii(542,($122|0),($123|0))|0);
     $125 = __THREW__; __THREW__ = 0;
     $126 = $125&1;
     if ($126) {
      $149 = ___cxa_find_matching_catch_2()|0;
      $150 = tempRet0;
      $59 = $149;
      $60 = $150;
     } else {
      $34 = $124;
      $127 = $34;
      $32 = $56;
      $33 = $127;
      $128 = $32;
      $129 = $33;
      $31 = $129;
      $130 = $31;
      ;HEAP32[$128>>2]=HEAP32[$130>>2]|0;HEAP32[$128+4>>2]=HEAP32[$130+4>>2]|0;HEAP32[$128+8>>2]=HEAP32[$130+8>>2]|0;
      $131 = $33;
      $30 = $131;
      $132 = $30;
      $29 = $132;
      $133 = $29;
      $28 = $133;
      $134 = $28;
      $__a$i$i$i1 = $134;
      $__i$i$i$i2 = 0;
      while(1) {
       $135 = $__i$i$i$i2;
       $136 = ($135>>>0)<(3);
       if (!($136)) {
        break;
       }
       $137 = $__i$i$i$i2;
       $138 = $__a$i$i$i1;
       $139 = (($138) + ($137<<2)|0);
       HEAP32[$139>>2] = 0;
       $140 = $__i$i$i$i2;
       $141 = (($140) + 1)|0;
       $__i$i$i$i2 = $141;
      }
      __THREW__ = 0;
      invoke_viii(601,($96|0),($56|0),0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if (!($143)) {
       $$expand_i1_val2 = 0;
       HEAP8[$61>>0] = $$expand_i1_val2;
       __THREW__ = 0;
       invoke_viii(602,($96|0),(80|0),(603|0));
       $144 = __THREW__; __THREW__ = 0;
      }
      $151 = ___cxa_find_matching_catch_2()|0;
      $152 = tempRet0;
      $59 = $151;
      $60 = $152;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
   }
   $$pre_trunc = HEAP8[$61>>0]|0;
   $153 = $$pre_trunc&1;
   if (!($153)) {
    $266 = $59;
    $267 = $60;
    ___resumeException($266|0);
    // unreachable;
   }
   ___cxa_free_exception(($96|0));
   $266 = $59;
   $267 = $60;
   ___resumeException($266|0);
   // unreachable;
  }
 } while(0);
 $162 = $54;
 $13 = $162;
 $14 = 1;
 $163 = $13;
 $164 = $14;
 $165 = HEAP32[$163>>2]|0;
 $166 = (($165) + ($164<<2)|0);
 $167 = (__ZNK5Value7getDataEv($166)|0);
 $168 = HEAP32[$167>>2]|0;
 $169 = ((($168)) + 12|0);
 $170 = HEAP32[$169>>2]|0;
 $171 = (FUNCTION_TABLE_ii[$170 & 1023]($167)|0);
 $172 = ($171|0)==(16);
 $173 = $54;
 do {
  if ($172) {
   $2 = $173;
   $3 = 1;
   $174 = $2;
   $175 = $3;
   $176 = HEAP32[$174>>2]|0;
   $177 = (($176) + ($175<<2)|0);
   $178 = (__ZNK5Value7getDataEv($177)|0);
   $179 = (+__ZNK13AtomFloatData6getNumEv($178));
   $operand2 = $179;
  } else {
   $0 = $173;
   $1 = 1;
   $180 = $0;
   $181 = $1;
   $182 = HEAP32[$180>>2]|0;
   $183 = (($182) + ($181<<2)|0);
   $184 = (__ZNK5Value7getDataEv($183)|0);
   $185 = HEAP32[$184>>2]|0;
   $186 = ((($185)) + 12|0);
   $187 = HEAP32[$186>>2]|0;
   $188 = (FUNCTION_TABLE_ii[$187 & 1023]($184)|0);
   $189 = $188 & 8;
   $190 = ($189|0)!=(0);
   if ($190) {
    $249 = $54;
    $24 = $249;
    $25 = 1;
    $250 = $24;
    $251 = $25;
    $252 = HEAP32[$250>>2]|0;
    $253 = (($252) + ($251<<2)|0);
    $254 = (__ZNK5Value7getDataEv($253)|0);
    $255 = (__ZNK11AtomIntData6getNumEv($254)|0);
    $256 = (+($255|0));
    $operand2 = $256;
    break;
   }
   $191 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val5 = 1;
   HEAP8[$65>>0] = $$expand_i1_val5;
   $192 = HEAP32[$66>>2]|0;
   $193 = ((($192)) + 8|0);
   $194 = HEAP32[$193>>2]|0;
   __THREW__ = 0;
   invoke_vii($194|0,($64|0),($66|0));
   $195 = __THREW__; __THREW__ = 0;
   $196 = $195&1;
   if ($196) {
    $240 = ___cxa_find_matching_catch_2()|0;
    $241 = tempRet0;
    $59 = $240;
    $60 = $241;
   } else {
    $11 = 13003;
    $12 = $64;
    $197 = $12;
    $198 = $11;
    __THREW__ = 0;
    $199 = (invoke_iiii(600,($197|0),0,($198|0))|0);
    $200 = __THREW__; __THREW__ = 0;
    $201 = $200&1;
    if ($201) {
     $242 = ___cxa_find_matching_catch_2()|0;
     $243 = tempRet0;
     $59 = $242;
     $60 = $243;
    } else {
     $10 = $199;
     $202 = $10;
     $8 = $63;
     $9 = $202;
     $203 = $8;
     $204 = $9;
     $7 = $204;
     $205 = $7;
     ;HEAP32[$203>>2]=HEAP32[$205>>2]|0;HEAP32[$203+4>>2]=HEAP32[$205+4>>2]|0;HEAP32[$203+8>>2]=HEAP32[$205+8>>2]|0;
     $206 = $9;
     $6 = $206;
     $207 = $6;
     $5 = $207;
     $208 = $5;
     $4 = $208;
     $209 = $4;
     $__a$i$i$i8 = $209;
     $__i$i$i$i9 = 0;
     while(1) {
      $210 = $__i$i$i$i9;
      $211 = ($210>>>0)<(3);
      if (!($211)) {
       break;
      }
      $212 = $__i$i$i$i9;
      $213 = $__a$i$i$i8;
      $214 = (($213) + ($212<<2)|0);
      HEAP32[$214>>2] = 0;
      $215 = $__i$i$i$i9;
      $216 = (($215) + 1)|0;
      $__i$i$i$i9 = $216;
     }
     $22 = $63;
     $23 = 12799;
     $217 = $22;
     $218 = $23;
     __THREW__ = 0;
     $219 = (invoke_iii(542,($217|0),($218|0))|0);
     $220 = __THREW__; __THREW__ = 0;
     $221 = $220&1;
     if ($221) {
      $244 = ___cxa_find_matching_catch_2()|0;
      $245 = tempRet0;
      $59 = $244;
      $60 = $245;
     } else {
      $21 = $219;
      $222 = $21;
      $19 = $62;
      $20 = $222;
      $223 = $19;
      $224 = $20;
      $18 = $224;
      $225 = $18;
      ;HEAP32[$223>>2]=HEAP32[$225>>2]|0;HEAP32[$223+4>>2]=HEAP32[$225+4>>2]|0;HEAP32[$223+8>>2]=HEAP32[$225+8>>2]|0;
      $226 = $20;
      $17 = $226;
      $227 = $17;
      $16 = $227;
      $228 = $16;
      $15 = $228;
      $229 = $15;
      $__a$i$i$i4 = $229;
      $__i$i$i$i5 = 0;
      while(1) {
       $230 = $__i$i$i$i5;
       $231 = ($230>>>0)<(3);
       if (!($231)) {
        break;
       }
       $232 = $__i$i$i$i5;
       $233 = $__a$i$i$i4;
       $234 = (($233) + ($232<<2)|0);
       HEAP32[$234>>2] = 0;
       $235 = $__i$i$i$i5;
       $236 = (($235) + 1)|0;
       $__i$i$i$i5 = $236;
      }
      __THREW__ = 0;
      invoke_viii(601,($191|0),($62|0),0);
      $237 = __THREW__; __THREW__ = 0;
      $238 = $237&1;
      if (!($238)) {
       $$expand_i1_val7 = 0;
       HEAP8[$65>>0] = $$expand_i1_val7;
       __THREW__ = 0;
       invoke_viii(602,($191|0),(80|0),(603|0));
       $239 = __THREW__; __THREW__ = 0;
      }
      $246 = ___cxa_find_matching_catch_2()|0;
      $247 = tempRet0;
      $59 = $246;
      $60 = $247;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
   }
   $$pre_trunc9 = HEAP8[$65>>0]|0;
   $248 = $$pre_trunc9&1;
   if (!($248)) {
    $266 = $59;
    $267 = $60;
    ___resumeException($266|0);
    // unreachable;
   }
   ___cxa_free_exception(($191|0));
   $266 = $59;
   $267 = $60;
   ___resumeException($266|0);
   // unreachable;
  }
 } while(0);
 $257 = (__Znwj(16)|0);
 $258 = $operand1;
 $259 = $operand2;
 $260 = (+Math_pow((+$258),(+$259)));
 __THREW__ = 0;
 invoke_vid(623,($257|0),(+$260));
 $261 = __THREW__; __THREW__ = 0;
 $262 = $261&1;
 if (!($262)) {
  __ZN5ValueC2EP4Data($52,$257);
  $263 = HEAP32[$52>>2]|0;
  STACKTOP = sp;return ($263|0);
 }
 $264 = ___cxa_find_matching_catch_2()|0;
 $265 = tempRet0;
 $59 = $264;
 $60 = $265;
 __ZdlPv($257);
 $266 = $59;
 $267 = $60;
 ___resumeException($266|0);
 // unreachable;
 return (0)|0;
}
function __ZN7Func_ifD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN7Func_ifD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN7Func_ifD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK7Func_if7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12846;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK7Func_if4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc15 = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0;
 var $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0;
 var $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0;
 var $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__a$i$i$i12 = 0, $__a$i$i$i16 = 0, $__a$i$i$i4 = 0, $__a$i$i$i8 = 0, $__i$i$i$i = 0, $__i$i$i$i13 = 0, $__i$i$i$i17 = 0, $__i$i$i$i2 = 0, $__i$i$i$i5 = 0, $__i$i$i$i9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $71 = sp + 152|0;
 $result = sp + 136|0;
 $75 = sp + 124|0;
 $76 = sp + 112|0;
 $77 = sp + 100|0;
 $80 = sp + 490|0;
 $81 = sp + 80|0;
 $82 = sp + 68|0;
 $83 = sp + 56|0;
 $84 = sp + 489|0;
 $85 = sp + 44|0;
 $86 = sp + 32|0;
 $87 = sp + 20|0;
 $88 = sp + 8|0;
 $89 = sp + 488|0;
 $90 = sp + 4|0;
 $72 = $this;
 $73 = $arguments;
 $74 = $stack;
 $92 = $72;
 __ZN5ValueC2EP4Data($result,0);
 $93 = $73;
 $70 = $93;
 $94 = $70;
 $95 = ((($94)) + 4|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = HEAP32[$94>>2]|0;
 $98 = $96;
 $99 = $97;
 $100 = (($98) - ($99))|0;
 $101 = (($100|0) / 4)&-1;
 $102 = ($101>>>0)>(2);
 if ($102) {
  $103 = $73;
  $69 = $103;
  $104 = $69;
  $105 = ((($104)) + 4|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = HEAP32[$104>>2]|0;
  $108 = $106;
  $109 = $107;
  $110 = (($108) - ($109))|0;
  $111 = (($110|0) / 4)&-1;
  $112 = ($111|0)!=(4);
  if ($112) {
   $113 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$80>>0] = $$expand_i1_val;
   $114 = HEAP32[$92>>2]|0;
   $115 = ((($114)) + 8|0);
   $116 = HEAP32[$115>>2]|0;
   __THREW__ = 0;
   invoke_vii($116|0,($77|0),($92|0));
   $117 = __THREW__; __THREW__ = 0;
   $118 = $117&1;
   if ($118) {
    $162 = ___cxa_find_matching_catch_2()|0;
    $163 = tempRet0;
    $78 = $162;
    $79 = $163;
   } else {
    $67 = 13552;
    $68 = $77;
    $119 = $68;
    $120 = $67;
    __THREW__ = 0;
    $121 = (invoke_iiii(600,($119|0),0,($120|0))|0);
    $122 = __THREW__; __THREW__ = 0;
    $123 = $122&1;
    if ($123) {
     $164 = ___cxa_find_matching_catch_2()|0;
     $165 = tempRet0;
     $78 = $164;
     $79 = $165;
    } else {
     $66 = $121;
     $124 = $66;
     $64 = $76;
     $65 = $124;
     $125 = $64;
     $126 = $65;
     $63 = $126;
     $127 = $63;
     ;HEAP32[$125>>2]=HEAP32[$127>>2]|0;HEAP32[$125+4>>2]=HEAP32[$127+4>>2]|0;HEAP32[$125+8>>2]=HEAP32[$127+8>>2]|0;
     $128 = $65;
     $62 = $128;
     $129 = $62;
     $61 = $129;
     $130 = $61;
     $60 = $130;
     $131 = $60;
     $__a$i$i$i = $131;
     $__i$i$i$i = 0;
     while(1) {
      $132 = $__i$i$i$i;
      $133 = ($132>>>0)<(3);
      if (!($133)) {
       break;
      }
      $134 = $__i$i$i$i;
      $135 = $__a$i$i$i;
      $136 = (($135) + ($134<<2)|0);
      HEAP32[$136>>2] = 0;
      $137 = $__i$i$i$i;
      $138 = (($137) + 1)|0;
      $__i$i$i$i = $138;
     }
     $58 = $76;
     $59 = 12849;
     $139 = $58;
     $140 = $59;
     __THREW__ = 0;
     $141 = (invoke_iii(542,($139|0),($140|0))|0);
     $142 = __THREW__; __THREW__ = 0;
     $143 = $142&1;
     if ($143) {
      $166 = ___cxa_find_matching_catch_2()|0;
      $167 = tempRet0;
      $78 = $166;
      $79 = $167;
     } else {
      $57 = $141;
      $144 = $57;
      $55 = $75;
      $56 = $144;
      $145 = $55;
      $146 = $56;
      $54 = $146;
      $147 = $54;
      ;HEAP32[$145>>2]=HEAP32[$147>>2]|0;HEAP32[$145+4>>2]=HEAP32[$147+4>>2]|0;HEAP32[$145+8>>2]=HEAP32[$147+8>>2]|0;
      $148 = $56;
      $53 = $148;
      $149 = $53;
      $52 = $149;
      $150 = $52;
      $51 = $150;
      $151 = $51;
      $__a$i$i$i1 = $151;
      $__i$i$i$i2 = 0;
      while(1) {
       $152 = $__i$i$i$i2;
       $153 = ($152>>>0)<(3);
       if (!($153)) {
        break;
       }
       $154 = $__i$i$i$i2;
       $155 = $__a$i$i$i1;
       $156 = (($155) + ($154<<2)|0);
       HEAP32[$156>>2] = 0;
       $157 = $__i$i$i$i2;
       $158 = (($157) + 1)|0;
       $__i$i$i$i2 = $158;
      }
      __THREW__ = 0;
      invoke_viii(601,($113|0),($75|0),0);
      $159 = __THREW__; __THREW__ = 0;
      $160 = $159&1;
      if (!($160)) {
       $$expand_i1_val2 = 0;
       HEAP8[$80>>0] = $$expand_i1_val2;
       __THREW__ = 0;
       invoke_viii(602,($113|0),(80|0),(603|0));
       $161 = __THREW__; __THREW__ = 0;
      }
      $168 = ___cxa_find_matching_catch_2()|0;
      $169 = tempRet0;
      $78 = $168;
      $79 = $169;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($75);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($76);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
   }
   $$pre_trunc = HEAP8[$80>>0]|0;
   $170 = $$pre_trunc&1;
   if (!($170)) {
    __ZN5ValueD2Ev($result);
    $393 = $78;
    $394 = $79;
    ___resumeException($393|0);
    // unreachable;
   }
   ___cxa_free_exception(($113|0));
   __ZN5ValueD2Ev($result);
   $393 = $78;
   $394 = $79;
   ___resumeException($393|0);
   // unreachable;
  }
  $171 = $73;
  $49 = $171;
  $50 = 2;
  $172 = $49;
  $173 = $50;
  $174 = HEAP32[$172>>2]|0;
  $175 = (($174) + ($173<<2)|0);
  __THREW__ = 0;
  $176 = (invoke_ii(588,($175|0))|0);
  $177 = __THREW__; __THREW__ = 0;
  $178 = $177&1;
  if (!($178)) {
   $179 = HEAP32[$176>>2]|0;
   $180 = ((($179)) + 12|0);
   $181 = HEAP32[$180>>2]|0;
   __THREW__ = 0;
   $182 = (invoke_ii($181|0,($176|0))|0);
   $183 = __THREW__; __THREW__ = 0;
   $184 = $183&1;
   if (!($184)) {
    $185 = ($182|0)!=(2);
    if ($185) {
     $186 = (___cxa_allocate_exception(24)|0);
     $$expand_i1_val5 = 1;
     HEAP8[$84>>0] = $$expand_i1_val5;
     $187 = HEAP32[$92>>2]|0;
     $188 = ((($187)) + 8|0);
     $189 = HEAP32[$188>>2]|0;
     __THREW__ = 0;
     invoke_vii($189|0,($83|0),($92|0));
     $190 = __THREW__; __THREW__ = 0;
     $191 = $190&1;
     if ($191) {
      $237 = ___cxa_find_matching_catch_2()|0;
      $238 = tempRet0;
      $78 = $237;
      $79 = $238;
     } else {
      $47 = 13552;
      $48 = $83;
      $192 = $48;
      $193 = $47;
      __THREW__ = 0;
      $194 = (invoke_iiii(600,($192|0),0,($193|0))|0);
      $195 = __THREW__; __THREW__ = 0;
      $196 = $195&1;
      if ($196) {
       $239 = ___cxa_find_matching_catch_2()|0;
       $240 = tempRet0;
       $78 = $239;
       $79 = $240;
      } else {
       $46 = $194;
       $197 = $46;
       $44 = $82;
       $45 = $197;
       $198 = $44;
       $199 = $45;
       $43 = $199;
       $200 = $43;
       ;HEAP32[$198>>2]=HEAP32[$200>>2]|0;HEAP32[$198+4>>2]=HEAP32[$200+4>>2]|0;HEAP32[$198+8>>2]=HEAP32[$200+8>>2]|0;
       $201 = $45;
       $42 = $201;
       $202 = $42;
       $41 = $202;
       $203 = $41;
       $40 = $203;
       $204 = $40;
       $__a$i$i$i4 = $204;
       $__i$i$i$i5 = 0;
       while(1) {
        $205 = $__i$i$i$i5;
        $206 = ($205>>>0)<(3);
        if (!($206)) {
         break;
        }
        $207 = $__i$i$i$i5;
        $208 = $__a$i$i$i4;
        $209 = (($208) + ($207<<2)|0);
        HEAP32[$209>>2] = 0;
        $210 = $__i$i$i$i5;
        $211 = (($210) + 1)|0;
        $__i$i$i$i5 = $211;
       }
       $38 = $82;
       $39 = 12874;
       $212 = $38;
       $213 = $39;
       __THREW__ = 0;
       $214 = (invoke_iii(542,($212|0),($213|0))|0);
       $215 = __THREW__; __THREW__ = 0;
       $216 = $215&1;
       if ($216) {
        $241 = ___cxa_find_matching_catch_2()|0;
        $242 = tempRet0;
        $78 = $241;
        $79 = $242;
       } else {
        $37 = $214;
        $217 = $37;
        $35 = $81;
        $36 = $217;
        $218 = $35;
        $219 = $36;
        $34 = $219;
        $220 = $34;
        ;HEAP32[$218>>2]=HEAP32[$220>>2]|0;HEAP32[$218+4>>2]=HEAP32[$220+4>>2]|0;HEAP32[$218+8>>2]=HEAP32[$220+8>>2]|0;
        $221 = $36;
        $33 = $221;
        $222 = $33;
        $32 = $222;
        $223 = $32;
        $31 = $223;
        $224 = $31;
        $__a$i$i$i8 = $224;
        $__i$i$i$i9 = 0;
        while(1) {
         $225 = $__i$i$i$i9;
         $226 = ($225>>>0)<(3);
         if (!($226)) {
          break;
         }
         $227 = $__i$i$i$i9;
         $228 = $__a$i$i$i8;
         $229 = (($228) + ($227<<2)|0);
         HEAP32[$229>>2] = 0;
         $230 = $__i$i$i$i9;
         $231 = (($230) + 1)|0;
         $__i$i$i$i9 = $231;
        }
        __THREW__ = 0;
        invoke_viii(601,($186|0),($81|0),0);
        $232 = __THREW__; __THREW__ = 0;
        $233 = $232&1;
        if (!($233)) {
         $$expand_i1_val7 = 0;
         HEAP8[$84>>0] = $$expand_i1_val7;
         __THREW__ = 0;
         invoke_viii(602,($186|0),(80|0),(603|0));
         $234 = __THREW__; __THREW__ = 0;
        }
        $243 = ___cxa_find_matching_catch_2()|0;
        $244 = tempRet0;
        $78 = $243;
        $79 = $244;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($83);
     }
     $$pre_trunc9 = HEAP8[$84>>0]|0;
     $245 = $$pre_trunc9&1;
     if (!($245)) {
      __ZN5ValueD2Ev($result);
      $393 = $78;
      $394 = $79;
      ___resumeException($393|0);
      // unreachable;
     }
     ___cxa_free_exception(($186|0));
     __ZN5ValueD2Ev($result);
     $393 = $78;
     $394 = $79;
     ___resumeException($393|0);
     // unreachable;
    }
    $246 = $73;
    $29 = $246;
    $30 = 2;
    $247 = $29;
    $248 = $30;
    $249 = HEAP32[$247>>2]|0;
    $250 = (($249) + ($248<<2)|0);
    __THREW__ = 0;
    $251 = (invoke_ii(588,($250|0))|0);
    $252 = __THREW__; __THREW__ = 0;
    $253 = $252&1;
    if (!($253)) {
     __THREW__ = 0;
     invoke_vii(637,($85|0),($251|0));
     $254 = __THREW__; __THREW__ = 0;
     $255 = $254&1;
     if (!($255)) {
      $27 = $85;
      $28 = 12903;
      $256 = $27;
      $257 = $28;
      $25 = $256;
      $26 = $257;
      $258 = $25;
      $259 = $26;
      $260 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($258,$259)|0);
      $261 = ($260|0)==(0);
      $262 = $261 ^ 1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($85);
      if ($262) {
       $263 = (___cxa_allocate_exception(24)|0);
       $$expand_i1_val11 = 1;
       HEAP8[$89>>0] = $$expand_i1_val11;
       $264 = HEAP32[$92>>2]|0;
       $265 = ((($264)) + 8|0);
       $266 = HEAP32[$265>>2]|0;
       __THREW__ = 0;
       invoke_vii($266|0,($88|0),($92|0));
       $267 = __THREW__; __THREW__ = 0;
       $268 = $267&1;
       if ($268) {
        $312 = ___cxa_find_matching_catch_2()|0;
        $313 = tempRet0;
        $78 = $312;
        $79 = $313;
       } else {
        $23 = 13552;
        $24 = $88;
        $269 = $24;
        $270 = $23;
        __THREW__ = 0;
        $271 = (invoke_iiii(600,($269|0),0,($270|0))|0);
        $272 = __THREW__; __THREW__ = 0;
        $273 = $272&1;
        if ($273) {
         $314 = ___cxa_find_matching_catch_2()|0;
         $315 = tempRet0;
         $78 = $314;
         $79 = $315;
        } else {
         $22 = $271;
         $274 = $22;
         $20 = $87;
         $21 = $274;
         $275 = $20;
         $276 = $21;
         $19 = $276;
         $277 = $19;
         ;HEAP32[$275>>2]=HEAP32[$277>>2]|0;HEAP32[$275+4>>2]=HEAP32[$277+4>>2]|0;HEAP32[$275+8>>2]=HEAP32[$277+8>>2]|0;
         $278 = $21;
         $18 = $278;
         $279 = $18;
         $17 = $279;
         $280 = $17;
         $16 = $280;
         $281 = $16;
         $__a$i$i$i12 = $281;
         $__i$i$i$i13 = 0;
         while(1) {
          $282 = $__i$i$i$i13;
          $283 = ($282>>>0)<(3);
          if (!($283)) {
           break;
          }
          $284 = $__i$i$i$i13;
          $285 = $__a$i$i$i12;
          $286 = (($285) + ($284<<2)|0);
          HEAP32[$286>>2] = 0;
          $287 = $__i$i$i$i13;
          $288 = (($287) + 1)|0;
          $__i$i$i$i13 = $288;
         }
         $14 = $87;
         $15 = 12908;
         $289 = $14;
         $290 = $15;
         __THREW__ = 0;
         $291 = (invoke_iii(542,($289|0),($290|0))|0);
         $292 = __THREW__; __THREW__ = 0;
         $293 = $292&1;
         if ($293) {
          $316 = ___cxa_find_matching_catch_2()|0;
          $317 = tempRet0;
          $78 = $316;
          $79 = $317;
         } else {
          $13 = $291;
          $294 = $13;
          $11 = $86;
          $12 = $294;
          $295 = $11;
          $296 = $12;
          $10 = $296;
          $297 = $10;
          ;HEAP32[$295>>2]=HEAP32[$297>>2]|0;HEAP32[$295+4>>2]=HEAP32[$297+4>>2]|0;HEAP32[$295+8>>2]=HEAP32[$297+8>>2]|0;
          $298 = $12;
          $9 = $298;
          $299 = $9;
          $8 = $299;
          $300 = $8;
          $7 = $300;
          $301 = $7;
          $__a$i$i$i16 = $301;
          $__i$i$i$i17 = 0;
          while(1) {
           $302 = $__i$i$i$i17;
           $303 = ($302>>>0)<(3);
           if (!($303)) {
            break;
           }
           $304 = $__i$i$i$i17;
           $305 = $__a$i$i$i16;
           $306 = (($305) + ($304<<2)|0);
           HEAP32[$306>>2] = 0;
           $307 = $__i$i$i$i17;
           $308 = (($307) + 1)|0;
           $__i$i$i$i17 = $308;
          }
          __THREW__ = 0;
          invoke_viii(601,($263|0),($86|0),0);
          $309 = __THREW__; __THREW__ = 0;
          $310 = $309&1;
          if (!($310)) {
           $$expand_i1_val13 = 0;
           HEAP8[$89>>0] = $$expand_i1_val13;
           __THREW__ = 0;
           invoke_viii(602,($263|0),(80|0),(603|0));
           $311 = __THREW__; __THREW__ = 0;
          }
          $318 = ___cxa_find_matching_catch_2()|0;
          $319 = tempRet0;
          $78 = $318;
          $79 = $319;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($86);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($88);
       }
       $$pre_trunc15 = HEAP8[$89>>0]|0;
       $320 = $$pre_trunc15&1;
       if (!($320)) {
        __ZN5ValueD2Ev($result);
        $393 = $78;
        $394 = $79;
        ___resumeException($393|0);
        // unreachable;
       }
       ___cxa_free_exception(($263|0));
       __ZN5ValueD2Ev($result);
       $393 = $78;
       $394 = $79;
       ___resumeException($393|0);
       // unreachable;
      } else {
       label = 67;
      }
     }
    }
   }
  }
 } else {
  label = 67;
 }
 do {
  if ((label|0) == 67) {
   $321 = ((($92)) + 16|0);
   $322 = HEAP32[$321>>2]|0;
   $323 = $73;
   $5 = $323;
   $6 = 0;
   $324 = $5;
   $325 = $6;
   $326 = HEAP32[$324>>2]|0;
   $327 = (($326) + ($325<<2)|0);
   __THREW__ = 0;
   $328 = (invoke_ii(588,($327|0))|0);
   $329 = __THREW__; __THREW__ = 0;
   $330 = $329&1;
   if (!($330)) {
    $331 = $74;
    __THREW__ = 0;
    $332 = (invoke_iiii(586,($322|0),($328|0),($331|0))|0);
    $333 = __THREW__; __THREW__ = 0;
    $334 = $333&1;
    if (!($334)) {
     HEAP32[$90>>2] = $332;
     __THREW__ = 0;
     (invoke_iii(587,($result|0),($90|0))|0);
     $335 = __THREW__; __THREW__ = 0;
     $336 = $335&1;
     if ($336) {
      $361 = ___cxa_find_matching_catch_2()|0;
      $362 = tempRet0;
      $78 = $361;
      $79 = $362;
      __ZN5ValueD2Ev($90);
      __ZN5ValueD2Ev($result);
      $393 = $78;
      $394 = $79;
      ___resumeException($393|0);
      // unreachable;
     }
     __ZN5ValueD2Ev($90);
     __THREW__ = 0;
     $337 = (invoke_ii(588,($result|0))|0);
     $338 = __THREW__; __THREW__ = 0;
     $339 = $338&1;
     if (!($339)) {
      $340 = HEAP32[$337>>2]|0;
      $341 = ((($340)) + 12|0);
      $342 = HEAP32[$341>>2]|0;
      __THREW__ = 0;
      $343 = (invoke_ii($342|0,($337|0))|0);
      $344 = __THREW__; __THREW__ = 0;
      $345 = $344&1;
      if (!($345)) {
       $346 = ($343|0)==(32);
       if ($346) {
        $347 = ((($92)) + 16|0);
        $348 = HEAP32[$347>>2]|0;
        $349 = $73;
        $0 = $349;
        $1 = 1;
        $350 = $0;
        $351 = $1;
        $352 = HEAP32[$350>>2]|0;
        $353 = (($352) + ($351<<2)|0);
        __THREW__ = 0;
        $354 = (invoke_ii(588,($353|0))|0);
        $355 = __THREW__; __THREW__ = 0;
        $356 = $355&1;
        if ($356) {
         break;
        }
        $357 = $74;
        __THREW__ = 0;
        $358 = (invoke_iiii(586,($348|0),($354|0),($357|0))|0);
        $359 = __THREW__; __THREW__ = 0;
        $360 = $359&1;
        if ($360) {
         break;
        }
        HEAP32[$71>>2] = $358;
        $91 = 1;
        __ZN5ValueD2Ev($result);
        $392 = HEAP32[$71>>2]|0;
        STACKTOP = sp;return ($392|0);
       }
       $363 = $73;
       $2 = $363;
       $364 = $2;
       $365 = ((($364)) + 4|0);
       $366 = HEAP32[$365>>2]|0;
       $367 = HEAP32[$364>>2]|0;
       $368 = $366;
       $369 = $367;
       $370 = (($368) - ($369))|0;
       $371 = (($370|0) / 4)&-1;
       $372 = ($371>>>0)>(2);
       if ($372) {
        $373 = ((($92)) + 16|0);
        $374 = HEAP32[$373>>2]|0;
        $375 = $73;
        $3 = $375;
        $4 = 3;
        $376 = $3;
        $377 = $4;
        $378 = HEAP32[$376>>2]|0;
        $379 = (($378) + ($377<<2)|0);
        __THREW__ = 0;
        $380 = (invoke_ii(588,($379|0))|0);
        $381 = __THREW__; __THREW__ = 0;
        $382 = $381&1;
        if ($382) {
         break;
        }
        $383 = $74;
        __THREW__ = 0;
        $384 = (invoke_iiii(586,($374|0),($380|0),($383|0))|0);
        $385 = __THREW__; __THREW__ = 0;
        $386 = $385&1;
        if ($386) {
         break;
        }
        HEAP32[$71>>2] = $384;
        $91 = 1;
        __ZN5ValueD2Ev($result);
        $392 = HEAP32[$71>>2]|0;
        STACKTOP = sp;return ($392|0);
       } else {
        __THREW__ = 0;
        $387 = (invoke_ii(548,4)|0);
        $388 = __THREW__; __THREW__ = 0;
        $389 = $388&1;
        if ($389) {
         break;
        }
        ;HEAP32[$387>>2]=0|0;
        __ZN11AtomNilDataC2Ev($387);
        __THREW__ = 0;
        invoke_vii(584,($71|0),($387|0));
        $390 = __THREW__; __THREW__ = 0;
        $391 = $390&1;
        if ($391) {
         break;
        }
        $91 = 1;
        __ZN5ValueD2Ev($result);
        $392 = HEAP32[$71>>2]|0;
        STACKTOP = sp;return ($392|0);
       }
      }
     }
    }
   }
  }
 } while(0);
 $235 = ___cxa_find_matching_catch_2()|0;
 $236 = tempRet0;
 $78 = $235;
 $79 = $236;
 __ZN5ValueD2Ev($result);
 $393 = $78;
 $394 = $79;
 ___resumeException($393|0);
 // unreachable;
 return (0)|0;
}
function __ZN8Func_cdrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN8Func_cdrD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8Func_cdrD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8Func_cdr7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12949;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK8Func_cdr4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__annotator$i = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, $i = 0, $list = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $9 = sp + 360|0;
 $12 = sp + 348|0;
 $16 = sp + 332|0;
 $21 = sp + 312|0;
 $24 = sp + 300|0;
 $35 = sp;
 $40 = sp + 402|0;
 $__annotator$i = sp + 401|0;
 $51 = sp + 200|0;
 $76 = sp + 84|0;
 $80 = sp + 60|0;
 $81 = sp + 48|0;
 $82 = sp + 36|0;
 $85 = sp + 400|0;
 $i = sp + 16|0;
 $86 = sp + 12|0;
 $87 = sp + 8|0;
 $88 = sp + 4|0;
 $77 = $this;
 $78 = $arguments;
 $79 = $stack;
 $89 = $77;
 $90 = $78;
 $74 = $90;
 $75 = 0;
 $91 = $74;
 $92 = $75;
 $93 = HEAP32[$91>>2]|0;
 $94 = (($93) + ($92<<2)|0);
 $95 = (__ZNK5Value7getDataEv($94)|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($96)) + 12|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = (FUNCTION_TABLE_ii[$98 & 1023]($95)|0);
 $100 = $99 & 1;
 $101 = ($100|0)!=(0);
 if ($101) {
  $160 = $78;
  $54 = $160;
  $55 = 0;
  $161 = $54;
  $162 = $55;
  $163 = HEAP32[$161>>2]|0;
  $164 = (($163) + ($162<<2)|0);
  $165 = (__ZNK5Value7getDataEv($164)|0);
  $list = $165;
  $166 = $list;
  $167 = ((($166)) + 4|0);
  $26 = $167;
  $168 = $26;
  $169 = ((($168)) + 4|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = HEAP32[$168>>2]|0;
  $172 = $170;
  $173 = $171;
  $174 = (($172) - ($173))|0;
  $175 = (($174|0) / 12)&-1;
  $176 = ($175>>>0)>(1);
  if (!($176)) {
   $259 = (__Znwj(4)|0);
   ;HEAP32[$259>>2]=0|0;
   __ZN11AtomNilDataC2Ev($259);
   __ZN5ValueC2EP4Data($76,$259);
   $260 = HEAP32[$76>>2]|0;
   STACKTOP = sp;return ($260|0);
  }
  $177 = (__Znwj(16)|0);
  __THREW__ = 0;
  invoke_vi(544,($177|0));
  $178 = __THREW__; __THREW__ = 0;
  $179 = $178&1;
  if ($179) {
   $257 = ___cxa_find_matching_catch_2()|0;
   $258 = tempRet0;
   $83 = $257;
   $84 = $258;
   __ZdlPv($177);
   $261 = $83;
   $262 = $84;
   ___resumeException($261|0);
   // unreachable;
  }
  $result = $177;
  $180 = $list;
  $181 = ((($180)) + 4|0);
  $25 = $181;
  $182 = $25;
  $183 = HEAP32[$182>>2]|0;
  $22 = $182;
  $23 = $183;
  $184 = $23;
  $19 = $21;
  $20 = $184;
  $185 = $19;
  $186 = $20;
  HEAP32[$185>>2] = $186;
  $187 = HEAP32[$21>>2]|0;
  HEAP32[$24>>2] = $187;
  $188 = HEAP32[$24>>2]|0;
  HEAP32[$86>>2] = $188;
  $17 = $86;
  $18 = 1;
  $189 = $17;
  ;HEAP32[$16>>2]=HEAP32[$189>>2]|0;
  $190 = $18;
  $14 = $16;
  $15 = $190;
  $191 = $14;
  $192 = $15;
  $193 = HEAP32[$191>>2]|0;
  $194 = (($193) + (($192*12)|0)|0);
  HEAP32[$191>>2] = $194;
  $195 = HEAP32[$16>>2]|0;
  HEAP32[$i>>2] = $195;
  while(1) {
   $196 = $list;
   $197 = ((($196)) + 4|0);
   $13 = $197;
   $198 = $13;
   $199 = ((($198)) + 4|0);
   $200 = HEAP32[$199>>2]|0;
   $10 = $198;
   $11 = $200;
   $201 = $11;
   $7 = $9;
   $8 = $201;
   $202 = $7;
   $203 = $8;
   HEAP32[$202>>2] = $203;
   $204 = HEAP32[$9>>2]|0;
   HEAP32[$12>>2] = $204;
   $205 = HEAP32[$12>>2]|0;
   HEAP32[$87>>2] = $205;
   $4 = $i;
   $5 = $87;
   $206 = $4;
   $207 = $5;
   $2 = $206;
   $3 = $207;
   $208 = $2;
   $1 = $208;
   $209 = $1;
   $210 = HEAP32[$209>>2]|0;
   $211 = $3;
   $0 = $211;
   $212 = $0;
   $213 = HEAP32[$212>>2]|0;
   $214 = ($210|0)==($213|0);
   $215 = $214 ^ 1;
   $216 = $result;
   if (!($215)) {
    break;
   }
   $217 = ((($216)) + 4|0);
   $6 = $i;
   $218 = $6;
   $219 = HEAP32[$218>>2]|0;
   $48 = $217;
   $49 = $219;
   $220 = $48;
   $221 = ((($220)) + 4|0);
   $222 = HEAP32[$221>>2]|0;
   $47 = $220;
   $223 = $47;
   $224 = ((($223)) + 8|0);
   $46 = $224;
   $225 = $46;
   $45 = $225;
   $226 = $45;
   $227 = HEAP32[$226>>2]|0;
   $228 = ($222|0)!=($227|0);
   if ($228) {
    __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i,$220,1);
    $44 = $220;
    $229 = $44;
    $230 = ((($229)) + 8|0);
    $43 = $230;
    $231 = $43;
    $42 = $231;
    $232 = $42;
    $233 = ((($220)) + 4|0);
    $234 = HEAP32[$233>>2]|0;
    $41 = $234;
    $235 = $41;
    $236 = $49;
    $37 = $232;
    $38 = $235;
    $39 = $236;
    $237 = $37;
    $238 = $38;
    $239 = $39;
    $36 = $239;
    $240 = $36;
    ;HEAP8[$35>>0]=HEAP8[$40>>0]|0;
    $32 = $237;
    $33 = $238;
    $34 = $240;
    $241 = $32;
    $242 = $33;
    $243 = $34;
    $31 = $243;
    $244 = $31;
    $28 = $241;
    $29 = $242;
    $30 = $244;
    $245 = $29;
    $246 = $30;
    $27 = $246;
    $247 = $27;
    __ZN8LispNodeC2ERKS_($245,$247);
    __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i);
    $248 = ((($220)) + 4|0);
    $249 = HEAP32[$248>>2]|0;
    $250 = ((($249)) + 12|0);
    HEAP32[$248>>2] = $250;
   } else {
    $251 = $49;
    __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($220,$251);
   }
   $52 = $i;
   $53 = 0;
   $252 = $52;
   ;HEAP32[$51>>2]=HEAP32[$252>>2]|0;
   $50 = $252;
   $253 = $50;
   $254 = HEAP32[$253>>2]|0;
   $255 = ((($254)) + 12|0);
   HEAP32[$253>>2] = $255;
   $256 = HEAP32[$51>>2]|0;
   HEAP32[$88>>2] = $256;
  }
  __ZN5ValueC2EP4Data($76,$216);
  $260 = HEAP32[$76>>2]|0;
  STACKTOP = sp;return ($260|0);
 }
 $102 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$85>>0] = $$expand_i1_val;
 $103 = HEAP32[$89>>2]|0;
 $104 = ((($103)) + 8|0);
 $105 = HEAP32[$104>>2]|0;
 __THREW__ = 0;
 invoke_vii($105|0,($82|0),($89|0));
 $106 = __THREW__; __THREW__ = 0;
 $107 = $106&1;
 if ($107) {
  $151 = ___cxa_find_matching_catch_2()|0;
  $152 = tempRet0;
  $83 = $151;
  $84 = $152;
 } else {
  $72 = 13003;
  $73 = $82;
  $108 = $73;
  $109 = $72;
  __THREW__ = 0;
  $110 = (invoke_iiii(600,($108|0),0,($109|0))|0);
  $111 = __THREW__; __THREW__ = 0;
  $112 = $111&1;
  if ($112) {
   $153 = ___cxa_find_matching_catch_2()|0;
   $154 = tempRet0;
   $83 = $153;
   $84 = $154;
  } else {
   $71 = $110;
   $113 = $71;
   $69 = $81;
   $70 = $113;
   $114 = $69;
   $115 = $70;
   $68 = $115;
   $116 = $68;
   ;HEAP32[$114>>2]=HEAP32[$116>>2]|0;HEAP32[$114+4>>2]=HEAP32[$116+4>>2]|0;HEAP32[$114+8>>2]=HEAP32[$116+8>>2]|0;
   $117 = $70;
   $67 = $117;
   $118 = $67;
   $66 = $118;
   $119 = $66;
   $65 = $119;
   $120 = $65;
   $__a$i$i$i = $120;
   $__i$i$i$i = 0;
   while(1) {
    $121 = $__i$i$i$i;
    $122 = ($121>>>0)<(3);
    if (!($122)) {
     break;
    }
    $123 = $__i$i$i$i;
    $124 = $__a$i$i$i;
    $125 = (($124) + ($123<<2)|0);
    HEAP32[$125>>2] = 0;
    $126 = $__i$i$i$i;
    $127 = (($126) + 1)|0;
    $__i$i$i$i = $127;
   }
   $63 = $81;
   $64 = 12953;
   $128 = $63;
   $129 = $64;
   __THREW__ = 0;
   $130 = (invoke_iii(542,($128|0),($129|0))|0);
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if ($132) {
    $155 = ___cxa_find_matching_catch_2()|0;
    $156 = tempRet0;
    $83 = $155;
    $84 = $156;
   } else {
    $62 = $130;
    $133 = $62;
    $60 = $80;
    $61 = $133;
    $134 = $60;
    $135 = $61;
    $59 = $135;
    $136 = $59;
    ;HEAP32[$134>>2]=HEAP32[$136>>2]|0;HEAP32[$134+4>>2]=HEAP32[$136+4>>2]|0;HEAP32[$134+8>>2]=HEAP32[$136+8>>2]|0;
    $137 = $61;
    $58 = $137;
    $138 = $58;
    $57 = $138;
    $139 = $57;
    $56 = $139;
    $140 = $56;
    $__a$i$i$i1 = $140;
    $__i$i$i$i2 = 0;
    while(1) {
     $141 = $__i$i$i$i2;
     $142 = ($141>>>0)<(3);
     if (!($142)) {
      break;
     }
     $143 = $__i$i$i$i2;
     $144 = $__a$i$i$i1;
     $145 = (($144) + ($143<<2)|0);
     HEAP32[$145>>2] = 0;
     $146 = $__i$i$i$i2;
     $147 = (($146) + 1)|0;
     $__i$i$i$i2 = $147;
    }
    __THREW__ = 0;
    invoke_viii(601,($102|0),($80|0),0);
    $148 = __THREW__; __THREW__ = 0;
    $149 = $148&1;
    if (!($149)) {
     $$expand_i1_val2 = 0;
     HEAP8[$85>>0] = $$expand_i1_val2;
     __THREW__ = 0;
     invoke_viii(602,($102|0),(80|0),(603|0));
     $150 = __THREW__; __THREW__ = 0;
    }
    $157 = ___cxa_find_matching_catch_2()|0;
    $158 = tempRet0;
    $83 = $157;
    $84 = $158;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
 }
 $$pre_trunc = HEAP8[$85>>0]|0;
 $159 = $$pre_trunc&1;
 if (!($159)) {
  $261 = $83;
  $262 = $84;
  ___resumeException($261|0);
  // unreachable;
 }
 ___cxa_free_exception(($102|0));
 $261 = $83;
 $262 = $84;
 ___resumeException($261|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0, $__cap$i = 0, $__ms$i = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $8 = sp + 8|0;
 $13 = sp + 201|0;
 $22 = sp;
 $25 = sp + 200|0;
 $33 = sp + 80|0;
 $34 = sp + 68|0;
 $__v = sp + 20|0;
 $39 = $this;
 $40 = $__x;
 $43 = $39;
 $38 = $43;
 $44 = $38;
 $45 = ((($44)) + 8|0);
 $37 = $45;
 $46 = $37;
 $36 = $46;
 $47 = $36;
 $__a = $47;
 $35 = $43;
 $48 = $35;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$48>>2]|0;
 $52 = $50;
 $53 = $51;
 $54 = (($52) - ($53))|0;
 $55 = (($54|0) / 12)&-1;
 $56 = (($55) + 1)|0;
 $32 = $43;
 HEAP32[$33>>2] = $56;
 $57 = $32;
 $58 = (__ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8max_sizeEv($57)|0);
 $__ms$i = $58;
 $59 = HEAP32[$33>>2]|0;
 $60 = $__ms$i;
 $61 = ($59>>>0)>($60>>>0);
 if ($61) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($57);
  // unreachable;
 }
 $30 = $57;
 $62 = $30;
 $29 = $62;
 $63 = $29;
 $28 = $63;
 $64 = $28;
 $65 = ((($64)) + 8|0);
 $27 = $65;
 $66 = $27;
 $26 = $66;
 $67 = $26;
 $68 = HEAP32[$67>>2]|0;
 $69 = HEAP32[$63>>2]|0;
 $70 = $68;
 $71 = $69;
 $72 = (($70) - ($71))|0;
 $73 = (($72|0) / 12)&-1;
 $__cap$i = $73;
 $74 = $__cap$i;
 $75 = $__ms$i;
 $76 = (($75>>>0) / 2)&-1;
 $77 = ($74>>>0)>=($76>>>0);
 if ($77) {
  $78 = $__ms$i;
  $31 = $78;
 } else {
  $79 = $__cap$i;
  $80 = $79<<1;
  HEAP32[$34>>2] = $80;
  $23 = $34;
  $24 = $33;
  $81 = $23;
  $82 = $24;
  ;HEAP8[$22>>0]=HEAP8[$25>>0]|0;
  $20 = $81;
  $21 = $82;
  $83 = $20;
  $84 = $21;
  $17 = $22;
  $18 = $83;
  $19 = $84;
  $85 = $18;
  $86 = HEAP32[$85>>2]|0;
  $87 = $19;
  $88 = HEAP32[$87>>2]|0;
  $89 = ($86>>>0)<($88>>>0);
  $90 = $21;
  $91 = $20;
  $92 = $89 ? $90 : $91;
  $93 = HEAP32[$92>>2]|0;
  $31 = $93;
 }
 $94 = $31;
 $16 = $43;
 $95 = $16;
 $96 = ((($95)) + 4|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$95>>2]|0;
 $99 = $97;
 $100 = $98;
 $101 = (($99) - ($100))|0;
 $102 = (($101|0) / 12)&-1;
 $103 = $__a;
 __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEEC2EjjS4_($__v,$94,$102,$103);
 $104 = $__a;
 $105 = ((($__v)) + 8|0);
 $106 = HEAP32[$105>>2]|0;
 $15 = $106;
 $107 = $15;
 $108 = $40;
 $14 = $108;
 $109 = $14;
 $10 = $104;
 $11 = $107;
 $12 = $109;
 $110 = $10;
 $111 = $11;
 $112 = $12;
 $9 = $112;
 $113 = $9;
 ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
 $5 = $110;
 $6 = $111;
 $7 = $113;
 $114 = $5;
 $115 = $6;
 $116 = $7;
 $4 = $116;
 $117 = $4;
 $1 = $114;
 $2 = $115;
 $3 = $117;
 $118 = $2;
 $119 = $3;
 $0 = $119;
 $120 = $0;
 __THREW__ = 0;
 invoke_vii(638,($118|0),($120|0));
 $121 = __THREW__; __THREW__ = 0;
 $122 = $121&1;
 if ($122) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 }
 $123 = ((($__v)) + 8|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = ((($124)) + 12|0);
 HEAP32[$123>>2] = $125;
 __THREW__ = 0;
 invoke_vii(639,($43|0),($__v|0));
 $126 = __THREW__; __THREW__ = 0;
 $127 = $126&1;
 if ($127) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 } else {
  __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($__v);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEEC2EjjS4_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $16 = sp + 36|0;
 $20 = sp + 20|0;
 $22 = $this;
 $23 = $__cap;
 $24 = $__start;
 $25 = $__a;
 $26 = $22;
 $27 = ((($26)) + 12|0);
 $28 = $25;
 $19 = $27;
 HEAP32[$20>>2] = 0;
 $21 = $28;
 $29 = $19;
 $18 = $20;
 $30 = $18;
 $31 = HEAP32[$30>>2]|0;
 $32 = $21;
 $12 = $32;
 $33 = $12;
 $15 = $29;
 HEAP32[$16>>2] = $31;
 $17 = $33;
 $34 = $15;
 $14 = $16;
 $35 = $14;
 $36 = HEAP32[$35>>2]|0;
 HEAP32[$34>>2] = $36;
 $37 = ((($34)) + 4|0);
 $38 = $17;
 $13 = $38;
 $39 = $13;
 HEAP32[$37>>2] = $39;
 $40 = $23;
 $41 = ($40|0)!=(0);
 if ($41) {
  $2 = $26;
  $42 = $2;
  $43 = ((($42)) + 12|0);
  $1 = $43;
  $44 = $1;
  $0 = $44;
  $45 = $0;
  $46 = ((($45)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = $23;
  $7 = $47;
  $8 = $48;
  $49 = $7;
  $50 = $8;
  $4 = $49;
  $5 = $50;
  $6 = 0;
  $51 = $5;
  $52 = ($51*12)|0;
  $3 = $52;
  $53 = $3;
  $54 = (__Znwj($53)|0);
  $55 = $54;
 } else {
  $55 = 0;
 }
 HEAP32[$26>>2] = $55;
 $56 = HEAP32[$26>>2]|0;
 $57 = $24;
 $58 = (($56) + (($57*12)|0)|0);
 $59 = ((($26)) + 8|0);
 HEAP32[$59>>2] = $58;
 $60 = ((($26)) + 4|0);
 HEAP32[$60>>2] = $58;
 $61 = HEAP32[$26>>2]|0;
 $62 = $23;
 $63 = (($61) + (($62*12)|0)|0);
 $11 = $26;
 $64 = $11;
 $65 = ((($64)) + 12|0);
 $10 = $65;
 $66 = $10;
 $9 = $66;
 $67 = $9;
 HEAP32[$67>>2] = $63;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__t$i = 0, $__t$i1 = 0, $__t$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t$i2 = sp + 180|0;
 $__t$i1 = sp + 132|0;
 $__t$i = sp + 104|0;
 $32 = sp;
 $37 = sp + 204|0;
 $47 = $this;
 $48 = $__v;
 $49 = $47;
 __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE17__annotate_deleteEv($49);
 $46 = $49;
 $50 = $46;
 $51 = ((($50)) + 8|0);
 $45 = $51;
 $52 = $45;
 $44 = $52;
 $53 = $44;
 $54 = HEAP32[$49>>2]|0;
 $55 = ((($49)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = $48;
 $58 = ((($57)) + 4|0);
 $39 = $53;
 $40 = $54;
 $41 = $56;
 $42 = $58;
 while(1) {
  $59 = $41;
  $60 = $40;
  $61 = ($59|0)!=($60|0);
  if (!($61)) {
   break;
  }
  $62 = $39;
  $63 = $42;
  $64 = HEAP32[$63>>2]|0;
  $65 = ((($64)) + -12|0);
  $38 = $65;
  $66 = $38;
  $67 = $41;
  $68 = ((($67)) + -12|0);
  $41 = $68;
  $23 = $68;
  $69 = $23;
  $22 = $69;
  $70 = $22;
  $34 = $62;
  $35 = $66;
  $36 = $70;
  $71 = $34;
  $72 = $35;
  $73 = $36;
  $33 = $73;
  $74 = $33;
  ;HEAP8[$32>>0]=HEAP8[$37>>0]|0;
  $29 = $71;
  $30 = $72;
  $31 = $74;
  $75 = $29;
  $76 = $30;
  $77 = $31;
  $28 = $77;
  $78 = $28;
  $25 = $75;
  $26 = $76;
  $27 = $78;
  $79 = $26;
  $80 = $27;
  $24 = $80;
  $81 = $24;
  __ZN8LispNodeC2ERKS_($79,$81);
  $82 = $42;
  $83 = HEAP32[$82>>2]|0;
  $84 = ((($83)) + -12|0);
  HEAP32[$82>>2] = $84;
 }
 $85 = $48;
 $86 = ((($85)) + 4|0);
 $20 = $49;
 $21 = $86;
 $87 = $20;
 $19 = $87;
 $88 = $19;
 $89 = HEAP32[$88>>2]|0;
 HEAP32[$__t$i>>2] = $89;
 $90 = $21;
 $17 = $90;
 $91 = $17;
 $92 = HEAP32[$91>>2]|0;
 $93 = $20;
 HEAP32[$93>>2] = $92;
 $18 = $__t$i;
 $94 = $18;
 $95 = HEAP32[$94>>2]|0;
 $96 = $21;
 HEAP32[$96>>2] = $95;
 $97 = ((($49)) + 4|0);
 $98 = $48;
 $99 = ((($98)) + 8|0);
 $3 = $97;
 $4 = $99;
 $100 = $3;
 $2 = $100;
 $101 = $2;
 $102 = HEAP32[$101>>2]|0;
 HEAP32[$__t$i2>>2] = $102;
 $103 = $4;
 $0 = $103;
 $104 = $0;
 $105 = HEAP32[$104>>2]|0;
 $106 = $3;
 HEAP32[$106>>2] = $105;
 $1 = $__t$i2;
 $107 = $1;
 $108 = HEAP32[$107>>2]|0;
 $109 = $4;
 HEAP32[$109>>2] = $108;
 $7 = $49;
 $110 = $7;
 $111 = ((($110)) + 8|0);
 $6 = $111;
 $112 = $6;
 $5 = $112;
 $113 = $5;
 $114 = $48;
 $10 = $114;
 $115 = $10;
 $116 = ((($115)) + 12|0);
 $9 = $116;
 $117 = $9;
 $8 = $117;
 $118 = $8;
 $14 = $113;
 $15 = $118;
 $119 = $14;
 $13 = $119;
 $120 = $13;
 $121 = HEAP32[$120>>2]|0;
 HEAP32[$__t$i1>>2] = $121;
 $122 = $15;
 $11 = $122;
 $123 = $11;
 $124 = HEAP32[$123>>2]|0;
 $125 = $14;
 HEAP32[$125>>2] = $124;
 $12 = $__t$i1;
 $126 = $12;
 $127 = HEAP32[$126>>2]|0;
 $128 = $15;
 HEAP32[$128>>2] = $127;
 $129 = $48;
 $130 = ((($129)) + 4|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = $48;
 HEAP32[$132>>2] = $131;
 $16 = $49;
 $133 = $16;
 $134 = ((($133)) + 4|0);
 $135 = HEAP32[$134>>2]|0;
 $136 = HEAP32[$133>>2]|0;
 $137 = $135;
 $138 = $136;
 $139 = (($137) - ($138))|0;
 $140 = (($139|0) / 12)&-1;
 __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE14__annotate_newEj($49,$140);
 $43 = $49;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $19 = $this;
 $20 = $19;
 $18 = $20;
 $21 = $18;
 $22 = HEAP32[$21>>2]|0;
 $17 = $22;
 $23 = $17;
 $16 = $20;
 $24 = $16;
 $25 = HEAP32[$24>>2]|0;
 $15 = $25;
 $26 = $15;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 12)&-1;
 $39 = (($26) + (($38*12)|0)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $7 = $20;
 $43 = $7;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 $50 = (($49|0) / 12)&-1;
 $51 = (($42) + (($50*12)|0)|0);
 $9 = $20;
 $52 = $9;
 $53 = HEAP32[$52>>2]|0;
 $8 = $53;
 $54 = $8;
 $14 = $20;
 $55 = $14;
 $13 = $55;
 $56 = $13;
 $12 = $56;
 $57 = $12;
 $58 = ((($57)) + 8|0);
 $11 = $58;
 $59 = $11;
 $10 = $59;
 $60 = $10;
 $61 = HEAP32[$60>>2]|0;
 $62 = HEAP32[$56>>2]|0;
 $63 = $61;
 $64 = $62;
 $65 = (($63) - ($64))|0;
 $66 = (($65|0) / 12)&-1;
 $67 = (($54) + (($66*12)|0)|0);
 __ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($20,$23,$39,$51,$67);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp + 8|0;
 $21 = sp + 133|0;
 $28 = sp;
 $31 = sp + 132|0;
 $33 = $this;
 $34 = $33;
 $32 = $34;
 $35 = $32;
 $36 = ((($35)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $29 = $35;
 $30 = $37;
 $38 = $29;
 $39 = $30;
 ;HEAP8[$28>>0]=HEAP8[$31>>0]|0;
 $26 = $38;
 $27 = $39;
 $40 = $26;
 while(1) {
  $41 = $27;
  $42 = ((($40)) + 8|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ($41|0)!=($43|0);
  if (!($44)) {
   break;
  }
  $25 = $40;
  $45 = $25;
  $46 = ((($45)) + 12|0);
  $24 = $46;
  $47 = $24;
  $23 = $47;
  $48 = $23;
  $49 = ((($48)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($40)) + 8|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($52)) + -12|0);
  HEAP32[$51>>2] = $53;
  $22 = $53;
  $54 = $22;
  $19 = $50;
  $20 = $54;
  $55 = $19;
  $56 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $55;
  $17 = $56;
  $57 = $16;
  $58 = $17;
  $14 = $57;
  $15 = $58;
  $59 = $15;
  __ZN8LispNodeD2Ev($59);
 }
 $60 = HEAP32[$34>>2]|0;
 $61 = ($60|0)!=(0|0);
 if (!($61)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $62 = $13;
 $63 = ((($62)) + 12|0);
 $12 = $63;
 $64 = $12;
 $11 = $64;
 $65 = $11;
 $66 = ((($65)) + 4|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = HEAP32[$34>>2]|0;
 $10 = $34;
 $69 = $10;
 $9 = $69;
 $70 = $9;
 $71 = ((($70)) + 12|0);
 $8 = $71;
 $72 = $8;
 $7 = $72;
 $73 = $7;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 12)&-1;
 $4 = $67;
 $5 = $68;
 $6 = $79;
 $80 = $4;
 $81 = $5;
 $82 = $6;
 $1 = $80;
 $2 = $81;
 $3 = $82;
 $83 = $2;
 $0 = $83;
 $84 = $0;
 __ZdlPv($84);
 STACKTOP = sp;return;
}
function __ZN9Func_setqD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9Func_setqD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9Func_setqD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9Func_setq7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 12998;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9Func_setq4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, $atom = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $24 = sp + 108|0;
 $28 = sp + 84|0;
 $29 = sp + 72|0;
 $30 = sp + 60|0;
 $33 = sp + 224|0;
 $var = sp + 32|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp;
 $25 = $this;
 $26 = $arguments;
 $27 = $stack;
 $37 = $25;
 $38 = $26;
 $22 = $38;
 $23 = 0;
 $39 = $22;
 $40 = $23;
 $41 = HEAP32[$39>>2]|0;
 $42 = (($41) + ($40<<2)|0);
 $43 = (__ZNK5Value7getDataEv($42)|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ((($44)) + 12|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (FUNCTION_TABLE_ii[$46 & 1023]($43)|0);
 $48 = $47 & 2;
 $49 = ($48|0)!=(0);
 if ($49) {
  $108 = $26;
  $2 = $108;
  $3 = 0;
  $109 = $2;
  $110 = $3;
  $111 = HEAP32[$109>>2]|0;
  $112 = (($111) + ($110<<2)|0);
  $113 = (__ZNK5Value7getDataEv($112)|0);
  $atom = $113;
  $114 = $atom;
  __ZNK8AtomData7getNameEv($34,$114);
  $115 = ((($37)) + 16|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = $26;
  $0 = $117;
  $1 = 1;
  $118 = $0;
  $119 = $1;
  $120 = HEAP32[$118>>2]|0;
  $121 = (($120) + ($119<<2)|0);
  __THREW__ = 0;
  $122 = (invoke_ii(588,($121|0))|0);
  $123 = __THREW__; __THREW__ = 0;
  $124 = $123&1;
  if ($124) {
   label = 30;
  } else {
   $125 = $27;
   __THREW__ = 0;
   $126 = (invoke_iiii(586,($116|0),($122|0),($125|0))|0);
   $127 = __THREW__; __THREW__ = 0;
   $128 = $127&1;
   if ($128) {
    label = 30;
   } else {
    HEAP32[$35>>2] = $126;
    __THREW__ = 0;
    $129 = (invoke_ii(588,($35|0))|0);
    $130 = __THREW__; __THREW__ = 0;
    $131 = $130&1;
    if (!($131)) {
     $132 = HEAP32[$129>>2]|0;
     $133 = ((($132)) + 16|0);
     $134 = HEAP32[$133>>2]|0;
     __THREW__ = 0;
     $135 = (invoke_ii($134|0,($129|0))|0);
     $136 = __THREW__; __THREW__ = 0;
     $137 = $136&1;
     if (!($137)) {
      __THREW__ = 0;
      invoke_viii(553,($var|0),($34|0),($135|0));
      $138 = __THREW__; __THREW__ = 0;
      $139 = $138&1;
      if (!($139)) {
       __ZN5ValueD2Ev($35);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
       $140 = $27;
       __THREW__ = 0;
       invoke_vii(613,($36|0),($var|0));
       $141 = __THREW__; __THREW__ = 0;
       $142 = $141&1;
       do {
        if ($142) {
         label = 33;
        } else {
         __THREW__ = 0;
         invoke_vii(554,($140|0),($36|0));
         $143 = __THREW__; __THREW__ = 0;
         $144 = $143&1;
         if ($144) {
          $155 = ___cxa_find_matching_catch_2()|0;
          $156 = tempRet0;
          $31 = $155;
          $32 = $156;
          __ZN3VarD2Ev($36);
          break;
         }
         __ZN3VarD2Ev($36);
         $145 = ((($var)) + 12|0);
         __THREW__ = 0;
         invoke_vii(596,($24|0),($145|0));
         $146 = __THREW__; __THREW__ = 0;
         $147 = $146&1;
         if ($147) {
          label = 33;
         } else {
          __ZN3VarD2Ev($var);
          $148 = HEAP32[$24>>2]|0;
          STACKTOP = sp;return ($148|0);
         }
        }
       } while(0);
       if ((label|0) == 33) {
        $153 = ___cxa_find_matching_catch_2()|0;
        $154 = tempRet0;
        $31 = $153;
        $32 = $154;
       }
       __ZN3VarD2Ev($var);
       $157 = $31;
       $158 = $32;
       ___resumeException($157|0);
       // unreachable;
      }
     }
    }
    $151 = ___cxa_find_matching_catch_2()|0;
    $152 = tempRet0;
    $31 = $151;
    $32 = $152;
    __ZN5ValueD2Ev($35);
   }
  }
  if ((label|0) == 30) {
   $149 = ___cxa_find_matching_catch_2()|0;
   $150 = tempRet0;
   $31 = $149;
   $32 = $150;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
  $157 = $31;
  $158 = $32;
  ___resumeException($157|0);
  // unreachable;
 }
 $50 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$33>>0] = $$expand_i1_val;
 $51 = HEAP32[$37>>2]|0;
 $52 = ((($51)) + 8|0);
 $53 = HEAP32[$52>>2]|0;
 __THREW__ = 0;
 invoke_vii($53|0,($30|0),($37|0));
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $99 = ___cxa_find_matching_catch_2()|0;
  $100 = tempRet0;
  $31 = $99;
  $32 = $100;
 } else {
  $20 = 13003;
  $21 = $30;
  $56 = $21;
  $57 = $20;
  __THREW__ = 0;
  $58 = (invoke_iiii(600,($56|0),0,($57|0))|0);
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if ($60) {
   $101 = ___cxa_find_matching_catch_2()|0;
   $102 = tempRet0;
   $31 = $101;
   $32 = $102;
  } else {
   $19 = $58;
   $61 = $19;
   $17 = $29;
   $18 = $61;
   $62 = $17;
   $63 = $18;
   $16 = $63;
   $64 = $16;
   ;HEAP32[$62>>2]=HEAP32[$64>>2]|0;HEAP32[$62+4>>2]=HEAP32[$64+4>>2]|0;HEAP32[$62+8>>2]=HEAP32[$64+8>>2]|0;
   $65 = $18;
   $15 = $65;
   $66 = $15;
   $14 = $66;
   $67 = $14;
   $13 = $67;
   $68 = $13;
   $__a$i$i$i = $68;
   $__i$i$i$i = 0;
   while(1) {
    $69 = $__i$i$i$i;
    $70 = ($69>>>0)<(3);
    if (!($70)) {
     break;
    }
    $71 = $__i$i$i$i;
    $72 = $__a$i$i$i;
    $73 = (($72) + ($71<<2)|0);
    HEAP32[$73>>2] = 0;
    $74 = $__i$i$i$i;
    $75 = (($74) + 1)|0;
    $__i$i$i$i = $75;
   }
   $11 = $29;
   $12 = 13017;
   $76 = $11;
   $77 = $12;
   __THREW__ = 0;
   $78 = (invoke_iii(542,($76|0),($77|0))|0);
   $79 = __THREW__; __THREW__ = 0;
   $80 = $79&1;
   if ($80) {
    $103 = ___cxa_find_matching_catch_2()|0;
    $104 = tempRet0;
    $31 = $103;
    $32 = $104;
   } else {
    $10 = $78;
    $81 = $10;
    $8 = $28;
    $9 = $81;
    $82 = $8;
    $83 = $9;
    $7 = $83;
    $84 = $7;
    ;HEAP32[$82>>2]=HEAP32[$84>>2]|0;HEAP32[$82+4>>2]=HEAP32[$84+4>>2]|0;HEAP32[$82+8>>2]=HEAP32[$84+8>>2]|0;
    $85 = $9;
    $6 = $85;
    $86 = $6;
    $5 = $86;
    $87 = $5;
    $4 = $87;
    $88 = $4;
    $__a$i$i$i1 = $88;
    $__i$i$i$i2 = 0;
    while(1) {
     $89 = $__i$i$i$i2;
     $90 = ($89>>>0)<(3);
     if (!($90)) {
      break;
     }
     $91 = $__i$i$i$i2;
     $92 = $__a$i$i$i1;
     $93 = (($92) + ($91<<2)|0);
     HEAP32[$93>>2] = 0;
     $94 = $__i$i$i$i2;
     $95 = (($94) + 1)|0;
     $__i$i$i$i2 = $95;
    }
    __THREW__ = 0;
    invoke_viii(601,($50|0),($28|0),0);
    $96 = __THREW__; __THREW__ = 0;
    $97 = $96&1;
    if (!($97)) {
     $$expand_i1_val2 = 0;
     HEAP8[$33>>0] = $$expand_i1_val2;
     __THREW__ = 0;
     invoke_viii(602,($50|0),(80|0),(603|0));
     $98 = __THREW__; __THREW__ = 0;
    }
    $105 = ___cxa_find_matching_catch_2()|0;
    $106 = tempRet0;
    $31 = $105;
    $32 = $106;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
 }
 $$pre_trunc = HEAP8[$33>>0]|0;
 $107 = $$pre_trunc&1;
 if (!($107)) {
  $157 = $31;
  $158 = $32;
  ___resumeException($157|0);
  // unreachable;
 }
 ___cxa_free_exception(($50|0));
 $157 = $31;
 $158 = $32;
 ___resumeException($157|0);
 // unreachable;
 return (0)|0;
}
function __ZN13Func_continueD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN13Func_continueD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN13Func_continueD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK13Func_continue7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13067;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK13Func_continue4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $arguments;
 $2 = $stack;
 $3 = (___cxa_allocate_exception(1)|0);
 ___cxa_throw(($3|0),(344|0),(0|0));
 // unreachable;
 return (0)|0;
}
function __ZN9Func__Or_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN9Func__Or_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN9Func__Or_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK9Func__Or_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13087;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK9Func__Or_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nil = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 28|0;
 $nil = sp + 12|0;
 $5 = $this;
 $6 = $arguments;
 $7 = $stack;
 __ZN11AtomNilDataC2Ev($nil);
 $11 = $6;
 $2 = $11;
 $3 = 0;
 $12 = $2;
 $13 = $3;
 $14 = HEAP32[$12>>2]|0;
 $15 = (($14) + ($13<<2)|0);
 __THREW__ = 0;
 $16 = (invoke_ii(588,($15|0))|0);
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 do {
  if (!($18)) {
   $19 = HEAP32[$16>>2]|0;
   $20 = ((($19)) + 20|0);
   $21 = HEAP32[$20>>2]|0;
   __THREW__ = 0;
   $22 = (invoke_iii($21|0,($16|0),($nil|0))|0);
   $23 = __THREW__; __THREW__ = 0;
   $24 = $23&1;
   if (!($24)) {
    if ($22) {
     $25 = $6;
     $0 = $25;
     $1 = 1;
     $26 = $0;
     $27 = $1;
     $28 = HEAP32[$26>>2]|0;
     $29 = (($28) + ($27<<2)|0);
     __THREW__ = 0;
     $30 = (invoke_ii(588,($29|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      break;
     }
     $33 = HEAP32[$30>>2]|0;
     $34 = ((($33)) + 20|0);
     $35 = HEAP32[$34>>2]|0;
     __THREW__ = 0;
     $36 = (invoke_iii($35|0,($30|0),($nil|0))|0);
     $37 = __THREW__; __THREW__ = 0;
     $38 = $37&1;
     if ($38) {
      break;
     }
     if ($36) {
      __THREW__ = 0;
      $48 = (invoke_ii(548,4)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       break;
      }
      ;HEAP32[$48>>2]=0|0;
      __ZN11AtomNilDataC2Ev($48);
      __THREW__ = 0;
      invoke_vii(584,($4|0),($48|0));
      $51 = __THREW__; __THREW__ = 0;
      $52 = $51&1;
      if ($52) {
       break;
      }
      $10 = 1;
      __ZN11AtomNilDataD2Ev($nil);
      $53 = HEAP32[$4>>2]|0;
      STACKTOP = sp;return ($53|0);
     }
    }
    __THREW__ = 0;
    $39 = (invoke_ii(548,4)|0);
    $40 = __THREW__; __THREW__ = 0;
    $41 = $40&1;
    if (!($41)) {
     ;HEAP32[$39>>2]=0|0;
     __ZN9AtomTDataC2Ev($39);
     __THREW__ = 0;
     invoke_vii(584,($4|0),($39|0));
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if (!($43)) {
      $10 = 1;
      __ZN11AtomNilDataD2Ev($nil);
      $53 = HEAP32[$4>>2]|0;
      STACKTOP = sp;return ($53|0);
     }
    }
   }
  }
 } while(0);
 $44 = ___cxa_find_matching_catch_2()|0;
 $45 = tempRet0;
 $8 = $44;
 $9 = $45;
 __ZN11AtomNilDataD2Ev($nil);
 $46 = $8;
 $47 = $9;
 ___resumeException($46|0);
 // unreachable;
 return (0)|0;
}
function __ZN10Func_quoteD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10Func_quoteD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN10Func_quoteD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK10Func_quote7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13103;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK10Func_quote4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $2 = sp + 12|0;
 $3 = $this;
 $4 = $arguments;
 $5 = $stack;
 $6 = $4;
 $0 = $6;
 $1 = 0;
 $7 = $0;
 $8 = $1;
 $9 = HEAP32[$7>>2]|0;
 $10 = (($9) + ($8<<2)|0);
 $11 = (__ZNK5Value7getDataEv($10)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (FUNCTION_TABLE_ii[$14 & 1023]($11)|0);
 __ZN5ValueC2EP4Data($2,$15);
 $16 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($16|0);
}
function __ZN14Func__Greater_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN14Func__Greater_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN14Func__Greater_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK14Func__Greater_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13126;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK14Func__Greater_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0;
 var $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $operand1 = 0.0;
 var $operand2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $26 = sp + 60|0;
 $30 = sp + 36|0;
 $33 = sp + 169|0;
 $34 = sp + 16|0;
 $35 = sp + 168|0;
 $27 = $this;
 $28 = $arguments;
 $29 = $stack;
 $36 = $28;
 $24 = $36;
 $25 = 0;
 $37 = $24;
 $38 = $25;
 $39 = HEAP32[$37>>2]|0;
 $40 = (($39) + ($38<<2)|0);
 $41 = (__ZNK5Value7getDataEv($40)|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ((($42)) + 12|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (FUNCTION_TABLE_ii[$44 & 1023]($41)|0);
 $46 = ($45|0)==(16);
 $47 = $28;
 do {
  if ($46) {
   $22 = $47;
   $23 = 0;
   $48 = $22;
   $49 = $23;
   $50 = HEAP32[$48>>2]|0;
   $51 = (($50) + ($49<<2)|0);
   $52 = (__ZNK5Value7getDataEv($51)|0);
   $53 = (+__ZNK13AtomFloatData6getNumEv($52));
   $operand1 = $53;
  } else {
   $20 = $47;
   $21 = 0;
   $54 = $20;
   $55 = $21;
   $56 = HEAP32[$54>>2]|0;
   $57 = (($56) + ($55<<2)|0);
   $58 = (__ZNK5Value7getDataEv($57)|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($59)) + 12|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = (FUNCTION_TABLE_ii[$61 & 1023]($58)|0);
   $63 = ($62|0)==(8);
   if ($63) {
    $64 = $28;
    $13 = $64;
    $14 = 0;
    $65 = $13;
    $66 = $14;
    $67 = HEAP32[$65>>2]|0;
    $68 = (($67) + ($66<<2)|0);
    $69 = (__ZNK5Value7getDataEv($68)|0);
    $70 = (__ZNK11AtomIntData6getNumEv($69)|0);
    $71 = (+($70|0));
    $operand1 = $71;
    break;
   }
   $72 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$33>>0] = $$expand_i1_val;
   $11 = $30;
   $12 = 13134;
   $73 = $11;
   $10 = $73;
   $74 = $10;
   $9 = $74;
   $75 = $9;
   $8 = $75;
   $76 = $12;
   $77 = $12;
   __THREW__ = 0;
   $78 = (invoke_ii(550,($77|0))|0);
   $79 = __THREW__; __THREW__ = 0;
   $80 = $79&1;
   if ($80) {
    label = 9;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($73|0),($76|0),($78|0));
    $81 = __THREW__; __THREW__ = 0;
    $82 = $81&1;
    if ($82) {
     label = 9;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($72|0),($30|0),0);
     $83 = __THREW__; __THREW__ = 0;
     $84 = $83&1;
     if (!($84)) {
      $$expand_i1_val2 = 0;
      HEAP8[$33>>0] = $$expand_i1_val2;
      __THREW__ = 0;
      invoke_viii(602,($72|0),(80|0),(603|0));
      $85 = __THREW__; __THREW__ = 0;
     }
     $88 = ___cxa_find_matching_catch_2()|0;
     $89 = tempRet0;
     $31 = $88;
     $32 = $89;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
    }
   }
   if ((label|0) == 9) {
    $86 = ___cxa_find_matching_catch_2()|0;
    $87 = tempRet0;
    $31 = $86;
    $32 = $87;
   }
   $$pre_trunc = HEAP8[$33>>0]|0;
   $90 = $$pre_trunc&1;
   if (!($90)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($72|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $91 = $28;
 $6 = $91;
 $7 = 1;
 $92 = $6;
 $93 = $7;
 $94 = HEAP32[$92>>2]|0;
 $95 = (($94) + ($93<<2)|0);
 $96 = (__ZNK5Value7getDataEv($95)|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = ((($97)) + 12|0);
 $99 = HEAP32[$98>>2]|0;
 $100 = (FUNCTION_TABLE_ii[$99 & 1023]($96)|0);
 $101 = ($100|0)==(16);
 $102 = $28;
 do {
  if ($101) {
   $4 = $102;
   $5 = 1;
   $103 = $4;
   $104 = $5;
   $105 = HEAP32[$103>>2]|0;
   $106 = (($105) + ($104<<2)|0);
   $107 = (__ZNK5Value7getDataEv($106)|0);
   $108 = (+__ZNK13AtomFloatData6getNumEv($107));
   $operand2 = $108;
  } else {
   $2 = $102;
   $3 = 1;
   $109 = $2;
   $110 = $3;
   $111 = HEAP32[$109>>2]|0;
   $112 = (($111) + ($110<<2)|0);
   $113 = (__ZNK5Value7getDataEv($112)|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($114)) + 12|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = (FUNCTION_TABLE_ii[$116 & 1023]($113)|0);
   $118 = ($117|0)==(8);
   if ($118) {
    $119 = $28;
    $0 = $119;
    $1 = 1;
    $120 = $0;
    $121 = $1;
    $122 = HEAP32[$120>>2]|0;
    $123 = (($122) + ($121<<2)|0);
    $124 = (__ZNK5Value7getDataEv($123)|0);
    $125 = (__ZNK11AtomIntData6getNumEv($124)|0);
    $126 = (+($125|0));
    $operand2 = $126;
    break;
   }
   $127 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val5 = 1;
   HEAP8[$35>>0] = $$expand_i1_val5;
   $18 = $34;
   $19 = 13170;
   $128 = $18;
   $17 = $128;
   $129 = $17;
   $16 = $129;
   $130 = $16;
   $15 = $130;
   $131 = $19;
   $132 = $19;
   __THREW__ = 0;
   $133 = (invoke_ii(550,($132|0))|0);
   $134 = __THREW__; __THREW__ = 0;
   $135 = $134&1;
   if ($135) {
    label = 21;
   } else {
    __THREW__ = 0;
    invoke_viii(551,($128|0),($131|0),($133|0));
    $136 = __THREW__; __THREW__ = 0;
    $137 = $136&1;
    if ($137) {
     label = 21;
    } else {
     __THREW__ = 0;
     invoke_viii(601,($127|0),($34|0),0);
     $138 = __THREW__; __THREW__ = 0;
     $139 = $138&1;
     if (!($139)) {
      $$expand_i1_val7 = 0;
      HEAP8[$35>>0] = $$expand_i1_val7;
      __THREW__ = 0;
      invoke_viii(602,($127|0),(80|0),(603|0));
      $140 = __THREW__; __THREW__ = 0;
     }
     $143 = ___cxa_find_matching_catch_2()|0;
     $144 = tempRet0;
     $31 = $143;
     $32 = $144;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
    }
   }
   if ((label|0) == 21) {
    $141 = ___cxa_find_matching_catch_2()|0;
    $142 = tempRet0;
    $31 = $141;
    $32 = $142;
   }
   $$pre_trunc9 = HEAP8[$35>>0]|0;
   $145 = $$pre_trunc9&1;
   if (!($145)) {
    $151 = $31;
    $152 = $32;
    ___resumeException($151|0);
    // unreachable;
   }
   ___cxa_free_exception(($127|0));
   $151 = $31;
   $152 = $32;
   ___resumeException($151|0);
   // unreachable;
  }
 } while(0);
 $146 = $operand1;
 $147 = $operand2;
 $148 = $146 > $147;
 $149 = (__Znwj(4)|0);
 ;HEAP32[$149>>2]=0|0;
 if ($148) {
  __ZN9AtomTDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 } else {
  __ZN11AtomNilDataC2Ev($149);
  __ZN5ValueC2EP4Data($26,$149);
  $150 = HEAP32[$26>>2]|0;
  STACKTOP = sp;return ($150|0);
 }
 return (0)|0;
}
function __ZN11Func__Plus_D2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN11Func__Plus_D0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN11Func__Plus_D2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK11Func__Plus_7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13221;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK11Func__Plus_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0;
 var $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $data = 0, $i = 0, $sum = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $9 = sp + 148|0;
 $12 = sp + 136|0;
 $20 = sp + 104|0;
 $25 = sp + 84|0;
 $28 = sp + 72|0;
 $31 = sp + 60|0;
 $i = sp + 44|0;
 $35 = sp + 40|0;
 $36 = sp + 36|0;
 $37 = sp + 20|0;
 $40 = sp + 188|0;
 $41 = sp + 8|0;
 $32 = $this;
 $33 = $arguments;
 $34 = $stack;
 $30 = $i;
 $42 = $30;
 HEAP32[$42>>2] = 0;
 $43 = $33;
 $29 = $43;
 $44 = $29;
 $45 = HEAP32[$44>>2]|0;
 $26 = $44;
 $27 = $45;
 $46 = $27;
 $23 = $25;
 $24 = $46;
 $47 = $23;
 $48 = $24;
 HEAP32[$47>>2] = $48;
 $49 = HEAP32[$25>>2]|0;
 HEAP32[$28>>2] = $49;
 $50 = HEAP32[$28>>2]|0;
 HEAP32[$35>>2] = $50;
 ;HEAP32[$i>>2]=HEAP32[$35>>2]|0;
 while(1) {
  $51 = $33;
  $13 = $51;
  $52 = $13;
  $53 = ((($52)) + 4|0);
  $54 = HEAP32[$53>>2]|0;
  $10 = $52;
  $11 = $54;
  $55 = $11;
  $7 = $9;
  $8 = $55;
  $56 = $7;
  $57 = $8;
  HEAP32[$56>>2] = $57;
  $58 = HEAP32[$9>>2]|0;
  HEAP32[$12>>2] = $58;
  $59 = HEAP32[$12>>2]|0;
  HEAP32[$36>>2] = $59;
  $5 = $i;
  $6 = $36;
  $60 = $5;
  $61 = $6;
  $3 = $60;
  $4 = $61;
  $62 = $3;
  $2 = $62;
  $63 = $2;
  $64 = HEAP32[$63>>2]|0;
  $65 = $4;
  $1 = $65;
  $66 = $1;
  $67 = HEAP32[$66>>2]|0;
  $68 = ($64|0)==($67|0);
  $69 = $68 ^ 1;
  if (!($69)) {
   label = 16;
   break;
  }
  $0 = $i;
  $70 = $0;
  $71 = HEAP32[$70>>2]|0;
  $72 = (__ZNK5Value7getDataEv($71)|0);
  $data = $72;
  $73 = $data;
  $74 = HEAP32[$73>>2]|0;
  $75 = ((($74)) + 12|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (FUNCTION_TABLE_ii[$76 & 1023]($73)|0);
  $78 = ($77|0)==(16);
  $79 = $data;
  if ($78) {
   $80 = (+__ZNK13AtomFloatData6getNumEv($79));
   $81 = $sum;
   $82 = $81 + $80;
   $sum = $82;
  } else {
   $83 = HEAP32[$79>>2]|0;
   $84 = ((($83)) + 12|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (FUNCTION_TABLE_ii[$85 & 1023]($79)|0);
   $87 = ($86|0)==(8);
   if (!($87)) {
    break;
   }
   $88 = $data;
   $89 = (__ZNK11AtomIntData6getNumEv($88)|0);
   $90 = (+($89|0));
   $91 = $sum;
   $92 = $91 + $90;
   $sum = $92;
  }
  $21 = $i;
  $22 = 0;
  $112 = $21;
  ;HEAP32[$20>>2]=HEAP32[$112>>2]|0;
  $19 = $112;
  $113 = $19;
  $114 = HEAP32[$113>>2]|0;
  $115 = ((($114)) + 4|0);
  HEAP32[$113>>2] = $115;
  $116 = HEAP32[$20>>2]|0;
  HEAP32[$41>>2] = $116;
 }
 if ((label|0) == 16) {
  $117 = (__Znwj(16)|0);
  $118 = $sum;
  __THREW__ = 0;
  invoke_vid(623,($117|0),(+$118));
  $119 = __THREW__; __THREW__ = 0;
  $120 = $119&1;
  if (!($120)) {
   __ZN5ValueC2EP4Data($31,$117);
   $121 = HEAP32[$31>>2]|0;
   STACKTOP = sp;return ($121|0);
  }
  $122 = ___cxa_find_matching_catch_2()|0;
  $123 = tempRet0;
  $38 = $122;
  $39 = $123;
  __ZdlPv($117);
  $124 = $38;
  $125 = $39;
  ___resumeException($124|0);
  // unreachable;
 }
 $93 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val = 1;
 HEAP8[$40>>0] = $$expand_i1_val;
 $17 = $37;
 $18 = 13226;
 $94 = $17;
 $16 = $94;
 $95 = $16;
 $15 = $95;
 $96 = $15;
 $14 = $96;
 $97 = $18;
 $98 = $18;
 __THREW__ = 0;
 $99 = (invoke_ii(550,($98|0))|0);
 $100 = __THREW__; __THREW__ = 0;
 $101 = $100&1;
 if ($101) {
  label = 11;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($94|0),($97|0),($99|0));
  $102 = __THREW__; __THREW__ = 0;
  $103 = $102&1;
  if ($103) {
   label = 11;
  } else {
   __THREW__ = 0;
   invoke_viii(601,($93|0),($37|0),0);
   $104 = __THREW__; __THREW__ = 0;
   $105 = $104&1;
   if (!($105)) {
    $$expand_i1_val2 = 0;
    HEAP8[$40>>0] = $$expand_i1_val2;
    __THREW__ = 0;
    invoke_viii(602,($93|0),(80|0),(603|0));
    $106 = __THREW__; __THREW__ = 0;
   }
   $109 = ___cxa_find_matching_catch_2()|0;
   $110 = tempRet0;
   $38 = $109;
   $39 = $110;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
  }
 }
 if ((label|0) == 11) {
  $107 = ___cxa_find_matching_catch_2()|0;
  $108 = tempRet0;
  $38 = $107;
  $39 = $108;
 }
 $$pre_trunc = HEAP8[$40>>0]|0;
 $111 = $$pre_trunc&1;
 if (!($111)) {
  $124 = $38;
  $125 = $39;
  ___resumeException($124|0);
  // unreachable;
 }
 ___cxa_free_exception(($93|0));
 $124 = $38;
 $125 = $39;
 ___resumeException($124|0);
 // unreachable;
 return (0)|0;
}
function __ZN12LispFunctionD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN12LispFunctionD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN12LispFunctionD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8Function7getNameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = $this;
 $3 = $agg$result;
 $4 = 13299;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $0 = $8;
 $9 = $4;
 $10 = $4;
 $11 = (__ZNSt3__111char_traitsIcE6lengthEPKc($10)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($6,$9,$11);
 STACKTOP = sp;return;
}
function __ZNK12LispFunction4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc15 = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0;
 var $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0;
 var $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0;
 var $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0;
 var $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0;
 var $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0;
 var $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0;
 var $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0;
 var $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0;
 var $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0;
 var $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0;
 var $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0;
 var $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0;
 var $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0;
 var $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0;
 var $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0;
 var $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i$i$i$i = 0, $__a$i$i$i11 = 0, $__a$i$i$i4 = 0, $__a$i$i$i7 = 0;
 var $__annotator$i = 0, $__annotator$i15 = 0, $__i$i$i$i = 0, $__i$i$i$i$i$i$i = 0, $__i$i$i$i12 = 0, $__i$i$i$i5 = 0, $__i$i$i$i8 = 0, $e = 0, $i = 0, $i1 = 0, $i2 = 0, $listData = 0, $names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 848|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $14 = sp + 8|0;
 $19 = sp + 842|0;
 $__annotator$i15 = sp + 841|0;
 $80 = sp + 488|0;
 $98 = sp;
 $103 = sp + 840|0;
 $__annotator$i = sp + 839|0;
 $123 = sp + 316|0;
 $126 = sp + 304|0;
 $130 = sp + 288|0;
 $133 = sp + 276|0;
 $138 = sp + 256|0;
 $141 = sp + 244|0;
 $145 = sp + 228|0;
 $names = sp + 204|0;
 $i = sp + 200|0;
 $149 = sp + 196|0;
 $150 = sp + 184|0;
 $153 = sp + 172|0;
 $154 = sp + 160|0;
 $155 = sp + 148|0;
 $156 = sp + 136|0;
 $157 = sp + 838|0;
 $158 = sp + 124|0;
 $159 = sp + 112|0;
 $160 = sp + 100|0;
 $161 = sp + 837|0;
 $162 = sp + 80|0;
 $163 = sp + 56|0;
 $164 = sp + 40|0;
 $165 = sp + 24|0;
 $166 = sp + 836|0;
 $167 = sp + 20|0;
 $168 = sp + 12|0;
 $146 = $this;
 $147 = $arguments;
 $148 = $stack;
 $169 = $146;
 $144 = $names;
 $170 = $144;
 $143 = $170;
 $171 = $143;
 $142 = $171;
 HEAP32[$171>>2] = 0;
 $172 = ((($171)) + 4|0);
 HEAP32[$172>>2] = 0;
 $173 = ((($171)) + 8|0);
 $140 = $173;
 HEAP32[$141>>2] = 0;
 $174 = $140;
 $139 = $141;
 $175 = $139;
 $176 = HEAP32[$175>>2]|0;
 $137 = $174;
 HEAP32[$138>>2] = $176;
 $177 = $137;
 $136 = $177;
 $135 = $138;
 $178 = $135;
 $179 = HEAP32[$178>>2]|0;
 HEAP32[$177>>2] = $179;
 $180 = ((($169)) + 16|0);
 $181 = HEAP32[$180>>2]|0;
 $182 = ((($181)) + 4|0);
 $134 = $182;
 $183 = $134;
 $184 = HEAP32[$183>>2]|0;
 $131 = $183;
 $132 = $184;
 $185 = $132;
 $128 = $130;
 $129 = $185;
 $186 = $128;
 $187 = $129;
 HEAP32[$186>>2] = $187;
 $188 = HEAP32[$130>>2]|0;
 HEAP32[$133>>2] = $188;
 $189 = HEAP32[$133>>2]|0;
 HEAP32[$i>>2] = $189;
 while(1) {
  $190 = ((($169)) + 16|0);
  $191 = HEAP32[$190>>2]|0;
  $192 = ((($191)) + 4|0);
  $127 = $192;
  $193 = $127;
  $194 = ((($193)) + 4|0);
  $195 = HEAP32[$194>>2]|0;
  $124 = $193;
  $125 = $195;
  $196 = $125;
  $121 = $123;
  $122 = $196;
  $197 = $121;
  $198 = $122;
  HEAP32[$197>>2] = $198;
  $199 = HEAP32[$123>>2]|0;
  HEAP32[$126>>2] = $199;
  $200 = HEAP32[$126>>2]|0;
  HEAP32[$149>>2] = $200;
  $119 = $i;
  $120 = $149;
  $201 = $119;
  $202 = $120;
  $117 = $201;
  $118 = $202;
  $203 = $117;
  $116 = $203;
  $204 = $116;
  $205 = HEAP32[$204>>2]|0;
  $206 = $118;
  $115 = $206;
  $207 = $115;
  $208 = HEAP32[$207>>2]|0;
  $209 = ($205|0)==($208|0);
  $210 = $209 ^ 1;
  if (!($210)) {
   label = 13;
   break;
  }
  $114 = $i;
  $211 = $114;
  $212 = HEAP32[$211>>2]|0;
  $213 = HEAP32[$212>>2]|0;
  __THREW__ = 0;
  invoke_vii(637,($150|0),($213|0));
  $214 = __THREW__; __THREW__ = 0;
  $215 = $214&1;
  if ($215) {
   break;
  }
  $112 = $names;
  $113 = $150;
  $216 = $112;
  $217 = ((($216)) + 4|0);
  $218 = HEAP32[$217>>2]|0;
  $111 = $216;
  $219 = $111;
  $220 = ((($219)) + 8|0);
  $110 = $220;
  $221 = $110;
  $109 = $221;
  $222 = $109;
  $223 = HEAP32[$222>>2]|0;
  $224 = ($218>>>0)<($223>>>0);
  if ($224) {
   __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__RAII_IncreaseAnnotatorC2ERKS8_j($__annotator$i,$216,1);
   $108 = $216;
   $225 = $108;
   $226 = ((($225)) + 8|0);
   $107 = $226;
   $227 = $107;
   $106 = $227;
   $228 = $106;
   $229 = ((($216)) + 4|0);
   $230 = HEAP32[$229>>2]|0;
   $104 = $230;
   $231 = $104;
   $232 = $113;
   $83 = $232;
   $233 = $83;
   $100 = $228;
   $101 = $231;
   $102 = $233;
   $234 = $100;
   $235 = $101;
   $236 = $102;
   $99 = $236;
   $237 = $99;
   ;HEAP8[$98>>0]=HEAP8[$103>>0]|0;
   $95 = $234;
   $96 = $235;
   $97 = $237;
   $238 = $95;
   $239 = $96;
   $240 = $97;
   $94 = $240;
   $241 = $94;
   $91 = $238;
   $92 = $239;
   $93 = $241;
   $242 = $92;
   $243 = $93;
   $90 = $243;
   $244 = $90;
   $88 = $242;
   $89 = $244;
   $245 = $88;
   $246 = $89;
   $87 = $246;
   $247 = $87;
   ;HEAP32[$245>>2]=HEAP32[$247>>2]|0;HEAP32[$245+4>>2]=HEAP32[$247+4>>2]|0;HEAP32[$245+8>>2]=HEAP32[$247+8>>2]|0;
   $248 = $89;
   $86 = $248;
   $249 = $86;
   $85 = $249;
   $250 = $85;
   $84 = $250;
   $251 = $84;
   $__a$i$i$i$i$i$i = $251;
   $__i$i$i$i$i$i$i = 0;
   while(1) {
    $252 = $__i$i$i$i$i$i$i;
    $253 = ($252>>>0)<(3);
    if (!($253)) {
     break;
    }
    $254 = $__i$i$i$i$i$i$i;
    $255 = $__a$i$i$i$i$i$i;
    $256 = (($255) + ($254<<2)|0);
    HEAP32[$256>>2] = 0;
    $257 = $__i$i$i$i$i$i$i;
    $258 = (($257) + 1)|0;
    $__i$i$i$i$i$i$i = $258;
   }
   __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i);
   $259 = ((($216)) + 4|0);
   $260 = HEAP32[$259>>2]|0;
   $261 = ((($260)) + 12|0);
   HEAP32[$259>>2] = $261;
  } else {
   $262 = $113;
   $105 = $262;
   $263 = $105;
   __THREW__ = 0;
   invoke_vii(640,($216|0),($263|0));
   $264 = __THREW__; __THREW__ = 0;
   $265 = $264&1;
   if ($265) {
    label = 12;
    break;
   }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150);
  $81 = $i;
  $82 = 0;
  $266 = $81;
  ;HEAP32[$80>>2]=HEAP32[$266>>2]|0;
  $79 = $266;
  $267 = $79;
  $268 = HEAP32[$267>>2]|0;
  $269 = ((($268)) + 12|0);
  HEAP32[$267>>2] = $269;
  $270 = HEAP32[$80>>2]|0;
  HEAP32[$153>>2] = $270;
 }
 if ((label|0) == 12) {
  $273 = ___cxa_find_matching_catch_2()|0;
  $274 = tempRet0;
  $151 = $273;
  $152 = $274;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150);
  __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
  $622 = $151;
  $623 = $152;
  ___resumeException($622|0);
  // unreachable;
 }
 L16: do {
  if ((label|0) == 13) {
   $275 = ((($169)) + 28|0);
   $276 = HEAP32[$275>>2]|0;
   $277 = ($276|0)!=(-1);
   if ($277) {
    $278 = ((($169)) + 28|0);
    $279 = HEAP32[$278>>2]|0;
    $280 = $147;
    $78 = $280;
    $281 = $78;
    $282 = ((($281)) + 4|0);
    $283 = HEAP32[$282>>2]|0;
    $284 = HEAP32[$281>>2]|0;
    $285 = $283;
    $286 = $284;
    $287 = (($285) - ($286))|0;
    $288 = (($287|0) / 4)&-1;
    $289 = ($279|0)!=($288|0);
    if ($289) {
     $290 = (___cxa_allocate_exception(24)|0);
     $$expand_i1_val = 1;
     HEAP8[$157>>0] = $$expand_i1_val;
     $77 = $names;
     $291 = $77;
     $292 = ((($291)) + 4|0);
     $293 = HEAP32[$292>>2]|0;
     $294 = HEAP32[$291>>2]|0;
     $295 = $293;
     $296 = $294;
     $297 = (($295) - ($296))|0;
     $298 = (($297|0) / 12)&-1;
     __THREW__ = 0;
     invoke_vii(641,($156|0),($298|0));
     $299 = __THREW__; __THREW__ = 0;
     $300 = $299&1;
     if ($300) {
      $344 = ___cxa_find_matching_catch_2()|0;
      $345 = tempRet0;
      $151 = $344;
      $152 = $345;
     } else {
      $75 = 13307;
      $76 = $156;
      $301 = $76;
      $302 = $75;
      __THREW__ = 0;
      $303 = (invoke_iiii(600,($301|0),0,($302|0))|0);
      $304 = __THREW__; __THREW__ = 0;
      $305 = $304&1;
      if ($305) {
       $346 = ___cxa_find_matching_catch_2()|0;
       $347 = tempRet0;
       $151 = $346;
       $152 = $347;
      } else {
       $74 = $303;
       $306 = $74;
       $72 = $155;
       $73 = $306;
       $307 = $72;
       $308 = $73;
       $71 = $308;
       $309 = $71;
       ;HEAP32[$307>>2]=HEAP32[$309>>2]|0;HEAP32[$307+4>>2]=HEAP32[$309+4>>2]|0;HEAP32[$307+8>>2]=HEAP32[$309+8>>2]|0;
       $310 = $73;
       $70 = $310;
       $311 = $70;
       $69 = $311;
       $312 = $69;
       $68 = $312;
       $313 = $68;
       $__a$i$i$i = $313;
       $__i$i$i$i = 0;
       while(1) {
        $314 = $__i$i$i$i;
        $315 = ($314>>>0)<(3);
        if (!($315)) {
         break;
        }
        $316 = $__i$i$i$i;
        $317 = $__a$i$i$i;
        $318 = (($317) + ($316<<2)|0);
        HEAP32[$318>>2] = 0;
        $319 = $__i$i$i$i;
        $320 = (($319) + 1)|0;
        $__i$i$i$i = $320;
       }
       $66 = $155;
       $67 = 13328;
       $321 = $66;
       $322 = $67;
       __THREW__ = 0;
       $323 = (invoke_iii(542,($321|0),($322|0))|0);
       $324 = __THREW__; __THREW__ = 0;
       $325 = $324&1;
       if ($325) {
        $348 = ___cxa_find_matching_catch_2()|0;
        $349 = tempRet0;
        $151 = $348;
        $152 = $349;
       } else {
        $65 = $323;
        $326 = $65;
        $63 = $154;
        $64 = $326;
        $327 = $63;
        $328 = $64;
        $62 = $328;
        $329 = $62;
        ;HEAP32[$327>>2]=HEAP32[$329>>2]|0;HEAP32[$327+4>>2]=HEAP32[$329+4>>2]|0;HEAP32[$327+8>>2]=HEAP32[$329+8>>2]|0;
        $330 = $64;
        $61 = $330;
        $331 = $61;
        $60 = $331;
        $332 = $60;
        $59 = $332;
        $333 = $59;
        $__a$i$i$i4 = $333;
        $__i$i$i$i5 = 0;
        while(1) {
         $334 = $__i$i$i$i5;
         $335 = ($334>>>0)<(3);
         if (!($335)) {
          break;
         }
         $336 = $__i$i$i$i5;
         $337 = $__a$i$i$i4;
         $338 = (($337) + ($336<<2)|0);
         HEAP32[$338>>2] = 0;
         $339 = $__i$i$i$i5;
         $340 = (($339) + 1)|0;
         $__i$i$i$i5 = $340;
        }
        __THREW__ = 0;
        invoke_viii(601,($290|0),($154|0),0);
        $341 = __THREW__; __THREW__ = 0;
        $342 = $341&1;
        if (!($342)) {
         $$expand_i1_val2 = 0;
         HEAP8[$157>>0] = $$expand_i1_val2;
         __THREW__ = 0;
         invoke_viii(602,($290|0),(80|0),(603|0));
         $343 = __THREW__; __THREW__ = 0;
        }
        $350 = ___cxa_find_matching_catch_2()|0;
        $351 = tempRet0;
        $151 = $350;
        $152 = $351;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($154);
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($156);
     }
     $$pre_trunc = HEAP8[$157>>0]|0;
     $352 = $$pre_trunc&1;
     if (!($352)) {
      __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
      $622 = $151;
      $623 = $152;
      ___resumeException($622|0);
      // unreachable;
     }
     ___cxa_free_exception(($290|0));
     __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
     $622 = $151;
     $623 = $152;
     ___resumeException($622|0);
     // unreachable;
    }
   }
   $353 = $147;
   $58 = $353;
   $354 = $58;
   $355 = ((($354)) + 4|0);
   $356 = HEAP32[$355>>2]|0;
   $357 = HEAP32[$354>>2]|0;
   $358 = $356;
   $359 = $357;
   $360 = (($358) - ($359))|0;
   $361 = (($360|0) / 4)&-1;
   $362 = ((($169)) + 32|0);
   $363 = HEAP32[$362>>2]|0;
   $364 = ($361|0)<($363|0);
   if ($364) {
    $365 = (___cxa_allocate_exception(24)|0);
    $$expand_i1_val5 = 1;
    HEAP8[$161>>0] = $$expand_i1_val5;
    $57 = $names;
    $366 = $57;
    $367 = ((($366)) + 4|0);
    $368 = HEAP32[$367>>2]|0;
    $369 = HEAP32[$366>>2]|0;
    $370 = $368;
    $371 = $369;
    $372 = (($370) - ($371))|0;
    $373 = (($372|0) / 12)&-1;
    __THREW__ = 0;
    invoke_vii(641,($160|0),($373|0));
    $374 = __THREW__; __THREW__ = 0;
    $375 = $374&1;
    if ($375) {
     $419 = ___cxa_find_matching_catch_2()|0;
     $420 = tempRet0;
     $151 = $419;
     $152 = $420;
    } else {
     $55 = 13339;
     $56 = $160;
     $376 = $56;
     $377 = $55;
     __THREW__ = 0;
     $378 = (invoke_iiii(600,($376|0),0,($377|0))|0);
     $379 = __THREW__; __THREW__ = 0;
     $380 = $379&1;
     if ($380) {
      $421 = ___cxa_find_matching_catch_2()|0;
      $422 = tempRet0;
      $151 = $421;
      $152 = $422;
     } else {
      $54 = $378;
      $381 = $54;
      $52 = $159;
      $53 = $381;
      $382 = $52;
      $383 = $53;
      $51 = $383;
      $384 = $51;
      ;HEAP32[$382>>2]=HEAP32[$384>>2]|0;HEAP32[$382+4>>2]=HEAP32[$384+4>>2]|0;HEAP32[$382+8>>2]=HEAP32[$384+8>>2]|0;
      $385 = $53;
      $50 = $385;
      $386 = $50;
      $49 = $386;
      $387 = $49;
      $48 = $387;
      $388 = $48;
      $__a$i$i$i7 = $388;
      $__i$i$i$i8 = 0;
      while(1) {
       $389 = $__i$i$i$i8;
       $390 = ($389>>>0)<(3);
       if (!($390)) {
        break;
       }
       $391 = $__i$i$i$i8;
       $392 = $__a$i$i$i7;
       $393 = (($392) + ($391<<2)|0);
       HEAP32[$393>>2] = 0;
       $394 = $__i$i$i$i8;
       $395 = (($394) + 1)|0;
       $__i$i$i$i8 = $395;
      }
      $46 = $159;
      $47 = 13328;
      $396 = $46;
      $397 = $47;
      __THREW__ = 0;
      $398 = (invoke_iii(542,($396|0),($397|0))|0);
      $399 = __THREW__; __THREW__ = 0;
      $400 = $399&1;
      if ($400) {
       $423 = ___cxa_find_matching_catch_2()|0;
       $424 = tempRet0;
       $151 = $423;
       $152 = $424;
      } else {
       $45 = $398;
       $401 = $45;
       $43 = $158;
       $44 = $401;
       $402 = $43;
       $403 = $44;
       $42 = $403;
       $404 = $42;
       ;HEAP32[$402>>2]=HEAP32[$404>>2]|0;HEAP32[$402+4>>2]=HEAP32[$404+4>>2]|0;HEAP32[$402+8>>2]=HEAP32[$404+8>>2]|0;
       $405 = $44;
       $41 = $405;
       $406 = $41;
       $40 = $406;
       $407 = $40;
       $39 = $407;
       $408 = $39;
       $__a$i$i$i11 = $408;
       $__i$i$i$i12 = 0;
       while(1) {
        $409 = $__i$i$i$i12;
        $410 = ($409>>>0)<(3);
        if (!($410)) {
         break;
        }
        $411 = $__i$i$i$i12;
        $412 = $__a$i$i$i11;
        $413 = (($412) + ($411<<2)|0);
        HEAP32[$413>>2] = 0;
        $414 = $__i$i$i$i12;
        $415 = (($414) + 1)|0;
        $__i$i$i$i12 = $415;
       }
       __THREW__ = 0;
       invoke_viii(601,($365|0),($158|0),0);
       $416 = __THREW__; __THREW__ = 0;
       $417 = $416&1;
       if (!($417)) {
        $$expand_i1_val7 = 0;
        HEAP8[$161>>0] = $$expand_i1_val7;
        __THREW__ = 0;
        invoke_viii(602,($365|0),(80|0),(603|0));
        $418 = __THREW__; __THREW__ = 0;
       }
       $425 = ___cxa_find_matching_catch_2()|0;
       $426 = tempRet0;
       $151 = $425;
       $152 = $426;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($159);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($160);
    }
    $$pre_trunc9 = HEAP8[$161>>0]|0;
    $427 = $$pre_trunc9&1;
    if (!($427)) {
     __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
     $622 = $151;
     $623 = $152;
     ___resumeException($622|0);
     // unreachable;
    }
    ___cxa_free_exception(($365|0));
    __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
    $622 = $151;
    $623 = $152;
    ___resumeException($622|0);
    // unreachable;
   }
   $i1 = 0;
   while(1) {
    $428 = $i1;
    $38 = $names;
    $429 = $38;
    $430 = ((($429)) + 4|0);
    $431 = HEAP32[$430>>2]|0;
    $432 = HEAP32[$429>>2]|0;
    $433 = $431;
    $434 = $432;
    $435 = (($433) - ($434))|0;
    $436 = (($435|0) / 12)&-1;
    $437 = ($428>>>0)<($436>>>0);
    if (!($437)) {
     break;
    }
    $438 = $148;
    $439 = $i1;
    $36 = $names;
    $37 = $439;
    $440 = $36;
    $441 = $37;
    $442 = HEAP32[$440>>2]|0;
    $443 = (($442) + (($441*12)|0)|0);
    $444 = $147;
    $445 = $i1;
    $34 = $444;
    $35 = $445;
    $446 = $34;
    $447 = $35;
    $448 = HEAP32[$446>>2]|0;
    $449 = (($448) + ($447<<2)|0);
    __THREW__ = 0;
    $450 = (invoke_ii(588,($449|0))|0);
    $451 = __THREW__; __THREW__ = 0;
    $452 = $451&1;
    if ($452) {
     break L16;
    }
    $453 = HEAP32[$450>>2]|0;
    $454 = ((($453)) + 16|0);
    $455 = HEAP32[$454>>2]|0;
    __THREW__ = 0;
    $456 = (invoke_ii($455|0,($450|0))|0);
    $457 = __THREW__; __THREW__ = 0;
    $458 = $457&1;
    if ($458) {
     break L16;
    }
    __THREW__ = 0;
    invoke_viii(553,($162|0),($443|0),($456|0));
    $459 = __THREW__; __THREW__ = 0;
    $460 = $459&1;
    if ($460) {
     break L16;
    }
    __THREW__ = 0;
    invoke_vii(554,($438|0),($162|0));
    $461 = __THREW__; __THREW__ = 0;
    $462 = $461&1;
    if ($462) {
     label = 61;
     break;
    }
    __ZN3VarD2Ev($162);
    $463 = $i1;
    $464 = (($463) + 1)|0;
    $i1 = $464;
   }
   if ((label|0) == 61) {
    $465 = ___cxa_find_matching_catch_2()|0;
    $466 = tempRet0;
    $151 = $465;
    $152 = $466;
    __ZN3VarD2Ev($162);
    __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
    $622 = $151;
    $623 = $152;
    ___resumeException($622|0);
    // unreachable;
   }
   $467 = ((($169)) + 28|0);
   $468 = HEAP32[$467>>2]|0;
   $469 = ($468|0)==(-1);
   L90: do {
    if ($469) {
     $470 = ((($169)) + 32|0);
     $471 = HEAP32[$470>>2]|0;
     $472 = $147;
     $33 = $472;
     $473 = $33;
     $474 = ((($473)) + 4|0);
     $475 = HEAP32[$474>>2]|0;
     $476 = HEAP32[$473>>2]|0;
     $477 = $475;
     $478 = $476;
     $479 = (($477) - ($478))|0;
     $480 = (($479|0) / 4)&-1;
     $481 = ($471|0)<($480|0);
     if ($481) {
      __THREW__ = 0;
      $482 = (invoke_ii(548,16)|0);
      $483 = __THREW__; __THREW__ = 0;
      $484 = $483&1;
      if ($484) {
       break L16;
      }
      __THREW__ = 0;
      invoke_vi(544,($482|0));
      $485 = __THREW__; __THREW__ = 0;
      $486 = $485&1;
      if ($486) {
       $559 = ___cxa_find_matching_catch_2()|0;
       $560 = tempRet0;
       $151 = $559;
       $152 = $560;
       __ZdlPv($482);
       __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
       $622 = $151;
       $623 = $152;
       ___resumeException($622|0);
       // unreachable;
      }
      $listData = $482;
      $487 = ((($169)) + 32|0);
      $488 = HEAP32[$487>>2]|0;
      $i2 = $488;
      while(1) {
       $489 = $i2;
       $490 = $147;
       $32 = $490;
       $491 = $32;
       $492 = ((($491)) + 4|0);
       $493 = HEAP32[$492>>2]|0;
       $494 = HEAP32[$491>>2]|0;
       $495 = $493;
       $496 = $494;
       $497 = (($495) - ($496))|0;
       $498 = (($497|0) / 4)&-1;
       $499 = ($489>>>0)<($498>>>0);
       if (!($499)) {
        break;
       }
       $500 = $listData;
       $501 = ((($500)) + 4|0);
       $502 = $147;
       $503 = $i2;
       $30 = $502;
       $31 = $503;
       $504 = $30;
       $505 = $31;
       $506 = HEAP32[$504>>2]|0;
       $507 = (($506) + ($505<<2)|0);
       __THREW__ = 0;
       $508 = (invoke_ii(588,($507|0))|0);
       $509 = __THREW__; __THREW__ = 0;
       $510 = $509&1;
       if ($510) {
        break L16;
       }
       $511 = HEAP32[$508>>2]|0;
       $512 = ((($511)) + 16|0);
       $513 = HEAP32[$512>>2]|0;
       __THREW__ = 0;
       $514 = (invoke_ii($513|0,($508|0))|0);
       $515 = __THREW__; __THREW__ = 0;
       $516 = $515&1;
       if ($516) {
        break L16;
       }
       __THREW__ = 0;
       invoke_vii(642,($163|0),($514|0));
       $517 = __THREW__; __THREW__ = 0;
       $518 = $517&1;
       if ($518) {
        break L16;
       }
       $28 = $501;
       $29 = $163;
       $519 = $28;
       $520 = ((($519)) + 4|0);
       $521 = HEAP32[$520>>2]|0;
       $27 = $519;
       $522 = $27;
       $523 = ((($522)) + 8|0);
       $26 = $523;
       $524 = $26;
       $25 = $524;
       $525 = $25;
       $526 = HEAP32[$525>>2]|0;
       $527 = ($521>>>0)<($526>>>0);
       if ($527) {
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i15,$519,1);
        $24 = $519;
        $528 = $24;
        $529 = ((($528)) + 8|0);
        $23 = $529;
        $530 = $23;
        $22 = $530;
        $531 = $22;
        $532 = ((($519)) + 4|0);
        $533 = HEAP32[$532>>2]|0;
        $20 = $533;
        $534 = $20;
        $535 = $29;
        $5 = $535;
        $536 = $5;
        $16 = $531;
        $17 = $534;
        $18 = $536;
        $537 = $16;
        $538 = $17;
        $539 = $18;
        $15 = $539;
        $540 = $15;
        ;HEAP8[$14>>0]=HEAP8[$19>>0]|0;
        $11 = $537;
        $12 = $538;
        $13 = $540;
        $541 = $11;
        $542 = $12;
        $543 = $13;
        $10 = $543;
        $544 = $10;
        $7 = $541;
        $8 = $542;
        $9 = $544;
        $545 = $8;
        $546 = $9;
        $6 = $546;
        $547 = $6;
        __THREW__ = 0;
        invoke_vii(638,($545|0),($547|0));
        $548 = __THREW__; __THREW__ = 0;
        $549 = $548&1;
        if ($549) {
         label = 77;
         break;
        }
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i15);
        $550 = ((($519)) + 4|0);
        $551 = HEAP32[$550>>2]|0;
        $552 = ((($551)) + 12|0);
        HEAP32[$550>>2] = $552;
       } else {
        $553 = $29;
        $21 = $553;
        $554 = $21;
        __THREW__ = 0;
        invoke_vii(643,($519|0),($554|0));
        $555 = __THREW__; __THREW__ = 0;
        $556 = $555&1;
        if ($556) {
         label = 77;
         break;
        }
       }
       __ZN8LispNodeD2Ev($163);
       $557 = $i2;
       $558 = (($557) + 1)|0;
       $i2 = $558;
      }
      if ((label|0) == 77) {
       $561 = ___cxa_find_matching_catch_2()|0;
       $562 = tempRet0;
       $151 = $561;
       $152 = $562;
       __ZN8LispNodeD2Ev($163);
       __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
       $622 = $151;
       $623 = $152;
       ___resumeException($622|0);
       // unreachable;
      }
      $563 = $148;
      $3 = $165;
      $4 = 13374;
      $564 = $3;
      $2 = $564;
      $565 = $2;
      $1 = $565;
      $566 = $1;
      $0 = $566;
      $567 = $4;
      $568 = $4;
      __THREW__ = 0;
      $569 = (invoke_ii(550,($568|0))|0);
      $570 = __THREW__; __THREW__ = 0;
      $571 = $570&1;
      if ($571) {
       break L16;
      }
      __THREW__ = 0;
      invoke_viii(551,($564|0),($567|0),($569|0));
      $572 = __THREW__; __THREW__ = 0;
      $573 = $572&1;
      if ($573) {
       break L16;
      }
      $574 = $listData;
      __THREW__ = 0;
      invoke_viii(553,($164|0),($165|0),($574|0));
      $575 = __THREW__; __THREW__ = 0;
      $576 = $575&1;
      do {
       if ($576) {
        $579 = ___cxa_find_matching_catch_2()|0;
        $580 = tempRet0;
        $151 = $579;
        $152 = $580;
       } else {
        __THREW__ = 0;
        invoke_vii(554,($563|0),($164|0));
        $577 = __THREW__; __THREW__ = 0;
        $578 = $577&1;
        if ($578) {
         $581 = ___cxa_find_matching_catch_2()|0;
         $582 = tempRet0;
         $151 = $581;
         $152 = $582;
         __ZN3VarD2Ev($164);
         break;
        } else {
         __ZN3VarD2Ev($164);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
         break L90;
        }
       }
      } while(0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
      __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
      $622 = $151;
      $623 = $152;
      ___resumeException($622|0);
      // unreachable;
     }
    }
   } while(0);
   $$expand_i1_val11 = 0;
   HEAP8[$166>>0] = $$expand_i1_val11;
   __THREW__ = 0;
   invoke_vii(584,($145|0),(0|0));
   $583 = __THREW__; __THREW__ = 0;
   $584 = $583&1;
   if (!($584)) {
    $585 = ((($169)) + 24|0);
    $586 = HEAP32[$585>>2]|0;
    $587 = ((($169)) + 20|0);
    $588 = HEAP32[$587>>2]|0;
    $589 = $148;
    __THREW__ = 0;
    $590 = (invoke_iiii(586,($586|0),($588|0),($589|0))|0);
    $591 = __THREW__; __THREW__ = 0;
    $592 = $591&1;
    do {
     if ($592) {
      $595 = ___cxa_find_matching_catch_3(240|0)|0;
      $596 = tempRet0;
      $151 = $595;
      $152 = $596;
      label = 92;
     } else {
      HEAP32[$167>>2] = $590;
      __THREW__ = 0;
      (invoke_iii(587,($145|0),($167|0))|0);
      $593 = __THREW__; __THREW__ = 0;
      $594 = $593&1;
      if ($594) {
       $597 = ___cxa_find_matching_catch_3(240|0)|0;
       $598 = tempRet0;
       $151 = $597;
       $152 = $598;
       __ZN5ValueD2Ev($167);
       label = 92;
       break;
      } else {
       __ZN5ValueD2Ev($167);
       break;
      }
     }
    } while(0);
    L131: do {
     if ((label|0) == 92) {
      $599 = $152;
      $600 = (_llvm_eh_typeid_for((240|0))|0);
      $601 = ($599|0)==($600|0);
      L133: do {
       if ($601) {
        $602 = $151;
        $603 = (___cxa_begin_catch(($602|0))|0);
        $e = $603;
        $604 = $e;
        __THREW__ = 0;
        $605 = (invoke_ii(633,($604|0))|0);
        $606 = __THREW__; __THREW__ = 0;
        $607 = $606&1;
        do {
         if ($607) {
          $613 = ___cxa_find_matching_catch_2()|0;
          $614 = tempRet0;
          $151 = $613;
          $152 = $614;
         } else {
          HEAP32[$168>>2] = $605;
          __THREW__ = 0;
          (invoke_iii(587,($145|0),($168|0))|0);
          $608 = __THREW__; __THREW__ = 0;
          $609 = $608&1;
          if ($609) {
           $615 = ___cxa_find_matching_catch_2()|0;
           $616 = tempRet0;
           $151 = $615;
           $152 = $616;
           __ZN5ValueD2Ev($168);
           break;
          }
          __ZN5ValueD2Ev($168);
          __THREW__ = 0;
          invoke_v(593);
          $610 = __THREW__; __THREW__ = 0;
          $611 = $610&1;
          if (!($611)) {
           break L131;
          }
          $617 = ___cxa_find_matching_catch_2()|0;
          $618 = tempRet0;
          $151 = $617;
          $152 = $618;
          break L133;
         }
        } while(0);
        __THREW__ = 0;
        invoke_v(593);
        $619 = __THREW__; __THREW__ = 0;
        $620 = $619&1;
        if ($620) {
         $624 = ___cxa_find_matching_catch_3(0|0)|0;
         $625 = tempRet0;
         ___clang_call_terminate($624);
         // unreachable;
        }
       }
      } while(0);
      __ZN5ValueD2Ev($145);
      __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
      $622 = $151;
      $623 = $152;
      ___resumeException($622|0);
      // unreachable;
     }
    } while(0);
    $$expand_i1_val13 = 1;
    HEAP8[$166>>0] = $$expand_i1_val13;
    $$pre_trunc15 = HEAP8[$166>>0]|0;
    $612 = $$pre_trunc15&1;
    if ($612) {
     __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
     $621 = HEAP32[$145>>2]|0;
     STACKTOP = sp;return ($621|0);
    }
    __ZN5ValueD2Ev($145);
    __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
    $621 = HEAP32[$145>>2]|0;
    STACKTOP = sp;return ($621|0);
   }
  }
 } while(0);
 $271 = ___cxa_find_matching_catch_2()|0;
 $272 = tempRet0;
 $151 = $271;
 $152 = $272;
 __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($names);
 $622 = $151;
 $623 = $152;
 ___resumeException($622|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__RAII_IncreaseAnnotatorC2ERKS8_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0, $__a$i$i$i$i$i = 0, $__cap$i = 0, $__i$i$i$i$i$i = 0, $__ms$i = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $14 = sp + 8|0;
 $19 = sp + 233|0;
 $28 = sp;
 $31 = sp + 232|0;
 $39 = sp + 80|0;
 $40 = sp + 68|0;
 $__v = sp + 20|0;
 $45 = $this;
 $46 = $__x;
 $49 = $45;
 $44 = $49;
 $50 = $44;
 $51 = ((($50)) + 8|0);
 $43 = $51;
 $52 = $43;
 $42 = $52;
 $53 = $42;
 $__a = $53;
 $41 = $49;
 $54 = $41;
 $55 = ((($54)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$54>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 $61 = (($60|0) / 12)&-1;
 $62 = (($61) + 1)|0;
 $38 = $49;
 HEAP32[$39>>2] = $62;
 $63 = $38;
 $64 = (__ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8max_sizeEv($63)|0);
 $__ms$i = $64;
 $65 = HEAP32[$39>>2]|0;
 $66 = $__ms$i;
 $67 = ($65>>>0)>($66>>>0);
 if ($67) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($63);
  // unreachable;
 }
 $36 = $63;
 $68 = $36;
 $35 = $68;
 $69 = $35;
 $34 = $69;
 $70 = $34;
 $71 = ((($70)) + 8|0);
 $33 = $71;
 $72 = $33;
 $32 = $72;
 $73 = $32;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 12)&-1;
 $__cap$i = $79;
 $80 = $__cap$i;
 $81 = $__ms$i;
 $82 = (($81>>>0) / 2)&-1;
 $83 = ($80>>>0)>=($82>>>0);
 if ($83) {
  $84 = $__ms$i;
  $37 = $84;
 } else {
  $85 = $__cap$i;
  $86 = $85<<1;
  HEAP32[$40>>2] = $86;
  $29 = $40;
  $30 = $39;
  $87 = $29;
  $88 = $30;
  ;HEAP8[$28>>0]=HEAP8[$31>>0]|0;
  $26 = $87;
  $27 = $88;
  $89 = $26;
  $90 = $27;
  $23 = $28;
  $24 = $89;
  $25 = $90;
  $91 = $24;
  $92 = HEAP32[$91>>2]|0;
  $93 = $25;
  $94 = HEAP32[$93>>2]|0;
  $95 = ($92>>>0)<($94>>>0);
  $96 = $27;
  $97 = $26;
  $98 = $95 ? $96 : $97;
  $99 = HEAP32[$98>>2]|0;
  $37 = $99;
 }
 $100 = $37;
 $22 = $49;
 $101 = $22;
 $102 = ((($101)) + 4|0);
 $103 = HEAP32[$102>>2]|0;
 $104 = HEAP32[$101>>2]|0;
 $105 = $103;
 $106 = $104;
 $107 = (($105) - ($106))|0;
 $108 = (($107|0) / 12)&-1;
 $109 = $__a;
 __ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EjjS8_($__v,$100,$108,$109);
 $110 = $__a;
 $111 = ((($__v)) + 8|0);
 $112 = HEAP32[$111>>2]|0;
 $21 = $112;
 $113 = $21;
 $114 = $46;
 $20 = $114;
 $115 = $20;
 $16 = $110;
 $17 = $113;
 $18 = $115;
 $116 = $16;
 $117 = $17;
 $118 = $18;
 $15 = $118;
 $119 = $15;
 ;HEAP8[$14>>0]=HEAP8[$19>>0]|0;
 $11 = $116;
 $12 = $117;
 $13 = $119;
 $120 = $11;
 $121 = $12;
 $122 = $13;
 $10 = $122;
 $123 = $10;
 $7 = $120;
 $8 = $121;
 $9 = $123;
 $124 = $8;
 $125 = $9;
 $6 = $125;
 $126 = $6;
 $4 = $124;
 $5 = $126;
 $127 = $4;
 $128 = $5;
 $3 = $128;
 $129 = $3;
 ;HEAP32[$127>>2]=HEAP32[$129>>2]|0;HEAP32[$127+4>>2]=HEAP32[$129+4>>2]|0;HEAP32[$127+8>>2]=HEAP32[$129+8>>2]|0;
 $130 = $5;
 $2 = $130;
 $131 = $2;
 $1 = $131;
 $132 = $1;
 $0 = $132;
 $133 = $0;
 $__a$i$i$i$i$i = $133;
 $__i$i$i$i$i$i = 0;
 while(1) {
  $134 = $__i$i$i$i$i$i;
  $135 = ($134>>>0)<(3);
  if (!($135)) {
   break;
  }
  $136 = $__i$i$i$i$i$i;
  $137 = $__a$i$i$i$i$i;
  $138 = (($137) + ($136<<2)|0);
  HEAP32[$138>>2] = 0;
  $139 = $__i$i$i$i$i$i;
  $140 = (($139) + 1)|0;
  $__i$i$i$i$i$i = $140;
 }
 $141 = ((($__v)) + 8|0);
 $142 = HEAP32[$141>>2]|0;
 $143 = ((($142)) + 12|0);
 HEAP32[$141>>2] = $143;
 __THREW__ = 0;
 invoke_vii(644,($49|0),($__v|0));
 $144 = __THREW__; __THREW__ = 0;
 $145 = $144&1;
 if ($145) {
  $146 = ___cxa_find_matching_catch_2()|0;
  $147 = tempRet0;
  $47 = $146;
  $48 = $147;
  __ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev($__v);
  $148 = $47;
  $149 = $48;
  ___resumeException($148|0);
  // unreachable;
 } else {
  __ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev($__v);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 77|0;
 $11 = sp;
 $13 = sp + 76|0;
 $18 = sp + 16|0;
 $19 = sp + 12|0;
 $17 = $this;
 $20 = $17;
 $16 = $20;
 $21 = $16;
 $22 = ((($21)) + 8|0);
 $15 = $22;
 $23 = $15;
 $14 = $23;
 $24 = $14;
 $12 = $24;
 $25 = $12;
 ;HEAP8[$11>>0]=HEAP8[$13>>0]|0;
 $10 = $25;
 $26 = $10;
 $9 = $26;
 HEAP32[$18>>2] = 357913941;
 $27 = (4294967295 / 2)&-1;
 HEAP32[$19>>2] = $27;
 $6 = $18;
 $7 = $19;
 $28 = $6;
 $29 = $7;
 ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
 $3 = $28;
 $4 = $29;
 $30 = $4;
 $31 = $3;
 $0 = $5;
 $1 = $30;
 $2 = $31;
 $32 = $1;
 $33 = HEAP32[$32>>2]|0;
 $34 = $2;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $4;
 $38 = $3;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EjjS8_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $16 = sp + 36|0;
 $20 = sp + 20|0;
 $22 = $this;
 $23 = $__cap;
 $24 = $__start;
 $25 = $__a;
 $26 = $22;
 $27 = ((($26)) + 12|0);
 $28 = $25;
 $19 = $27;
 HEAP32[$20>>2] = 0;
 $21 = $28;
 $29 = $19;
 $18 = $20;
 $30 = $18;
 $31 = HEAP32[$30>>2]|0;
 $32 = $21;
 $12 = $32;
 $33 = $12;
 $15 = $29;
 HEAP32[$16>>2] = $31;
 $17 = $33;
 $34 = $15;
 $14 = $16;
 $35 = $14;
 $36 = HEAP32[$35>>2]|0;
 HEAP32[$34>>2] = $36;
 $37 = ((($34)) + 4|0);
 $38 = $17;
 $13 = $38;
 $39 = $13;
 HEAP32[$37>>2] = $39;
 $40 = $23;
 $41 = ($40|0)!=(0);
 if ($41) {
  $2 = $26;
  $42 = $2;
  $43 = ((($42)) + 12|0);
  $1 = $43;
  $44 = $1;
  $0 = $44;
  $45 = $0;
  $46 = ((($45)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = $23;
  $7 = $47;
  $8 = $48;
  $49 = $7;
  $50 = $8;
  $4 = $49;
  $5 = $50;
  $6 = 0;
  $51 = $5;
  $52 = ($51*12)|0;
  $3 = $52;
  $53 = $3;
  $54 = (__Znwj($53)|0);
  $55 = $54;
 } else {
  $55 = 0;
 }
 HEAP32[$26>>2] = $55;
 $56 = HEAP32[$26>>2]|0;
 $57 = $24;
 $58 = (($56) + (($57*12)|0)|0);
 $59 = ((($26)) + 8|0);
 HEAP32[$59>>2] = $58;
 $60 = ((($26)) + 4|0);
 HEAP32[$60>>2] = $58;
 $61 = HEAP32[$26>>2]|0;
 $62 = $23;
 $63 = (($61) + (($62*12)|0)|0);
 $11 = $26;
 $64 = $11;
 $65 = ((($64)) + 12|0);
 $10 = $65;
 $66 = $10;
 $9 = $66;
 $67 = $9;
 HEAP32[$67>>2] = $63;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$i$i$i$i$i$i = 0, $__i$i$i$i$i$i$i = 0, $__t$i = 0, $__t$i1 = 0, $__t$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t$i2 = sp + 212|0;
 $__t$i1 = sp + 188|0;
 $__t$i = sp + 140|0;
 $38 = sp;
 $43 = sp + 236|0;
 $53 = $this;
 $54 = $__v;
 $55 = $53;
 __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE17__annotate_deleteEv($55);
 $52 = $55;
 $56 = $52;
 $57 = ((($56)) + 8|0);
 $51 = $57;
 $58 = $51;
 $50 = $58;
 $59 = $50;
 $60 = HEAP32[$55>>2]|0;
 $61 = ((($55)) + 4|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = $54;
 $64 = ((($63)) + 4|0);
 $45 = $59;
 $46 = $60;
 $47 = $62;
 $48 = $64;
 while(1) {
  $65 = $47;
  $66 = $46;
  $67 = ($65|0)!=($66|0);
  if (!($67)) {
   break;
  }
  $68 = $45;
  $69 = $48;
  $70 = HEAP32[$69>>2]|0;
  $71 = ((($70)) + -12|0);
  $44 = $71;
  $72 = $44;
  $73 = $47;
  $74 = ((($73)) + -12|0);
  $47 = $74;
  $23 = $74;
  $75 = $23;
  $22 = $75;
  $76 = $22;
  $40 = $68;
  $41 = $72;
  $42 = $76;
  $77 = $40;
  $78 = $41;
  $79 = $42;
  $39 = $79;
  $80 = $39;
  ;HEAP8[$38>>0]=HEAP8[$43>>0]|0;
  $35 = $77;
  $36 = $78;
  $37 = $80;
  $81 = $35;
  $82 = $36;
  $83 = $37;
  $34 = $83;
  $84 = $34;
  $31 = $81;
  $32 = $82;
  $33 = $84;
  $85 = $32;
  $86 = $33;
  $30 = $86;
  $87 = $30;
  $28 = $85;
  $29 = $87;
  $88 = $28;
  $89 = $29;
  $27 = $89;
  $90 = $27;
  ;HEAP32[$88>>2]=HEAP32[$90>>2]|0;HEAP32[$88+4>>2]=HEAP32[$90+4>>2]|0;HEAP32[$88+8>>2]=HEAP32[$90+8>>2]|0;
  $91 = $29;
  $26 = $91;
  $92 = $26;
  $25 = $92;
  $93 = $25;
  $24 = $93;
  $94 = $24;
  $__a$i$i$i$i$i$i = $94;
  $__i$i$i$i$i$i$i = 0;
  while(1) {
   $95 = $__i$i$i$i$i$i$i;
   $96 = ($95>>>0)<(3);
   if (!($96)) {
    break;
   }
   $97 = $__i$i$i$i$i$i$i;
   $98 = $__a$i$i$i$i$i$i;
   $99 = (($98) + ($97<<2)|0);
   HEAP32[$99>>2] = 0;
   $100 = $__i$i$i$i$i$i$i;
   $101 = (($100) + 1)|0;
   $__i$i$i$i$i$i$i = $101;
  }
  $102 = $48;
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($103)) + -12|0);
  HEAP32[$102>>2] = $104;
 }
 $105 = $54;
 $106 = ((($105)) + 4|0);
 $3 = $55;
 $4 = $106;
 $107 = $3;
 $2 = $107;
 $108 = $2;
 $109 = HEAP32[$108>>2]|0;
 HEAP32[$__t$i2>>2] = $109;
 $110 = $4;
 $0 = $110;
 $111 = $0;
 $112 = HEAP32[$111>>2]|0;
 $113 = $3;
 HEAP32[$113>>2] = $112;
 $1 = $__t$i2;
 $114 = $1;
 $115 = HEAP32[$114>>2]|0;
 $116 = $4;
 HEAP32[$116>>2] = $115;
 $117 = ((($55)) + 4|0);
 $118 = $54;
 $119 = ((($118)) + 8|0);
 $8 = $117;
 $9 = $119;
 $120 = $8;
 $7 = $120;
 $121 = $7;
 $122 = HEAP32[$121>>2]|0;
 HEAP32[$__t$i1>>2] = $122;
 $123 = $9;
 $5 = $123;
 $124 = $5;
 $125 = HEAP32[$124>>2]|0;
 $126 = $8;
 HEAP32[$126>>2] = $125;
 $6 = $__t$i1;
 $127 = $6;
 $128 = HEAP32[$127>>2]|0;
 $129 = $9;
 HEAP32[$129>>2] = $128;
 $12 = $55;
 $130 = $12;
 $131 = ((($130)) + 8|0);
 $11 = $131;
 $132 = $11;
 $10 = $132;
 $133 = $10;
 $134 = $54;
 $15 = $134;
 $135 = $15;
 $136 = ((($135)) + 12|0);
 $14 = $136;
 $137 = $14;
 $13 = $137;
 $138 = $13;
 $19 = $133;
 $20 = $138;
 $139 = $19;
 $18 = $139;
 $140 = $18;
 $141 = HEAP32[$140>>2]|0;
 HEAP32[$__t$i>>2] = $141;
 $142 = $20;
 $16 = $142;
 $143 = $16;
 $144 = HEAP32[$143>>2]|0;
 $145 = $19;
 HEAP32[$145>>2] = $144;
 $17 = $__t$i;
 $146 = $17;
 $147 = HEAP32[$146>>2]|0;
 $148 = $20;
 HEAP32[$148>>2] = $147;
 $149 = $54;
 $150 = ((($149)) + 4|0);
 $151 = HEAP32[$150>>2]|0;
 $152 = $54;
 HEAP32[$152>>2] = $151;
 $21 = $55;
 $153 = $21;
 $154 = ((($153)) + 4|0);
 $155 = HEAP32[$154>>2]|0;
 $156 = HEAP32[$153>>2]|0;
 $157 = $155;
 $158 = $156;
 $159 = (($157) - ($158))|0;
 $160 = (($159|0) / 12)&-1;
 __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE14__annotate_newEj($55,$160);
 $49 = $55;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $19 = $this;
 $20 = $19;
 $18 = $20;
 $21 = $18;
 $22 = HEAP32[$21>>2]|0;
 $17 = $22;
 $23 = $17;
 $16 = $20;
 $24 = $16;
 $25 = HEAP32[$24>>2]|0;
 $15 = $25;
 $26 = $15;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 12)&-1;
 $39 = (($26) + (($38*12)|0)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $7 = $20;
 $43 = $7;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 $50 = (($49|0) / 12)&-1;
 $51 = (($42) + (($50*12)|0)|0);
 $9 = $20;
 $52 = $9;
 $53 = HEAP32[$52>>2]|0;
 $8 = $53;
 $54 = $8;
 $14 = $20;
 $55 = $14;
 $13 = $55;
 $56 = $13;
 $12 = $56;
 $57 = $12;
 $58 = ((($57)) + 8|0);
 $11 = $58;
 $59 = $11;
 $10 = $59;
 $60 = $10;
 $61 = HEAP32[$60>>2]|0;
 $62 = HEAP32[$56>>2]|0;
 $63 = $61;
 $64 = $62;
 $65 = (($63) - ($64))|0;
 $66 = (($65|0) / 12)&-1;
 $67 = (($54) + (($66*12)|0)|0);
 __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE31__annotate_contiguous_containerEPKvSA_SA_SA_($20,$23,$39,$51,$67);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE31__annotate_contiguous_containerEPKvSA_SA_SA_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = $this;
 $19 = $__current_size;
 $20 = $18;
 $17 = $20;
 $21 = $17;
 $22 = HEAP32[$21>>2]|0;
 $16 = $22;
 $23 = $16;
 $15 = $20;
 $24 = $15;
 $25 = HEAP32[$24>>2]|0;
 $14 = $25;
 $26 = $14;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 12)&-1;
 $39 = (($26) + (($38*12)|0)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $11 = $20;
 $43 = $11;
 $10 = $43;
 $44 = $10;
 $9 = $44;
 $45 = $9;
 $46 = ((($45)) + 8|0);
 $8 = $46;
 $47 = $8;
 $7 = $47;
 $48 = $7;
 $49 = HEAP32[$48>>2]|0;
 $50 = HEAP32[$44>>2]|0;
 $51 = $49;
 $52 = $50;
 $53 = (($51) - ($52))|0;
 $54 = (($53|0) / 12)&-1;
 $55 = (($42) + (($54*12)|0)|0);
 $13 = $20;
 $56 = $13;
 $57 = HEAP32[$56>>2]|0;
 $12 = $57;
 $58 = $12;
 $59 = $19;
 $60 = (($58) + (($59*12)|0)|0);
 __ZNKSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE31__annotate_contiguous_containerEPKvSA_SA_SA_($20,$23,$39,$55,$60);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp + 8|0;
 $21 = sp + 133|0;
 $28 = sp;
 $31 = sp + 132|0;
 $33 = $this;
 $34 = $33;
 $32 = $34;
 $35 = $32;
 $36 = ((($35)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $29 = $35;
 $30 = $37;
 $38 = $29;
 $39 = $30;
 ;HEAP8[$28>>0]=HEAP8[$31>>0]|0;
 $26 = $38;
 $27 = $39;
 $40 = $26;
 while(1) {
  $41 = $27;
  $42 = ((($40)) + 8|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ($41|0)!=($43|0);
  if (!($44)) {
   break;
  }
  $25 = $40;
  $45 = $25;
  $46 = ((($45)) + 12|0);
  $24 = $46;
  $47 = $24;
  $23 = $47;
  $48 = $23;
  $49 = ((($48)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($40)) + 8|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($52)) + -12|0);
  HEAP32[$51>>2] = $53;
  $22 = $53;
  $54 = $22;
  $19 = $50;
  $20 = $54;
  $55 = $19;
  $56 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $55;
  $17 = $56;
  $57 = $16;
  $58 = $17;
  $14 = $57;
  $15 = $58;
  $59 = $15;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
 }
 $60 = HEAP32[$34>>2]|0;
 $61 = ($60|0)!=(0|0);
 if (!($61)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $62 = $13;
 $63 = ((($62)) + 12|0);
 $12 = $63;
 $64 = $12;
 $11 = $64;
 $65 = $11;
 $66 = ((($65)) + 4|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = HEAP32[$34>>2]|0;
 $10 = $34;
 $69 = $10;
 $9 = $69;
 $70 = $9;
 $71 = ((($70)) + 12|0);
 $8 = $71;
 $72 = $8;
 $7 = $72;
 $73 = $7;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 12)&-1;
 $4 = $67;
 $5 = $68;
 $6 = $79;
 $80 = $4;
 $81 = $5;
 $82 = $6;
 $1 = $80;
 $2 = $81;
 $3 = $82;
 $83 = $2;
 $0 = $83;
 $84 = $0;
 __ZdlPv($84);
 STACKTOP = sp;return;
}
function __ZN8LispNodeC2EP4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $data;
 $2 = $0;
 $3 = $1;
 HEAP32[$2>>2] = $3;
 $4 = ((($2)) + 4|0);
 __ZN3PosC2Ev($4);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0, $__cap$i = 0, $__ms$i = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $8 = sp + 8|0;
 $13 = sp + 201|0;
 $22 = sp;
 $25 = sp + 200|0;
 $33 = sp + 80|0;
 $34 = sp + 68|0;
 $__v = sp + 20|0;
 $39 = $this;
 $40 = $__x;
 $43 = $39;
 $38 = $43;
 $44 = $38;
 $45 = ((($44)) + 8|0);
 $37 = $45;
 $46 = $37;
 $36 = $46;
 $47 = $36;
 $__a = $47;
 $35 = $43;
 $48 = $35;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$48>>2]|0;
 $52 = $50;
 $53 = $51;
 $54 = (($52) - ($53))|0;
 $55 = (($54|0) / 12)&-1;
 $56 = (($55) + 1)|0;
 $32 = $43;
 HEAP32[$33>>2] = $56;
 $57 = $32;
 $58 = (__ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE8max_sizeEv($57)|0);
 $__ms$i = $58;
 $59 = HEAP32[$33>>2]|0;
 $60 = $__ms$i;
 $61 = ($59>>>0)>($60>>>0);
 if ($61) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($57);
  // unreachable;
 }
 $30 = $57;
 $62 = $30;
 $29 = $62;
 $63 = $29;
 $28 = $63;
 $64 = $28;
 $65 = ((($64)) + 8|0);
 $27 = $65;
 $66 = $27;
 $26 = $66;
 $67 = $26;
 $68 = HEAP32[$67>>2]|0;
 $69 = HEAP32[$63>>2]|0;
 $70 = $68;
 $71 = $69;
 $72 = (($70) - ($71))|0;
 $73 = (($72|0) / 12)&-1;
 $__cap$i = $73;
 $74 = $__cap$i;
 $75 = $__ms$i;
 $76 = (($75>>>0) / 2)&-1;
 $77 = ($74>>>0)>=($76>>>0);
 if ($77) {
  $78 = $__ms$i;
  $31 = $78;
 } else {
  $79 = $__cap$i;
  $80 = $79<<1;
  HEAP32[$34>>2] = $80;
  $23 = $34;
  $24 = $33;
  $81 = $23;
  $82 = $24;
  ;HEAP8[$22>>0]=HEAP8[$25>>0]|0;
  $20 = $81;
  $21 = $82;
  $83 = $20;
  $84 = $21;
  $17 = $22;
  $18 = $83;
  $19 = $84;
  $85 = $18;
  $86 = HEAP32[$85>>2]|0;
  $87 = $19;
  $88 = HEAP32[$87>>2]|0;
  $89 = ($86>>>0)<($88>>>0);
  $90 = $21;
  $91 = $20;
  $92 = $89 ? $90 : $91;
  $93 = HEAP32[$92>>2]|0;
  $31 = $93;
 }
 $94 = $31;
 $16 = $43;
 $95 = $16;
 $96 = ((($95)) + 4|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$95>>2]|0;
 $99 = $97;
 $100 = $98;
 $101 = (($99) - ($100))|0;
 $102 = (($101|0) / 12)&-1;
 $103 = $__a;
 __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEEC2EjjS4_($__v,$94,$102,$103);
 $104 = $__a;
 $105 = ((($__v)) + 8|0);
 $106 = HEAP32[$105>>2]|0;
 $15 = $106;
 $107 = $15;
 $108 = $40;
 $14 = $108;
 $109 = $14;
 $10 = $104;
 $11 = $107;
 $12 = $109;
 $110 = $10;
 $111 = $11;
 $112 = $12;
 $9 = $112;
 $113 = $9;
 ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
 $5 = $110;
 $6 = $111;
 $7 = $113;
 $114 = $5;
 $115 = $6;
 $116 = $7;
 $4 = $116;
 $117 = $4;
 $1 = $114;
 $2 = $115;
 $3 = $117;
 $118 = $2;
 $119 = $3;
 $0 = $119;
 $120 = $0;
 __THREW__ = 0;
 invoke_vii(638,($118|0),($120|0));
 $121 = __THREW__; __THREW__ = 0;
 $122 = $121&1;
 if ($122) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 }
 $123 = ((($__v)) + 8|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = ((($124)) + 12|0);
 HEAP32[$123>>2] = $125;
 __THREW__ = 0;
 invoke_vii(639,($43|0),($__v|0));
 $126 = __THREW__; __THREW__ = 0;
 $127 = $126&1;
 if ($127) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 } else {
  __ZNSt3__114__split_bufferI8LispNodeRNS_9allocatorIS1_EEED2Ev($__v);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp;
 $21 = sp + 116|0;
 $29 = $this;
 $30 = $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)!=(0|0);
 if (!($32)) {
  STACKTOP = sp;return;
 }
 $28 = $30;
 $33 = $28;
 $34 = HEAP32[$33>>2]|0;
 $26 = $33;
 $27 = $34;
 $35 = $26;
 while(1) {
  $36 = $27;
  $37 = ((($35)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($36|0)!=($38|0);
  if (!($39)) {
   break;
  }
  $25 = $35;
  $40 = $25;
  $41 = ((($40)) + 8|0);
  $24 = $41;
  $42 = $24;
  $23 = $42;
  $43 = $23;
  $44 = ((($35)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($45)) + -12|0);
  HEAP32[$44>>2] = $46;
  $22 = $46;
  $47 = $22;
  $19 = $43;
  $20 = $47;
  $48 = $19;
  $49 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $48;
  $17 = $49;
  $50 = $16;
  $51 = $17;
  $14 = $50;
  $15 = $51;
  $52 = $15;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
 }
 $13 = $30;
 $53 = $13;
 $54 = ((($53)) + 8|0);
 $12 = $54;
 $55 = $12;
 $11 = $55;
 $56 = $11;
 $57 = HEAP32[$30>>2]|0;
 $3 = $30;
 $58 = $3;
 $2 = $58;
 $59 = $2;
 $60 = ((($59)) + 8|0);
 $1 = $60;
 $61 = $1;
 $0 = $61;
 $62 = $0;
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$58>>2]|0;
 $65 = $63;
 $66 = $64;
 $67 = (($65) - ($66))|0;
 $68 = (($67|0) / 12)&-1;
 $8 = $56;
 $9 = $57;
 $10 = $68;
 $69 = $8;
 $70 = $9;
 $71 = $10;
 $5 = $69;
 $6 = $70;
 $7 = $71;
 $72 = $6;
 $4 = $72;
 $73 = $4;
 __ZdlPv($73);
 STACKTOP = sp;return;
}
function __ZN12LispFunctionC2EN8Function12FunctionTypeEiiPK4DataPK8ListDataP12LispExecuter($this,$type,$argCount,$minArgCount,$text,$args,$executer) {
 $this = $this|0;
 $type = $type|0;
 $argCount = $argCount|0;
 $minArgCount = $minArgCount|0;
 $text = $text|0;
 $args = $args|0;
 $executer = $executer|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $type;
 $2 = $argCount;
 $3 = $minArgCount;
 $4 = $text;
 $5 = $args;
 $6 = $executer;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 __ZN8FunctionC2ENS_12FunctionTypeEii($7,$8,$9,0);
 $10 = 3320;
 HEAP32[$7>>2] = $10;
 $11 = $6;
 $12 = ((($7)) + 24|0);
 HEAP32[$12>>2] = $11;
 $13 = $5;
 $14 = ((($7)) + 16|0);
 HEAP32[$14>>2] = $13;
 $15 = $4;
 $16 = ((($7)) + 20|0);
 HEAP32[$16>>2] = $15;
 $17 = $2;
 $18 = ((($7)) + 28|0);
 HEAP32[$18>>2] = $17;
 $19 = $3;
 $20 = ((($7)) + 32|0);
 HEAP32[$20>>2] = $19;
 STACKTOP = sp;return;
}
function __ZN8LispNodeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 FUNCTION_TABLE_vi[$8 & 1023]($4);
 STACKTOP = sp;return;
}
function __ZN8LispNodeC2ERKS_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $node;
 $2 = $0;
 $3 = ((($2)) + 4|0);
 __ZN3PosC2Ev($3);
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)!=(0|0);
 if ($6) {
  $7 = $1;
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (FUNCTION_TABLE_ii[$11 & 1023]($8)|0);
  HEAP32[$2>>2] = $12;
 } else {
  HEAP32[$2>>2] = 0;
 }
 $13 = ((($2)) + 4|0);
 $14 = $1;
 $15 = ((($14)) + 4|0);
 ;HEAP32[$13>>2]=HEAP32[$15>>2]|0;HEAP32[$13+4>>2]=HEAP32[$15+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN8LispNodeaSERKS_($this,$node) {
 $this = $this|0;
 $node = $node|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $node;
 $2 = $0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = HEAP32[$2>>2]|0;
  $6 = ($5|0)==(0|0);
  if (!($6)) {
   $7 = HEAP32[$5>>2]|0;
   $8 = ((($7)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   FUNCTION_TABLE_vi[$9 & 1023]($5);
  }
 }
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $1;
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (FUNCTION_TABLE_ii[$17 & 1023]($14)|0);
  HEAP32[$2>>2] = $18;
 } else {
  HEAP32[$2>>2] = 0;
 }
 $19 = ((($2)) + 4|0);
 $20 = $1;
 $21 = ((($20)) + 4|0);
 ;HEAP32[$19>>2]=HEAP32[$21>>2]|0;HEAP32[$19+4>>2]=HEAP32[$21+4>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNK8LispNode8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNK8LispNode8toStringEi($agg$result,$1,0);
 STACKTOP = sp;return;
}
function __ZNK8LispNode8toStringEi($agg$result,$this,$n) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $n = $n|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0;
 var $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i = 0, $__a$i$i$i = 0, $__a$i$i$i11 = 0, $__a$i$i$i19 = 0, $__a$i$i$i2 = 0, $__i$i$i = 0, $__i$i$i$i = 0, $__i$i$i$i12 = 0, $__i$i$i$i20 = 0, $__i$i$i$i3 = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 1000|0;
 $115 = sp + 528|0;
 $118 = sp + 516|0;
 $122 = sp + 500|0;
 $125 = sp + 488|0;
 $209 = sp + 1008|0;
 $212 = sp + 112|0;
 $213 = sp + 100|0;
 $i = sp + 96|0;
 $214 = sp + 92|0;
 $215 = sp + 88|0;
 $216 = sp + 76|0;
 $217 = sp + 64|0;
 $218 = sp + 60|0;
 $219 = sp + 48|0;
 $220 = sp + 36|0;
 $221 = sp + 24|0;
 $222 = sp + 12|0;
 $223 = sp;
 $207 = $this;
 $208 = $n;
 $224 = $207;
 $$expand_i1_val = 0;
 HEAP8[$209>>0] = $$expand_i1_val;
 $206 = $agg$result;
 $225 = $206;
 $205 = $225;
 $226 = $205;
 $204 = $226;
 $227 = $204;
 $203 = $227;
 $202 = $225;
 $228 = $202;
 $201 = $228;
 $229 = $201;
 $200 = $229;
 $230 = $200;
 $__a$i$i = $230;
 $__i$i$i = 0;
 while(1) {
  $231 = $__i$i$i;
  $232 = ($231>>>0)<(3);
  if (!($232)) {
   break;
  }
  $233 = $__i$i$i;
  $234 = $__a$i$i;
  $235 = (($234) + ($233<<2)|0);
  HEAP32[$235>>2] = 0;
  $236 = $__i$i$i;
  $237 = (($236) + 1)|0;
  $__i$i$i = $237;
 }
 $238 = HEAP32[$224>>2]|0;
 $239 = HEAP32[$238>>2]|0;
 $240 = ((($239)) + 12|0);
 $241 = HEAP32[$240>>2]|0;
 __THREW__ = 0;
 $242 = (invoke_ii($241|0,($238|0))|0);
 $243 = __THREW__; __THREW__ = 0;
 $244 = $243&1;
 L5: do {
  if (!($244)) {
   $245 = ($242|0)==(1);
   $246 = $208;
   L7: do {
    if ($245) {
     __THREW__ = 0;
     invoke_vii(645,($213|0),($246|0));
     $247 = __THREW__; __THREW__ = 0;
     $248 = $247&1;
     if ($248) {
      break L5;
     }
     $198 = $213;
     $199 = 13381;
     $249 = $198;
     $250 = $199;
     __THREW__ = 0;
     $251 = (invoke_iii(542,($249|0),($250|0))|0);
     $252 = __THREW__; __THREW__ = 0;
     $253 = $252&1;
     do {
      if ($253) {
       $430 = ___cxa_find_matching_catch_2()|0;
       $431 = tempRet0;
       $210 = $430;
       $211 = $431;
      } else {
       $197 = $251;
       $254 = $197;
       $195 = $212;
       $196 = $254;
       $255 = $195;
       $256 = $196;
       $194 = $256;
       $257 = $194;
       ;HEAP32[$255>>2]=HEAP32[$257>>2]|0;HEAP32[$255+4>>2]=HEAP32[$257+4>>2]|0;HEAP32[$255+8>>2]=HEAP32[$257+8>>2]|0;
       $258 = $196;
       $193 = $258;
       $259 = $193;
       $192 = $259;
       $260 = $192;
       $191 = $260;
       $261 = $191;
       $__a$i$i$i = $261;
       $__i$i$i$i = 0;
       while(1) {
        $262 = $__i$i$i$i;
        $263 = ($262>>>0)<(3);
        if (!($263)) {
         break;
        }
        $264 = $__i$i$i$i;
        $265 = $__a$i$i$i;
        $266 = (($265) + ($264<<2)|0);
        HEAP32[$266>>2] = 0;
        $267 = $__i$i$i$i;
        $268 = (($267) + 1)|0;
        $__i$i$i$i = $268;
       }
       $189 = $agg$result;
       $190 = $212;
       $269 = $189;
       $270 = $190;
       $187 = $269;
       $188 = $270;
       $271 = $187;
       $272 = $188;
       $186 = $272;
       $273 = $186;
       $185 = $273;
       $274 = $185;
       $184 = $274;
       $275 = $184;
       $183 = $275;
       $276 = $183;
       $182 = $276;
       $277 = $182;
       $278 = HEAP8[$277>>0]|0;
       $279 = $278&255;
       $280 = $279 & 1;
       $281 = ($280|0)!=(0);
       if ($281) {
        $176 = $274;
        $282 = $176;
        $175 = $282;
        $283 = $175;
        $174 = $283;
        $284 = $174;
        $285 = ((($284)) + 8|0);
        $286 = HEAP32[$285>>2]|0;
        $293 = $286;
       } else {
        $181 = $274;
        $287 = $181;
        $180 = $287;
        $288 = $180;
        $179 = $288;
        $289 = $179;
        $290 = ((($289)) + 1|0);
        $178 = $290;
        $291 = $178;
        $177 = $291;
        $292 = $177;
        $293 = $292;
       }
       $173 = $293;
       $294 = $173;
       $295 = $188;
       $172 = $295;
       $296 = $172;
       $171 = $296;
       $297 = $171;
       $170 = $297;
       $298 = $170;
       $169 = $298;
       $299 = $169;
       $300 = HEAP8[$299>>0]|0;
       $301 = $300&255;
       $302 = $301 & 1;
       $303 = ($302|0)!=(0);
       if ($303) {
        $165 = $296;
        $304 = $165;
        $164 = $304;
        $305 = $164;
        $163 = $305;
        $306 = $163;
        $307 = ((($306)) + 4|0);
        $308 = HEAP32[$307>>2]|0;
        $315 = $308;
       } else {
        $168 = $296;
        $309 = $168;
        $167 = $309;
        $310 = $167;
        $166 = $310;
        $311 = $166;
        $312 = HEAP8[$311>>0]|0;
        $313 = $312&255;
        $314 = $313 >> 1;
        $315 = $314;
       }
       __THREW__ = 0;
       (invoke_iiii(543,($271|0),($294|0),($315|0))|0);
       $316 = __THREW__; __THREW__ = 0;
       $317 = $316&1;
       if ($317) {
        $432 = ___cxa_find_matching_catch_2()|0;
        $433 = tempRet0;
        $210 = $432;
        $211 = $433;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($212);
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($212);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($213);
       $162 = $i;
       $318 = $162;
       HEAP32[$318>>2] = 0;
       $319 = HEAP32[$224>>2]|0;
       $320 = ((($319)) + 4|0);
       $126 = $320;
       $321 = $126;
       $322 = HEAP32[$321>>2]|0;
       $123 = $321;
       $124 = $322;
       $323 = $124;
       $120 = $122;
       $121 = $323;
       $324 = $120;
       $325 = $121;
       HEAP32[$324>>2] = $325;
       $326 = HEAP32[$122>>2]|0;
       HEAP32[$125>>2] = $326;
       $327 = HEAP32[$125>>2]|0;
       HEAP32[$214>>2] = $327;
       ;HEAP32[$i>>2]=HEAP32[$214>>2]|0;
       while(1) {
        $328 = HEAP32[$224>>2]|0;
        $329 = ((($328)) + 4|0);
        $119 = $329;
        $330 = $119;
        $331 = ((($330)) + 4|0);
        $332 = HEAP32[$331>>2]|0;
        $116 = $330;
        $117 = $332;
        $333 = $117;
        $113 = $115;
        $114 = $333;
        $334 = $113;
        $335 = $114;
        HEAP32[$334>>2] = $335;
        $336 = HEAP32[$115>>2]|0;
        HEAP32[$118>>2] = $336;
        $337 = HEAP32[$118>>2]|0;
        HEAP32[$215>>2] = $337;
        $111 = $i;
        $112 = $215;
        $338 = $111;
        $339 = $112;
        $109 = $338;
        $110 = $339;
        $340 = $109;
        $108 = $340;
        $341 = $108;
        $342 = HEAP32[$341>>2]|0;
        $343 = $110;
        $107 = $343;
        $344 = $107;
        $345 = HEAP32[$344>>2]|0;
        $346 = ($342|0)==($345|0);
        $347 = $346 ^ 1;
        if (!($347)) {
         label = 40;
         break;
        }
        $78 = $i;
        $348 = $78;
        $349 = HEAP32[$348>>2]|0;
        $350 = $208;
        $351 = (($350) + 1)|0;
        __THREW__ = 0;
        invoke_viii(646,($217|0),($349|0),($351|0));
        $352 = __THREW__; __THREW__ = 0;
        $353 = $352&1;
        if ($353) {
         break L5;
        }
        $39 = $217;
        $40 = 13384;
        $354 = $39;
        $355 = $40;
        __THREW__ = 0;
        $356 = (invoke_iii(542,($354|0),($355|0))|0);
        $357 = __THREW__; __THREW__ = 0;
        $358 = $357&1;
        if ($358) {
         label = 37;
         break;
        }
        $38 = $356;
        $359 = $38;
        $36 = $216;
        $37 = $359;
        $360 = $36;
        $361 = $37;
        $35 = $361;
        $362 = $35;
        ;HEAP32[$360>>2]=HEAP32[$362>>2]|0;HEAP32[$360+4>>2]=HEAP32[$362+4>>2]|0;HEAP32[$360+8>>2]=HEAP32[$362+8>>2]|0;
        $363 = $37;
        $34 = $363;
        $364 = $34;
        $33 = $364;
        $365 = $33;
        $32 = $365;
        $366 = $32;
        $__a$i$i$i19 = $366;
        $__i$i$i$i20 = 0;
        while(1) {
         $367 = $__i$i$i$i20;
         $368 = ($367>>>0)<(3);
         if (!($368)) {
          break;
         }
         $369 = $__i$i$i$i20;
         $370 = $__a$i$i$i19;
         $371 = (($370) + ($369<<2)|0);
         HEAP32[$371>>2] = 0;
         $372 = $__i$i$i$i20;
         $373 = (($372) + 1)|0;
         $__i$i$i$i20 = $373;
        }
        $30 = $agg$result;
        $31 = $216;
        $374 = $30;
        $375 = $31;
        $28 = $374;
        $29 = $375;
        $376 = $28;
        $377 = $29;
        $27 = $377;
        $378 = $27;
        $26 = $378;
        $379 = $26;
        $25 = $379;
        $380 = $25;
        $24 = $380;
        $381 = $24;
        $23 = $381;
        $382 = $23;
        $383 = HEAP8[$382>>0]|0;
        $384 = $383&255;
        $385 = $384 & 1;
        $386 = ($385|0)!=(0);
        if ($386) {
         $17 = $379;
         $387 = $17;
         $16 = $387;
         $388 = $16;
         $15 = $388;
         $389 = $15;
         $390 = ((($389)) + 8|0);
         $391 = HEAP32[$390>>2]|0;
         $398 = $391;
        } else {
         $22 = $379;
         $392 = $22;
         $21 = $392;
         $393 = $21;
         $20 = $393;
         $394 = $20;
         $395 = ((($394)) + 1|0);
         $19 = $395;
         $396 = $19;
         $18 = $396;
         $397 = $18;
         $398 = $397;
        }
        $14 = $398;
        $399 = $14;
        $400 = $29;
        $13 = $400;
        $401 = $13;
        $12 = $401;
        $402 = $12;
        $11 = $402;
        $403 = $11;
        $10 = $403;
        $404 = $10;
        $405 = HEAP8[$404>>0]|0;
        $406 = $405&255;
        $407 = $406 & 1;
        $408 = ($407|0)!=(0);
        if ($408) {
         $6 = $401;
         $409 = $6;
         $5 = $409;
         $410 = $5;
         $4 = $410;
         $411 = $4;
         $412 = ((($411)) + 4|0);
         $413 = HEAP32[$412>>2]|0;
         $420 = $413;
        } else {
         $9 = $401;
         $414 = $9;
         $8 = $414;
         $415 = $8;
         $7 = $415;
         $416 = $7;
         $417 = HEAP8[$416>>0]|0;
         $418 = $417&255;
         $419 = $418 >> 1;
         $420 = $419;
        }
        __THREW__ = 0;
        (invoke_iiii(543,($376|0),($399|0),($420|0))|0);
        $421 = __THREW__; __THREW__ = 0;
        $422 = $421&1;
        if ($422) {
         label = 38;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($216);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
        $2 = $i;
        $3 = 0;
        $423 = $2;
        ;HEAP32[$1>>2]=HEAP32[$423>>2]|0;
        $0 = $423;
        $424 = $0;
        $425 = HEAP32[$424>>2]|0;
        $426 = ((($425)) + 12|0);
        HEAP32[$424>>2] = $426;
        $427 = HEAP32[$1>>2]|0;
        HEAP32[$218>>2] = $427;
       }
       if ((label|0) == 37) {
        $434 = ___cxa_find_matching_catch_2()|0;
        $435 = tempRet0;
        $210 = $434;
        $211 = $435;
       }
       else if ((label|0) == 38) {
        $436 = ___cxa_find_matching_catch_2()|0;
        $437 = tempRet0;
        $210 = $436;
        $211 = $437;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($216);
       }
       else if ((label|0) == 40) {
        $438 = $208;
        __THREW__ = 0;
        invoke_vii(645,($220|0),($438|0));
        $439 = __THREW__; __THREW__ = 0;
        $440 = $439&1;
        if ($440) {
         break L5;
        }
        $76 = $220;
        $77 = 13386;
        $441 = $76;
        $442 = $77;
        __THREW__ = 0;
        $443 = (invoke_iii(542,($441|0),($442|0))|0);
        $444 = __THREW__; __THREW__ = 0;
        $445 = $444&1;
        do {
         if ($445) {
          $510 = ___cxa_find_matching_catch_2()|0;
          $511 = tempRet0;
          $210 = $510;
          $211 = $511;
         } else {
          $75 = $443;
          $446 = $75;
          $73 = $219;
          $74 = $446;
          $447 = $73;
          $448 = $74;
          $72 = $448;
          $449 = $72;
          ;HEAP32[$447>>2]=HEAP32[$449>>2]|0;HEAP32[$447+4>>2]=HEAP32[$449+4>>2]|0;HEAP32[$447+8>>2]=HEAP32[$449+8>>2]|0;
          $450 = $74;
          $71 = $450;
          $451 = $71;
          $70 = $451;
          $452 = $70;
          $69 = $452;
          $453 = $69;
          $__a$i$i$i11 = $453;
          $__i$i$i$i12 = 0;
          while(1) {
           $454 = $__i$i$i$i12;
           $455 = ($454>>>0)<(3);
           if (!($455)) {
            break;
           }
           $456 = $__i$i$i$i12;
           $457 = $__a$i$i$i11;
           $458 = (($457) + ($456<<2)|0);
           HEAP32[$458>>2] = 0;
           $459 = $__i$i$i$i12;
           $460 = (($459) + 1)|0;
           $__i$i$i$i12 = $460;
          }
          $105 = $agg$result;
          $106 = $219;
          $461 = $105;
          $462 = $106;
          $103 = $461;
          $104 = $462;
          $463 = $103;
          $464 = $104;
          $102 = $464;
          $465 = $102;
          $101 = $465;
          $466 = $101;
          $100 = $466;
          $467 = $100;
          $99 = $467;
          $468 = $99;
          $98 = $468;
          $469 = $98;
          $470 = HEAP8[$469>>0]|0;
          $471 = $470&255;
          $472 = $471 & 1;
          $473 = ($472|0)!=(0);
          if ($473) {
           $92 = $466;
           $474 = $92;
           $91 = $474;
           $475 = $91;
           $90 = $475;
           $476 = $90;
           $477 = ((($476)) + 8|0);
           $478 = HEAP32[$477>>2]|0;
           $485 = $478;
          } else {
           $97 = $466;
           $479 = $97;
           $96 = $479;
           $480 = $96;
           $95 = $480;
           $481 = $95;
           $482 = ((($481)) + 1|0);
           $94 = $482;
           $483 = $94;
           $93 = $483;
           $484 = $93;
           $485 = $484;
          }
          $89 = $485;
          $486 = $89;
          $487 = $104;
          $88 = $487;
          $488 = $88;
          $87 = $488;
          $489 = $87;
          $86 = $489;
          $490 = $86;
          $85 = $490;
          $491 = $85;
          $492 = HEAP8[$491>>0]|0;
          $493 = $492&255;
          $494 = $493 & 1;
          $495 = ($494|0)!=(0);
          if ($495) {
           $81 = $488;
           $496 = $81;
           $80 = $496;
           $497 = $80;
           $79 = $497;
           $498 = $79;
           $499 = ((($498)) + 4|0);
           $500 = HEAP32[$499>>2]|0;
           $507 = $500;
          } else {
           $84 = $488;
           $501 = $84;
           $83 = $501;
           $502 = $83;
           $82 = $502;
           $503 = $82;
           $504 = HEAP8[$503>>0]|0;
           $505 = $504&255;
           $506 = $505 >> 1;
           $507 = $506;
          }
          __THREW__ = 0;
          (invoke_iiii(543,($463|0),($486|0),($507|0))|0);
          $508 = __THREW__; __THREW__ = 0;
          $509 = $508&1;
          if ($509) {
           $512 = ___cxa_find_matching_catch_2()|0;
           $513 = tempRet0;
           $210 = $512;
           $211 = $513;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
           break;
          } else {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($219);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($220);
           break L7;
          }
         }
        } while(0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($220);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
        $643 = $210;
        $644 = $211;
        ___resumeException($643|0);
        // unreachable;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($217);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
       $643 = $210;
       $644 = $211;
       ___resumeException($643|0);
       // unreachable;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($213);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
     $643 = $210;
     $644 = $211;
     ___resumeException($643|0);
     // unreachable;
    } else {
     __THREW__ = 0;
     invoke_vii(645,($222|0),($246|0));
     $514 = __THREW__; __THREW__ = 0;
     $515 = $514&1;
     if ($515) {
      break L5;
     }
     $516 = HEAP32[$224>>2]|0;
     $517 = HEAP32[$516>>2]|0;
     $518 = ((($517)) + 8|0);
     $519 = HEAP32[$518>>2]|0;
     __THREW__ = 0;
     invoke_vii($519|0,($223|0),($516|0));
     $520 = __THREW__; __THREW__ = 0;
     $521 = $520&1;
     if ($521) {
      $636 = ___cxa_find_matching_catch_2()|0;
      $637 = tempRet0;
      $210 = $636;
      $211 = $637;
     } else {
      $160 = $222;
      $161 = $223;
      $522 = $160;
      $523 = $161;
      $158 = $522;
      $159 = $523;
      $524 = $158;
      $525 = $159;
      $157 = $525;
      $526 = $157;
      $156 = $526;
      $527 = $156;
      $155 = $527;
      $528 = $155;
      $154 = $528;
      $529 = $154;
      $153 = $529;
      $530 = $153;
      $531 = HEAP8[$530>>0]|0;
      $532 = $531&255;
      $533 = $532 & 1;
      $534 = ($533|0)!=(0);
      if ($534) {
       $147 = $527;
       $535 = $147;
       $146 = $535;
       $536 = $146;
       $145 = $536;
       $537 = $145;
       $538 = ((($537)) + 8|0);
       $539 = HEAP32[$538>>2]|0;
       $546 = $539;
      } else {
       $152 = $527;
       $540 = $152;
       $151 = $540;
       $541 = $151;
       $150 = $541;
       $542 = $150;
       $543 = ((($542)) + 1|0);
       $149 = $543;
       $544 = $149;
       $148 = $544;
       $545 = $148;
       $546 = $545;
      }
      $144 = $546;
      $547 = $144;
      $548 = $159;
      $143 = $548;
      $549 = $143;
      $142 = $549;
      $550 = $142;
      $141 = $550;
      $551 = $141;
      $140 = $551;
      $552 = $140;
      $553 = HEAP8[$552>>0]|0;
      $554 = $553&255;
      $555 = $554 & 1;
      $556 = ($555|0)!=(0);
      if ($556) {
       $136 = $549;
       $557 = $136;
       $135 = $557;
       $558 = $135;
       $134 = $558;
       $559 = $134;
       $560 = ((($559)) + 4|0);
       $561 = HEAP32[$560>>2]|0;
       $568 = $561;
      } else {
       $139 = $549;
       $562 = $139;
       $138 = $562;
       $563 = $138;
       $137 = $563;
       $564 = $137;
       $565 = HEAP8[$564>>0]|0;
       $566 = $565&255;
       $567 = $566 >> 1;
       $568 = $567;
      }
      __THREW__ = 0;
      $569 = (invoke_iiii(543,($524|0),($547|0),($568|0))|0);
      $570 = __THREW__; __THREW__ = 0;
      $571 = $570&1;
      do {
       if ($571) {
        $638 = ___cxa_find_matching_catch_2()|0;
        $639 = tempRet0;
        $210 = $638;
        $211 = $639;
       } else {
        $133 = $569;
        $572 = $133;
        $131 = $221;
        $132 = $572;
        $573 = $131;
        $574 = $132;
        $130 = $574;
        $575 = $130;
        ;HEAP32[$573>>2]=HEAP32[$575>>2]|0;HEAP32[$573+4>>2]=HEAP32[$575+4>>2]|0;HEAP32[$573+8>>2]=HEAP32[$575+8>>2]|0;
        $576 = $132;
        $129 = $576;
        $577 = $129;
        $128 = $577;
        $578 = $128;
        $127 = $578;
        $579 = $127;
        $__a$i$i$i2 = $579;
        $__i$i$i$i3 = 0;
        while(1) {
         $580 = $__i$i$i$i3;
         $581 = ($580>>>0)<(3);
         if (!($581)) {
          break;
         }
         $582 = $__i$i$i$i3;
         $583 = $__a$i$i$i2;
         $584 = (($583) + ($582<<2)|0);
         HEAP32[$584>>2] = 0;
         $585 = $__i$i$i$i3;
         $586 = (($585) + 1)|0;
         $__i$i$i$i3 = $586;
        }
        $67 = $agg$result;
        $68 = $221;
        $587 = $67;
        $588 = $68;
        $65 = $587;
        $66 = $588;
        $589 = $65;
        $590 = $66;
        $64 = $590;
        $591 = $64;
        $63 = $591;
        $592 = $63;
        $62 = $592;
        $593 = $62;
        $61 = $593;
        $594 = $61;
        $60 = $594;
        $595 = $60;
        $596 = HEAP8[$595>>0]|0;
        $597 = $596&255;
        $598 = $597 & 1;
        $599 = ($598|0)!=(0);
        if ($599) {
         $54 = $592;
         $600 = $54;
         $53 = $600;
         $601 = $53;
         $52 = $601;
         $602 = $52;
         $603 = ((($602)) + 8|0);
         $604 = HEAP32[$603>>2]|0;
         $611 = $604;
        } else {
         $59 = $592;
         $605 = $59;
         $58 = $605;
         $606 = $58;
         $57 = $606;
         $607 = $57;
         $608 = ((($607)) + 1|0);
         $56 = $608;
         $609 = $56;
         $55 = $609;
         $610 = $55;
         $611 = $610;
        }
        $51 = $611;
        $612 = $51;
        $613 = $66;
        $50 = $613;
        $614 = $50;
        $49 = $614;
        $615 = $49;
        $48 = $615;
        $616 = $48;
        $47 = $616;
        $617 = $47;
        $618 = HEAP8[$617>>0]|0;
        $619 = $618&255;
        $620 = $619 & 1;
        $621 = ($620|0)!=(0);
        if ($621) {
         $43 = $614;
         $622 = $43;
         $42 = $622;
         $623 = $42;
         $41 = $623;
         $624 = $41;
         $625 = ((($624)) + 4|0);
         $626 = HEAP32[$625>>2]|0;
         $633 = $626;
        } else {
         $46 = $614;
         $627 = $46;
         $45 = $627;
         $628 = $45;
         $44 = $628;
         $629 = $44;
         $630 = HEAP8[$629>>0]|0;
         $631 = $630&255;
         $632 = $631 >> 1;
         $633 = $632;
        }
        __THREW__ = 0;
        (invoke_iiii(543,($589|0),($612|0),($633|0))|0);
        $634 = __THREW__; __THREW__ = 0;
        $635 = $634&1;
        if ($635) {
         $640 = ___cxa_find_matching_catch_2()|0;
         $641 = tempRet0;
         $210 = $640;
         $211 = $641;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
         break;
        } else {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($221);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($223);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($222);
         break L7;
        }
       }
      } while(0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($223);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($222);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
     $643 = $210;
     $644 = $211;
     ___resumeException($643|0);
     // unreachable;
    }
   } while(0);
   $$expand_i1_val2 = 1;
   HEAP8[$209>>0] = $$expand_i1_val2;
   $$pre_trunc = HEAP8[$209>>0]|0;
   $642 = $$pre_trunc&1;
   if ($642) {
    STACKTOP = sp;return;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   STACKTOP = sp;return;
  }
 } while(0);
 $428 = ___cxa_find_matching_catch_2()|0;
 $429 = tempRet0;
 $210 = $428;
 $211 = $429;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 $643 = $210;
 $644 = $211;
 ___resumeException($643|0);
 // unreachable;
}
function __ZN8LispNode6spacesEi($agg$result,$n) {
 $agg$result = $agg$result|0;
 $n = $n|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = sp + 56|0;
 $9 = $n;
 $$expand_i1_val = 0;
 HEAP8[$10>>0] = $$expand_i1_val;
 $8 = $agg$result;
 $13 = $8;
 $7 = $13;
 $14 = $7;
 $6 = $14;
 $15 = $6;
 $5 = $15;
 $4 = $13;
 $16 = $4;
 $3 = $16;
 $17 = $3;
 $2 = $17;
 $18 = $2;
 $__a$i$i = $18;
 $__i$i$i = 0;
 while(1) {
  $19 = $__i$i$i;
  $20 = ($19>>>0)<(3);
  if (!($20)) {
   break;
  }
  $21 = $__i$i$i;
  $22 = $__a$i$i;
  $23 = (($22) + ($21<<2)|0);
  HEAP32[$23>>2] = 0;
  $24 = $__i$i$i;
  $25 = (($24) + 1)|0;
  $__i$i$i = $25;
 }
 $i = 0;
 while(1) {
  $26 = $i;
  $27 = $9;
  $28 = ($27*3)|0;
  $29 = ($26|0)<($28|0);
  if (!($29)) {
   break;
  }
  $0 = $agg$result;
  $1 = 32;
  $30 = $0;
  $31 = $1;
  __THREW__ = 0;
  invoke_vii(628,($30|0),($31|0));
  $32 = __THREW__; __THREW__ = 0;
  $33 = $32&1;
  if ($33) {
   label = 8;
   break;
  }
  $34 = $i;
  $35 = (($34) + 1)|0;
  $i = $35;
 }
 if ((label|0) == 8) {
  $36 = ___cxa_find_matching_catch_2()|0;
  $37 = tempRet0;
  $11 = $36;
  $12 = $37;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  $38 = $11;
  $39 = $12;
  ___resumeException($38|0);
  // unreachable;
 }
 $$expand_i1_val2 = 1;
 HEAP8[$10>>0] = $$expand_i1_val2;
 $$pre_trunc = HEAP8[$10>>0]|0;
 $40 = $$pre_trunc&1;
 if ($40) {
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 STACKTOP = sp;return;
}
function __ZN10LispStringC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$str) {
 $this = $this|0;
 $str = $str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $10 = sp + 40|0;
 $13 = sp + 28|0;
 $17 = $this;
 $18 = $str;
 $21 = $17;
 $22 = ((($21)) + 4|0);
 $16 = $22;
 $23 = $16;
 $15 = $23;
 $24 = $15;
 $14 = $24;
 HEAP32[$24>>2] = 0;
 $25 = ((($24)) + 4|0);
 HEAP32[$25>>2] = 0;
 $26 = ((($24)) + 8|0);
 $12 = $26;
 HEAP32[$13>>2] = 0;
 $27 = $12;
 $11 = $13;
 $28 = $11;
 $29 = HEAP32[$28>>2]|0;
 $9 = $27;
 HEAP32[$10>>2] = $29;
 $30 = $9;
 $8 = $30;
 $7 = $10;
 $31 = $7;
 $32 = HEAP32[$31>>2]|0;
 HEAP32[$30>>2] = $32;
 $33 = ((($21)) + 16|0);
 $6 = $33;
 $34 = $6;
 $5 = $34;
 $35 = $5;
 $4 = $35;
 $36 = $4;
 $3 = $36;
 $2 = $34;
 $37 = $2;
 $1 = $37;
 $38 = $1;
 $0 = $38;
 $39 = $0;
 $__a$i$i = $39;
 $__i$i$i = 0;
 while(1) {
  $40 = $__i$i$i;
  $41 = ($40>>>0)<(3);
  if (!($41)) {
   break;
  }
  $42 = $__i$i$i;
  $43 = $__a$i$i;
  $44 = (($43) + ($42<<2)|0);
  HEAP32[$44>>2] = 0;
  $45 = $__i$i$i;
  $46 = (($45) + 1)|0;
  $__i$i$i = $46;
 }
 $47 = ((($21)) + 28|0);
 HEAP32[$47>>2] = 0;
 $48 = $18;
 __THREW__ = 0;
 invoke_vii(647,($21|0),($48|0));
 $49 = __THREW__; __THREW__ = 0;
 $50 = $49&1;
 if ($50) {
  $51 = ___cxa_find_matching_catch_2()|0;
  $52 = tempRet0;
  $19 = $51;
  $20 = $52;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
  __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEED2Ev($22);
  $53 = $19;
  $54 = $20;
  ___resumeException($53|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZN10LispString13setLispStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$str) {
 $this = $this|0;
 $str = $str|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__annotator$i = 0, $e = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $38 = sp;
 $43 = sp + 353|0;
 $__annotator$i = sp + 352|0;
 $i = sp + 8|0;
 $83 = $this;
 $84 = $str;
 $87 = $83;
 $88 = ((($87)) + 16|0);
 $89 = $84;
 __THREW__ = 0;
 (invoke_iii(648,($88|0),($89|0))|0);
 $90 = __THREW__; __THREW__ = 0;
 $91 = $90&1;
 do {
  if (!($91)) {
   HEAP32[$i>>2] = 0;
   $92 = $84;
   $81 = $92;
   $82 = 0;
   $93 = $81;
   $80 = $93;
   $94 = $80;
   $79 = $94;
   $95 = $79;
   $78 = $95;
   $96 = $78;
   $77 = $96;
   $97 = $77;
   $76 = $97;
   $98 = $76;
   $99 = HEAP8[$98>>0]|0;
   $100 = $99&255;
   $101 = $100 & 1;
   $102 = ($101|0)!=(0);
   if ($102) {
    $70 = $95;
    $103 = $70;
    $69 = $103;
    $104 = $69;
    $68 = $104;
    $105 = $68;
    $106 = ((($105)) + 8|0);
    $107 = HEAP32[$106>>2]|0;
    $114 = $107;
   } else {
    $75 = $95;
    $108 = $75;
    $74 = $108;
    $109 = $74;
    $73 = $109;
    $110 = $73;
    $111 = ((($110)) + 1|0);
    $72 = $111;
    $112 = $72;
    $71 = $112;
    $113 = $71;
    $114 = $113;
   }
   $67 = $114;
   $115 = $67;
   $116 = $82;
   $117 = (($115) + ($116)|0);
   $118 = HEAP8[$117>>0]|0;
   $119 = $118 << 24 >> 24;
   $120 = ($119|0)==(40);
   $121 = $84;
   if ($120) {
    $66 = $121;
    $122 = $66;
    $65 = $122;
    $123 = $65;
    $64 = $123;
    $124 = $64;
    $63 = $124;
    $125 = $63;
    $62 = $125;
    $126 = $62;
    $127 = HEAP8[$126>>0]|0;
    $128 = $127&255;
    $129 = $128 & 1;
    $130 = ($129|0)!=(0);
    if ($130) {
     $56 = $123;
     $131 = $56;
     $55 = $131;
     $132 = $55;
     $54 = $132;
     $133 = $54;
     $134 = ((($133)) + 8|0);
     $135 = HEAP32[$134>>2]|0;
     $142 = $135;
    } else {
     $61 = $123;
     $136 = $61;
     $60 = $136;
     $137 = $60;
     $59 = $137;
     $138 = $59;
     $139 = ((($138)) + 1|0);
     $58 = $139;
     $140 = $58;
     $57 = $140;
     $141 = $57;
     $142 = $141;
    }
    $53 = $142;
    $143 = $53;
    __THREW__ = 0;
    $144 = (invoke_iiiii(649,($87|0),($143|0),($i|0),0)|0);
    $145 = __THREW__; __THREW__ = 0;
    $146 = $145&1;
    if ($146) {
     break;
    }
    $147 = ((($87)) + 28|0);
    HEAP32[$147>>2] = $144;
   } else {
    $28 = $121;
    $29 = 0;
    $197 = $28;
    $27 = $197;
    $198 = $27;
    $26 = $198;
    $199 = $26;
    $25 = $199;
    $200 = $25;
    $24 = $200;
    $201 = $24;
    $23 = $201;
    $202 = $23;
    $203 = HEAP8[$202>>0]|0;
    $204 = $203&255;
    $205 = $204 & 1;
    $206 = ($205|0)!=(0);
    if ($206) {
     $17 = $199;
     $207 = $17;
     $16 = $207;
     $208 = $16;
     $15 = $208;
     $209 = $15;
     $210 = ((($209)) + 8|0);
     $211 = HEAP32[$210>>2]|0;
     $218 = $211;
    } else {
     $22 = $199;
     $212 = $22;
     $21 = $212;
     $213 = $21;
     $20 = $213;
     $214 = $20;
     $215 = ((($214)) + 1|0);
     $19 = $215;
     $216 = $19;
     $18 = $216;
     $217 = $18;
     $218 = $217;
    }
    $14 = $218;
    $219 = $14;
    $220 = $29;
    $221 = (($219) + ($220)|0);
    $222 = HEAP8[$221>>0]|0;
    $223 = $222 << 24 >> 24;
    $224 = ($223|0)!=(123);
    if ($224) {
     $225 = HEAP32[$i>>2]|0;
     $226 = (($225) + -1)|0;
     HEAP32[$i>>2] = $226;
    }
    $227 = $84;
    $13 = $227;
    $228 = $13;
    $12 = $228;
    $229 = $12;
    $11 = $229;
    $230 = $11;
    $10 = $230;
    $231 = $10;
    $9 = $231;
    $232 = $9;
    $233 = HEAP8[$232>>0]|0;
    $234 = $233&255;
    $235 = $234 & 1;
    $236 = ($235|0)!=(0);
    if ($236) {
     $3 = $229;
     $237 = $3;
     $2 = $237;
     $238 = $2;
     $1 = $238;
     $239 = $1;
     $240 = ((($239)) + 8|0);
     $241 = HEAP32[$240>>2]|0;
     $248 = $241;
    } else {
     $8 = $229;
     $242 = $8;
     $7 = $242;
     $243 = $7;
     $6 = $243;
     $244 = $6;
     $245 = ((($244)) + 1|0);
     $5 = $245;
     $246 = $5;
     $4 = $246;
     $247 = $4;
     $248 = $247;
    }
    $0 = $248;
    $249 = $0;
    __THREW__ = 0;
    $250 = (invoke_iiiii(653,($87|0),($249|0),($i|0),1)|0);
    $251 = __THREW__; __THREW__ = 0;
    $252 = $251&1;
    if ($252) {
     break;
    }
    $253 = ((($87)) + 28|0);
    HEAP32[$253>>2] = $250;
   }
   HEAP8[$87>>0] = 1;
   STACKTOP = sp;return;
  }
 } while(0);
 $148 = ___cxa_find_matching_catch_3(672|0)|0;
 $149 = tempRet0;
 $85 = $148;
 $86 = $149;
 $150 = $86;
 $151 = (_llvm_eh_typeid_for((672|0))|0);
 $152 = ($150|0)==($151|0);
 if (!($152)) {
  $258 = $85;
  $259 = $86;
  ___resumeException($258|0);
  // unreachable;
 }
 $153 = $85;
 $154 = (___cxa_begin_catch(($153|0))|0);
 $e = $154;
 $155 = ((($87)) + 4|0);
 $156 = $e;
 __THREW__ = 0;
 $157 = (invoke_ii(650,($156|0))|0);
 $158 = __THREW__; __THREW__ = 0;
 $159 = $158&1;
 do {
  if (!($159)) {
   $51 = $155;
   $52 = $157;
   $160 = $51;
   $161 = ((($160)) + 4|0);
   $162 = HEAP32[$161>>2]|0;
   $50 = $160;
   $163 = $50;
   $164 = ((($163)) + 8|0);
   $49 = $164;
   $165 = $49;
   $48 = $165;
   $166 = $48;
   $167 = HEAP32[$166>>2]|0;
   $168 = ($162|0)!=($167|0);
   if ($168) {
    __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i,$160,1);
    $47 = $160;
    $169 = $47;
    $170 = ((($169)) + 8|0);
    $46 = $170;
    $171 = $46;
    $45 = $171;
    $172 = $45;
    $173 = ((($160)) + 4|0);
    $174 = HEAP32[$173>>2]|0;
    $44 = $174;
    $175 = $44;
    $176 = $52;
    $40 = $172;
    $41 = $175;
    $42 = $176;
    $177 = $40;
    $178 = $41;
    $179 = $42;
    $39 = $179;
    $180 = $39;
    ;HEAP8[$38>>0]=HEAP8[$43>>0]|0;
    $35 = $177;
    $36 = $178;
    $37 = $180;
    $181 = $35;
    $182 = $36;
    $183 = $37;
    $34 = $183;
    $184 = $34;
    $31 = $181;
    $32 = $182;
    $33 = $184;
    $185 = $32;
    $186 = $33;
    $30 = $186;
    $187 = $30;
    __THREW__ = 0;
    invoke_vii(651,($185|0),($187|0));
    $188 = __THREW__; __THREW__ = 0;
    $189 = $188&1;
    if ($189) {
     break;
    }
    __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i);
    $190 = ((($160)) + 4|0);
    $191 = HEAP32[$190>>2]|0;
    $192 = ((($191)) + 24|0);
    HEAP32[$190>>2] = $192;
   } else {
    $193 = $52;
    __THREW__ = 0;
    invoke_vii(652,($160|0),($193|0));
    $194 = __THREW__; __THREW__ = 0;
    $195 = $194&1;
    if ($195) {
     break;
    }
   }
   $196 = ((($87)) + 28|0);
   HEAP32[$196>>2] = 0;
   HEAP8[$87>>0] = 0;
   ___cxa_end_catch();
   STACKTOP = sp;return;
  }
 } while(0);
 $254 = ___cxa_find_matching_catch_2()|0;
 $255 = tempRet0;
 $85 = $254;
 $86 = $255;
 __THREW__ = 0;
 invoke_v(593);
 $256 = __THREW__; __THREW__ = 0;
 $257 = $256&1;
 if ($257) {
  $260 = ___cxa_find_matching_catch_3(0|0)|0;
  $261 = tempRet0;
  ___clang_call_terminate($260);
  // unreachable;
 } else {
  $258 = $85;
  $259 = $86;
  ___resumeException($258|0);
  // unreachable;
 }
}
function __ZN10LispString9parseListEPKcPib($this,$str,$i,$noFrame) {
 $this = $this|0;
 $str = $str|0;
 $i = $i|0;
 $noFrame = $noFrame|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$expand_i1_val = 0, $$expand_i1_val12 = 0, $$expand_i1_val14 = 0, $$expand_i1_val3 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $$pre_trunc10 = 0, $$pre_trunc16 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__annotator$i = 0, $__annotator$i2 = 0, $__annotator$i4 = 0, $list = 0, $listData = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 560|0;
 $$byval_copy = sp + 552|0;
 $28 = sp + 16|0;
 $33 = sp + 577|0;
 $__annotator$i4 = sp + 576|0;
 $51 = sp + 8|0;
 $56 = sp + 575|0;
 $__annotator$i2 = sp + 574|0;
 $79 = sp;
 $84 = sp + 573|0;
 $__annotator$i = sp + 572|0;
 $99 = sp + 168|0;
 $100 = sp + 156|0;
 $103 = sp + 570|0;
 $104 = sp + 120|0;
 $105 = sp + 104|0;
 $106 = sp + 96|0;
 $107 = sp + 80|0;
 $108 = sp + 569|0;
 $109 = sp + 56|0;
 $110 = sp + 40|0;
 $111 = sp + 32|0;
 $112 = sp + 20|0;
 $113 = sp + 568|0;
 $95 = $this;
 $96 = $str;
 $97 = $i;
 $114 = $noFrame&1;
 $98 = $114;
 $115 = $95;
 $116 = (__Znwj(12)|0);
 $$expand_i1_val = 1;
 HEAP8[$103>>0] = $$expand_i1_val;
 $117 = $96;
 $69 = $100;
 $70 = $117;
 $118 = $69;
 $68 = $118;
 $119 = $68;
 $67 = $119;
 $120 = $67;
 $66 = $120;
 $121 = $70;
 $122 = $70;
 __THREW__ = 0;
 $123 = (invoke_ii(550,($122|0))|0);
 $124 = __THREW__; __THREW__ = 0;
 $125 = $124&1;
 if ($125) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($118|0),($121|0),($123|0));
  $126 = __THREW__; __THREW__ = 0;
  $127 = $126&1;
  if ($127) {
   label = 8;
  } else {
   $128 = $97;
   $129 = HEAP32[$128>>2]|0;
   __THREW__ = 0;
   invoke_viii(654,($99|0),($100|0),($129|0));
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if (!($131)) {
    __THREW__ = 0;
    invoke_vii(655,($116|0),($99|0));
    $132 = __THREW__; __THREW__ = 0;
    $133 = $132&1;
    if (!($133)) {
     $$expand_i1_val3 = 0;
     HEAP8[$103>>0] = $$expand_i1_val3;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($100);
     $list = $116;
     $134 = (__Znwj(16)|0);
     __THREW__ = 0;
     invoke_vi(544,($134|0));
     $135 = __THREW__; __THREW__ = 0;
     $136 = $135&1;
     if ($136) {
      $152 = ___cxa_find_matching_catch_2()|0;
      $153 = tempRet0;
      $101 = $152;
      $102 = $153;
      __ZdlPv($134);
      $355 = $101;
      $356 = $102;
      ___resumeException($355|0);
      // unreachable;
     }
     $listData = $134;
     $137 = $list;
     HEAP32[$137>>2] = $134;
     L11: while(1) {
      $138 = $97;
      $139 = HEAP32[$138>>2]|0;
      $140 = (($139) + 1)|0;
      HEAP32[$138>>2] = $140;
      $141 = $97;
      $142 = HEAP32[$141>>2]|0;
      $143 = $96;
      $144 = (($143) + ($142)|0);
      $145 = HEAP8[$144>>0]|0;
      $146 = $145 << 24 >> 24;
      switch ($146|0) {
      case 9: case 39: case 10: case 32:  {
       continue L11;
       break;
      }
      case 41:  {
       label = 19;
       break L11;
       break;
      }
      case 125: case 58: case 59: case 0:  {
       label = 37;
       break L11;
       break;
      }
      case 40:  {
       $154 = $listData;
       $155 = ((($154)) + 4|0);
       $156 = $96;
       $157 = $97;
       $158 = (__ZN10LispString9parseListEPKcPib($115,$156,$157,0)|0);
       $64 = $155;
       $65 = $158;
       $159 = $64;
       $160 = ((($159)) + 4|0);
       $161 = HEAP32[$160>>2]|0;
       $63 = $159;
       $162 = $63;
       $163 = ((($162)) + 8|0);
       $62 = $163;
       $164 = $62;
       $61 = $164;
       $165 = $61;
       $166 = HEAP32[$165>>2]|0;
       $167 = ($161|0)!=($166|0);
       if ($167) {
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i2,$159,1);
        $60 = $159;
        $168 = $60;
        $169 = ((($168)) + 8|0);
        $59 = $169;
        $170 = $59;
        $58 = $170;
        $171 = $58;
        $172 = ((($159)) + 4|0);
        $173 = HEAP32[$172>>2]|0;
        $57 = $173;
        $174 = $57;
        $175 = $65;
        $53 = $171;
        $54 = $174;
        $55 = $175;
        $176 = $53;
        $177 = $54;
        $178 = $55;
        $52 = $178;
        $179 = $52;
        ;HEAP8[$51>>0]=HEAP8[$56>>0]|0;
        $48 = $176;
        $49 = $177;
        $50 = $179;
        $180 = $48;
        $181 = $49;
        $182 = $50;
        $47 = $182;
        $183 = $47;
        $44 = $180;
        $45 = $181;
        $46 = $183;
        $184 = $45;
        $185 = $46;
        $43 = $185;
        $186 = $43;
        __ZN8LispNodeC2ERKS_($184,$186);
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i2);
        $187 = ((($159)) + 4|0);
        $188 = HEAP32[$187>>2]|0;
        $189 = ((($188)) + 12|0);
        HEAP32[$187>>2] = $189;
        continue L11;
       } else {
        $190 = $65;
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($159,$190);
        continue L11;
       }
       break;
      }
      case 123:  {
       $191 = $listData;
       $192 = ((($191)) + 4|0);
       $193 = $96;
       $194 = $97;
       $195 = (__ZN10LispString11parsePacketEPKcPib($115,$193,$194,0)|0);
       $41 = $192;
       $42 = $195;
       $196 = $41;
       $197 = ((($196)) + 4|0);
       $198 = HEAP32[$197>>2]|0;
       $40 = $196;
       $199 = $40;
       $200 = ((($199)) + 8|0);
       $39 = $200;
       $201 = $39;
       $38 = $201;
       $202 = $38;
       $203 = HEAP32[$202>>2]|0;
       $204 = ($198|0)!=($203|0);
       if ($204) {
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i4,$196,1);
        $37 = $196;
        $205 = $37;
        $206 = ((($205)) + 8|0);
        $36 = $206;
        $207 = $36;
        $35 = $207;
        $208 = $35;
        $209 = ((($196)) + 4|0);
        $210 = HEAP32[$209>>2]|0;
        $34 = $210;
        $211 = $34;
        $212 = $42;
        $30 = $208;
        $31 = $211;
        $32 = $212;
        $213 = $30;
        $214 = $31;
        $215 = $32;
        $29 = $215;
        $216 = $29;
        ;HEAP8[$28>>0]=HEAP8[$33>>0]|0;
        $25 = $213;
        $26 = $214;
        $27 = $216;
        $217 = $25;
        $218 = $26;
        $219 = $27;
        $24 = $219;
        $220 = $24;
        $21 = $217;
        $22 = $218;
        $23 = $220;
        $221 = $22;
        $222 = $23;
        $20 = $222;
        $223 = $20;
        __ZN8LispNodeC2ERKS_($221,$223);
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i4);
        $224 = ((($196)) + 4|0);
        $225 = HEAP32[$224>>2]|0;
        $226 = ((($225)) + 12|0);
        HEAP32[$224>>2] = $226;
        continue L11;
       } else {
        $227 = $42;
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($196,$227);
        continue L11;
       }
       break;
      }
      default: {
       $317 = $listData;
       $318 = ((($317)) + 4|0);
       $319 = $96;
       $320 = $97;
       $321 = (__ZN10LispString9parseAtomEPKcPi($115,$319,$320)|0);
       $92 = $318;
       $93 = $321;
       $322 = $92;
       $323 = ((($322)) + 4|0);
       $324 = HEAP32[$323>>2]|0;
       $91 = $322;
       $325 = $91;
       $326 = ((($325)) + 8|0);
       $90 = $326;
       $327 = $90;
       $89 = $327;
       $328 = $89;
       $329 = HEAP32[$328>>2]|0;
       $330 = ($324|0)!=($329|0);
       if ($330) {
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i,$322,1);
        $88 = $322;
        $331 = $88;
        $332 = ((($331)) + 8|0);
        $87 = $332;
        $333 = $87;
        $86 = $333;
        $334 = $86;
        $335 = ((($322)) + 4|0);
        $336 = HEAP32[$335>>2]|0;
        $85 = $336;
        $337 = $85;
        $338 = $93;
        $81 = $334;
        $82 = $337;
        $83 = $338;
        $339 = $81;
        $340 = $82;
        $341 = $83;
        $80 = $341;
        $342 = $80;
        ;HEAP8[$79>>0]=HEAP8[$84>>0]|0;
        $76 = $339;
        $77 = $340;
        $78 = $342;
        $343 = $76;
        $344 = $77;
        $345 = $78;
        $75 = $345;
        $346 = $75;
        $72 = $343;
        $73 = $344;
        $74 = $346;
        $347 = $73;
        $348 = $74;
        $71 = $348;
        $349 = $71;
        __ZN8LispNodeC2ERKS_($347,$349);
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i);
        $350 = ((($322)) + 4|0);
        $351 = HEAP32[$350>>2]|0;
        $352 = ((($351)) + 12|0);
        HEAP32[$350>>2] = $352;
        continue L11;
       } else {
        $353 = $93;
        __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($322,$353);
        continue L11;
       }
      }
      }
     }
     if ((label|0) == 19) {
      $228 = $98;
      $229 = $228&1;
      if (!($229)) {
       $230 = $list;
       $94 = $230;
       $354 = $94;
       STACKTOP = sp;return ($354|0);
      }
      $231 = (___cxa_allocate_exception(24)|0);
      $$expand_i1_val6 = 1;
      HEAP8[$108>>0] = $$expand_i1_val6;
      $18 = $105;
      $19 = 13449;
      $232 = $18;
      $17 = $232;
      $233 = $17;
      $16 = $233;
      $234 = $16;
      $15 = $234;
      $235 = $19;
      $236 = $19;
      __THREW__ = 0;
      $237 = (invoke_ii(550,($236|0))|0);
      $238 = __THREW__; __THREW__ = 0;
      $239 = $238&1;
      if ($239) {
       label = 29;
      } else {
       __THREW__ = 0;
       invoke_viii(551,($232|0),($235|0),($237|0));
       $240 = __THREW__; __THREW__ = 0;
       $241 = $240&1;
       if ($241) {
        label = 29;
       } else {
        $242 = $96;
        $13 = $107;
        $14 = $242;
        $243 = $13;
        $12 = $243;
        $244 = $12;
        $11 = $244;
        $245 = $11;
        $10 = $245;
        $246 = $14;
        $247 = $14;
        __THREW__ = 0;
        $248 = (invoke_ii(550,($247|0))|0);
        $249 = __THREW__; __THREW__ = 0;
        $250 = $249&1;
        if ($250) {
         label = 30;
        } else {
         __THREW__ = 0;
         invoke_viii(551,($243|0),($246|0),($248|0));
         $251 = __THREW__; __THREW__ = 0;
         $252 = $251&1;
         if ($252) {
          label = 30;
         } else {
          $253 = $97;
          $254 = HEAP32[$253>>2]|0;
          __THREW__ = 0;
          invoke_viii(654,($106|0),($107|0),($254|0));
          $255 = __THREW__; __THREW__ = 0;
          $256 = $255&1;
          if ($256) {
           label = 31;
          } else {
           __THREW__ = 0;
           ;HEAP32[$$byval_copy>>2]=HEAP32[$106>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$106+4>>2]|0;
           invoke_viiii(656,($104|0),($105|0),($$byval_copy|0),0);
           $257 = __THREW__; __THREW__ = 0;
           $258 = $257&1;
           if ($258) {
            label = 31;
           } else {
            __THREW__ = 0;
            invoke_vii(657,($231|0),($104|0));
            $259 = __THREW__; __THREW__ = 0;
            $260 = $259&1;
            if (!($260)) {
             $$expand_i1_val8 = 0;
             HEAP8[$108>>0] = $$expand_i1_val8;
             __THREW__ = 0;
             invoke_viii(602,($231|0),(672|0),(658|0));
             $261 = __THREW__; __THREW__ = 0;
            }
            $268 = ___cxa_find_matching_catch_2()|0;
            $269 = tempRet0;
            $101 = $268;
            $102 = $269;
            __ZN7MessageD2Ev($104);
           }
          }
          if ((label|0) == 31) {
           $266 = ___cxa_find_matching_catch_2()|0;
           $267 = tempRet0;
           $101 = $266;
           $102 = $267;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($107);
         }
        }
        if ((label|0) == 30) {
         $264 = ___cxa_find_matching_catch_2()|0;
         $265 = tempRet0;
         $101 = $264;
         $102 = $265;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
       }
      }
      if ((label|0) == 29) {
       $262 = ___cxa_find_matching_catch_2()|0;
       $263 = tempRet0;
       $101 = $262;
       $102 = $263;
      }
      $$pre_trunc10 = HEAP8[$108>>0]|0;
      $270 = $$pre_trunc10&1;
      if (!($270)) {
       $355 = $101;
       $356 = $102;
       ___resumeException($355|0);
       // unreachable;
      }
      ___cxa_free_exception(($231|0));
      $355 = $101;
      $356 = $102;
      ___resumeException($355|0);
      // unreachable;
     }
     else if ((label|0) == 37) {
      $271 = $98;
      $272 = $271&1;
      if ($272) {
       $273 = $97;
       $274 = HEAP32[$273>>2]|0;
       $275 = (($274) + -1)|0;
       HEAP32[$273>>2] = $275;
       $276 = $list;
       $94 = $276;
       $354 = $94;
       STACKTOP = sp;return ($354|0);
      }
      $277 = (___cxa_allocate_exception(24)|0);
      $$expand_i1_val12 = 1;
      HEAP8[$113>>0] = $$expand_i1_val12;
      $8 = $110;
      $9 = 13484;
      $278 = $8;
      $7 = $278;
      $279 = $7;
      $6 = $279;
      $280 = $6;
      $5 = $280;
      $281 = $9;
      $282 = $9;
      __THREW__ = 0;
      $283 = (invoke_ii(550,($282|0))|0);
      $284 = __THREW__; __THREW__ = 0;
      $285 = $284&1;
      if ($285) {
       label = 47;
      } else {
       __THREW__ = 0;
       invoke_viii(551,($278|0),($281|0),($283|0));
       $286 = __THREW__; __THREW__ = 0;
       $287 = $286&1;
       if ($287) {
        label = 47;
       } else {
        $288 = $96;
        $3 = $112;
        $4 = $288;
        $289 = $3;
        $2 = $289;
        $290 = $2;
        $1 = $290;
        $291 = $1;
        $0 = $291;
        $292 = $4;
        $293 = $4;
        __THREW__ = 0;
        $294 = (invoke_ii(550,($293|0))|0);
        $295 = __THREW__; __THREW__ = 0;
        $296 = $295&1;
        if ($296) {
         label = 48;
        } else {
         __THREW__ = 0;
         invoke_viii(551,($289|0),($292|0),($294|0));
         $297 = __THREW__; __THREW__ = 0;
         $298 = $297&1;
         if ($298) {
          label = 48;
         } else {
          $299 = $97;
          $300 = HEAP32[$299>>2]|0;
          __THREW__ = 0;
          invoke_viii(654,($111|0),($112|0),($300|0));
          $301 = __THREW__; __THREW__ = 0;
          $302 = $301&1;
          if ($302) {
           label = 49;
          } else {
           __THREW__ = 0;
           ;HEAP32[$$byval_copy1>>2]=HEAP32[$111>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$111+4>>2]|0;
           invoke_viiii(656,($109|0),($110|0),($$byval_copy1|0),0);
           $303 = __THREW__; __THREW__ = 0;
           $304 = $303&1;
           if ($304) {
            label = 49;
           } else {
            __THREW__ = 0;
            invoke_vii(657,($277|0),($109|0));
            $305 = __THREW__; __THREW__ = 0;
            $306 = $305&1;
            if (!($306)) {
             $$expand_i1_val14 = 0;
             HEAP8[$113>>0] = $$expand_i1_val14;
             __THREW__ = 0;
             invoke_viii(602,($277|0),(672|0),(658|0));
             $307 = __THREW__; __THREW__ = 0;
            }
            $314 = ___cxa_find_matching_catch_2()|0;
            $315 = tempRet0;
            $101 = $314;
            $102 = $315;
            __ZN7MessageD2Ev($109);
           }
          }
          if ((label|0) == 49) {
           $312 = ___cxa_find_matching_catch_2()|0;
           $313 = tempRet0;
           $101 = $312;
           $102 = $313;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($112);
         }
        }
        if ((label|0) == 48) {
         $310 = ___cxa_find_matching_catch_2()|0;
         $311 = tempRet0;
         $101 = $310;
         $102 = $311;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($110);
       }
      }
      if ((label|0) == 47) {
       $308 = ___cxa_find_matching_catch_2()|0;
       $309 = tempRet0;
       $101 = $308;
       $102 = $309;
      }
      $$pre_trunc16 = HEAP8[$113>>0]|0;
      $316 = $$pre_trunc16&1;
      if (!($316)) {
       $355 = $101;
       $356 = $102;
       ___resumeException($355|0);
       // unreachable;
      }
      ___cxa_free_exception(($277|0));
      $355 = $101;
      $356 = $102;
      ___resumeException($355|0);
      // unreachable;
     }
    }
   }
   $149 = ___cxa_find_matching_catch_2()|0;
   $150 = tempRet0;
   $101 = $149;
   $102 = $150;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($100);
  }
 }
 if ((label|0) == 8) {
  $147 = ___cxa_find_matching_catch_2()|0;
  $148 = tempRet0;
  $101 = $147;
  $102 = $148;
 }
 $$pre_trunc = HEAP8[$103>>0]|0;
 $151 = $$pre_trunc&1;
 if (!($151)) {
  $355 = $101;
  $356 = $102;
  ___resumeException($355|0);
  // unreachable;
 }
 __ZdlPv($116);
 $355 = $101;
 $356 = $102;
 ___resumeException($355|0);
 // unreachable;
 return (0)|0;
}
function __ZN3PosC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi($this,$str,$pos) {
 $this = $this|0;
 $str = $str|0;
 $pos = $pos|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $15 = $this;
 $16 = $pos;
 $17 = $15;
 $18 = $16;
 $14 = $str;
 $19 = $14;
 $13 = $19;
 $20 = $13;
 $12 = $20;
 $21 = $12;
 $11 = $21;
 $22 = $11;
 $10 = $22;
 $23 = $10;
 $9 = $23;
 $24 = $9;
 $25 = HEAP8[$24>>0]|0;
 $26 = $25&255;
 $27 = $26 & 1;
 $28 = ($27|0)!=(0);
 if ($28) {
  $3 = $21;
  $29 = $3;
  $2 = $29;
  $30 = $2;
  $1 = $30;
  $31 = $1;
  $32 = ((($31)) + 8|0);
  $33 = HEAP32[$32>>2]|0;
  $40 = $33;
  $0 = $40;
  $41 = $0;
  __ZN3Pos9findLineNEiPKc($17,$18,$41);
  STACKTOP = sp;return;
 } else {
  $8 = $21;
  $34 = $8;
  $7 = $34;
  $35 = $7;
  $6 = $35;
  $36 = $6;
  $37 = ((($36)) + 1|0);
  $5 = $37;
  $38 = $5;
  $4 = $38;
  $39 = $4;
  $40 = $39;
  $0 = $40;
  $41 = $0;
  __ZN3Pos9findLineNEiPKc($17,$18,$41);
  STACKTOP = sp;return;
 }
}
function __ZN8LispNodeC2ERK3Pos($this,$pos) {
 $this = $this|0;
 $pos = $pos|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $pos;
 $2 = $0;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 $4 = $1;
 ;HEAP32[$3>>2]=HEAP32[$4>>2]|0;HEAP32[$3+4>>2]=HEAP32[$4+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN10LispString11parsePacketEPKcPib($this,$str,$i,$first) {
 $this = $this|0;
 $str = $str|0;
 $i = $i|0;
 $first = $first|0;
 var $$byval_copy = 0, $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $$pre_trunc15 = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__annotator$i = 0, $__annotator$i16 = 0, $listData = 0, $packet = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 448|0;
 $8 = sp + 8|0;
 $13 = sp + 463|0;
 $__annotator$i16 = sp + 462|0;
 $42 = sp;
 $47 = sp + 461|0;
 $__annotator$i = sp + 460|0;
 $78 = sp + 144|0;
 $79 = sp + 132|0;
 $82 = sp + 458|0;
 $83 = sp + 108|0;
 $84 = sp + 96|0;
 $85 = sp + 457|0;
 $86 = sp + 88|0;
 $87 = sp + 72|0;
 $88 = sp + 48|0;
 $89 = sp + 32|0;
 $90 = sp + 24|0;
 $91 = sp + 12|0;
 $92 = sp + 456|0;
 $74 = $this;
 $75 = $str;
 $76 = $i;
 $93 = $first&1;
 $77 = $93;
 $94 = $74;
 $95 = (__Znwj(12)|0);
 $$expand_i1_val = 1;
 HEAP8[$82>>0] = $$expand_i1_val;
 $96 = $75;
 $71 = $79;
 $72 = $96;
 $97 = $71;
 $70 = $97;
 $98 = $70;
 $69 = $98;
 $99 = $69;
 $68 = $99;
 $100 = $72;
 $101 = $72;
 __THREW__ = 0;
 $102 = (invoke_ii(550,($101|0))|0);
 $103 = __THREW__; __THREW__ = 0;
 $104 = $103&1;
 if ($104) {
  label = 19;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($97|0),($100|0),($102|0));
  $105 = __THREW__; __THREW__ = 0;
  $106 = $105&1;
  if ($106) {
   label = 19;
  } else {
   $107 = $76;
   $108 = HEAP32[$107>>2]|0;
   __THREW__ = 0;
   invoke_viii(654,($78|0),($79|0),($108|0));
   $109 = __THREW__; __THREW__ = 0;
   $110 = $109&1;
   if (!($110)) {
    __THREW__ = 0;
    invoke_vii(655,($95|0),($78|0));
    $111 = __THREW__; __THREW__ = 0;
    $112 = $111&1;
    if (!($112)) {
     $$expand_i1_val2 = 0;
     HEAP8[$82>>0] = $$expand_i1_val2;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($79);
     $packet = $95;
     $113 = (__Znwj(16)|0);
     __THREW__ = 0;
     invoke_vi(544,($113|0));
     $114 = __THREW__; __THREW__ = 0;
     $115 = $114&1;
     if ($115) {
      $201 = ___cxa_find_matching_catch_2()|0;
      $202 = tempRet0;
      $80 = $201;
      $81 = $202;
      __ZdlPv($113);
      $314 = $80;
      $315 = $81;
      ___resumeException($314|0);
      // unreachable;
     }
     $listData = $113;
     $116 = $packet;
     HEAP32[$116>>2] = $113;
     $117 = $listData;
     $118 = ((($117)) + 4|0);
     $119 = (__Znwj(16)|0);
     $$expand_i1_val4 = 1;
     HEAP8[$85>>0] = $$expand_i1_val4;
     $66 = $84;
     $67 = 13389;
     $120 = $66;
     $65 = $120;
     $121 = $65;
     $64 = $121;
     $122 = $64;
     $63 = $122;
     $123 = $67;
     $124 = $67;
     __THREW__ = 0;
     $125 = (invoke_ii(550,($124|0))|0);
     $126 = __THREW__; __THREW__ = 0;
     $127 = $126&1;
     if ($127) {
      label = 24;
     } else {
      __THREW__ = 0;
      invoke_viii(551,($120|0),($123|0),($125|0));
      $128 = __THREW__; __THREW__ = 0;
      $129 = $128&1;
      if ($129) {
       label = 24;
      } else {
       __THREW__ = 0;
       invoke_vii(659,($119|0),($84|0));
       $130 = __THREW__; __THREW__ = 0;
       $131 = $130&1;
       if ($131) {
        label = 25;
       } else {
        $$expand_i1_val6 = 0;
        HEAP8[$85>>0] = $$expand_i1_val6;
        $132 = $75;
        $61 = $87;
        $62 = $132;
        $133 = $61;
        $60 = $133;
        $134 = $60;
        $59 = $134;
        $135 = $59;
        $58 = $135;
        $136 = $62;
        $137 = $62;
        __THREW__ = 0;
        $138 = (invoke_ii(550,($137|0))|0);
        $139 = __THREW__; __THREW__ = 0;
        $140 = $139&1;
        if ($140) {
         label = 25;
        } else {
         __THREW__ = 0;
         invoke_viii(551,($133|0),($136|0),($138|0));
         $141 = __THREW__; __THREW__ = 0;
         $142 = $141&1;
         if ($142) {
          label = 25;
         } else {
          $143 = $76;
          $144 = HEAP32[$143>>2]|0;
          __THREW__ = 0;
          invoke_viii(654,($86|0),($87|0),($144|0));
          $145 = __THREW__; __THREW__ = 0;
          $146 = $145&1;
          do {
           if ($146) {
            label = 26;
           } else {
            __THREW__ = 0;
            invoke_viii(660,($83|0),($119|0),($86|0));
            $147 = __THREW__; __THREW__ = 0;
            $148 = $147&1;
            if ($148) {
             label = 26;
            } else {
             $56 = $118;
             $57 = $83;
             $149 = $56;
             $150 = ((($149)) + 4|0);
             $151 = HEAP32[$150>>2]|0;
             $55 = $149;
             $152 = $55;
             $153 = ((($152)) + 8|0);
             $54 = $153;
             $154 = $54;
             $53 = $154;
             $155 = $53;
             $156 = HEAP32[$155>>2]|0;
             $157 = ($151>>>0)<($156>>>0);
             if ($157) {
              __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i,$149,1);
              $52 = $149;
              $158 = $52;
              $159 = ((($158)) + 8|0);
              $51 = $159;
              $160 = $51;
              $50 = $160;
              $161 = $50;
              $162 = ((($149)) + 4|0);
              $163 = HEAP32[$162>>2]|0;
              $48 = $163;
              $164 = $48;
              $165 = $57;
              $33 = $165;
              $166 = $33;
              $44 = $161;
              $45 = $164;
              $46 = $166;
              $167 = $44;
              $168 = $45;
              $169 = $46;
              $43 = $169;
              $170 = $43;
              ;HEAP8[$42>>0]=HEAP8[$47>>0]|0;
              $39 = $167;
              $40 = $168;
              $41 = $170;
              $171 = $39;
              $172 = $40;
              $173 = $41;
              $38 = $173;
              $174 = $38;
              $35 = $171;
              $36 = $172;
              $37 = $174;
              $175 = $36;
              $176 = $37;
              $34 = $176;
              $177 = $34;
              __THREW__ = 0;
              invoke_vii(638,($175|0),($177|0));
              $178 = __THREW__; __THREW__ = 0;
              $179 = $178&1;
              if ($179) {
               label = 27;
              } else {
               __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i);
               $180 = ((($149)) + 4|0);
               $181 = HEAP32[$180>>2]|0;
               $182 = ((($181)) + 12|0);
               HEAP32[$180>>2] = $182;
              }
             } else {
              $183 = $57;
              $49 = $183;
              $184 = $49;
              __THREW__ = 0;
              invoke_vii(643,($149|0),($184|0));
              $185 = __THREW__; __THREW__ = 0;
              $186 = $185&1;
              if ($186) {
               label = 27;
              }
             }
             if ((label|0) == 27) {
              $209 = ___cxa_find_matching_catch_2()|0;
              $210 = tempRet0;
              $80 = $209;
              $81 = $210;
              __ZN8LispNodeD2Ev($83);
              break;
             }
             __ZN8LispNodeD2Ev($83);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
             L28: while(1) {
              $187 = $76;
              $188 = HEAP32[$187>>2]|0;
              $189 = (($188) + 1)|0;
              HEAP32[$187>>2] = $189;
              $190 = $76;
              $191 = HEAP32[$190>>2]|0;
              $192 = $75;
              $193 = (($192) + ($191)|0);
              $194 = HEAP8[$193>>0]|0;
              $195 = $194 << 24 >> 24;
              switch ($195|0) {
              case 9: case 10: case 32: case 58: case 59:  {
               continue L28;
               break;
              }
              case 125:  {
               label = 32;
               break L28;
               break;
              }
              case 0:  {
               break L28;
               break;
              }
              case 35:  {
               while(1) {
                $213 = $76;
                $214 = HEAP32[$213>>2]|0;
                $215 = $75;
                $216 = (($215) + ($214)|0);
                $217 = HEAP8[$216>>0]|0;
                $218 = $217 << 24 >> 24;
                $219 = ($218|0)!=(10);
                if (!($219)) {
                 continue L28;
                }
                $220 = $76;
                $221 = HEAP32[$220>>2]|0;
                $222 = $75;
                $223 = (($222) + ($221)|0);
                $224 = HEAP8[$223>>0]|0;
                $225 = $224 << 24 >> 24;
                $226 = ($225|0)!=(0);
                if (!($226)) {
                 continue L28;
                }
                $227 = $76;
                $228 = HEAP32[$227>>2]|0;
                $229 = (($228) + 1)|0;
                HEAP32[$227>>2] = $229;
               }
               break;
              }
              default: {
               $273 = $76;
               $274 = HEAP32[$273>>2]|0;
               $275 = (($274) + -1)|0;
               HEAP32[$273>>2] = $275;
               $276 = $listData;
               $277 = ((($276)) + 4|0);
               $278 = $75;
               $279 = $76;
               $280 = (__ZN10LispString9parseListEPKcPib($94,$278,$279,1)|0);
               $21 = $277;
               $22 = $280;
               $281 = $21;
               $282 = ((($281)) + 4|0);
               $283 = HEAP32[$282>>2]|0;
               $20 = $281;
               $284 = $20;
               $285 = ((($284)) + 8|0);
               $19 = $285;
               $286 = $19;
               $18 = $286;
               $287 = $18;
               $288 = HEAP32[$287>>2]|0;
               $289 = ($283|0)!=($288|0);
               if ($289) {
                __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator$i16,$281,1);
                $17 = $281;
                $290 = $17;
                $291 = ((($290)) + 8|0);
                $16 = $291;
                $292 = $16;
                $15 = $292;
                $293 = $15;
                $294 = ((($281)) + 4|0);
                $295 = HEAP32[$294>>2]|0;
                $14 = $295;
                $296 = $14;
                $297 = $22;
                $10 = $293;
                $11 = $296;
                $12 = $297;
                $298 = $10;
                $299 = $11;
                $300 = $12;
                $9 = $300;
                $301 = $9;
                ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
                $5 = $298;
                $6 = $299;
                $7 = $301;
                $302 = $5;
                $303 = $6;
                $304 = $7;
                $4 = $304;
                $305 = $4;
                $1 = $302;
                $2 = $303;
                $3 = $305;
                $306 = $2;
                $307 = $3;
                $0 = $307;
                $308 = $0;
                __ZN8LispNodeC2ERKS_($306,$308);
                __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator$i16);
                $309 = ((($281)) + 4|0);
                $310 = HEAP32[$309>>2]|0;
                $311 = ((($310)) + 12|0);
                HEAP32[$309>>2] = $311;
                continue L28;
               } else {
                $312 = $22;
                __ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($281,$312);
                continue L28;
               }
              }
              }
             }
             if ((label|0) == 32) {
              $212 = $packet;
              $73 = $212;
              $313 = $73;
              STACKTOP = sp;return ($313|0);
             }
             $230 = $77;
             $231 = $230&1;
             if ($231) {
              $232 = $packet;
              $73 = $232;
              $313 = $73;
              STACKTOP = sp;return ($313|0);
             }
             $233 = (___cxa_allocate_exception(24)|0);
             $$expand_i1_val11 = 1;
             HEAP8[$92>>0] = $$expand_i1_val11;
             $31 = $89;
             $32 = 13404;
             $234 = $31;
             $30 = $234;
             $235 = $30;
             $29 = $235;
             $236 = $29;
             $28 = $236;
             $237 = $32;
             $238 = $32;
             __THREW__ = 0;
             $239 = (invoke_ii(550,($238|0))|0);
             $240 = __THREW__; __THREW__ = 0;
             $241 = $240&1;
             do {
              if ($241) {
               label = 46;
              } else {
               __THREW__ = 0;
               invoke_viii(551,($234|0),($237|0),($239|0));
               $242 = __THREW__; __THREW__ = 0;
               $243 = $242&1;
               if ($243) {
                label = 46;
                break;
               }
               $244 = $75;
               $26 = $91;
               $27 = $244;
               $245 = $26;
               $25 = $245;
               $246 = $25;
               $24 = $246;
               $247 = $24;
               $23 = $247;
               $248 = $27;
               $249 = $27;
               __THREW__ = 0;
               $250 = (invoke_ii(550,($249|0))|0);
               $251 = __THREW__; __THREW__ = 0;
               $252 = $251&1;
               do {
                if ($252) {
                 label = 47;
                } else {
                 __THREW__ = 0;
                 invoke_viii(551,($245|0),($248|0),($250|0));
                 $253 = __THREW__; __THREW__ = 0;
                 $254 = $253&1;
                 if ($254) {
                  label = 47;
                  break;
                 }
                 $255 = $76;
                 $256 = HEAP32[$255>>2]|0;
                 __THREW__ = 0;
                 invoke_viii(654,($90|0),($91|0),($256|0));
                 $257 = __THREW__; __THREW__ = 0;
                 $258 = $257&1;
                 do {
                  if ($258) {
                   label = 48;
                  } else {
                   __THREW__ = 0;
                   ;HEAP32[$$byval_copy>>2]=HEAP32[$90>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$90+4>>2]|0;
                   invoke_viiii(656,($88|0),($89|0),($$byval_copy|0),0);
                   $259 = __THREW__; __THREW__ = 0;
                   $260 = $259&1;
                   if ($260) {
                    label = 48;
                    break;
                   }
                   __THREW__ = 0;
                   invoke_vii(657,($233|0),($88|0));
                   $261 = __THREW__; __THREW__ = 0;
                   $262 = $261&1;
                   if (!($262)) {
                    $$expand_i1_val13 = 0;
                    HEAP8[$92>>0] = $$expand_i1_val13;
                    __THREW__ = 0;
                    invoke_viii(602,($233|0),(672|0),(658|0));
                    $263 = __THREW__; __THREW__ = 0;
                   }
                   $270 = ___cxa_find_matching_catch_2()|0;
                   $271 = tempRet0;
                   $80 = $270;
                   $81 = $271;
                   __ZN7MessageD2Ev($88);
                  }
                 } while(0);
                 if ((label|0) == 48) {
                  $268 = ___cxa_find_matching_catch_2()|0;
                  $269 = tempRet0;
                  $80 = $268;
                  $81 = $269;
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91);
                }
               } while(0);
               if ((label|0) == 47) {
                $266 = ___cxa_find_matching_catch_2()|0;
                $267 = tempRet0;
                $80 = $266;
                $81 = $267;
               }
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
              }
             } while(0);
             if ((label|0) == 46) {
              $264 = ___cxa_find_matching_catch_2()|0;
              $265 = tempRet0;
              $80 = $264;
              $81 = $265;
             }
             $$pre_trunc15 = HEAP8[$92>>0]|0;
             $272 = $$pre_trunc15&1;
             if (!($272)) {
              $314 = $80;
              $315 = $81;
              ___resumeException($314|0);
              // unreachable;
             }
             ___cxa_free_exception(($233|0));
             $314 = $80;
             $315 = $81;
             ___resumeException($314|0);
             // unreachable;
            }
           }
          } while(0);
          if ((label|0) == 26) {
           $207 = ___cxa_find_matching_catch_2()|0;
           $208 = tempRet0;
           $80 = $207;
           $81 = $208;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
         }
        }
       }
       if ((label|0) == 25) {
        $205 = ___cxa_find_matching_catch_2()|0;
        $206 = tempRet0;
        $80 = $205;
        $81 = $206;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
      }
     }
     if ((label|0) == 24) {
      $203 = ___cxa_find_matching_catch_2()|0;
      $204 = tempRet0;
      $80 = $203;
      $81 = $204;
     }
     $$pre_trunc9 = HEAP8[$85>>0]|0;
     $211 = $$pre_trunc9&1;
     if (!($211)) {
      $314 = $80;
      $315 = $81;
      ___resumeException($314|0);
      // unreachable;
     }
     __ZdlPv($119);
     $314 = $80;
     $315 = $81;
     ___resumeException($314|0);
     // unreachable;
    }
   }
   $198 = ___cxa_find_matching_catch_2()|0;
   $199 = tempRet0;
   $80 = $198;
   $81 = $199;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($79);
  }
 }
 if ((label|0) == 19) {
  $196 = ___cxa_find_matching_catch_2()|0;
  $197 = tempRet0;
  $80 = $196;
  $81 = $197;
 }
 $$pre_trunc = HEAP8[$82>>0]|0;
 $200 = $$pre_trunc&1;
 if (!($200)) {
  $314 = $80;
  $315 = $81;
  ___resumeException($314|0);
  // unreachable;
 }
 __ZdlPv($95);
 $314 = $80;
 $315 = $81;
 ___resumeException($314|0);
 // unreachable;
 return (0)|0;
}
function __ZN8AtomDataC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$str) {
 $this = $this|0;
 $str = $str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = $this;
 $8 = $str;
 $11 = $7;
 __ZN4DataC2Ev($11);
 $12 = 3344;
 HEAP32[$11>>2] = $12;
 $13 = ((($11)) + 4|0);
 $6 = $13;
 $14 = $6;
 $5 = $14;
 $15 = $5;
 $4 = $15;
 $16 = $4;
 $3 = $16;
 $2 = $14;
 $17 = $2;
 $1 = $17;
 $18 = $1;
 $0 = $18;
 $19 = $0;
 $__a$i$i = $19;
 $__i$i$i = 0;
 while(1) {
  $20 = $__i$i$i;
  $21 = ($20>>>0)<(3);
  if (!($21)) {
   break;
  }
  $22 = $__i$i$i;
  $23 = $__a$i$i;
  $24 = (($23) + ($22<<2)|0);
  HEAP32[$24>>2] = 0;
  $25 = $__i$i$i;
  $26 = (($25) + 1)|0;
  $__i$i$i = $26;
 }
 $27 = ((($11)) + 4|0);
 $28 = $8;
 __THREW__ = 0;
 (invoke_iii(648,($27|0),($28|0))|0);
 $29 = __THREW__; __THREW__ = 0;
 $30 = $29&1;
 if ($30) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $9 = $31;
  $10 = $32;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  __ZN4DataD2Ev($11);
  $33 = $9;
  $34 = $10;
  ___resumeException($33|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZN8AtomDataD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = 3344;
 HEAP32[$1>>2] = $2;
 $3 = ((($1)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 __ZN4DataD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN8AtomDataD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8AtomDataD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8AtomData8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$2);
 STACKTOP = sp;return;
}
function __ZNK8AtomData11getDataTypeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 2;
}
function __ZNK8AtomData8getCloneEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $3 = $0;
 $4 = (__Znwj(16)|0);
 __THREW__ = 0;
 invoke_vii(661,($4|0),($3|0));
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $7 = ___cxa_find_matching_catch_2()|0;
  $8 = tempRet0;
  $1 = $7;
  $2 = $8;
  __ZdlPv($4);
  $9 = $1;
  $10 = $2;
  ___resumeException($9|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($4|0);
 }
 return (0)|0;
}
function __ZN8AtomDataC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $5 = $1;
 $6 = $2;
 __ZN4DataC2ERKS_($5,$6);
 $7 = 3344;
 HEAP32[$5>>2] = $7;
 $8 = ((($5)) + 4|0);
 $9 = $2;
 $10 = ((($9)) + 4|0);
 __THREW__ = 0;
 invoke_vii(617,($8|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $3 = $13;
  $4 = $14;
  __ZN4DataD2Ev($5);
  $15 = $3;
  $16 = $4;
  ___resumeException($15|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNK8AtomData7isEqualEPK4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val9 = 0, $$pre_trunc = 0, $$pre_trunc13 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lhs_sz$i = 0;
 var $__lp$i = 0, $__rp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $51 = sp + 233|0;
 $54 = sp + 232|0;
 $55 = $this;
 $56 = $data;
 $57 = $55;
 $58 = $56;
 $59 = HEAP32[$58>>2]|0;
 $60 = ((($59)) + 12|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = (FUNCTION_TABLE_ii[$61 & 1023]($58)|0);
 $63 = ($62|0)==(2);
 if (!($63)) {
  $$expand_i1_val11 = 0;
  HEAP8[$54>>0] = $$expand_i1_val11;
  $$pre_trunc13 = HEAP8[$54>>0]|0;
  $190 = $$pre_trunc13&1;
  STACKTOP = sp;return ($190|0);
 }
 $64 = $56;
 $65 = ((($64)) + 4|0);
 $66 = ((($57)) + 4|0);
 $52 = $65;
 $53 = $66;
 $67 = $52;
 $50 = $67;
 $68 = $50;
 $49 = $68;
 $69 = $49;
 $48 = $69;
 $70 = $48;
 $47 = $70;
 $71 = $47;
 $72 = HEAP8[$71>>0]|0;
 $73 = $72&255;
 $74 = $73 & 1;
 $75 = ($74|0)!=(0);
 if ($75) {
  $43 = $68;
  $76 = $43;
  $42 = $76;
  $77 = $42;
  $41 = $77;
  $78 = $41;
  $79 = ((($78)) + 4|0);
  $80 = HEAP32[$79>>2]|0;
  $87 = $80;
 } else {
  $46 = $68;
  $81 = $46;
  $45 = $81;
  $82 = $45;
  $44 = $82;
  $83 = $44;
  $84 = HEAP8[$83>>0]|0;
  $85 = $84&255;
  $86 = $85 >> 1;
  $87 = $86;
 }
 $__lhs_sz$i = $87;
 $88 = $__lhs_sz$i;
 $89 = $53;
 $40 = $89;
 $90 = $40;
 $39 = $90;
 $91 = $39;
 $38 = $91;
 $92 = $38;
 $37 = $92;
 $93 = $37;
 $94 = HEAP8[$93>>0]|0;
 $95 = $94&255;
 $96 = $95 & 1;
 $97 = ($96|0)!=(0);
 if ($97) {
  $33 = $90;
  $98 = $33;
  $32 = $98;
  $99 = $32;
  $31 = $99;
  $100 = $31;
  $101 = ((($100)) + 4|0);
  $102 = HEAP32[$101>>2]|0;
  $110 = $102;
 } else {
  $36 = $90;
  $103 = $36;
  $35 = $103;
  $104 = $35;
  $34 = $104;
  $105 = $34;
  $106 = HEAP8[$105>>0]|0;
  $107 = $106&255;
  $108 = $107 >> 1;
  $110 = $108;
 }
 $109 = ($88|0)!=($110|0);
 do {
  if ($109) {
   $$expand_i1_val = 0;
   HEAP8[$51>>0] = $$expand_i1_val;
  } else {
   $111 = $52;
   $30 = $111;
   $112 = $30;
   $29 = $112;
   $113 = $29;
   $28 = $113;
   $114 = $28;
   $27 = $114;
   $115 = $27;
   $26 = $115;
   $116 = $26;
   $117 = HEAP8[$116>>0]|0;
   $118 = $117&255;
   $119 = $118 & 1;
   $120 = ($119|0)!=(0);
   if ($120) {
    $20 = $113;
    $121 = $20;
    $19 = $121;
    $122 = $19;
    $18 = $122;
    $123 = $18;
    $124 = ((($123)) + 8|0);
    $125 = HEAP32[$124>>2]|0;
    $132 = $125;
   } else {
    $25 = $113;
    $126 = $25;
    $24 = $126;
    $127 = $24;
    $23 = $127;
    $128 = $23;
    $129 = ((($128)) + 1|0);
    $22 = $129;
    $130 = $22;
    $21 = $130;
    $131 = $21;
    $132 = $131;
   }
   $17 = $132;
   $133 = $17;
   $__lp$i = $133;
   $134 = $53;
   $13 = $134;
   $135 = $13;
   $12 = $135;
   $136 = $12;
   $11 = $136;
   $137 = $11;
   $10 = $137;
   $138 = $10;
   $9 = $138;
   $139 = $9;
   $140 = HEAP8[$139>>0]|0;
   $141 = $140&255;
   $142 = $141 & 1;
   $143 = ($142|0)!=(0);
   if ($143) {
    $3 = $136;
    $144 = $3;
    $2 = $144;
    $145 = $2;
    $1 = $145;
    $146 = $1;
    $147 = ((($146)) + 8|0);
    $148 = HEAP32[$147>>2]|0;
    $155 = $148;
   } else {
    $8 = $136;
    $149 = $8;
    $7 = $149;
    $150 = $7;
    $6 = $150;
    $151 = $6;
    $152 = ((($151)) + 1|0);
    $5 = $152;
    $153 = $5;
    $4 = $153;
    $154 = $4;
    $155 = $154;
   }
   $0 = $155;
   $156 = $0;
   $__rp$i = $156;
   $157 = $52;
   $16 = $157;
   $158 = $16;
   $15 = $158;
   $159 = $15;
   $14 = $159;
   $160 = $14;
   $161 = HEAP8[$160>>0]|0;
   $162 = $161&255;
   $163 = $162 & 1;
   $164 = ($163|0)!=(0);
   if ($164) {
    $165 = $__lp$i;
    $166 = $__rp$i;
    $167 = $__lhs_sz$i;
    __THREW__ = 0;
    $168 = (invoke_iiii(615,($165|0),($166|0),($167|0))|0);
    $169 = __THREW__; __THREW__ = 0;
    $170 = $169&1;
    if ($170) {
     $187 = ___cxa_find_matching_catch_3(0|0)|0;
     $188 = tempRet0;
     ___clang_call_terminate($187);
     // unreachable;
    } else {
     $171 = ($168|0)==(0);
     $$expand_i1_val2 = $171&1;
     HEAP8[$51>>0] = $$expand_i1_val2;
     break;
    }
   }
   while(1) {
    $172 = $__lhs_sz$i;
    $173 = ($172|0)!=(0);
    if (!($173)) {
     label = 23;
     break;
    }
    $174 = $__lp$i;
    $175 = HEAP8[$174>>0]|0;
    $176 = $175 << 24 >> 24;
    $177 = $__rp$i;
    $178 = HEAP8[$177>>0]|0;
    $179 = $178 << 24 >> 24;
    $180 = ($176|0)!=($179|0);
    if ($180) {
     label = 21;
     break;
    }
    $181 = $__lhs_sz$i;
    $182 = (($181) + -1)|0;
    $__lhs_sz$i = $182;
    $183 = $__lp$i;
    $184 = ((($183)) + 1|0);
    $__lp$i = $184;
    $185 = $__rp$i;
    $186 = ((($185)) + 1|0);
    $__rp$i = $186;
   }
   if ((label|0) == 21) {
    $$expand_i1_val4 = 0;
    HEAP8[$51>>0] = $$expand_i1_val4;
    break;
   }
   else if ((label|0) == 23) {
    $$expand_i1_val6 = 1;
    HEAP8[$51>>0] = $$expand_i1_val6;
    break;
   }
  }
 } while(0);
 $$pre_trunc = HEAP8[$51>>0]|0;
 $189 = $$pre_trunc&1;
 $$expand_i1_val9 = $189&1;
 HEAP8[$54>>0] = $$expand_i1_val9;
 $$pre_trunc13 = HEAP8[$54>>0]|0;
 $190 = $$pre_trunc13&1;
 STACKTOP = sp;return ($190|0);
}
function __ZNK8AtomData7getSizeEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return 0;
}
function __ZN8LispNodeC2EP4DataRK3Pos($this,$data,$pos) {
 $this = $this|0;
 $data = $data|0;
 $pos = $pos|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $data;
 $2 = $pos;
 $3 = $0;
 $4 = $1;
 HEAP32[$3>>2] = $4;
 $5 = ((($3)) + 4|0);
 $6 = $2;
 ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN10LispString11parse_errorC2ERK7Message($this,$message) {
 $this = $this|0;
 $message = $message|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $message;
 $2 = $0;
 $3 = $1;
 __ZN7MessageC2ERKS_($2,$3);
 STACKTOP = sp;return;
}
function __ZN7MessageC2ERKS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = $2;
 $8 = ((($7)) + 4|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6,$8);
 $9 = ((($3)) + 16|0);
 $10 = $2;
 $11 = ((($10)) + 16|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN10LispString11parse_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN7MessageD2Ev($1);
 STACKTOP = sp;return;
}
function __ZN10LispString9parseAtomEPKcPi($this,$str,$i) {
 $this = $this|0;
 $str = $str|0;
 $i = $i|0;
 var $$byval_copy = 0, $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val12 = 0, $$expand_i1_val16 = 0, $$expand_i1_val18 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc14 = 0, $$pre_trunc20 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0.0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $atom = 0, $i1 = 0, $iStart = 0, $name = 0, $numStr = 0, $pointCount = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 576|0;
 $108 = sp + 128|0;
 $109 = sp + 116|0;
 $112 = sp + 586|0;
 $113 = sp + 92|0;
 $114 = sp + 585|0;
 $numStr = sp + 80|0;
 $115 = sp + 48|0;
 $116 = sp + 32|0;
 $117 = sp + 24|0;
 $118 = sp + 12|0;
 $119 = sp + 584|0;
 $name = sp;
 $105 = $this;
 $106 = $str;
 $107 = $i;
 $120 = (__Znwj(12)|0);
 $$expand_i1_val = 1;
 HEAP8[$112>>0] = $$expand_i1_val;
 $121 = $106;
 $103 = $109;
 $104 = $121;
 $122 = $103;
 $102 = $122;
 $123 = $102;
 $101 = $123;
 $124 = $101;
 $100 = $124;
 $125 = $104;
 $126 = $104;
 __THREW__ = 0;
 $127 = (invoke_ii(550,($126|0))|0);
 $128 = __THREW__; __THREW__ = 0;
 $129 = $128&1;
 if ($129) {
  label = 9;
 } else {
  __THREW__ = 0;
  invoke_viii(551,($122|0),($125|0),($127|0));
  $130 = __THREW__; __THREW__ = 0;
  $131 = $130&1;
  if ($131) {
   label = 9;
  } else {
   $132 = $107;
   $133 = HEAP32[$132>>2]|0;
   __THREW__ = 0;
   invoke_viii(654,($108|0),($109|0),($133|0));
   $134 = __THREW__; __THREW__ = 0;
   $135 = $134&1;
   if (!($135)) {
    __THREW__ = 0;
    invoke_vii(655,($120|0),($108|0));
    $136 = __THREW__; __THREW__ = 0;
    $137 = $136&1;
    if (!($137)) {
     $$expand_i1_val7 = 0;
     HEAP8[$112>>0] = $$expand_i1_val7;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($109);
     $atom = $120;
     $138 = $107;
     $139 = HEAP32[$138>>2]|0;
     $iStart = $139;
     $140 = $107;
     $141 = HEAP32[$140>>2]|0;
     $142 = $106;
     $143 = (($142) + ($141)|0);
     $144 = HEAP8[$143>>0]|0;
     $145 = $144 << 24 >> 24;
     $146 = ($145|0)==(34);
     if ($146) {
      $147 = $107;
      $148 = HEAP32[$147>>2]|0;
      $149 = (($148) + 1)|0;
      HEAP32[$147>>2] = $149;
      while(1) {
       $150 = $107;
       $151 = HEAP32[$150>>2]|0;
       $152 = $106;
       $153 = (($152) + ($151)|0);
       $154 = HEAP8[$153>>0]|0;
       $155 = $154 << 24 >> 24;
       $156 = ($155|0)==(92);
       $157 = $107;
       $158 = HEAP32[$157>>2]|0;
       if ($156) {
        $159 = (($158) + 1)|0;
        HEAP32[$157>>2] = $159;
       } else {
        $165 = $106;
        $166 = (($165) + ($158)|0);
        $167 = HEAP8[$166>>0]|0;
        $168 = $167 << 24 >> 24;
        $169 = ($168|0)==(34);
        if ($169) {
         break;
        }
       }
       $170 = $107;
       $171 = HEAP32[$170>>2]|0;
       $172 = (($171) + 1)|0;
       HEAP32[$170>>2] = $172;
      }
      $173 = $107;
      $174 = HEAP32[$173>>2]|0;
      $175 = (($174) + 1)|0;
      HEAP32[$173>>2] = $175;
      $176 = (__Znwj(16)|0);
      $$expand_i1_val10 = 1;
      HEAP8[$114>>0] = $$expand_i1_val10;
      $177 = $106;
      $178 = $iStart;
      $179 = (($177) + ($178)|0);
      $180 = ((($179)) + 1|0);
      $181 = $107;
      $182 = HEAP32[$181>>2]|0;
      $183 = $iStart;
      $184 = (($182) - ($183))|0;
      $185 = (($184) - 2)|0;
      $97 = $113;
      $98 = $180;
      $99 = $185;
      $186 = $97;
      $96 = $186;
      $187 = $96;
      $95 = $187;
      $188 = $95;
      $94 = $188;
      $189 = $98;
      $190 = $99;
      __THREW__ = 0;
      invoke_viii(551,($186|0),($189|0),($190|0));
      $191 = __THREW__; __THREW__ = 0;
      $192 = $191&1;
      do {
       if ($192) {
        $196 = ___cxa_find_matching_catch_2()|0;
        $197 = tempRet0;
        $110 = $196;
        $111 = $197;
       } else {
        __THREW__ = 0;
        invoke_vii(624,($176|0),($113|0));
        $193 = __THREW__; __THREW__ = 0;
        $194 = $193&1;
        if ($194) {
         $198 = ___cxa_find_matching_catch_2()|0;
         $199 = tempRet0;
         $110 = $198;
         $111 = $199;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113);
         break;
        }
        $$expand_i1_val12 = 0;
        HEAP8[$114>>0] = $$expand_i1_val12;
        $195 = $atom;
        HEAP32[$195>>2] = $176;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($113);
        $531 = $107;
        $532 = HEAP32[$531>>2]|0;
        $533 = (($532) + -1)|0;
        HEAP32[$531>>2] = $533;
        $534 = $atom;
        STACKTOP = sp;return ($534|0);
       }
      } while(0);
      $$pre_trunc14 = HEAP8[$114>>0]|0;
      $200 = $$pre_trunc14&1;
      if (!($200)) {
       $535 = $110;
       $536 = $111;
       ___resumeException($535|0);
       // unreachable;
      }
      __ZdlPv($176);
      $535 = $110;
      $536 = $111;
      ___resumeException($535|0);
      // unreachable;
     }
     while(1) {
      $201 = $107;
      $202 = HEAP32[$201>>2]|0;
      $203 = $106;
      $204 = (($203) + ($202)|0);
      $205 = HEAP8[$204>>0]|0;
      $206 = $205 << 24 >> 24;
      $207 = ($206|0)!=(9);
      if (!($207)) {
       break;
      }
      $208 = $107;
      $209 = HEAP32[$208>>2]|0;
      $210 = $106;
      $211 = (($210) + ($209)|0);
      $212 = HEAP8[$211>>0]|0;
      $213 = $212 << 24 >> 24;
      $214 = ($213|0)!=(10);
      if (!($214)) {
       break;
      }
      $215 = $107;
      $216 = HEAP32[$215>>2]|0;
      $217 = $106;
      $218 = (($217) + ($216)|0);
      $219 = HEAP8[$218>>0]|0;
      $220 = $219 << 24 >> 24;
      $221 = ($220|0)!=(59);
      if (!($221)) {
       break;
      }
      $222 = $107;
      $223 = HEAP32[$222>>2]|0;
      $224 = $106;
      $225 = (($224) + ($223)|0);
      $226 = HEAP8[$225>>0]|0;
      $227 = $226 << 24 >> 24;
      $228 = ($227|0)!=(32);
      if (!($228)) {
       break;
      }
      $229 = $107;
      $230 = HEAP32[$229>>2]|0;
      $231 = $106;
      $232 = (($231) + ($230)|0);
      $233 = HEAP8[$232>>0]|0;
      $234 = $233 << 24 >> 24;
      $235 = ($234|0)!=(41);
      if (!($235)) {
       break;
      }
      $236 = $107;
      $237 = HEAP32[$236>>2]|0;
      $238 = $106;
      $239 = (($238) + ($237)|0);
      $240 = HEAP8[$239>>0]|0;
      $241 = $240 << 24 >> 24;
      $242 = ($241|0)!=(40);
      if (!($242)) {
       break;
      }
      $243 = $107;
      $244 = HEAP32[$243>>2]|0;
      $245 = $106;
      $246 = (($245) + ($244)|0);
      $247 = HEAP8[$246>>0]|0;
      $248 = $247 << 24 >> 24;
      $249 = ($248|0)!=(0);
      if (!($249)) {
       break;
      }
      $250 = $107;
      $251 = HEAP32[$250>>2]|0;
      $252 = (($251) + 1)|0;
      HEAP32[$250>>2] = $252;
     }
     $253 = $iStart;
     $254 = $106;
     $255 = (($254) + ($253)|0);
     $256 = HEAP8[$255>>0]|0;
     $257 = $256 << 24 >> 24;
     $258 = ($257|0)>=(48);
     if ($258) {
      $259 = $iStart;
      $260 = $106;
      $261 = (($260) + ($259)|0);
      $262 = HEAP8[$261>>0]|0;
      $263 = $262 << 24 >> 24;
      $264 = ($263|0)<=(57);
      if (!($264)) {
       label = 32;
      }
     } else {
      label = 32;
     }
     do {
      if ((label|0) == 32) {
       $265 = $iStart;
       $266 = $106;
       $267 = (($266) + ($265)|0);
       $268 = HEAP8[$267>>0]|0;
       $269 = $268 << 24 >> 24;
       $270 = ($269|0)==(45);
       if ($270) {
        $271 = $iStart;
        $272 = (($271) + 1)|0;
        $273 = $106;
        $274 = (($273) + ($272)|0);
        $275 = HEAP8[$274>>0]|0;
        $276 = $275 << 24 >> 24;
        $277 = ($276|0)>=(48);
        if ($277) {
         $278 = $iStart;
         $279 = (($278) + 1)|0;
         $280 = $106;
         $281 = (($280) + ($279)|0);
         $282 = HEAP8[$281>>0]|0;
         $283 = $282 << 24 >> 24;
         $284 = ($283|0)<=(57);
         if ($284) {
          break;
         }
        }
       }
       $493 = $106;
       $494 = $iStart;
       $495 = (($493) + ($494)|0);
       $496 = $107;
       $497 = HEAP32[$496>>2]|0;
       $498 = $iStart;
       $499 = (($497) - ($498))|0;
       $7 = $name;
       $8 = $495;
       $9 = $499;
       $500 = $7;
       $6 = $500;
       $501 = $6;
       $5 = $501;
       $502 = $5;
       $4 = $502;
       $503 = $8;
       $504 = $9;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($500,$503,$504);
       $2 = $name;
       $3 = 13513;
       $505 = $2;
       $506 = $3;
       $507 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($505,$506)|0);
       $508 = ($507|0)==(0);
       do {
        if ($508) {
         __THREW__ = 0;
         $509 = (invoke_ii(548,4)|0);
         $510 = __THREW__; __THREW__ = 0;
         $511 = $510&1;
         if ($511) {
          label = 92;
         } else {
          ;HEAP32[$509>>2]=0|0;
          __ZN9AtomTDataC2Ev($509);
          $512 = $atom;
          HEAP32[$512>>2] = $509;
          label = 100;
         }
        } else {
         $0 = $name;
         $1 = 13515;
         $515 = $0;
         $516 = $1;
         $517 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($515,$516)|0);
         $518 = ($517|0)==(0);
         if ($518) {
          __THREW__ = 0;
          $519 = (invoke_ii(548,4)|0);
          $520 = __THREW__; __THREW__ = 0;
          $521 = $520&1;
          if ($521) {
           label = 92;
           break;
          }
          ;HEAP32[$519>>2]=0|0;
          __ZN11AtomNilDataC2Ev($519);
          $522 = $atom;
          HEAP32[$522>>2] = $519;
          label = 100;
          break;
         }
         __THREW__ = 0;
         $523 = (invoke_ii(548,16)|0);
         $524 = __THREW__; __THREW__ = 0;
         $525 = $524&1;
         if ($525) {
          label = 92;
         } else {
          __THREW__ = 0;
          invoke_vii(659,($523|0),($name|0));
          $526 = __THREW__; __THREW__ = 0;
          $527 = $526&1;
          if ($527) {
           $529 = ___cxa_find_matching_catch_2()|0;
           $530 = tempRet0;
           $110 = $529;
           $111 = $530;
           __ZdlPv($523);
           break;
          } else {
           $528 = $atom;
           HEAP32[$528>>2] = $523;
           label = 100;
           break;
          }
         }
        }
       } while(0);
       if ((label|0) == 92) {
        $513 = ___cxa_find_matching_catch_2()|0;
        $514 = tempRet0;
        $110 = $513;
        $111 = $514;
       }
       else if ((label|0) == 100) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
        $531 = $107;
        $532 = HEAP32[$531>>2]|0;
        $533 = (($532) + -1)|0;
        HEAP32[$531>>2] = $533;
        $534 = $atom;
        STACKTOP = sp;return ($534|0);
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name);
       $535 = $110;
       $536 = $111;
       ___resumeException($535|0);
       // unreachable;
      }
     } while(0);
     $285 = $106;
     $286 = $iStart;
     $287 = (($285) + ($286)|0);
     $288 = $107;
     $289 = HEAP32[$288>>2]|0;
     $290 = $iStart;
     $291 = (($289) - ($290))|0;
     $91 = $numStr;
     $92 = $287;
     $93 = $291;
     $292 = $91;
     $90 = $292;
     $293 = $90;
     $89 = $293;
     $294 = $89;
     $88 = $294;
     $295 = $92;
     $296 = $93;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($292,$295,$296);
     $pointCount = 0;
     $i1 = 0;
     while(1) {
      $297 = $i1;
      $87 = $numStr;
      $298 = $87;
      $86 = $298;
      $299 = $86;
      $85 = $299;
      $300 = $85;
      $84 = $300;
      $301 = $84;
      $302 = HEAP8[$301>>0]|0;
      $303 = $302&255;
      $304 = $303 & 1;
      $305 = ($304|0)!=(0);
      if ($305) {
       $80 = $298;
       $306 = $80;
       $79 = $306;
       $307 = $79;
       $78 = $307;
       $308 = $78;
       $309 = ((($308)) + 4|0);
       $310 = HEAP32[$309>>2]|0;
       $318 = $310;
      } else {
       $83 = $298;
       $311 = $83;
       $82 = $311;
       $312 = $82;
       $81 = $312;
       $313 = $81;
       $314 = HEAP8[$313>>0]|0;
       $315 = $314&255;
       $316 = $315 >> 1;
       $318 = $316;
      }
      $317 = ($297>>>0)<($318>>>0);
      if (!($317)) {
       break;
      }
      $319 = $i1;
      $76 = $numStr;
      $77 = $319;
      $320 = $76;
      $75 = $320;
      $321 = $75;
      $74 = $321;
      $322 = $74;
      $73 = $322;
      $323 = $73;
      $72 = $323;
      $324 = $72;
      $325 = HEAP8[$324>>0]|0;
      $326 = $325&255;
      $327 = $326 & 1;
      $328 = ($327|0)!=(0);
      if ($328) {
       $66 = $321;
       $329 = $66;
       $65 = $329;
       $330 = $65;
       $64 = $330;
       $331 = $64;
       $332 = ((($331)) + 8|0);
       $333 = HEAP32[$332>>2]|0;
       $342 = $333;
      } else {
       $71 = $321;
       $334 = $71;
       $70 = $334;
       $335 = $70;
       $69 = $335;
       $336 = $69;
       $337 = ((($336)) + 1|0);
       $68 = $337;
       $338 = $68;
       $67 = $338;
       $339 = $67;
       $342 = $339;
      }
      $340 = $77;
      $341 = (($342) + ($340)|0);
      $343 = HEAP8[$341>>0]|0;
      $344 = $343 << 24 >> 24;
      $345 = ($344|0)==(46);
      if ($345) {
       label = 48;
      } else {
       $346 = $i1;
       $62 = $numStr;
       $63 = $346;
       $347 = $62;
       $61 = $347;
       $348 = $61;
       $60 = $348;
       $349 = $60;
       $59 = $349;
       $350 = $59;
       $58 = $350;
       $351 = $58;
       $352 = HEAP8[$351>>0]|0;
       $353 = $352&255;
       $354 = $353 & 1;
       $355 = ($354|0)!=(0);
       if ($355) {
        $52 = $348;
        $356 = $52;
        $51 = $356;
        $357 = $51;
        $50 = $357;
        $358 = $50;
        $359 = ((($358)) + 8|0);
        $360 = HEAP32[$359>>2]|0;
        $369 = $360;
       } else {
        $57 = $348;
        $361 = $57;
        $56 = $361;
        $362 = $56;
        $55 = $362;
        $363 = $55;
        $364 = ((($363)) + 1|0);
        $54 = $364;
        $365 = $54;
        $53 = $365;
        $366 = $53;
        $369 = $366;
       }
       $367 = $63;
       $368 = (($369) + ($367)|0);
       $370 = HEAP8[$368>>0]|0;
       $371 = $370 << 24 >> 24;
       $372 = ($371|0)==(44);
       if ($372) {
        label = 48;
       }
      }
      if ((label|0) == 48) {
       label = 0;
       $373 = $pointCount;
       $374 = (($373) + 1)|0;
       $pointCount = $374;
      }
      $377 = $i1;
      $378 = (($377) + 1)|0;
      $i1 = $378;
     }
     $379 = $pointCount;
     $380 = ($379|0)>(1);
     L86: do {
      if ($380) {
       $381 = $atom;
       $382 = ($381|0)==(0|0);
       if (!($382)) {
        __ZN8LispNodeD2Ev($381);
        __ZdlPv($381);
       }
       $383 = (___cxa_allocate_exception(24)|0);
       $$expand_i1_val16 = 1;
       HEAP8[$119>>0] = $$expand_i1_val16;
       $48 = $116;
       $49 = 13499;
       $384 = $48;
       $47 = $384;
       $385 = $47;
       $46 = $385;
       $386 = $46;
       $45 = $386;
       $387 = $49;
       $388 = $49;
       __THREW__ = 0;
       $389 = (invoke_ii(550,($388|0))|0);
       $390 = __THREW__; __THREW__ = 0;
       $391 = $390&1;
       if ($391) {
        label = 62;
       } else {
        __THREW__ = 0;
        invoke_viii(551,($384|0),($387|0),($389|0));
        $392 = __THREW__; __THREW__ = 0;
        $393 = $392&1;
        if ($393) {
         label = 62;
        } else {
         $394 = $106;
         $43 = $118;
         $44 = $394;
         $395 = $43;
         $42 = $395;
         $396 = $42;
         $41 = $396;
         $397 = $41;
         $40 = $397;
         $398 = $44;
         $399 = $44;
         __THREW__ = 0;
         $400 = (invoke_ii(550,($399|0))|0);
         $401 = __THREW__; __THREW__ = 0;
         $402 = $401&1;
         if ($402) {
          label = 63;
         } else {
          __THREW__ = 0;
          invoke_viii(551,($395|0),($398|0),($400|0));
          $403 = __THREW__; __THREW__ = 0;
          $404 = $403&1;
          if ($404) {
           label = 63;
          } else {
           $405 = $107;
           $406 = HEAP32[$405>>2]|0;
           __THREW__ = 0;
           invoke_viii(654,($117|0),($118|0),($406|0));
           $407 = __THREW__; __THREW__ = 0;
           $408 = $407&1;
           if ($408) {
            label = 64;
           } else {
            __THREW__ = 0;
            ;HEAP32[$$byval_copy>>2]=HEAP32[$117>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$117+4>>2]|0;
            invoke_viiii(656,($115|0),($116|0),($$byval_copy|0),0);
            $409 = __THREW__; __THREW__ = 0;
            $410 = $409&1;
            if ($410) {
             label = 64;
            } else {
             __THREW__ = 0;
             invoke_vii(657,($383|0),($115|0));
             $411 = __THREW__; __THREW__ = 0;
             $412 = $411&1;
             if (!($412)) {
              $$expand_i1_val18 = 0;
              HEAP8[$119>>0] = $$expand_i1_val18;
              __THREW__ = 0;
              invoke_viii(602,($383|0),(672|0),(658|0));
              $413 = __THREW__; __THREW__ = 0;
             }
             $420 = ___cxa_find_matching_catch_2()|0;
             $421 = tempRet0;
             $110 = $420;
             $111 = $421;
             __ZN7MessageD2Ev($115);
            }
           }
           if ((label|0) == 64) {
            $418 = ___cxa_find_matching_catch_2()|0;
            $419 = tempRet0;
            $110 = $418;
            $111 = $419;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($118);
          }
         }
         if ((label|0) == 63) {
          $416 = ___cxa_find_matching_catch_2()|0;
          $417 = tempRet0;
          $110 = $416;
          $111 = $417;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
        }
       }
       if ((label|0) == 62) {
        $414 = ___cxa_find_matching_catch_2()|0;
        $415 = tempRet0;
        $110 = $414;
        $111 = $415;
       }
       $$pre_trunc20 = HEAP8[$119>>0]|0;
       $422 = $$pre_trunc20&1;
       if ($422) {
        ___cxa_free_exception(($383|0));
       }
      } else {
       $423 = $pointCount;
       $424 = ($423|0)==(1);
       do {
        if ($424) {
         __THREW__ = 0;
         $425 = (invoke_ii(548,16)|0);
         $426 = __THREW__; __THREW__ = 0;
         $427 = $426&1;
         if ($427) {
          label = 49;
         } else {
          $39 = $numStr;
          $428 = $39;
          $38 = $428;
          $429 = $38;
          $37 = $429;
          $430 = $37;
          $36 = $430;
          $431 = $36;
          $35 = $431;
          $432 = $35;
          $34 = $432;
          $433 = $34;
          $434 = HEAP8[$433>>0]|0;
          $435 = $434&255;
          $436 = $435 & 1;
          $437 = ($436|0)!=(0);
          if ($437) {
           $28 = $430;
           $438 = $28;
           $27 = $438;
           $439 = $27;
           $26 = $439;
           $440 = $26;
           $441 = ((($440)) + 8|0);
           $442 = HEAP32[$441>>2]|0;
           $449 = $442;
          } else {
           $33 = $430;
           $443 = $33;
           $32 = $443;
           $444 = $32;
           $31 = $444;
           $445 = $31;
           $446 = ((($445)) + 1|0);
           $30 = $446;
           $447 = $30;
           $29 = $447;
           $448 = $29;
           $449 = $448;
          }
          $25 = $449;
          $450 = $25;
          __THREW__ = 0;
          $451 = (+invoke_di(625,($450|0)));
          $452 = __THREW__; __THREW__ = 0;
          $453 = $452&1;
          if (!($453)) {
           __THREW__ = 0;
           invoke_vid(623,($425|0),(+$451));
           $454 = __THREW__; __THREW__ = 0;
           $455 = $454&1;
           if (!($455)) {
            $456 = $atom;
            HEAP32[$456>>2] = $425;
            break;
           }
          }
          $457 = ___cxa_find_matching_catch_2()|0;
          $458 = tempRet0;
          $110 = $457;
          $111 = $458;
          __ZdlPv($425);
          break L86;
         }
        } else {
         __THREW__ = 0;
         $459 = (invoke_ii(548,8)|0);
         $460 = __THREW__; __THREW__ = 0;
         $461 = $460&1;
         if ($461) {
          label = 49;
         } else {
          $24 = $numStr;
          $462 = $24;
          $23 = $462;
          $463 = $23;
          $22 = $463;
          $464 = $22;
          $21 = $464;
          $465 = $21;
          $20 = $465;
          $466 = $20;
          $19 = $466;
          $467 = $19;
          $468 = HEAP8[$467>>0]|0;
          $469 = $468&255;
          $470 = $469 & 1;
          $471 = ($470|0)!=(0);
          if ($471) {
           $13 = $464;
           $472 = $13;
           $12 = $472;
           $473 = $12;
           $11 = $473;
           $474 = $11;
           $475 = ((($474)) + 8|0);
           $476 = HEAP32[$475>>2]|0;
           $483 = $476;
          } else {
           $18 = $464;
           $477 = $18;
           $17 = $477;
           $478 = $17;
           $16 = $478;
           $479 = $16;
           $480 = ((($479)) + 1|0);
           $15 = $480;
           $481 = $15;
           $14 = $481;
           $482 = $14;
           $483 = $482;
          }
          $10 = $483;
          $484 = $10;
          __THREW__ = 0;
          $485 = (invoke_ii(626,($484|0))|0);
          $486 = __THREW__; __THREW__ = 0;
          $487 = $486&1;
          if (!($487)) {
           __THREW__ = 0;
           invoke_vii(627,($459|0),($485|0));
           $488 = __THREW__; __THREW__ = 0;
           $489 = $488&1;
           if (!($489)) {
            $490 = $atom;
            HEAP32[$490>>2] = $459;
            break;
           }
          }
          $491 = ___cxa_find_matching_catch_2()|0;
          $492 = tempRet0;
          $110 = $491;
          $111 = $492;
          __ZdlPv($459);
          break L86;
         }
        }
       } while(0);
       if ((label|0) == 49) {
        $375 = ___cxa_find_matching_catch_2()|0;
        $376 = tempRet0;
        $110 = $375;
        $111 = $376;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($numStr);
       $531 = $107;
       $532 = HEAP32[$531>>2]|0;
       $533 = (($532) + -1)|0;
       HEAP32[$531>>2] = $533;
       $534 = $atom;
       STACKTOP = sp;return ($534|0);
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($numStr);
     $535 = $110;
     $536 = $111;
     ___resumeException($535|0);
     // unreachable;
    }
   }
   $162 = ___cxa_find_matching_catch_2()|0;
   $163 = tempRet0;
   $110 = $162;
   $111 = $163;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($109);
  }
 }
 if ((label|0) == 9) {
  $160 = ___cxa_find_matching_catch_2()|0;
  $161 = tempRet0;
  $110 = $160;
  $111 = $161;
 }
 $$pre_trunc = HEAP8[$112>>0]|0;
 $164 = $$pre_trunc&1;
 if (!($164)) {
  $535 = $110;
  $536 = $111;
  ___resumeException($535|0);
  // unreachable;
 }
 __ZdlPv($120);
 $535 = $110;
 $536 = $111;
 ___resumeException($535|0);
 // unreachable;
 return (0)|0;
}
function __ZN10LispString11parse_error10getMessageEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($this,$0,$__n) {
 $this = $this|0;
 $0 = $0|0;
 $__n = $__n|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $this;
 $2 = $0;
 $3 = $__n;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a = 0, $__cap$i = 0, $__ms$i = 0, $__v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $8 = sp + 8|0;
 $13 = sp + 201|0;
 $22 = sp;
 $25 = sp + 200|0;
 $33 = sp + 80|0;
 $34 = sp + 68|0;
 $__v = sp + 20|0;
 $39 = $this;
 $40 = $__x;
 $43 = $39;
 $38 = $43;
 $44 = $38;
 $45 = ((($44)) + 8|0);
 $37 = $45;
 $46 = $37;
 $36 = $46;
 $47 = $36;
 $__a = $47;
 $35 = $43;
 $48 = $35;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$48>>2]|0;
 $52 = $50;
 $53 = $51;
 $54 = (($52) - ($53))|0;
 $55 = (($54|0) / 24)&-1;
 $56 = (($55) + 1)|0;
 $32 = $43;
 HEAP32[$33>>2] = $56;
 $57 = $32;
 $58 = (__ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE8max_sizeEv($57)|0);
 $__ms$i = $58;
 $59 = HEAP32[$33>>2]|0;
 $60 = $__ms$i;
 $61 = ($59>>>0)>($60>>>0);
 if ($61) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($57);
  // unreachable;
 }
 $30 = $57;
 $62 = $30;
 $29 = $62;
 $63 = $29;
 $28 = $63;
 $64 = $28;
 $65 = ((($64)) + 8|0);
 $27 = $65;
 $66 = $27;
 $26 = $66;
 $67 = $26;
 $68 = HEAP32[$67>>2]|0;
 $69 = HEAP32[$63>>2]|0;
 $70 = $68;
 $71 = $69;
 $72 = (($70) - ($71))|0;
 $73 = (($72|0) / 24)&-1;
 $__cap$i = $73;
 $74 = $__cap$i;
 $75 = $__ms$i;
 $76 = (($75>>>0) / 2)&-1;
 $77 = ($74>>>0)>=($76>>>0);
 if ($77) {
  $78 = $__ms$i;
  $31 = $78;
 } else {
  $79 = $__cap$i;
  $80 = $79<<1;
  HEAP32[$34>>2] = $80;
  $23 = $34;
  $24 = $33;
  $81 = $23;
  $82 = $24;
  ;HEAP8[$22>>0]=HEAP8[$25>>0]|0;
  $20 = $81;
  $21 = $82;
  $83 = $20;
  $84 = $21;
  $17 = $22;
  $18 = $83;
  $19 = $84;
  $85 = $18;
  $86 = HEAP32[$85>>2]|0;
  $87 = $19;
  $88 = HEAP32[$87>>2]|0;
  $89 = ($86>>>0)<($88>>>0);
  $90 = $21;
  $91 = $20;
  $92 = $89 ? $90 : $91;
  $93 = HEAP32[$92>>2]|0;
  $31 = $93;
 }
 $94 = $31;
 $16 = $43;
 $95 = $16;
 $96 = ((($95)) + 4|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$95>>2]|0;
 $99 = $97;
 $100 = $98;
 $101 = (($99) - ($100))|0;
 $102 = (($101|0) / 24)&-1;
 $103 = $__a;
 __ZNSt3__114__split_bufferI7MessageRNS_9allocatorIS1_EEEC2EjjS4_($__v,$94,$102,$103);
 $104 = $__a;
 $105 = ((($__v)) + 8|0);
 $106 = HEAP32[$105>>2]|0;
 $15 = $106;
 $107 = $15;
 $108 = $40;
 $14 = $108;
 $109 = $14;
 $10 = $104;
 $11 = $107;
 $12 = $109;
 $110 = $10;
 $111 = $11;
 $112 = $12;
 $9 = $112;
 $113 = $9;
 ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
 $5 = $110;
 $6 = $111;
 $7 = $113;
 $114 = $5;
 $115 = $6;
 $116 = $7;
 $4 = $116;
 $117 = $4;
 $1 = $114;
 $2 = $115;
 $3 = $117;
 $118 = $2;
 $119 = $3;
 $0 = $119;
 $120 = $0;
 __THREW__ = 0;
 invoke_vii(651,($118|0),($120|0));
 $121 = __THREW__; __THREW__ = 0;
 $122 = $121&1;
 if ($122) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI7MessageRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 }
 $123 = ((($__v)) + 8|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = ((($124)) + 24|0);
 HEAP32[$123>>2] = $125;
 __THREW__ = 0;
 invoke_vii(662,($43|0),($__v|0));
 $126 = __THREW__; __THREW__ = 0;
 $127 = $126&1;
 if ($127) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $41 = $128;
  $42 = $129;
  __ZNSt3__114__split_bufferI7MessageRNS_9allocatorIS1_EEED2Ev($__v);
  $130 = $41;
  $131 = $42;
  ___resumeException($130|0);
  // unreachable;
 } else {
  __ZNSt3__114__split_bufferI7MessageRNS_9allocatorIS1_EEED2Ev($__v);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE8max_sizeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 8|0;
 $8 = sp + 77|0;
 $11 = sp;
 $13 = sp + 76|0;
 $18 = sp + 16|0;
 $19 = sp + 12|0;
 $17 = $this;
 $20 = $17;
 $16 = $20;
 $21 = $16;
 $22 = ((($21)) + 8|0);
 $15 = $22;
 $23 = $15;
 $14 = $23;
 $24 = $14;
 $12 = $24;
 $25 = $12;
 ;HEAP8[$11>>0]=HEAP8[$13>>0]|0;
 $10 = $25;
 $26 = $10;
 $9 = $26;
 HEAP32[$18>>2] = 178956970;
 $27 = (4294967295 / 2)&-1;
 HEAP32[$19>>2] = $27;
 $6 = $18;
 $7 = $19;
 $28 = $6;
 $29 = $7;
 ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
 $3 = $28;
 $4 = $29;
 $30 = $4;
 $31 = $3;
 $0 = $5;
 $1 = $30;
 $2 = $31;
 $32 = $1;
 $33 = HEAP32[$32>>2]|0;
 $34 = $2;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $4;
 $38 = $3;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__114__split_bufferI7MessageRNS_9allocatorIS1_EEEC2EjjS4_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $16 = sp + 36|0;
 $20 = sp + 20|0;
 $22 = $this;
 $23 = $__cap;
 $24 = $__start;
 $25 = $__a;
 $26 = $22;
 $27 = ((($26)) + 12|0);
 $28 = $25;
 $19 = $27;
 HEAP32[$20>>2] = 0;
 $21 = $28;
 $29 = $19;
 $18 = $20;
 $30 = $18;
 $31 = HEAP32[$30>>2]|0;
 $32 = $21;
 $12 = $32;
 $33 = $12;
 $15 = $29;
 HEAP32[$16>>2] = $31;
 $17 = $33;
 $34 = $15;
 $14 = $16;
 $35 = $14;
 $36 = HEAP32[$35>>2]|0;
 HEAP32[$34>>2] = $36;
 $37 = ((($34)) + 4|0);
 $38 = $17;
 $13 = $38;
 $39 = $13;
 HEAP32[$37>>2] = $39;
 $40 = $23;
 $41 = ($40|0)!=(0);
 if ($41) {
  $2 = $26;
  $42 = $2;
  $43 = ((($42)) + 12|0);
  $1 = $43;
  $44 = $1;
  $0 = $44;
  $45 = $0;
  $46 = ((($45)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = $23;
  $7 = $47;
  $8 = $48;
  $49 = $7;
  $50 = $8;
  $4 = $49;
  $5 = $50;
  $6 = 0;
  $51 = $5;
  $52 = ($51*24)|0;
  $3 = $52;
  $53 = $3;
  $54 = (__Znwj($53)|0);
  $55 = $54;
 } else {
  $55 = 0;
 }
 HEAP32[$26>>2] = $55;
 $56 = HEAP32[$26>>2]|0;
 $57 = $24;
 $58 = (($56) + (($57*24)|0)|0);
 $59 = ((($26)) + 8|0);
 HEAP32[$59>>2] = $58;
 $60 = ((($26)) + 4|0);
 HEAP32[$60>>2] = $58;
 $61 = HEAP32[$26>>2]|0;
 $62 = $23;
 $63 = (($61) + (($62*24)|0)|0);
 $11 = $26;
 $64 = $11;
 $65 = ((($64)) + 12|0);
 $10 = $65;
 $66 = $10;
 $9 = $66;
 $67 = $9;
 HEAP32[$67>>2] = $63;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__t$i = 0, $__t$i1 = 0, $__t$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__t$i2 = sp + 180|0;
 $__t$i1 = sp + 132|0;
 $__t$i = sp + 104|0;
 $32 = sp;
 $37 = sp + 204|0;
 $47 = $this;
 $48 = $__v;
 $49 = $47;
 __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE17__annotate_deleteEv($49);
 $46 = $49;
 $50 = $46;
 $51 = ((($50)) + 8|0);
 $45 = $51;
 $52 = $45;
 $44 = $52;
 $53 = $44;
 $54 = HEAP32[$49>>2]|0;
 $55 = ((($49)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = $48;
 $58 = ((($57)) + 4|0);
 $39 = $53;
 $40 = $54;
 $41 = $56;
 $42 = $58;
 while(1) {
  $59 = $41;
  $60 = $40;
  $61 = ($59|0)!=($60|0);
  if (!($61)) {
   break;
  }
  $62 = $39;
  $63 = $42;
  $64 = HEAP32[$63>>2]|0;
  $65 = ((($64)) + -24|0);
  $38 = $65;
  $66 = $38;
  $67 = $41;
  $68 = ((($67)) + -24|0);
  $41 = $68;
  $23 = $68;
  $69 = $23;
  $22 = $69;
  $70 = $22;
  $34 = $62;
  $35 = $66;
  $36 = $70;
  $71 = $34;
  $72 = $35;
  $73 = $36;
  $33 = $73;
  $74 = $33;
  ;HEAP8[$32>>0]=HEAP8[$37>>0]|0;
  $29 = $71;
  $30 = $72;
  $31 = $74;
  $75 = $29;
  $76 = $30;
  $77 = $31;
  $28 = $77;
  $78 = $28;
  $25 = $75;
  $26 = $76;
  $27 = $78;
  $79 = $26;
  $80 = $27;
  $24 = $80;
  $81 = $24;
  __ZN7MessageC2EOS_($79,$81);
  $82 = $42;
  $83 = HEAP32[$82>>2]|0;
  $84 = ((($83)) + -24|0);
  HEAP32[$82>>2] = $84;
 }
 $85 = $48;
 $86 = ((($85)) + 4|0);
 $20 = $49;
 $21 = $86;
 $87 = $20;
 $19 = $87;
 $88 = $19;
 $89 = HEAP32[$88>>2]|0;
 HEAP32[$__t$i>>2] = $89;
 $90 = $21;
 $17 = $90;
 $91 = $17;
 $92 = HEAP32[$91>>2]|0;
 $93 = $20;
 HEAP32[$93>>2] = $92;
 $18 = $__t$i;
 $94 = $18;
 $95 = HEAP32[$94>>2]|0;
 $96 = $21;
 HEAP32[$96>>2] = $95;
 $97 = ((($49)) + 4|0);
 $98 = $48;
 $99 = ((($98)) + 8|0);
 $3 = $97;
 $4 = $99;
 $100 = $3;
 $2 = $100;
 $101 = $2;
 $102 = HEAP32[$101>>2]|0;
 HEAP32[$__t$i2>>2] = $102;
 $103 = $4;
 $0 = $103;
 $104 = $0;
 $105 = HEAP32[$104>>2]|0;
 $106 = $3;
 HEAP32[$106>>2] = $105;
 $1 = $__t$i2;
 $107 = $1;
 $108 = HEAP32[$107>>2]|0;
 $109 = $4;
 HEAP32[$109>>2] = $108;
 $7 = $49;
 $110 = $7;
 $111 = ((($110)) + 8|0);
 $6 = $111;
 $112 = $6;
 $5 = $112;
 $113 = $5;
 $114 = $48;
 $10 = $114;
 $115 = $10;
 $116 = ((($115)) + 12|0);
 $9 = $116;
 $117 = $9;
 $8 = $117;
 $118 = $8;
 $14 = $113;
 $15 = $118;
 $119 = $14;
 $13 = $119;
 $120 = $13;
 $121 = HEAP32[$120>>2]|0;
 HEAP32[$__t$i1>>2] = $121;
 $122 = $15;
 $11 = $122;
 $123 = $11;
 $124 = HEAP32[$123>>2]|0;
 $125 = $14;
 HEAP32[$125>>2] = $124;
 $12 = $__t$i1;
 $126 = $12;
 $127 = HEAP32[$126>>2]|0;
 $128 = $15;
 HEAP32[$128>>2] = $127;
 $129 = $48;
 $130 = ((($129)) + 4|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = $48;
 HEAP32[$132>>2] = $131;
 $16 = $49;
 $133 = $16;
 $134 = ((($133)) + 4|0);
 $135 = HEAP32[$134>>2]|0;
 $136 = HEAP32[$133>>2]|0;
 $137 = $135;
 $138 = $136;
 $139 = (($137) - ($138))|0;
 $140 = (($139|0) / 24)&-1;
 __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE14__annotate_newEj($49,$140);
 $43 = $49;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE17__annotate_deleteEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $19 = $this;
 $20 = $19;
 $18 = $20;
 $21 = $18;
 $22 = HEAP32[$21>>2]|0;
 $17 = $22;
 $23 = $17;
 $16 = $20;
 $24 = $16;
 $25 = HEAP32[$24>>2]|0;
 $15 = $25;
 $26 = $15;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 24)&-1;
 $39 = (($26) + (($38*24)|0)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $7 = $20;
 $43 = $7;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 $50 = (($49|0) / 24)&-1;
 $51 = (($42) + (($50*24)|0)|0);
 $9 = $20;
 $52 = $9;
 $53 = HEAP32[$52>>2]|0;
 $8 = $53;
 $54 = $8;
 $14 = $20;
 $55 = $14;
 $13 = $55;
 $56 = $13;
 $12 = $56;
 $57 = $12;
 $58 = ((($57)) + 8|0);
 $11 = $58;
 $59 = $11;
 $10 = $59;
 $60 = $10;
 $61 = HEAP32[$60>>2]|0;
 $62 = HEAP32[$56>>2]|0;
 $63 = $61;
 $64 = $62;
 $65 = (($63) - ($64))|0;
 $66 = (($65|0) / 24)&-1;
 $67 = (($54) + (($66*24)|0)|0);
 __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($20,$23,$39,$51,$67);
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($this,$__beg,$__end,$__old_mid,$__new_mid) {
 $this = $this|0;
 $__beg = $__beg|0;
 $__end = $__end|0;
 $__old_mid = $__old_mid|0;
 $__new_mid = $__new_mid|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $__beg;
 $2 = $__end;
 $3 = $__old_mid;
 $4 = $__new_mid;
 STACKTOP = sp;return;
}
function __ZN7MessageC2EOS_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = $this;
 $8 = $0;
 $9 = $7;
 $10 = $8;
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$9>>2] = $11;
 $12 = ((($9)) + 4|0);
 $13 = $8;
 $14 = ((($13)) + 4|0);
 $5 = $12;
 $6 = $14;
 $15 = $5;
 $16 = $6;
 $4 = $16;
 $17 = $4;
 ;HEAP32[$15>>2]=HEAP32[$17>>2]|0;HEAP32[$15+4>>2]=HEAP32[$17+4>>2]|0;HEAP32[$15+8>>2]=HEAP32[$17+8>>2]|0;
 $18 = $6;
 $3 = $18;
 $19 = $3;
 $2 = $19;
 $20 = $2;
 $1 = $20;
 $21 = $1;
 $__a$i$i = $21;
 $__i$i$i = 0;
 while(1) {
  $22 = $__i$i$i;
  $23 = ($22>>>0)<(3);
  if (!($23)) {
   break;
  }
  $24 = $__i$i$i;
  $25 = $__a$i$i;
  $26 = (($25) + ($24<<2)|0);
  HEAP32[$26>>2] = 0;
  $27 = $__i$i$i;
  $28 = (($27) + 1)|0;
  $__i$i$i = $28;
 }
 $29 = ((($9)) + 16|0);
 $30 = $8;
 $31 = ((($30)) + 16|0);
 ;HEAP32[$29>>2]=HEAP32[$31>>2]|0;HEAP32[$29+4>>2]=HEAP32[$31+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE14__annotate_newEj($this,$__current_size) {
 $this = $this|0;
 $__current_size = $__current_size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = $this;
 $19 = $__current_size;
 $20 = $18;
 $17 = $20;
 $21 = $17;
 $22 = HEAP32[$21>>2]|0;
 $16 = $22;
 $23 = $16;
 $15 = $20;
 $24 = $15;
 $25 = HEAP32[$24>>2]|0;
 $14 = $25;
 $26 = $14;
 $4 = $20;
 $27 = $4;
 $3 = $27;
 $28 = $3;
 $2 = $28;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $1 = $30;
 $31 = $1;
 $0 = $31;
 $32 = $0;
 $33 = HEAP32[$32>>2]|0;
 $34 = HEAP32[$28>>2]|0;
 $35 = $33;
 $36 = $34;
 $37 = (($35) - ($36))|0;
 $38 = (($37|0) / 24)&-1;
 $39 = (($26) + (($38*24)|0)|0);
 $6 = $20;
 $40 = $6;
 $41 = HEAP32[$40>>2]|0;
 $5 = $41;
 $42 = $5;
 $11 = $20;
 $43 = $11;
 $10 = $43;
 $44 = $10;
 $9 = $44;
 $45 = $9;
 $46 = ((($45)) + 8|0);
 $8 = $46;
 $47 = $8;
 $7 = $47;
 $48 = $7;
 $49 = HEAP32[$48>>2]|0;
 $50 = HEAP32[$44>>2]|0;
 $51 = $49;
 $52 = $50;
 $53 = (($51) - ($52))|0;
 $54 = (($53|0) / 24)&-1;
 $55 = (($42) + (($54*24)|0)|0);
 $13 = $20;
 $56 = $13;
 $57 = HEAP32[$56>>2]|0;
 $12 = $57;
 $58 = $12;
 $59 = $19;
 $60 = (($58) + (($59*24)|0)|0);
 __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE31__annotate_contiguous_containerEPKvS6_S6_S6_($20,$23,$39,$55,$60);
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferI7MessageRNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp + 8|0;
 $21 = sp + 133|0;
 $28 = sp;
 $31 = sp + 132|0;
 $33 = $this;
 $34 = $33;
 $32 = $34;
 $35 = $32;
 $36 = ((($35)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $29 = $35;
 $30 = $37;
 $38 = $29;
 $39 = $30;
 ;HEAP8[$28>>0]=HEAP8[$31>>0]|0;
 $26 = $38;
 $27 = $39;
 $40 = $26;
 while(1) {
  $41 = $27;
  $42 = ((($40)) + 8|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ($41|0)!=($43|0);
  if (!($44)) {
   break;
  }
  $25 = $40;
  $45 = $25;
  $46 = ((($45)) + 12|0);
  $24 = $46;
  $47 = $24;
  $23 = $47;
  $48 = $23;
  $49 = ((($48)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($40)) + 8|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ((($52)) + -24|0);
  HEAP32[$51>>2] = $53;
  $22 = $53;
  $54 = $22;
  $19 = $50;
  $20 = $54;
  $55 = $19;
  $56 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $55;
  $17 = $56;
  $57 = $16;
  $58 = $17;
  $14 = $57;
  $15 = $58;
  $59 = $15;
  __ZN7MessageD2Ev($59);
 }
 $60 = HEAP32[$34>>2]|0;
 $61 = ($60|0)!=(0|0);
 if (!($61)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $62 = $13;
 $63 = ((($62)) + 12|0);
 $12 = $63;
 $64 = $12;
 $11 = $64;
 $65 = $11;
 $66 = ((($65)) + 4|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = HEAP32[$34>>2]|0;
 $10 = $34;
 $69 = $10;
 $9 = $69;
 $70 = $9;
 $71 = ((($70)) + 12|0);
 $8 = $71;
 $72 = $8;
 $7 = $72;
 $73 = $7;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 24)&-1;
 $4 = $67;
 $5 = $68;
 $6 = $79;
 $80 = $4;
 $81 = $5;
 $82 = $6;
 $1 = $80;
 $2 = $81;
 $3 = $82;
 $83 = $2;
 $0 = $83;
 $84 = $0;
 __ZdlPv($84);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZNSt3__113__vector_baseI7MessageNS_9allocatorIS1_EEED2Ev($1);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseI7MessageNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $18 = sp;
 $21 = sp + 116|0;
 $29 = $this;
 $30 = $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)!=(0|0);
 if (!($32)) {
  STACKTOP = sp;return;
 }
 $28 = $30;
 $33 = $28;
 $34 = HEAP32[$33>>2]|0;
 $26 = $33;
 $27 = $34;
 $35 = $26;
 while(1) {
  $36 = $27;
  $37 = ((($35)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($36|0)!=($38|0);
  if (!($39)) {
   break;
  }
  $25 = $35;
  $40 = $25;
  $41 = ((($40)) + 8|0);
  $24 = $41;
  $42 = $24;
  $23 = $42;
  $43 = $23;
  $44 = ((($35)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ((($45)) + -24|0);
  HEAP32[$44>>2] = $46;
  $22 = $46;
  $47 = $22;
  $19 = $43;
  $20 = $47;
  $48 = $19;
  $49 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $48;
  $17 = $49;
  $50 = $16;
  $51 = $17;
  $14 = $50;
  $15 = $51;
  $52 = $15;
  __ZN7MessageD2Ev($52);
 }
 $13 = $30;
 $53 = $13;
 $54 = ((($53)) + 8|0);
 $12 = $54;
 $55 = $12;
 $11 = $55;
 $56 = $11;
 $57 = HEAP32[$30>>2]|0;
 $3 = $30;
 $58 = $3;
 $2 = $58;
 $59 = $2;
 $60 = ((($59)) + 8|0);
 $1 = $60;
 $61 = $1;
 $0 = $61;
 $62 = $0;
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$58>>2]|0;
 $65 = $63;
 $66 = $64;
 $67 = (($65) - ($66))|0;
 $68 = (($67|0) / 24)&-1;
 $8 = $56;
 $9 = $57;
 $10 = $68;
 $69 = $8;
 $70 = $9;
 $71 = $10;
 $5 = $69;
 $6 = $70;
 $7 = $71;
 $72 = $6;
 $4 = $72;
 $73 = $4;
 __ZdlPv($73);
 STACKTOP = sp;return;
}
function __ZN10LispStringD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = ((($1)) + 28|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)==(0|0);
  if (!($7)) {
   __ZN8LispNodeD2Ev($6);
   __ZdlPv($6);
  }
 }
 $8 = ((($1)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 $9 = ((($1)) + 4|0);
 __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEED2Ev($9);
 STACKTOP = sp;return;
}
function __ZN3Pos9findLineNEiPKc($this,$n,$str) {
 $this = $this|0;
 $n = $n|0;
 $str = $str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $n;
 $2 = $str;
 $3 = $0;
 HEAP32[$3>>2] = 0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = 0;
 $i = 0;
 while(1) {
  $5 = $i;
  $6 = $1;
  $7 = ($5|0)<($6|0);
  if (!($7)) {
   break;
  }
  $8 = ((($3)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + 1)|0;
  HEAP32[$8>>2] = $10;
  $11 = $i;
  $12 = $2;
  $13 = (($12) + ($11)|0);
  $14 = HEAP8[$13>>0]|0;
  $15 = $14 << 24 >> 24;
  $16 = ($15|0)==(0);
  if ($16) {
   HEAP32[$3>>2] = -1;
   $17 = ((($3)) + 4|0);
   HEAP32[$17>>2] = -1;
  }
  $18 = $i;
  $19 = $2;
  $20 = (($19) + ($18)|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = $21 << 24 >> 24;
  $23 = ($22|0)==(10);
  if ($23) {
   $24 = HEAP32[$3>>2]|0;
   $25 = (($24) + 1)|0;
   HEAP32[$3>>2] = $25;
   $26 = ((($3)) + 4|0);
   HEAP32[$26>>2] = 0;
  }
  $27 = $i;
  $28 = (($27) + 1)|0;
  $i = $28;
 }
 STACKTOP = sp;return;
}
function __ZNK3Pos8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__a$i$i$i4 = 0, $__a$i$i$i7 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, $__i$i$i$i5 = 0, $__i$i$i$i8 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $68 = sp + 56|0;
 $69 = sp + 44|0;
 $70 = sp + 32|0;
 $71 = sp + 20|0;
 $74 = sp;
 $67 = $this;
 $75 = $67;
 $76 = HEAP32[$75>>2]|0;
 $77 = ($76|0)<(0);
 if (!($77)) {
  $78 = ((($75)) + 4|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = ($79|0)<(0);
  if (!($80)) {
   $87 = HEAP32[$75>>2]|0;
   $88 = (($87) + 1)|0;
   __ZNSt3__19to_stringEi($71,$88);
   $60 = 13545;
   $61 = $71;
   $89 = $61;
   $90 = $60;
   __THREW__ = 0;
   $91 = (invoke_iiii(600,($89|0),0,($90|0))|0);
   $92 = __THREW__; __THREW__ = 0;
   $93 = $92&1;
   if ($93) {
    $219 = ___cxa_find_matching_catch_2()|0;
    $220 = tempRet0;
    $72 = $219;
    $73 = $220;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
    $229 = $72;
    $230 = $73;
    ___resumeException($229|0);
    // unreachable;
   }
   $59 = $91;
   $94 = $59;
   $57 = $70;
   $58 = $94;
   $95 = $57;
   $96 = $58;
   $56 = $96;
   $97 = $56;
   ;HEAP32[$95>>2]=HEAP32[$97>>2]|0;HEAP32[$95+4>>2]=HEAP32[$97+4>>2]|0;HEAP32[$95+8>>2]=HEAP32[$97+8>>2]|0;
   $98 = $58;
   $55 = $98;
   $99 = $55;
   $54 = $99;
   $100 = $54;
   $53 = $100;
   $101 = $53;
   $__a$i$i$i = $101;
   $__i$i$i$i = 0;
   while(1) {
    $102 = $__i$i$i$i;
    $103 = ($102>>>0)<(3);
    if (!($103)) {
     break;
    }
    $104 = $__i$i$i$i;
    $105 = $__a$i$i$i;
    $106 = (($105) + ($104<<2)|0);
    HEAP32[$106>>2] = 0;
    $107 = $__i$i$i$i;
    $108 = (($107) + 1)|0;
    $__i$i$i$i = $108;
   }
   $51 = $70;
   $52 = 13548;
   $109 = $51;
   $110 = $52;
   __THREW__ = 0;
   $111 = (invoke_iii(542,($109|0),($110|0))|0);
   $112 = __THREW__; __THREW__ = 0;
   $113 = $112&1;
   if ($113) {
    $221 = ___cxa_find_matching_catch_2()|0;
    $222 = tempRet0;
    $72 = $221;
    $73 = $222;
   } else {
    $50 = $111;
    $114 = $50;
    $48 = $69;
    $49 = $114;
    $115 = $48;
    $116 = $49;
    $47 = $116;
    $117 = $47;
    ;HEAP32[$115>>2]=HEAP32[$117>>2]|0;HEAP32[$115+4>>2]=HEAP32[$117+4>>2]|0;HEAP32[$115+8>>2]=HEAP32[$117+8>>2]|0;
    $118 = $49;
    $46 = $118;
    $119 = $46;
    $45 = $119;
    $120 = $45;
    $44 = $120;
    $121 = $44;
    $__a$i$i$i1 = $121;
    $__i$i$i$i2 = 0;
    while(1) {
     $122 = $__i$i$i$i2;
     $123 = ($122>>>0)<(3);
     if (!($123)) {
      break;
     }
     $124 = $__i$i$i$i2;
     $125 = $__a$i$i$i1;
     $126 = (($125) + ($124<<2)|0);
     HEAP32[$126>>2] = 0;
     $127 = $__i$i$i$i2;
     $128 = (($127) + 1)|0;
     $__i$i$i$i2 = $128;
    }
    $129 = ((($75)) + 4|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (($130) + 1)|0;
    __THREW__ = 0;
    invoke_vii(663,($74|0),($131|0));
    $132 = __THREW__; __THREW__ = 0;
    $133 = $132&1;
    if ($133) {
     $223 = ___cxa_find_matching_catch_2()|0;
     $224 = tempRet0;
     $72 = $223;
     $73 = $224;
    } else {
     $42 = $69;
     $43 = $74;
     $134 = $42;
     $135 = $43;
     $40 = $134;
     $41 = $135;
     $136 = $40;
     $137 = $41;
     $39 = $137;
     $138 = $39;
     $38 = $138;
     $139 = $38;
     $37 = $139;
     $140 = $37;
     $36 = $140;
     $141 = $36;
     $35 = $141;
     $142 = $35;
     $143 = HEAP8[$142>>0]|0;
     $144 = $143&255;
     $145 = $144 & 1;
     $146 = ($145|0)!=(0);
     if ($146) {
      $29 = $139;
      $147 = $29;
      $28 = $147;
      $148 = $28;
      $27 = $148;
      $149 = $27;
      $150 = ((($149)) + 8|0);
      $151 = HEAP32[$150>>2]|0;
      $158 = $151;
     } else {
      $34 = $139;
      $152 = $34;
      $33 = $152;
      $153 = $33;
      $32 = $153;
      $154 = $32;
      $155 = ((($154)) + 1|0);
      $31 = $155;
      $156 = $31;
      $30 = $156;
      $157 = $30;
      $158 = $157;
     }
     $26 = $158;
     $159 = $26;
     $160 = $41;
     $25 = $160;
     $161 = $25;
     $24 = $161;
     $162 = $24;
     $23 = $162;
     $163 = $23;
     $22 = $163;
     $164 = $22;
     $165 = HEAP8[$164>>0]|0;
     $166 = $165&255;
     $167 = $166 & 1;
     $168 = ($167|0)!=(0);
     if ($168) {
      $18 = $161;
      $169 = $18;
      $17 = $169;
      $170 = $17;
      $16 = $170;
      $171 = $16;
      $172 = ((($171)) + 4|0);
      $173 = HEAP32[$172>>2]|0;
      $180 = $173;
     } else {
      $21 = $161;
      $174 = $21;
      $20 = $174;
      $175 = $20;
      $19 = $175;
      $176 = $19;
      $177 = HEAP8[$176>>0]|0;
      $178 = $177&255;
      $179 = $178 >> 1;
      $180 = $179;
     }
     __THREW__ = 0;
     $181 = (invoke_iiii(543,($136|0),($159|0),($180|0))|0);
     $182 = __THREW__; __THREW__ = 0;
     $183 = $182&1;
     do {
      if ($183) {
       $225 = ___cxa_find_matching_catch_2()|0;
       $226 = tempRet0;
       $72 = $225;
       $73 = $226;
      } else {
       $15 = $181;
       $184 = $15;
       $13 = $68;
       $14 = $184;
       $185 = $13;
       $186 = $14;
       $12 = $186;
       $187 = $12;
       ;HEAP32[$185>>2]=HEAP32[$187>>2]|0;HEAP32[$185+4>>2]=HEAP32[$187+4>>2]|0;HEAP32[$185+8>>2]=HEAP32[$187+8>>2]|0;
       $188 = $14;
       $11 = $188;
       $189 = $11;
       $10 = $189;
       $190 = $10;
       $9 = $190;
       $191 = $9;
       $__a$i$i$i4 = $191;
       $__i$i$i$i5 = 0;
       while(1) {
        $192 = $__i$i$i$i5;
        $193 = ($192>>>0)<(3);
        if (!($193)) {
         break;
        }
        $194 = $__i$i$i$i5;
        $195 = $__a$i$i$i4;
        $196 = (($195) + ($194<<2)|0);
        HEAP32[$196>>2] = 0;
        $197 = $__i$i$i$i5;
        $198 = (($197) + 1)|0;
        $__i$i$i$i5 = $198;
       }
       $7 = $68;
       $8 = 13550;
       $199 = $7;
       $200 = $8;
       __THREW__ = 0;
       $201 = (invoke_iii(542,($199|0),($200|0))|0);
       $202 = __THREW__; __THREW__ = 0;
       $203 = $202&1;
       if ($203) {
        $227 = ___cxa_find_matching_catch_2()|0;
        $228 = tempRet0;
        $72 = $227;
        $73 = $228;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
        break;
       }
       $6 = $201;
       $204 = $6;
       $4 = $agg$result;
       $5 = $204;
       $205 = $4;
       $206 = $5;
       $3 = $206;
       $207 = $3;
       ;HEAP32[$205>>2]=HEAP32[$207>>2]|0;HEAP32[$205+4>>2]=HEAP32[$207+4>>2]|0;HEAP32[$205+8>>2]=HEAP32[$207+8>>2]|0;
       $208 = $5;
       $2 = $208;
       $209 = $2;
       $1 = $209;
       $210 = $1;
       $0 = $210;
       $211 = $0;
       $__a$i$i$i7 = $211;
       $__i$i$i$i8 = 0;
       while(1) {
        $212 = $__i$i$i$i8;
        $213 = ($212>>>0)<(3);
        if (!($213)) {
         break;
        }
        $214 = $__i$i$i$i8;
        $215 = $__a$i$i$i7;
        $216 = (($215) + ($214<<2)|0);
        HEAP32[$216>>2] = 0;
        $217 = $__i$i$i$i8;
        $218 = (($217) + 1)|0;
        $__i$i$i$i8 = $218;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
       STACKTOP = sp;return;
      }
     } while(0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($74);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
   $229 = $72;
   $230 = $73;
   ___resumeException($229|0);
   // unreachable;
  }
 }
 $65 = $agg$result;
 $66 = 13519;
 $81 = $65;
 $64 = $81;
 $82 = $64;
 $63 = $82;
 $83 = $63;
 $62 = $83;
 $84 = $66;
 $85 = $66;
 $86 = (__ZNSt3__111char_traitsIcE6lengthEPKc($85)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($81,$84,$86);
 STACKTOP = sp;return;
}
function __ZN8FunctionC2ENS_12FunctionTypeEii($this,$type,$argCount,$minArgCount) {
 $this = $this|0;
 $type = $type|0;
 $argCount = $argCount|0;
 $minArgCount = $minArgCount|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $type;
 $2 = $argCount;
 $3 = $minArgCount;
 $4 = $0;
 $5 = 3380;
 HEAP32[$4>>2] = $5;
 $6 = ((($4)) + 4|0);
 $7 = $2;
 HEAP32[$6>>2] = $7;
 $8 = ((($4)) + 8|0);
 $9 = $3;
 HEAP32[$8>>2] = $9;
 $10 = $1;
 $11 = ((($4)) + 12|0);
 HEAP32[$11>>2] = $10;
 STACKTOP = sp;return;
}
function __ZN8FunctionD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 __ZN8FunctionD2Ev($1);
 __ZdlPv($1);
 STACKTOP = sp;return;
}
function __ZNK8Function3runERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory($this,$arguments,$stack) {
 $this = $this|0;
 $arguments = $arguments|0;
 $stack = $stack|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $$pre_trunc9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0;
 var $__a$i$i$i1 = 0, $__a$i$i$i11 = 0, $__a$i$i$i15 = 0, $__a$i$i$i19 = 0, $__a$i$i$i23 = 0, $__a$i$i$i4 = 0, $__a$i$i$i7 = 0, $__i$i$i$i = 0, $__i$i$i$i12 = 0, $__i$i$i$i16 = 0, $__i$i$i$i2 = 0, $__i$i$i$i20 = 0, $__i$i$i$i24 = 0, $__i$i$i$i5 = 0, $__i$i$i$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 752|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $126 = sp + 164|0;
 $130 = sp + 140|0;
 $131 = sp + 128|0;
 $132 = sp + 116|0;
 $133 = sp + 104|0;
 $134 = sp + 92|0;
 $137 = sp + 72|0;
 $138 = sp + 737|0;
 $139 = sp + 60|0;
 $140 = sp + 48|0;
 $141 = sp + 36|0;
 $142 = sp + 24|0;
 $143 = sp + 12|0;
 $144 = sp;
 $145 = sp + 736|0;
 $127 = $this;
 $128 = $arguments;
 $129 = $stack;
 $146 = $127;
 $147 = ((($146)) + 4|0);
 $148 = HEAP32[$147>>2]|0;
 $149 = ($148|0)>(0);
 if ($149) {
  $150 = $128;
  $125 = $150;
  $151 = $125;
  $152 = ((($151)) + 4|0);
  $153 = HEAP32[$152>>2]|0;
  $154 = HEAP32[$151>>2]|0;
  $155 = $153;
  $156 = $154;
  $157 = (($155) - ($156))|0;
  $158 = (($157|0) / 4)&-1;
  $159 = ((($146)) + 4|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160&255;
  $162 = $161&255;
  $163 = ($158|0)!=($162|0);
  if ($163) {
   $164 = (___cxa_allocate_exception(24)|0);
   $$expand_i1_val = 1;
   HEAP8[$138>>0] = $$expand_i1_val;
   $165 = HEAP32[$146>>2]|0;
   $166 = ((($165)) + 8|0);
   $167 = HEAP32[$166>>2]|0;
   __THREW__ = 0;
   invoke_vii($167|0,($134|0),($146|0));
   $168 = __THREW__; __THREW__ = 0;
   $169 = $168&1;
   if ($169) {
    $302 = ___cxa_find_matching_catch_2()|0;
    $303 = tempRet0;
    $135 = $302;
    $136 = $303;
   } else {
    $123 = 13552;
    $124 = $134;
    $170 = $124;
    $171 = $123;
    __THREW__ = 0;
    $172 = (invoke_iiii(600,($170|0),0,($171|0))|0);
    $173 = __THREW__; __THREW__ = 0;
    $174 = $173&1;
    if ($174) {
     $304 = ___cxa_find_matching_catch_2()|0;
     $305 = tempRet0;
     $135 = $304;
     $136 = $305;
    } else {
     $122 = $172;
     $175 = $122;
     $120 = $133;
     $121 = $175;
     $176 = $120;
     $177 = $121;
     $119 = $177;
     $178 = $119;
     ;HEAP32[$176>>2]=HEAP32[$178>>2]|0;HEAP32[$176+4>>2]=HEAP32[$178+4>>2]|0;HEAP32[$176+8>>2]=HEAP32[$178+8>>2]|0;
     $179 = $121;
     $118 = $179;
     $180 = $118;
     $117 = $180;
     $181 = $117;
     $116 = $181;
     $182 = $116;
     $__a$i$i$i = $182;
     $__i$i$i$i = 0;
     while(1) {
      $183 = $__i$i$i$i;
      $184 = ($183>>>0)<(3);
      if (!($184)) {
       break;
      }
      $185 = $__i$i$i$i;
      $186 = $__a$i$i$i;
      $187 = (($186) + ($185<<2)|0);
      HEAP32[$187>>2] = 0;
      $188 = $__i$i$i$i;
      $189 = (($188) + 1)|0;
      $__i$i$i$i = $189;
     }
     $114 = $133;
     $115 = 13562;
     $190 = $114;
     $191 = $115;
     __THREW__ = 0;
     $192 = (invoke_iii(542,($190|0),($191|0))|0);
     $193 = __THREW__; __THREW__ = 0;
     $194 = $193&1;
     if ($194) {
      $306 = ___cxa_find_matching_catch_2()|0;
      $307 = tempRet0;
      $135 = $306;
      $136 = $307;
     } else {
      $113 = $192;
      $195 = $113;
      $111 = $132;
      $112 = $195;
      $196 = $111;
      $197 = $112;
      $110 = $197;
      $198 = $110;
      ;HEAP32[$196>>2]=HEAP32[$198>>2]|0;HEAP32[$196+4>>2]=HEAP32[$198+4>>2]|0;HEAP32[$196+8>>2]=HEAP32[$198+8>>2]|0;
      $199 = $112;
      $109 = $199;
      $200 = $109;
      $108 = $200;
      $201 = $108;
      $107 = $201;
      $202 = $107;
      $__a$i$i$i1 = $202;
      $__i$i$i$i2 = 0;
      while(1) {
       $203 = $__i$i$i$i2;
       $204 = ($203>>>0)<(3);
       if (!($204)) {
        break;
       }
       $205 = $__i$i$i$i2;
       $206 = $__a$i$i$i1;
       $207 = (($206) + ($205<<2)|0);
       HEAP32[$207>>2] = 0;
       $208 = $__i$i$i$i2;
       $209 = (($208) + 1)|0;
       $__i$i$i$i2 = $209;
      }
      $210 = ((($146)) + 4|0);
      $211 = HEAP32[$210>>2]|0;
      __THREW__ = 0;
      invoke_vii(663,($137|0),($211|0));
      $212 = __THREW__; __THREW__ = 0;
      $213 = $212&1;
      if ($213) {
       $308 = ___cxa_find_matching_catch_2()|0;
       $309 = tempRet0;
       $135 = $308;
       $136 = $309;
      } else {
       $105 = $132;
       $106 = $137;
       $214 = $105;
       $215 = $106;
       $103 = $214;
       $104 = $215;
       $216 = $103;
       $217 = $104;
       $102 = $217;
       $218 = $102;
       $101 = $218;
       $219 = $101;
       $100 = $219;
       $220 = $100;
       $99 = $220;
       $221 = $99;
       $98 = $221;
       $222 = $98;
       $223 = HEAP8[$222>>0]|0;
       $224 = $223&255;
       $225 = $224 & 1;
       $226 = ($225|0)!=(0);
       if ($226) {
        $92 = $219;
        $227 = $92;
        $91 = $227;
        $228 = $91;
        $90 = $228;
        $229 = $90;
        $230 = ((($229)) + 8|0);
        $231 = HEAP32[$230>>2]|0;
        $238 = $231;
       } else {
        $97 = $219;
        $232 = $97;
        $96 = $232;
        $233 = $96;
        $95 = $233;
        $234 = $95;
        $235 = ((($234)) + 1|0);
        $94 = $235;
        $236 = $94;
        $93 = $236;
        $237 = $93;
        $238 = $237;
       }
       $89 = $238;
       $239 = $89;
       $240 = $104;
       $88 = $240;
       $241 = $88;
       $87 = $241;
       $242 = $87;
       $86 = $242;
       $243 = $86;
       $85 = $243;
       $244 = $85;
       $245 = HEAP8[$244>>0]|0;
       $246 = $245&255;
       $247 = $246 & 1;
       $248 = ($247|0)!=(0);
       if ($248) {
        $81 = $241;
        $249 = $81;
        $80 = $249;
        $250 = $80;
        $79 = $250;
        $251 = $79;
        $252 = ((($251)) + 4|0);
        $253 = HEAP32[$252>>2]|0;
        $260 = $253;
       } else {
        $84 = $241;
        $254 = $84;
        $83 = $254;
        $255 = $83;
        $82 = $255;
        $256 = $82;
        $257 = HEAP8[$256>>0]|0;
        $258 = $257&255;
        $259 = $258 >> 1;
        $260 = $259;
       }
       __THREW__ = 0;
       $261 = (invoke_iiii(543,($216|0),($239|0),($260|0))|0);
       $262 = __THREW__; __THREW__ = 0;
       $263 = $262&1;
       if ($263) {
        $310 = ___cxa_find_matching_catch_2()|0;
        $311 = tempRet0;
        $135 = $310;
        $136 = $311;
       } else {
        $78 = $261;
        $264 = $78;
        $76 = $131;
        $77 = $264;
        $265 = $76;
        $266 = $77;
        $75 = $266;
        $267 = $75;
        ;HEAP32[$265>>2]=HEAP32[$267>>2]|0;HEAP32[$265+4>>2]=HEAP32[$267+4>>2]|0;HEAP32[$265+8>>2]=HEAP32[$267+8>>2]|0;
        $268 = $77;
        $74 = $268;
        $269 = $74;
        $73 = $269;
        $270 = $73;
        $72 = $270;
        $271 = $72;
        $__a$i$i$i4 = $271;
        $__i$i$i$i5 = 0;
        while(1) {
         $272 = $__i$i$i$i5;
         $273 = ($272>>>0)<(3);
         if (!($273)) {
          break;
         }
         $274 = $__i$i$i$i5;
         $275 = $__a$i$i$i4;
         $276 = (($275) + ($274<<2)|0);
         HEAP32[$276>>2] = 0;
         $277 = $__i$i$i$i5;
         $278 = (($277) + 1)|0;
         $__i$i$i$i5 = $278;
        }
        $70 = $131;
        $71 = 13570;
        $279 = $70;
        $280 = $71;
        __THREW__ = 0;
        $281 = (invoke_iii(542,($279|0),($280|0))|0);
        $282 = __THREW__; __THREW__ = 0;
        $283 = $282&1;
        if ($283) {
         $312 = ___cxa_find_matching_catch_2()|0;
         $313 = tempRet0;
         $135 = $312;
         $136 = $313;
        } else {
         $69 = $281;
         $284 = $69;
         $67 = $130;
         $68 = $284;
         $285 = $67;
         $286 = $68;
         $66 = $286;
         $287 = $66;
         ;HEAP32[$285>>2]=HEAP32[$287>>2]|0;HEAP32[$285+4>>2]=HEAP32[$287+4>>2]|0;HEAP32[$285+8>>2]=HEAP32[$287+8>>2]|0;
         $288 = $68;
         $65 = $288;
         $289 = $65;
         $64 = $289;
         $290 = $64;
         $63 = $290;
         $291 = $63;
         $__a$i$i$i7 = $291;
         $__i$i$i$i8 = 0;
         while(1) {
          $292 = $__i$i$i$i8;
          $293 = ($292>>>0)<(3);
          if (!($293)) {
           break;
          }
          $294 = $__i$i$i$i8;
          $295 = $__a$i$i$i7;
          $296 = (($295) + ($294<<2)|0);
          HEAP32[$296>>2] = 0;
          $297 = $__i$i$i$i8;
          $298 = (($297) + 1)|0;
          $__i$i$i$i8 = $298;
         }
         __THREW__ = 0;
         invoke_viii(601,($164|0),($130|0),0);
         $299 = __THREW__; __THREW__ = 0;
         $300 = $299&1;
         if (!($300)) {
          $$expand_i1_val2 = 0;
          HEAP8[$138>>0] = $$expand_i1_val2;
          __THREW__ = 0;
          invoke_viii(602,($164|0),(80|0),(603|0));
          $301 = __THREW__; __THREW__ = 0;
         }
         $314 = ___cxa_find_matching_catch_2()|0;
         $315 = tempRet0;
         $135 = $314;
         $136 = $315;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($131);
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($137);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($132);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($133);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
   }
   $$pre_trunc = HEAP8[$138>>0]|0;
   $316 = $$pre_trunc&1;
   if (!($316)) {
    $491 = $135;
    $492 = $136;
    ___resumeException($491|0);
    // unreachable;
   }
   ___cxa_free_exception(($164|0));
   $491 = $135;
   $492 = $136;
   ___resumeException($491|0);
   // unreachable;
  }
 }
 $317 = $128;
 $62 = $317;
 $318 = $62;
 $319 = ((($318)) + 4|0);
 $320 = HEAP32[$319>>2]|0;
 $321 = HEAP32[$318>>2]|0;
 $322 = $320;
 $323 = $321;
 $324 = (($322) - ($323))|0;
 $325 = (($324|0) / 4)&-1;
 $326 = ((($146)) + 8|0);
 $327 = HEAP32[$326>>2]|0;
 $328 = $327&255;
 $329 = $328&255;
 $330 = ($325>>>0)<($329>>>0);
 if (!($330)) {
  $484 = HEAP32[$146>>2]|0;
  $485 = ((($484)) + 12|0);
  $486 = HEAP32[$485>>2]|0;
  $487 = $128;
  $488 = $129;
  $489 = (FUNCTION_TABLE_iiii[$486 & 1023]($146,$487,$488)|0);
  HEAP32[$126>>2] = $489;
  $490 = HEAP32[$126>>2]|0;
  STACKTOP = sp;return ($490|0);
 }
 $331 = (___cxa_allocate_exception(24)|0);
 $$expand_i1_val5 = 1;
 HEAP8[$145>>0] = $$expand_i1_val5;
 $332 = HEAP32[$146>>2]|0;
 $333 = ((($332)) + 8|0);
 $334 = HEAP32[$333>>2]|0;
 __THREW__ = 0;
 invoke_vii($334|0,($143|0),($146|0));
 $335 = __THREW__; __THREW__ = 0;
 $336 = $335&1;
 if ($336) {
  $469 = ___cxa_find_matching_catch_2()|0;
  $470 = tempRet0;
  $135 = $469;
  $136 = $470;
 } else {
  $51 = 13552;
  $52 = $143;
  $337 = $52;
  $338 = $51;
  __THREW__ = 0;
  $339 = (invoke_iiii(600,($337|0),0,($338|0))|0);
  $340 = __THREW__; __THREW__ = 0;
  $341 = $340&1;
  if ($341) {
   $471 = ___cxa_find_matching_catch_2()|0;
   $472 = tempRet0;
   $135 = $471;
   $136 = $472;
  } else {
   $50 = $339;
   $342 = $50;
   $48 = $142;
   $49 = $342;
   $343 = $48;
   $344 = $49;
   $47 = $344;
   $345 = $47;
   ;HEAP32[$343>>2]=HEAP32[$345>>2]|0;HEAP32[$343+4>>2]=HEAP32[$345+4>>2]|0;HEAP32[$343+8>>2]=HEAP32[$345+8>>2]|0;
   $346 = $49;
   $46 = $346;
   $347 = $46;
   $45 = $347;
   $348 = $45;
   $44 = $348;
   $349 = $44;
   $__a$i$i$i15 = $349;
   $__i$i$i$i16 = 0;
   while(1) {
    $350 = $__i$i$i$i16;
    $351 = ($350>>>0)<(3);
    if (!($351)) {
     break;
    }
    $352 = $__i$i$i$i16;
    $353 = $__a$i$i$i15;
    $354 = (($353) + ($352<<2)|0);
    HEAP32[$354>>2] = 0;
    $355 = $__i$i$i$i16;
    $356 = (($355) + 1)|0;
    $__i$i$i$i16 = $356;
   }
   $42 = $142;
   $43 = 13582;
   $357 = $42;
   $358 = $43;
   __THREW__ = 0;
   $359 = (invoke_iii(542,($357|0),($358|0))|0);
   $360 = __THREW__; __THREW__ = 0;
   $361 = $360&1;
   if ($361) {
    $473 = ___cxa_find_matching_catch_2()|0;
    $474 = tempRet0;
    $135 = $473;
    $136 = $474;
   } else {
    $41 = $359;
    $362 = $41;
    $39 = $141;
    $40 = $362;
    $363 = $39;
    $364 = $40;
    $38 = $364;
    $365 = $38;
    ;HEAP32[$363>>2]=HEAP32[$365>>2]|0;HEAP32[$363+4>>2]=HEAP32[$365+4>>2]|0;HEAP32[$363+8>>2]=HEAP32[$365+8>>2]|0;
    $366 = $40;
    $37 = $366;
    $367 = $37;
    $36 = $367;
    $368 = $36;
    $35 = $368;
    $369 = $35;
    $__a$i$i$i19 = $369;
    $__i$i$i$i20 = 0;
    while(1) {
     $370 = $__i$i$i$i20;
     $371 = ($370>>>0)<(3);
     if (!($371)) {
      break;
     }
     $372 = $__i$i$i$i20;
     $373 = $__a$i$i$i19;
     $374 = (($373) + ($372<<2)|0);
     HEAP32[$374>>2] = 0;
     $375 = $__i$i$i$i20;
     $376 = (($375) + 1)|0;
     $__i$i$i$i20 = $376;
    }
    $377 = ((($146)) + 8|0);
    $378 = HEAP32[$377>>2]|0;
    __THREW__ = 0;
    invoke_vii(663,($144|0),($378|0));
    $379 = __THREW__; __THREW__ = 0;
    $380 = $379&1;
    if ($380) {
     $475 = ___cxa_find_matching_catch_2()|0;
     $476 = tempRet0;
     $135 = $475;
     $136 = $476;
    } else {
     $33 = $141;
     $34 = $144;
     $381 = $33;
     $382 = $34;
     $31 = $381;
     $32 = $382;
     $383 = $31;
     $384 = $32;
     $30 = $384;
     $385 = $30;
     $29 = $385;
     $386 = $29;
     $28 = $386;
     $387 = $28;
     $27 = $387;
     $388 = $27;
     $26 = $388;
     $389 = $26;
     $390 = HEAP8[$389>>0]|0;
     $391 = $390&255;
     $392 = $391 & 1;
     $393 = ($392|0)!=(0);
     if ($393) {
      $20 = $386;
      $394 = $20;
      $19 = $394;
      $395 = $19;
      $18 = $395;
      $396 = $18;
      $397 = ((($396)) + 8|0);
      $398 = HEAP32[$397>>2]|0;
      $405 = $398;
     } else {
      $25 = $386;
      $399 = $25;
      $24 = $399;
      $400 = $24;
      $23 = $400;
      $401 = $23;
      $402 = ((($401)) + 1|0);
      $22 = $402;
      $403 = $22;
      $21 = $403;
      $404 = $21;
      $405 = $404;
     }
     $17 = $405;
     $406 = $17;
     $407 = $32;
     $16 = $407;
     $408 = $16;
     $15 = $408;
     $409 = $15;
     $14 = $409;
     $410 = $14;
     $13 = $410;
     $411 = $13;
     $412 = HEAP8[$411>>0]|0;
     $413 = $412&255;
     $414 = $413 & 1;
     $415 = ($414|0)!=(0);
     if ($415) {
      $9 = $408;
      $416 = $9;
      $8 = $416;
      $417 = $8;
      $7 = $417;
      $418 = $7;
      $419 = ((($418)) + 4|0);
      $420 = HEAP32[$419>>2]|0;
      $427 = $420;
     } else {
      $12 = $408;
      $421 = $12;
      $11 = $421;
      $422 = $11;
      $10 = $422;
      $423 = $10;
      $424 = HEAP8[$423>>0]|0;
      $425 = $424&255;
      $426 = $425 >> 1;
      $427 = $426;
     }
     __THREW__ = 0;
     $428 = (invoke_iiii(543,($383|0),($406|0),($427|0))|0);
     $429 = __THREW__; __THREW__ = 0;
     $430 = $429&1;
     if ($430) {
      $477 = ___cxa_find_matching_catch_2()|0;
      $478 = tempRet0;
      $135 = $477;
      $136 = $478;
     } else {
      $6 = $428;
      $431 = $6;
      $4 = $140;
      $5 = $431;
      $432 = $4;
      $433 = $5;
      $3 = $433;
      $434 = $3;
      ;HEAP32[$432>>2]=HEAP32[$434>>2]|0;HEAP32[$432+4>>2]=HEAP32[$434+4>>2]|0;HEAP32[$432+8>>2]=HEAP32[$434+8>>2]|0;
      $435 = $5;
      $2 = $435;
      $436 = $2;
      $1 = $436;
      $437 = $1;
      $0 = $437;
      $438 = $0;
      $__a$i$i$i23 = $438;
      $__i$i$i$i24 = 0;
      while(1) {
       $439 = $__i$i$i$i24;
       $440 = ($439>>>0)<(3);
       if (!($440)) {
        break;
       }
       $441 = $__i$i$i$i24;
       $442 = $__a$i$i$i23;
       $443 = (($442) + ($441<<2)|0);
       HEAP32[$443>>2] = 0;
       $444 = $__i$i$i$i24;
       $445 = (($444) + 1)|0;
       $__i$i$i$i24 = $445;
      }
      $60 = $140;
      $61 = 13570;
      $446 = $60;
      $447 = $61;
      __THREW__ = 0;
      $448 = (invoke_iii(542,($446|0),($447|0))|0);
      $449 = __THREW__; __THREW__ = 0;
      $450 = $449&1;
      if ($450) {
       $479 = ___cxa_find_matching_catch_2()|0;
       $480 = tempRet0;
       $135 = $479;
       $136 = $480;
      } else {
       $59 = $448;
       $451 = $59;
       $57 = $139;
       $58 = $451;
       $452 = $57;
       $453 = $58;
       $56 = $453;
       $454 = $56;
       ;HEAP32[$452>>2]=HEAP32[$454>>2]|0;HEAP32[$452+4>>2]=HEAP32[$454+4>>2]|0;HEAP32[$452+8>>2]=HEAP32[$454+8>>2]|0;
       $455 = $58;
       $55 = $455;
       $456 = $55;
       $54 = $456;
       $457 = $54;
       $53 = $457;
       $458 = $53;
       $__a$i$i$i11 = $458;
       $__i$i$i$i12 = 0;
       while(1) {
        $459 = $__i$i$i$i12;
        $460 = ($459>>>0)<(3);
        if (!($460)) {
         break;
        }
        $461 = $__i$i$i$i12;
        $462 = $__a$i$i$i11;
        $463 = (($462) + ($461<<2)|0);
        HEAP32[$463>>2] = 0;
        $464 = $__i$i$i$i12;
        $465 = (($464) + 1)|0;
        $__i$i$i$i12 = $465;
       }
       __THREW__ = 0;
       invoke_viii(601,($331|0),($139|0),0);
       $466 = __THREW__; __THREW__ = 0;
       $467 = $466&1;
       if (!($467)) {
        $$expand_i1_val7 = 0;
        HEAP8[$145>>0] = $$expand_i1_val7;
        __THREW__ = 0;
        invoke_viii(602,($331|0),(80|0),(603|0));
        $468 = __THREW__; __THREW__ = 0;
       }
       $481 = ___cxa_find_matching_catch_2()|0;
       $482 = tempRet0;
       $135 = $481;
       $136 = $482;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($139);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($140);
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($144);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($141);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($142);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($143);
 }
 $$pre_trunc9 = HEAP8[$145>>0]|0;
 $483 = $$pre_trunc9&1;
 if (!($483)) {
  $491 = $135;
  $492 = $136;
  ___resumeException($491|0);
  // unreachable;
 }
 ___cxa_free_exception(($331|0));
 $491 = $135;
 $492 = $136;
 ___resumeException($491|0);
 // unreachable;
 return (0)|0;
}
function __ZN5ValueC2EP4Data($this,$data) {
 $this = $this|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $data;
 $2 = $0;
 $3 = $1;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $10 = 0;
  HEAP32[$2>>2] = $10;
  STACKTOP = sp;return;
 }
 $5 = $1;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (FUNCTION_TABLE_ii[$8 & 1023]($5)|0);
 $10 = $9;
 HEAP32[$2>>2] = $10;
 STACKTOP = sp;return;
}
function __GLOBAL__sub_I_message_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function ___cxx_global_var_init() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $15 = 20776;
 $13 = 20776;
 $14 = 13604;
 $18 = $13;
 $12 = $18;
 $19 = $12;
 $11 = $19;
 $20 = $11;
 $10 = $20;
 $21 = $14;
 $22 = $14;
 __THREW__ = 0;
 $23 = (invoke_ii(550,($22|0))|0);
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if (!($25)) {
  __THREW__ = 0;
  invoke_viii(551,($18|0),($21|0),($23|0));
  $26 = __THREW__; __THREW__ = 0;
  $27 = $26&1;
  if (!($27)) {
   $15 = (20788);
   $8 = (20788);
   $9 = 13610;
   $28 = $8;
   $7 = $28;
   $29 = $7;
   $6 = $29;
   $30 = $6;
   $5 = $30;
   $31 = $9;
   $32 = $9;
   __THREW__ = 0;
   $33 = (invoke_ii(550,($32|0))|0);
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if (!($35)) {
    __THREW__ = 0;
    invoke_viii(551,($28|0),($31|0),($33|0));
    $36 = __THREW__; __THREW__ = 0;
    $37 = $36&1;
    if (!($37)) {
     $15 = (20800);
     $3 = (20800);
     $4 = 13615;
     $38 = $3;
     $2 = $38;
     $39 = $2;
     $1 = $39;
     $40 = $1;
     $0 = $40;
     $41 = $4;
     $42 = $4;
     __THREW__ = 0;
     $43 = (invoke_ii(550,($42|0))|0);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if (!($45)) {
      __THREW__ = 0;
      invoke_viii(551,($38|0),($41|0),($43|0));
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if (!($47)) {
       (___cxa_atexit((664|0),(0|0),(___dso_handle|0))|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $48 = ___cxa_find_matching_catch_2()|0;
 $49 = tempRet0;
 $16 = $48;
 $17 = $49;
 $50 = $15;
 $51 = (20776|0)==($50|0);
 if ($51) {
  $55 = $16;
  $56 = $17;
  ___resumeException($55|0);
  // unreachable;
 } else {
  $53 = $50;
 }
 while(1) {
  $52 = ((($53)) + -12|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
  $54 = ($52|0)==(20776|0);
  if ($54) {
   break;
  } else {
   $53 = $52;
  }
 }
 $55 = $16;
 $56 = $17;
 ___resumeException($55|0);
 // unreachable;
}
function ___cxx_global_array_dtor($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $0;
 $3 = (20812);
 while(1) {
  $2 = ((($3)) + -12|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $4 = ($2|0)==(20776|0);
  if ($4) {
   break;
  } else {
   $3 = $2;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7MessageC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE3PosNS_11MessageTypeE($this,$str,$pos,$messageType) {
 $this = $this|0;
 $str = $str|0;
 $pos = $pos|0;
 $messageType = $messageType|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = $this;
 $8 = $messageType;
 $11 = $7;
 $12 = ((($11)) + 4|0);
 $6 = $12;
 $13 = $6;
 $5 = $13;
 $14 = $5;
 $4 = $14;
 $15 = $4;
 $3 = $15;
 $2 = $13;
 $16 = $2;
 $1 = $16;
 $17 = $1;
 $0 = $17;
 $18 = $0;
 $__a$i$i = $18;
 $__i$i$i = 0;
 while(1) {
  $19 = $__i$i$i;
  $20 = ($19>>>0)<(3);
  if (!($20)) {
   break;
  }
  $21 = $__i$i$i;
  $22 = $__a$i$i;
  $23 = (($22) + ($21<<2)|0);
  HEAP32[$23>>2] = 0;
  $24 = $__i$i$i;
  $25 = (($24) + 1)|0;
  $__i$i$i = $25;
 }
 $26 = ((($11)) + 16|0);
 __THREW__ = 0;
 invoke_vi(665,($26|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if (!($28)) {
  $29 = $8;
  HEAP32[$11>>2] = $29;
  $30 = ((($11)) + 4|0);
  __THREW__ = 0;
  (invoke_iii(648,($30|0),($str|0))|0);
  $31 = __THREW__; __THREW__ = 0;
  $32 = $31&1;
  if (!($32)) {
   $33 = ((($11)) + 16|0);
   ;HEAP32[$33>>2]=HEAP32[$pos>>2]|0;HEAP32[$33+4>>2]=HEAP32[$pos+4>>2]|0;
   STACKTOP = sp;return;
  }
 }
 $34 = ___cxa_find_matching_catch_2()|0;
 $35 = tempRet0;
 $9 = $34;
 $10 = $35;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 $36 = $9;
 $37 = $10;
 ___resumeException($36|0);
 // unreachable;
}
function __ZN7MessageC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_11MessageTypeE($this,$str,$messageType) {
 $this = $this|0;
 $str = $str|0;
 $messageType = $messageType|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a$i$i = 0, $__i$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $7 = $this;
 $8 = $messageType;
 $11 = $7;
 $12 = ((($11)) + 4|0);
 $6 = $12;
 $13 = $6;
 $5 = $13;
 $14 = $5;
 $4 = $14;
 $15 = $4;
 $3 = $15;
 $2 = $13;
 $16 = $2;
 $1 = $16;
 $17 = $1;
 $0 = $17;
 $18 = $0;
 $__a$i$i = $18;
 $__i$i$i = 0;
 while(1) {
  $19 = $__i$i$i;
  $20 = ($19>>>0)<(3);
  if (!($20)) {
   break;
  }
  $21 = $__i$i$i;
  $22 = $__a$i$i;
  $23 = (($22) + ($21<<2)|0);
  HEAP32[$23>>2] = 0;
  $24 = $__i$i$i;
  $25 = (($24) + 1)|0;
  $__i$i$i = $25;
 }
 $26 = ((($11)) + 16|0);
 __THREW__ = 0;
 invoke_vi(665,($26|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if (!($28)) {
  $29 = $8;
  HEAP32[$11>>2] = $29;
  $30 = ((($11)) + 4|0);
  __THREW__ = 0;
  (invoke_iii(648,($30|0),($str|0))|0);
  $31 = __THREW__; __THREW__ = 0;
  $32 = $31&1;
  if (!($32)) {
   STACKTOP = sp;return;
  }
 }
 $33 = ___cxa_find_matching_catch_2()|0;
 $34 = tempRet0;
 $9 = $33;
 $10 = $34;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 $35 = $9;
 $36 = $10;
 ___resumeException($35|0);
 // unreachable;
}
function __ZN7Message8toStringEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$i$i$i = 0, $__a$i$i$i1 = 0, $__a$i$i$i4 = 0, $__i$i$i$i = 0, $__i$i$i$i2 = 0, $__i$i$i$i5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $80 = sp + 44|0;
 $81 = sp + 32|0;
 $82 = sp + 20|0;
 $85 = sp;
 $79 = $this;
 $86 = $79;
 $87 = HEAP32[$86>>2]|0;
 $88 = (20776 + (($87*12)|0)|0);
 __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_($82,13623,$88);
 $77 = $82;
 $78 = 13625;
 $89 = $77;
 $90 = $78;
 __THREW__ = 0;
 $91 = (invoke_iii(542,($89|0),($90|0))|0);
 $92 = __THREW__; __THREW__ = 0;
 $93 = $92&1;
 if ($93) {
  $243 = ___cxa_find_matching_catch_2()|0;
  $244 = tempRet0;
  $83 = $243;
  $84 = $244;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
  $251 = $83;
  $252 = $84;
  ___resumeException($251|0);
  // unreachable;
 }
 $76 = $91;
 $94 = $76;
 $74 = $81;
 $75 = $94;
 $95 = $74;
 $96 = $75;
 $73 = $96;
 $97 = $73;
 ;HEAP32[$95>>2]=HEAP32[$97>>2]|0;HEAP32[$95+4>>2]=HEAP32[$97+4>>2]|0;HEAP32[$95+8>>2]=HEAP32[$97+8>>2]|0;
 $98 = $75;
 $72 = $98;
 $99 = $72;
 $71 = $99;
 $100 = $71;
 $70 = $100;
 $101 = $70;
 $__a$i$i$i = $101;
 $__i$i$i$i = 0;
 while(1) {
  $102 = $__i$i$i$i;
  $103 = ($102>>>0)<(3);
  if (!($103)) {
   break;
  }
  $104 = $__i$i$i$i;
  $105 = $__a$i$i$i;
  $106 = (($105) + ($104<<2)|0);
  HEAP32[$106>>2] = 0;
  $107 = $__i$i$i$i;
  $108 = (($107) + 1)|0;
  $__i$i$i$i = $108;
 }
 $109 = ((($86)) + 4|0);
 $68 = $81;
 $69 = $109;
 $110 = $68;
 $111 = $69;
 $66 = $110;
 $67 = $111;
 $112 = $66;
 $113 = $67;
 $65 = $113;
 $114 = $65;
 $64 = $114;
 $115 = $64;
 $63 = $115;
 $116 = $63;
 $62 = $116;
 $117 = $62;
 $61 = $117;
 $118 = $61;
 $119 = HEAP8[$118>>0]|0;
 $120 = $119&255;
 $121 = $120 & 1;
 $122 = ($121|0)!=(0);
 if ($122) {
  $55 = $115;
  $123 = $55;
  $54 = $123;
  $124 = $54;
  $53 = $124;
  $125 = $53;
  $126 = ((($125)) + 8|0);
  $127 = HEAP32[$126>>2]|0;
  $134 = $127;
 } else {
  $60 = $115;
  $128 = $60;
  $59 = $128;
  $129 = $59;
  $58 = $129;
  $130 = $58;
  $131 = ((($130)) + 1|0);
  $57 = $131;
  $132 = $57;
  $56 = $132;
  $133 = $56;
  $134 = $133;
 }
 $52 = $134;
 $135 = $52;
 $136 = $67;
 $51 = $136;
 $137 = $51;
 $50 = $137;
 $138 = $50;
 $49 = $138;
 $139 = $49;
 $48 = $139;
 $140 = $48;
 $141 = HEAP8[$140>>0]|0;
 $142 = $141&255;
 $143 = $142 & 1;
 $144 = ($143|0)!=(0);
 if ($144) {
  $44 = $137;
  $145 = $44;
  $43 = $145;
  $146 = $43;
  $42 = $146;
  $147 = $42;
  $148 = ((($147)) + 4|0);
  $149 = HEAP32[$148>>2]|0;
  $156 = $149;
 } else {
  $47 = $137;
  $150 = $47;
  $46 = $150;
  $151 = $46;
  $45 = $151;
  $152 = $45;
  $153 = HEAP8[$152>>0]|0;
  $154 = $153&255;
  $155 = $154 >> 1;
  $156 = $155;
 }
 __THREW__ = 0;
 $157 = (invoke_iiii(543,($112|0),($135|0),($156|0))|0);
 $158 = __THREW__; __THREW__ = 0;
 $159 = $158&1;
 if ($159) {
  $245 = ___cxa_find_matching_catch_2()|0;
  $246 = tempRet0;
  $83 = $245;
  $84 = $246;
 } else {
  $41 = $157;
  $160 = $41;
  $39 = $80;
  $40 = $160;
  $161 = $39;
  $162 = $40;
  $38 = $162;
  $163 = $38;
  ;HEAP32[$161>>2]=HEAP32[$163>>2]|0;HEAP32[$161+4>>2]=HEAP32[$163+4>>2]|0;HEAP32[$161+8>>2]=HEAP32[$163+8>>2]|0;
  $164 = $40;
  $37 = $164;
  $165 = $37;
  $36 = $165;
  $166 = $36;
  $35 = $166;
  $167 = $35;
  $__a$i$i$i1 = $167;
  $__i$i$i$i2 = 0;
  while(1) {
   $168 = $__i$i$i$i2;
   $169 = ($168>>>0)<(3);
   if (!($169)) {
    break;
   }
   $170 = $__i$i$i$i2;
   $171 = $__a$i$i$i1;
   $172 = (($171) + ($170<<2)|0);
   HEAP32[$172>>2] = 0;
   $173 = $__i$i$i$i2;
   $174 = (($173) + 1)|0;
   $__i$i$i$i2 = $174;
  }
  $175 = ((($86)) + 16|0);
  __THREW__ = 0;
  invoke_vii(666,($85|0),($175|0));
  $176 = __THREW__; __THREW__ = 0;
  $177 = $176&1;
  do {
   if ($177) {
    $247 = ___cxa_find_matching_catch_2()|0;
    $248 = tempRet0;
    $83 = $247;
    $84 = $248;
   } else {
    $33 = $80;
    $34 = $85;
    $178 = $33;
    $179 = $34;
    $31 = $178;
    $32 = $179;
    $180 = $31;
    $181 = $32;
    $30 = $181;
    $182 = $30;
    $29 = $182;
    $183 = $29;
    $28 = $183;
    $184 = $28;
    $27 = $184;
    $185 = $27;
    $26 = $185;
    $186 = $26;
    $187 = HEAP8[$186>>0]|0;
    $188 = $187&255;
    $189 = $188 & 1;
    $190 = ($189|0)!=(0);
    if ($190) {
     $20 = $183;
     $191 = $20;
     $19 = $191;
     $192 = $19;
     $18 = $192;
     $193 = $18;
     $194 = ((($193)) + 8|0);
     $195 = HEAP32[$194>>2]|0;
     $202 = $195;
    } else {
     $25 = $183;
     $196 = $25;
     $24 = $196;
     $197 = $24;
     $23 = $197;
     $198 = $23;
     $199 = ((($198)) + 1|0);
     $22 = $199;
     $200 = $22;
     $21 = $200;
     $201 = $21;
     $202 = $201;
    }
    $17 = $202;
    $203 = $17;
    $204 = $32;
    $16 = $204;
    $205 = $16;
    $15 = $205;
    $206 = $15;
    $14 = $206;
    $207 = $14;
    $13 = $207;
    $208 = $13;
    $209 = HEAP8[$208>>0]|0;
    $210 = $209&255;
    $211 = $210 & 1;
    $212 = ($211|0)!=(0);
    if ($212) {
     $9 = $205;
     $213 = $9;
     $8 = $213;
     $214 = $8;
     $7 = $214;
     $215 = $7;
     $216 = ((($215)) + 4|0);
     $217 = HEAP32[$216>>2]|0;
     $224 = $217;
    } else {
     $12 = $205;
     $218 = $12;
     $11 = $218;
     $219 = $11;
     $10 = $219;
     $220 = $10;
     $221 = HEAP8[$220>>0]|0;
     $222 = $221&255;
     $223 = $222 >> 1;
     $224 = $223;
    }
    __THREW__ = 0;
    $225 = (invoke_iiii(543,($180|0),($203|0),($224|0))|0);
    $226 = __THREW__; __THREW__ = 0;
    $227 = $226&1;
    if ($227) {
     $249 = ___cxa_find_matching_catch_2()|0;
     $250 = tempRet0;
     $83 = $249;
     $84 = $250;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($85);
     break;
    }
    $6 = $225;
    $228 = $6;
    $4 = $agg$result;
    $5 = $228;
    $229 = $4;
    $230 = $5;
    $3 = $230;
    $231 = $3;
    ;HEAP32[$229>>2]=HEAP32[$231>>2]|0;HEAP32[$229+4>>2]=HEAP32[$231+4>>2]|0;HEAP32[$229+8>>2]=HEAP32[$231+8>>2]|0;
    $232 = $5;
    $2 = $232;
    $233 = $2;
    $1 = $233;
    $234 = $1;
    $0 = $234;
    $235 = $0;
    $__a$i$i$i4 = $235;
    $__i$i$i$i5 = 0;
    while(1) {
     $236 = $__i$i$i$i5;
     $237 = ($236>>>0)<(3);
     if (!($237)) {
      break;
     }
     $238 = $__i$i$i$i5;
     $239 = $__a$i$i$i4;
     $240 = (($239) + ($238<<2)|0);
     HEAP32[$240>>2] = 0;
     $241 = $__i$i$i$i5;
     $242 = (($241) + 1)|0;
     $__i$i$i$i5 = $242;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($85);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
    STACKTOP = sp;return;
   }
  } while(0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
 $251 = $83;
 $252 = $84;
 ___resumeException($251|0);
 // unreachable;
}
function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i = 0, $lispExecuter = 0, $lispStr = 0, $messages = 0, $str = 0, $variables = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 308|0;
 $13 = sp + 260|0;
 $16 = sp + 248|0;
 $20 = sp + 232|0;
 $23 = sp + 220|0;
 $38 = sp + 168|0;
 $variables = sp + 120|0;
 $str = sp + 316|0;
 $lispStr = sp + 80|0;
 $49 = sp + 68|0;
 $messages = sp + 56|0;
 $i = sp + 52|0;
 $50 = sp + 48|0;
 $51 = sp + 44|0;
 $52 = sp + 32|0;
 $53 = sp + 28|0;
 $lispExecuter = sp;
 $44 = 0;
 $45 = $argc;
 $46 = $argv;
 __ZN6MemoryC2EPS_($variables,0);
 L1: while(1) {
  $41 = 21364;
  $42 = $str;
  $43 = 100;
  $54 = $41;
  $55 = $42;
  $56 = $43;
  $57 = HEAP32[$54>>2]|0;
  $58 = ((($57)) + -12|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (($54) + ($59)|0);
  $36 = $60;
  $37 = 10;
  $61 = $36;
  __THREW__ = 0;
  $62 = (invoke_ii(607,($61|0))|0);
  $63 = __THREW__; __THREW__ = 0;
  $64 = $63&1;
  if ($64) {
   label = 8;
   break;
  }
  HEAP32[$38>>2] = $62;
  $35 = $38;
  $65 = $35;
  __THREW__ = 0;
  $66 = (invoke_iii(608,($65|0),(22416|0))|0);
  $67 = __THREW__; __THREW__ = 0;
  $68 = $67&1;
  if ($68) {
   label = 5;
   break;
  }
  $69 = $37;
  $33 = $66;
  $34 = $69;
  $70 = $33;
  $71 = HEAP32[$70>>2]|0;
  $72 = ((($71)) + 28|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = $34;
  __THREW__ = 0;
  $75 = (invoke_iii($73|0,($70|0),($74|0))|0);
  $76 = __THREW__; __THREW__ = 0;
  $77 = $76&1;
  if ($77) {
   label = 5;
   break;
  }
  __ZNSt3__16localeD2Ev($38);
  __THREW__ = 0;
  (invoke_iiiii(667,($54|0),($55|0),($56|0),($75|0))|0);
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   label = 8;
   break;
  }
  $84 = HEAP8[$str>>0]|0;
  $85 = $84 << 24 >> 24;
  $86 = ($85|0)==(0);
  if ($86) {
   continue;
  }
  $31 = $49;
  $32 = $str;
  $89 = $31;
  $30 = $89;
  $90 = $30;
  $29 = $90;
  $91 = $29;
  $28 = $91;
  $92 = $32;
  $93 = $32;
  __THREW__ = 0;
  $94 = (invoke_ii(550,($93|0))|0);
  $95 = __THREW__; __THREW__ = 0;
  $96 = $95&1;
  if ($96) {
   label = 8;
   break;
  }
  __THREW__ = 0;
  invoke_viii(551,($89|0),($92|0),($94|0));
  $97 = __THREW__; __THREW__ = 0;
  $98 = $97&1;
  if ($98) {
   label = 8;
   break;
  }
  __THREW__ = 0;
  invoke_vii(636,($lispStr|0),($49|0));
  $99 = __THREW__; __THREW__ = 0;
  $100 = $99&1;
  if ($100) {
   label = 24;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
  __THREW__ = 0;
  $101 = (invoke_ii(668,($lispStr|0))|0);
  $102 = __THREW__; __THREW__ = 0;
  $103 = $102&1;
  if ($103) {
   label = 25;
   break;
  }
  if (!($101)) {
   __THREW__ = 0;
   $104 = (invoke_iii(669,(21452|0),(13628|0))|0);
   $105 = __THREW__; __THREW__ = 0;
   $106 = $105&1;
   if ($106) {
    label = 25;
    break;
   }
   $26 = $104;
   $27 = 590;
   $107 = $26;
   $108 = $27;
   __THREW__ = 0;
   (invoke_ii($108|0,($107|0))|0);
   $109 = __THREW__; __THREW__ = 0;
   $110 = $109&1;
   if ($110) {
    label = 25;
    break;
   }
   __THREW__ = 0;
   $111 = (invoke_ii(670,($lispStr|0))|0);
   $112 = __THREW__; __THREW__ = 0;
   $113 = $112&1;
   if ($113) {
    label = 25;
    break;
   }
   __THREW__ = 0;
   invoke_vii(671,($messages|0),($111|0));
   $114 = __THREW__; __THREW__ = 0;
   $115 = $114&1;
   if ($115) {
    label = 25;
    break;
   }
   $25 = $i;
   $116 = $25;
   HEAP32[$116>>2] = 0;
   $24 = $messages;
   $117 = $24;
   $118 = HEAP32[$117>>2]|0;
   $21 = $117;
   $22 = $118;
   $119 = $22;
   $18 = $20;
   $19 = $119;
   $120 = $18;
   $121 = $19;
   HEAP32[$120>>2] = $121;
   $122 = HEAP32[$20>>2]|0;
   HEAP32[$23>>2] = $122;
   $123 = HEAP32[$23>>2]|0;
   HEAP32[$50>>2] = $123;
   ;HEAP32[$i>>2]=HEAP32[$50>>2]|0;
   while(1) {
    $17 = $messages;
    $124 = $17;
    $125 = ((($124)) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $14 = $124;
    $15 = $126;
    $127 = $15;
    $11 = $13;
    $12 = $127;
    $128 = $11;
    $129 = $12;
    HEAP32[$128>>2] = $129;
    $130 = HEAP32[$13>>2]|0;
    HEAP32[$16>>2] = $130;
    $131 = HEAP32[$16>>2]|0;
    HEAP32[$51>>2] = $131;
    $9 = $i;
    $10 = $51;
    $132 = $9;
    $133 = $10;
    $7 = $132;
    $8 = $133;
    $134 = $7;
    $6 = $134;
    $135 = $6;
    $136 = HEAP32[$135>>2]|0;
    $137 = $8;
    $5 = $137;
    $138 = $5;
    $139 = HEAP32[$138>>2]|0;
    $140 = ($136|0)==($139|0);
    $141 = $140 ^ 1;
    if (!($141)) {
     break;
    }
    $4 = $i;
    $142 = $4;
    $143 = HEAP32[$142>>2]|0;
    __THREW__ = 0;
    invoke_vii(592,($52|0),($143|0));
    $144 = __THREW__; __THREW__ = 0;
    $145 = $144&1;
    if ($145) {
     label = 26;
     break L1;
    }
    __THREW__ = 0;
    (invoke_iii(589,(21452|0),($52|0))|0);
    $146 = __THREW__; __THREW__ = 0;
    $147 = $146&1;
    if ($147) {
     label = 27;
     break L1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    $2 = $i;
    $3 = 0;
    $148 = $2;
    ;HEAP32[$1>>2]=HEAP32[$148>>2]|0;
    $0 = $148;
    $149 = $0;
    $150 = HEAP32[$149>>2]|0;
    $151 = ((($150)) + 24|0);
    HEAP32[$149>>2] = $151;
    $152 = HEAP32[$1>>2]|0;
    HEAP32[$53>>2] = $152;
   }
   __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEED2Ev($messages);
  }
  __THREW__ = 0;
  invoke_viiiii(672,($lispExecuter|0),($lispStr|0),(21452|0),(21452|0),(21364|0));
  $161 = __THREW__; __THREW__ = 0;
  $162 = $161&1;
  if ($162) {
   label = 25;
   break;
  }
  __THREW__ = 0;
  invoke_vii(673,($lispExecuter|0),($variables|0));
  $163 = __THREW__; __THREW__ = 0;
  $164 = $163&1;
  if ($164) {
   label = 25;
   break;
  }
  __ZN10LispStringD2Ev($lispStr);
 }
 if ((label|0) == 5) {
  $78 = ___cxa_find_matching_catch_2()|0;
  $79 = tempRet0;
  $39 = $78;
  $40 = $79;
  __ZNSt3__16localeD2Ev($38);
  $80 = $39;
  $81 = $40;
  $eh$lpad$body$index2Z2D = $81;$eh$lpad$body$indexZ2D = $80;
  label = 9;
 }
 else if ((label|0) == 8) {
  $87 = ___cxa_find_matching_catch_2()|0;
  $88 = tempRet0;
  $eh$lpad$body$index2Z2D = $88;$eh$lpad$body$indexZ2D = $87;
  label = 9;
 }
 else if ((label|0) == 24) {
  $153 = ___cxa_find_matching_catch_2()|0;
  $154 = tempRet0;
  $47 = $153;
  $48 = $154;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
  __ZN6MemoryD2Ev($variables);
  $165 = $47;
  $166 = $48;
  ___resumeException($165|0);
  // unreachable;
 }
 else if ((label|0) == 25) {
  $155 = ___cxa_find_matching_catch_2()|0;
  $156 = tempRet0;
  $47 = $155;
  $48 = $156;
 }
 else if ((label|0) == 26) {
  $157 = ___cxa_find_matching_catch_2()|0;
  $158 = tempRet0;
  $47 = $157;
  $48 = $158;
  label = 29;
 }
 else if ((label|0) == 27) {
  $159 = ___cxa_find_matching_catch_2()|0;
  $160 = tempRet0;
  $47 = $159;
  $48 = $160;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
  label = 29;
 }
 if ((label|0) == 9) {
  $47 = $eh$lpad$body$indexZ2D;
  $48 = $eh$lpad$body$index2Z2D;
  __ZN6MemoryD2Ev($variables);
  $165 = $47;
  $166 = $48;
  ___resumeException($165|0);
  // unreachable;
 }
 else if ((label|0) == 29) {
  __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEED2Ev($messages);
 }
 __ZN10LispStringD2Ev($lispStr);
 __ZN6MemoryD2Ev($variables);
 $165 = $47;
 $166 = $48;
 ___resumeException($165|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($__os,$__str) {
 $__os = $__os|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $__os;
 $1 = $__str;
 $2 = $0;
 $3 = $1;
 $4 = $1;
 $5 = (__ZNSt3__111char_traitsIcE6lengthEPKc($4)|0);
 $6 = (__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($2,$3,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNK10LispString11getMessagesEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $this;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEEC2ERKS4_($this,$__x) {
 $this = $this|0;
 $__x = $__x|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $__n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $5 = sp + 84|0;
 $6 = sp + 16|0;
 $9 = sp + 72|0;
 $10 = sp + 111|0;
 $11 = sp + 8|0;
 $15 = sp + 110|0;
 $17 = sp;
 $19 = sp + 109|0;
 $25 = sp + 108|0;
 $23 = $this;
 $24 = $__x;
 $28 = $23;
 $29 = $24;
 $22 = $29;
 $30 = $22;
 $31 = ((($30)) + 8|0);
 $21 = $31;
 $32 = $21;
 $20 = $32;
 $33 = $20;
 $18 = $33;
 $34 = $18;
 ;HEAP8[$17>>0]=HEAP8[$19>>0]|0;
 $16 = $34;
 $13 = $28;
 $14 = $25;
 $35 = $13;
 $12 = $35;
 HEAP32[$35>>2] = 0;
 $36 = ((($35)) + 4|0);
 HEAP32[$36>>2] = 0;
 $37 = ((($35)) + 8|0);
 ;HEAP8[$11>>0]=HEAP8[$15>>0]|0;
 $8 = $37;
 HEAP32[$9>>2] = 0;
 $38 = $8;
 $7 = $9;
 $39 = $7;
 $40 = HEAP32[$39>>2]|0;
 $1 = $11;
 ;HEAP8[$6>>0]=HEAP8[$10>>0]|0;
 $4 = $38;
 HEAP32[$5>>2] = $40;
 $41 = $4;
 $3 = $6;
 $2 = $5;
 $42 = $2;
 $43 = HEAP32[$42>>2]|0;
 HEAP32[$41>>2] = $43;
 $44 = $24;
 $0 = $44;
 $45 = $0;
 $46 = ((($45)) + 4|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = HEAP32[$45>>2]|0;
 $49 = $47;
 $50 = $48;
 $51 = (($49) - ($50))|0;
 $52 = (($51|0) / 24)&-1;
 $__n = $52;
 $53 = $__n;
 $54 = ($53>>>0)>(0);
 if (!($54)) {
  STACKTOP = sp;return;
 }
 $55 = $__n;
 __THREW__ = 0;
 invoke_vii(674,($28|0),($55|0));
 $56 = __THREW__; __THREW__ = 0;
 $57 = $56&1;
 if ($57) {
  $65 = ___cxa_find_matching_catch_2()|0;
  $66 = tempRet0;
  $26 = $65;
  $27 = $66;
  __ZNSt3__113__vector_baseI7MessageNS_9allocatorIS1_EEED2Ev($28);
  $67 = $26;
  $68 = $27;
  ___resumeException($67|0);
  // unreachable;
 }
 $58 = $24;
 $59 = HEAP32[$58>>2]|0;
 $60 = $24;
 $61 = ((($60)) + 4|0);
 $62 = HEAP32[$61>>2]|0;
 __THREW__ = 0;
 invoke_viii(675,($28|0),($59|0),($62|0));
 $63 = __THREW__; __THREW__ = 0;
 $64 = $63&1;
 if ($64) {
  $65 = ___cxa_find_matching_catch_2()|0;
  $66 = tempRet0;
  $26 = $65;
  $27 = $66;
  __ZNSt3__113__vector_baseI7MessageNS_9allocatorIS1_EEED2Ev($28);
  $67 = $26;
  $68 = $27;
  ___resumeException($67|0);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $12 = $this;
 $13 = $__n;
 $14 = $12;
 $15 = $13;
 $16 = (__ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE8max_sizeEv($14)|0);
 $17 = ($15>>>0)>($16>>>0);
 if ($17) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($14);
  // unreachable;
 } else {
  $11 = $14;
  $18 = $11;
  $19 = ((($18)) + 8|0);
  $10 = $19;
  $20 = $10;
  $9 = $20;
  $21 = $9;
  $22 = $13;
  $7 = $21;
  $8 = $22;
  $23 = $7;
  $24 = $8;
  $4 = $23;
  $5 = $24;
  $6 = 0;
  $25 = $5;
  $26 = ($25*24)|0;
  $3 = $26;
  $27 = $3;
  $28 = (__Znwj($27)|0);
  $29 = ((($14)) + 4|0);
  HEAP32[$29>>2] = $28;
  HEAP32[$14>>2] = $28;
  $30 = HEAP32[$14>>2]|0;
  $31 = $13;
  $32 = (($30) + (($31*24)|0)|0);
  $2 = $14;
  $33 = $2;
  $34 = ((($33)) + 8|0);
  $1 = $34;
  $35 = $1;
  $0 = $35;
  $36 = $0;
  HEAP32[$36>>2] = $32;
  __ZNKSt3__16vectorI7MessageNS_9allocatorIS1_EEE14__annotate_newEj($14,0);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE18__construct_at_endIPS1_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__a = 0, $__annotator = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $8 = sp;
 $13 = sp + 85|0;
 $__annotator = sp + 84|0;
 $18 = $this;
 $19 = $__first;
 $20 = $__last;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $__a = $25;
 while(1) {
  $26 = $19;
  $27 = $20;
  $28 = ($26|0)!=($27|0);
  if (!($28)) {
   break;
  }
  __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotatorC2ERKS4_j($__annotator,$21,1);
  $29 = $__a;
  $30 = ((($21)) + 4|0);
  $31 = HEAP32[$30>>2]|0;
  $14 = $31;
  $32 = $14;
  $33 = $19;
  $10 = $29;
  $11 = $32;
  $12 = $33;
  $34 = $10;
  $35 = $11;
  $36 = $12;
  $9 = $36;
  $37 = $9;
  ;HEAP8[$8>>0]=HEAP8[$13>>0]|0;
  $5 = $34;
  $6 = $35;
  $7 = $37;
  $38 = $5;
  $39 = $6;
  $40 = $7;
  $4 = $40;
  $41 = $4;
  $1 = $38;
  $2 = $39;
  $3 = $41;
  $42 = $2;
  $43 = $3;
  $0 = $43;
  $44 = $0;
  __ZN7MessageC2ERKS_($42,$44);
  __ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE24__RAII_IncreaseAnnotator6__doneEv($__annotator);
  $45 = ((($21)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ((($46)) + 24|0);
  HEAP32[$45>>2] = $47;
  $48 = $19;
  $49 = ((($48)) + 24|0);
  $19 = $49;
 }
 STACKTOP = sp;return;
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $2 = (___syscall6(6,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($r>>>0)>(4294963200);
 if ($0) {
  $1 = (0 - ($r))|0;
  $2 = (___errno_location()|0);
  HEAP32[$2>>2] = $1;
  $$0 = -1;
 } else {
  $$0 = $r;
 }
 return ($$0|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[5203]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 20856;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 64|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tio = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $tio = sp + 12|0;
 $0 = ((($f)) + 36|0);
 HEAP32[$0>>2] = 190;
 $1 = HEAP32[$f>>2]|0;
 $2 = $1 & 64;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($f)) + 60|0);
  $5 = HEAP32[$4>>2]|0;
  HEAP32[$vararg_buffer>>2] = $5;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21505;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $tio;
  $6 = (___syscall54(54,($vararg_buffer|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   $8 = ((($f)) + 75|0);
   HEAP8[$8>>0] = -1;
  }
 }
 $9 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($9|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0, $iovcnt$0$lcssa12 = 0;
 var $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $0 = ((($f)) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$iovs>>2] = $1;
 $2 = ((($iovs)) + 4|0);
 $3 = ((($f)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) - ($1))|0;
 HEAP32[$2>>2] = $5;
 $6 = ((($iovs)) + 8|0);
 HEAP32[$6>>2] = $buf;
 $7 = ((($iovs)) + 12|0);
 HEAP32[$7>>2] = $len;
 $8 = (($5) + ($len))|0;
 $9 = ((($f)) + 60|0);
 $10 = ((($f)) + 44|0);
 $iov$0 = $iovs;$iovcnt$0 = 2;$rem$0 = $8;
 while(1) {
  $11 = HEAP32[5203]|0;
  $12 = ($11|0)==(0|0);
  if ($12) {
   $16 = HEAP32[$9>>2]|0;
   HEAP32[$vararg_buffer3>>2] = $16;
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   HEAP32[$vararg_ptr6>>2] = $iov$0;
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   HEAP32[$vararg_ptr7>>2] = $iovcnt$0;
   $17 = (___syscall146(146,($vararg_buffer3|0))|0);
   $18 = (___syscall_ret($17)|0);
   $cnt$0 = $18;
  } else {
   _pthread_cleanup_push((676|0),($f|0));
   $13 = HEAP32[$9>>2]|0;
   HEAP32[$vararg_buffer>>2] = $13;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $iov$0;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $iovcnt$0;
   $14 = (___syscall146(146,($vararg_buffer|0))|0);
   $15 = (___syscall_ret($14)|0);
   _pthread_cleanup_pop(0);
   $cnt$0 = $15;
  }
  $19 = ($rem$0|0)==($cnt$0|0);
  if ($19) {
   label = 6;
   break;
  }
  $26 = ($cnt$0|0)<(0);
  if ($26) {
   $iov$0$lcssa11 = $iov$0;$iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $34 = (($rem$0) - ($cnt$0))|0;
  $35 = ((($iov$0)) + 4|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ($cnt$0>>>0)>($36>>>0);
  if ($37) {
   $38 = HEAP32[$10>>2]|0;
   HEAP32[$0>>2] = $38;
   HEAP32[$3>>2] = $38;
   $39 = (($cnt$0) - ($36))|0;
   $40 = ((($iov$0)) + 8|0);
   $41 = (($iovcnt$0) + -1)|0;
   $$phi$trans$insert = ((($iov$0)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $49 = $$pre;$cnt$1 = $39;$iov$1 = $40;$iovcnt$1 = $41;
  } else {
   $42 = ($iovcnt$0|0)==(2);
   if ($42) {
    $43 = HEAP32[$0>>2]|0;
    $44 = (($43) + ($cnt$0)|0);
    HEAP32[$0>>2] = $44;
    $49 = $36;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = 2;
   } else {
    $49 = $36;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = $iovcnt$0;
   }
  }
  $45 = HEAP32[$iov$1>>2]|0;
  $46 = (($45) + ($cnt$1)|0);
  HEAP32[$iov$1>>2] = $46;
  $47 = ((($iov$1)) + 4|0);
  $48 = (($49) - ($cnt$1))|0;
  HEAP32[$47>>2] = $48;
  $iov$0 = $iov$1;$iovcnt$0 = $iovcnt$1;$rem$0 = $34;
 }
 if ((label|0) == 6) {
  $20 = HEAP32[$10>>2]|0;
  $21 = ((($f)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($f)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$0>>2] = $25;
  HEAP32[$3>>2] = $25;
  $$0 = $len;
 }
 else if ((label|0) == 8) {
  $27 = ((($f)) + 16|0);
  HEAP32[$27>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$3>>2] = 0;
  $28 = HEAP32[$f>>2]|0;
  $29 = $28 | 32;
  HEAP32[$f>>2] = $29;
  $30 = ($iovcnt$0$lcssa12|0)==(2);
  if ($30) {
   $$0 = 0;
  } else {
   $31 = ((($iov$0$lcssa11)) + 4|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (($len) - ($32))|0;
   $$0 = $33;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _cleanup_268($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $ret;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $2 = (___syscall140(140,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 $4 = ($3|0)<(0);
 if ($4) {
  HEAP32[$ret>>2] = -1;
  $5 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $5 = $$pre;
 }
 STACKTOP = sp;return ($5|0);
}
function ___stdio_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $$cast = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $cnt$0 = 0, $iov = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iov = sp + 32|0;
 HEAP32[$iov>>2] = $buf;
 $0 = ((($iov)) + 4|0);
 $1 = ((($f)) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0);
 $4 = $3&1;
 $5 = (($len) - ($4))|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($iov)) + 8|0);
 $7 = ((($f)) + 44|0);
 $8 = HEAP32[$7>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = ((($iov)) + 12|0);
 HEAP32[$9>>2] = $2;
 $10 = HEAP32[5203]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $16 = ((($f)) + 60|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = $iov;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = 2;
  $18 = (___syscall145(145,($vararg_buffer3|0))|0);
  $19 = (___syscall_ret($18)|0);
  $cnt$0 = $19;
 } else {
  _pthread_cleanup_push((677|0),($f|0));
  $12 = ((($f)) + 60|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $iov;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 2;
  $14 = (___syscall145(145,($vararg_buffer|0))|0);
  $15 = (___syscall_ret($14)|0);
  _pthread_cleanup_pop(0);
  $cnt$0 = $15;
 }
 $20 = ($cnt$0|0)<(1);
 if ($20) {
  $21 = $cnt$0 & 48;
  $22 = $21 ^ 16;
  $23 = HEAP32[$f>>2]|0;
  $24 = $23 | $22;
  HEAP32[$f>>2] = $24;
  $25 = ((($f)) + 8|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($f)) + 4|0);
  HEAP32[$26>>2] = 0;
  $$0 = $cnt$0;
 } else {
  $27 = HEAP32[$0>>2]|0;
  $28 = ($cnt$0>>>0)>($27>>>0);
  if ($28) {
   $29 = (($cnt$0) - ($27))|0;
   $30 = HEAP32[$7>>2]|0;
   $31 = ((($f)) + 4|0);
   HEAP32[$31>>2] = $30;
   $$cast = $30;
   $32 = (($$cast) + ($29)|0);
   $33 = ((($f)) + 8|0);
   HEAP32[$33>>2] = $32;
   $34 = HEAP32[$1>>2]|0;
   $35 = ($34|0)==(0);
   if ($35) {
    $$0 = $len;
   } else {
    $36 = ((($$cast)) + 1|0);
    HEAP32[$31>>2] = $36;
    $37 = HEAP8[$$cast>>0]|0;
    $38 = (($len) + -1)|0;
    $39 = (($buf) + ($38)|0);
    HEAP8[$39>>0] = $37;
    $$0 = $len;
   }
  } else {
   $$0 = $cnt$0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _cleanup_348($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa30 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa29 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa30 = $$019;$s$0$lcssa29 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa30 = $$0$lcssa;$s$0$lcssa29 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa29>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa30;$s$2 = $s$0$lcssa29;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa30>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa30;$w$011 = $s$0$lcssa29;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa30;$w$0$lcssa = $s$0$lcssa29;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _memcmp($vl,$vr,$n) {
 $vl = $vl|0;
 $vr = $vr|0;
 $n = $n|0;
 var $$03 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$04 = 0, $r$05 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 L1: do {
  if ($0) {
   $11 = 0;
  } else {
   $$03 = $n;$l$04 = $vl;$r$05 = $vr;
   while(1) {
    $1 = HEAP8[$l$04>>0]|0;
    $2 = HEAP8[$r$05>>0]|0;
    $3 = ($1<<24>>24)==($2<<24>>24);
    if (!($3)) {
     $$lcssa = $1;$$lcssa19 = $2;
     break;
    }
    $4 = (($$03) + -1)|0;
    $5 = ((($l$04)) + 1|0);
    $6 = ((($r$05)) + 1|0);
    $7 = ($4|0)==(0);
    if ($7) {
     $11 = 0;
     break L1;
    } else {
     $$03 = $4;$l$04 = $5;$r$05 = $6;
    }
   }
   $8 = $$lcssa&255;
   $9 = $$lcssa19&255;
   $10 = (($8) - ($9))|0;
   $11 = $10;
  }
 } while(0);
 return ($11|0);
}
function _wcslen($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP32[$$0>>2]|0;
  $1 = ($0|0)==(0);
  $2 = ((($$0)) + 4|0);
  if ($1) {
   $$0$lcssa = $$0;
   break;
  } else {
   $$0 = $2;
  }
 }
 $3 = $$0$lcssa;
 $4 = $s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 return ($6|0);
}
function _strlen($s) {
 $s = $s|0;
 var $$0 = 0, $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $0 & 3;
 $2 = ($1|0)==(0);
 L1: do {
  if ($2) {
   $$01$lcssa = $s;
   label = 4;
  } else {
   $$014 = $s;$21 = $0;
   while(1) {
    $3 = HEAP8[$$014>>0]|0;
    $4 = ($3<<24>>24)==(0);
    if ($4) {
     $$pn = $21;
     break L1;
    }
    $5 = ((($$014)) + 1|0);
    $6 = $5;
    $7 = $6 & 3;
    $8 = ($7|0)==(0);
    if ($8) {
     $$01$lcssa = $5;
     label = 4;
     break;
    } else {
     $$014 = $5;$21 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $$01$lcssa;
  while(1) {
   $9 = HEAP32[$w$0>>2]|0;
   $10 = (($9) + -16843009)|0;
   $11 = $9 & -2139062144;
   $12 = $11 ^ -2139062144;
   $13 = $12 & $10;
   $14 = ($13|0)==(0);
   $15 = ((($w$0)) + 4|0);
   if ($14) {
    $w$0 = $15;
   } else {
    $$lcssa20 = $9;$w$0$lcssa = $w$0;
    break;
   }
  }
  $16 = $$lcssa20&255;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$1$lcssa = $w$0$lcssa;
  } else {
   $$pn15 = $w$0$lcssa;
   while(1) {
    $18 = ((($$pn15)) + 1|0);
    $$pre = HEAP8[$18>>0]|0;
    $19 = ($$pre<<24>>24)==(0);
    if ($19) {
     $$1$lcssa = $18;
     break;
    } else {
     $$pn15 = $18;
    }
   }
  }
  $20 = $$1$lcssa;
  $$pn = $20;
 }
 $$0 = (($$pn) - ($0))|0;
 return ($$0|0);
}
function _wmemset($d,$c,$n) {
 $d = $d|0;
 $c = $c|0;
 $n = $n|0;
 var $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if (!($0)) {
  $$012 = $n;$$03 = $d;
  while(1) {
   $1 = (($$012) + -1)|0;
   $2 = ((($$03)) + 4|0);
   HEAP32[$$03>>2] = $c;
   $3 = ($1|0)==(0);
   if ($3) {
    break;
   } else {
    $$012 = $1;$$03 = $2;
   }
  }
 }
 return ($d|0);
}
function _wmemcpy($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$014 = 0, $$023 = 0, $$05 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if (!($0)) {
  $$014 = $n;$$023 = $s;$$05 = $d;
  while(1) {
   $1 = (($$014) + -1)|0;
   $2 = ((($$023)) + 4|0);
   $3 = HEAP32[$$023>>2]|0;
   $4 = ((($$05)) + 4|0);
   HEAP32[$$05>>2] = $3;
   $5 = ($1|0)==(0);
   if ($5) {
    break;
   } else {
    $$014 = $1;$$023 = $2;$$05 = $4;
   }
  }
 }
 return ($d|0);
}
function _strerror($e) {
 $e = $e|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $i$03 = 0;
 while(1) {
  $1 = (13641 + ($i$03)|0);
  $2 = HEAP8[$1>>0]|0;
  $3 = $2&255;
  $4 = ($3|0)==($e|0);
  if ($4) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $5 = (($i$03) + 1)|0;
  $6 = ($5|0)==(87);
  if ($6) {
   $i$12 = 87;$s$01 = 13729;
   label = 5;
   break;
  } else {
   $i$03 = $5;
  }
 }
 if ((label|0) == 2) {
  $0 = ($i$03$lcssa|0)==(0);
  if ($0) {
   $s$0$lcssa = 13729;
  } else {
   $i$12 = $i$03$lcssa;$s$01 = 13729;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$01;
   while(1) {
    $7 = HEAP8[$s$1>>0]|0;
    $8 = ($7<<24>>24)==(0);
    $9 = ((($s$1)) + 1|0);
    if ($8) {
     $$lcssa = $9;
     break;
    } else {
     $s$1 = $9;
    }
   }
   $10 = (($i$12) + -1)|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $s$0$lcssa = $$lcssa;
    break;
   } else {
    $i$12 = $10;$s$01 = $$lcssa;
    label = 5;
   }
  }
 }
 return ($s$0$lcssa|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $2 = ($0<<24>>24)!=($1<<24>>24);
 $3 = ($0<<24>>24)==(0);
 $or$cond3 = $3 | $2;
 if ($or$cond3) {
  $$lcssa = $0;$$lcssa2 = $1;
 } else {
  $$014 = $l;$$05 = $r;
  while(1) {
   $4 = ((($$014)) + 1|0);
   $5 = ((($$05)) + 1|0);
   $6 = HEAP8[$4>>0]|0;
   $7 = HEAP8[$5>>0]|0;
   $8 = ($6<<24>>24)!=($7<<24>>24);
   $9 = ($6<<24>>24)==(0);
   $or$cond = $9 | $8;
   if ($or$cond) {
    $$lcssa = $6;$$lcssa2 = $7;
    break;
   } else {
    $$014 = $4;$$05 = $5;
   }
  }
 }
 $10 = $$lcssa&255;
 $11 = $$lcssa2&255;
 $12 = (($10) - ($11))|0;
 return ($12|0);
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if (!($5)) {
   $$in = $n;
   while(1) {
    $6 = (($$in) + -1)|0;
    $7 = (($s) + ($6<<2)|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = (($d) + ($6<<2)|0);
    HEAP32[$9>>2] = $8;
    $10 = ($6|0)==(0);
    if ($10) {
     break;
    } else {
     $$in = $6;
    }
   }
  }
 } else {
  if (!($5)) {
   $$025 = $s;$$07 = $d;$$16 = $n;
   while(1) {
    $11 = (($$16) + -1)|0;
    $12 = ((($$025)) + 4|0);
    $13 = HEAP32[$$025>>2]|0;
    $14 = ((($$07)) + 4|0);
    HEAP32[$$07>>2] = $13;
    $15 = ($11|0)==(0);
    if ($15) {
     break;
    } else {
     $$025 = $12;$$07 = $14;$$16 = $11;
    }
   }
  }
 }
 return ($d|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $fabs = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $y;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $fabs = (+Math_abs((+$x)));
 HEAPF64[tempDoublePtr>>3] = $fabs;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & -2147483648;
 $5 = $4 | $3;
 HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $5;$6 = +HEAPF64[tempDoublePtr>>3];
 return (+$6);
}
function _strtoull_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoull($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtox_457($s,$p,$base,-1,-1)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtox_457($s,$p,$base,$0,$1) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 HEAP32[$f>>2] = 0;
 $2 = ((($f)) + 4|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f)) + 44|0);
 HEAP32[$3>>2] = $s;
 $4 = ($s|0)<(0|0);
 $5 = ((($s)) + 2147483647|0);
 $$sink = $4 ? (-1) : $5;
 $6 = ((($f)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 $7 = ((($f)) + 76|0);
 HEAP32[$7>>2] = -1;
 ___shlim($f,0);
 $8 = (___intscan($f,$base,1,$0,$1)|0);
 $9 = tempRet0;
 $10 = ($p|0)==(0|0);
 if (!($10)) {
  $11 = ((($f)) + 108|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = HEAP32[$6>>2]|0;
  $15 = (($13) + ($12))|0;
  $16 = (($15) - ($14))|0;
  $17 = (($s) + ($16)|0);
  HEAP32[$p>>2] = $17;
 }
 tempRet0 = ($9);
 STACKTOP = sp;return ($8|0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) - ($4))|0;
 $6 = ((($f)) + 108|0);
 HEAP32[$6>>2] = $5;
 $7 = ($lim|0)!=(0);
 $8 = ($5|0)>($lim|0);
 $or$cond = $7 & $8;
 if ($or$cond) {
  $9 = $4;
  $10 = (($9) + ($lim)|0);
  $11 = ((($f)) + 100|0);
  HEAP32[$11>>2] = $10;
 } else {
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $2;
 }
 return;
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$115 = 0, $$116 = 0, $$base14 = 0, $$lcssa = 0, $$lcssa108 = 0, $$lcssa109 = 0, $$lcssa110 = 0, $$lcssa111 = 0, $$lcssa112 = 0, $$lcssa113 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$117 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$359 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0;
 var $c$6$lcssa = 0, $c$7$be = 0, $c$742 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $neg$0$ = 0, $neg$1 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond31 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$070 = 0, $x$136 = 0, $x$254 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 L1: do {
  if ($2) {
   $5 = (___errno_location()|0);
   HEAP32[$5>>2] = 22;
   $286 = 0;$287 = 0;
  } else {
   $3 = ((($f)) + 4|0);
   $4 = ((($f)) + 100|0);
   while(1) {
    $6 = HEAP32[$3>>2]|0;
    $7 = HEAP32[$4>>2]|0;
    $8 = ($6>>>0)<($7>>>0);
    if ($8) {
     $9 = ((($6)) + 1|0);
     HEAP32[$3>>2] = $9;
     $10 = HEAP8[$6>>0]|0;
     $11 = $10&255;
     $13 = $11;
    } else {
     $12 = (___shgetc($f)|0);
     $13 = $12;
    }
    $14 = (_isspace($13)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     $$lcssa113 = $13;
     break;
    }
   }
   $16 = ($$lcssa113|0)==(45);
   L11: do {
    switch ($$lcssa113|0) {
    case 43: case 45:  {
     $17 = $16 << 31 >> 31;
     $18 = HEAP32[$3>>2]|0;
     $19 = HEAP32[$4>>2]|0;
     $20 = ($18>>>0)<($19>>>0);
     if ($20) {
      $21 = ((($18)) + 1|0);
      HEAP32[$3>>2] = $21;
      $22 = HEAP8[$18>>0]|0;
      $23 = $22&255;
      $c$0 = $23;$neg$0 = $17;
      break L11;
     } else {
      $24 = (___shgetc($f)|0);
      $c$0 = $24;$neg$0 = $17;
      break L11;
     }
     break;
    }
    default: {
     $c$0 = $$lcssa113;$neg$0 = 0;
    }
    }
   } while(0);
   $25 = ($base|0)==(0);
   $26 = $base | 16;
   $27 = ($26|0)==(16);
   $28 = ($c$0|0)==(48);
   $or$cond5 = $27 & $28;
   do {
    if ($or$cond5) {
     $29 = HEAP32[$3>>2]|0;
     $30 = HEAP32[$4>>2]|0;
     $31 = ($29>>>0)<($30>>>0);
     if ($31) {
      $32 = ((($29)) + 1|0);
      HEAP32[$3>>2] = $32;
      $33 = HEAP8[$29>>0]|0;
      $34 = $33&255;
      $37 = $34;
     } else {
      $35 = (___shgetc($f)|0);
      $37 = $35;
     }
     $36 = $37 | 32;
     $38 = ($36|0)==(120);
     if (!($38)) {
      if ($25) {
       $$116 = 8;$c$117 = $37;
       label = 46;
       break;
      } else {
       $$1 = $base;$c$1 = $37;
       label = 32;
       break;
      }
     }
     $39 = HEAP32[$3>>2]|0;
     $40 = HEAP32[$4>>2]|0;
     $41 = ($39>>>0)<($40>>>0);
     if ($41) {
      $42 = ((($39)) + 1|0);
      HEAP32[$3>>2] = $42;
      $43 = HEAP8[$39>>0]|0;
      $44 = $43&255;
      $47 = $44;
     } else {
      $45 = (___shgetc($f)|0);
      $47 = $45;
     }
     $46 = ((15534) + ($47)|0);
     $48 = HEAP8[$46>>0]|0;
     $49 = ($48&255)>(15);
     if ($49) {
      $50 = HEAP32[$4>>2]|0;
      $51 = ($50|0)==(0|0);
      if (!($51)) {
       $52 = HEAP32[$3>>2]|0;
       $53 = ((($52)) + -1|0);
       HEAP32[$3>>2] = $53;
      }
      $54 = ($pok|0)==(0);
      if ($54) {
       ___shlim($f,0);
       $286 = 0;$287 = 0;
       break L1;
      }
      if ($51) {
       $286 = 0;$287 = 0;
       break L1;
      }
      $55 = HEAP32[$3>>2]|0;
      $56 = ((($55)) + -1|0);
      HEAP32[$3>>2] = $56;
      $286 = 0;$287 = 0;
      break L1;
     } else {
      $$116 = 16;$c$117 = $47;
      label = 46;
     }
    } else {
     $$base14 = $25 ? 10 : $base;
     $57 = ((15534) + ($c$0)|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58&255;
     $60 = ($59>>>0)<($$base14>>>0);
     if ($60) {
      $$1 = $$base14;$c$1 = $c$0;
      label = 32;
     } else {
      $61 = HEAP32[$4>>2]|0;
      $62 = ($61|0)==(0|0);
      if (!($62)) {
       $63 = HEAP32[$3>>2]|0;
       $64 = ((($63)) + -1|0);
       HEAP32[$3>>2] = $64;
      }
      ___shlim($f,0);
      $65 = (___errno_location()|0);
      HEAP32[$65>>2] = 22;
      $286 = 0;$287 = 0;
      break L1;
     }
    }
   } while(0);
   if ((label|0) == 32) {
    $66 = ($$1|0)==(10);
    if ($66) {
     $67 = (($c$1) + -48)|0;
     $68 = ($67>>>0)<(10);
     if ($68) {
      $71 = $67;$x$070 = 0;
      while(1) {
       $69 = ($x$070*10)|0;
       $70 = (($69) + ($71))|0;
       $72 = HEAP32[$3>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ($72>>>0)<($73>>>0);
       if ($74) {
        $75 = ((($72)) + 1|0);
        HEAP32[$3>>2] = $75;
        $76 = HEAP8[$72>>0]|0;
        $77 = $76&255;
        $c$2$be = $77;
       } else {
        $78 = (___shgetc($f)|0);
        $c$2$be = $78;
       }
       $79 = (($c$2$be) + -48)|0;
       $80 = ($79>>>0)<(10);
       $81 = ($70>>>0)<(429496729);
       $82 = $80 & $81;
       if ($82) {
        $71 = $79;$x$070 = $70;
       } else {
        $$lcssa112 = $70;$c$2$be$lcssa = $c$2$be;
        break;
       }
      }
      $288 = $$lcssa112;$289 = 0;$c$2$lcssa = $c$2$be$lcssa;
     } else {
      $288 = 0;$289 = 0;$c$2$lcssa = $c$1;
     }
     $83 = (($c$2$lcssa) + -48)|0;
     $84 = ($83>>>0)<(10);
     if ($84) {
      $85 = $288;$86 = $289;$89 = $83;$c$359 = $c$2$lcssa;
      while(1) {
       $87 = (___muldi3(($85|0),($86|0),10,0)|0);
       $88 = tempRet0;
       $90 = ($89|0)<(0);
       $91 = $90 << 31 >> 31;
       $92 = $89 ^ -1;
       $93 = $91 ^ -1;
       $94 = ($88>>>0)>($93>>>0);
       $95 = ($87>>>0)>($92>>>0);
       $96 = ($88|0)==($93|0);
       $97 = $96 & $95;
       $98 = $94 | $97;
       if ($98) {
        $$lcssa = $89;$290 = $85;$291 = $86;$c$3$lcssa = $c$359;
        break;
       }
       $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
       $100 = tempRet0;
       $101 = HEAP32[$3>>2]|0;
       $102 = HEAP32[$4>>2]|0;
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $104 = ((($101)) + 1|0);
        HEAP32[$3>>2] = $104;
        $105 = HEAP8[$101>>0]|0;
        $106 = $105&255;
        $c$3$be = $106;
       } else {
        $107 = (___shgetc($f)|0);
        $c$3$be = $107;
       }
       $108 = (($c$3$be) + -48)|0;
       $109 = ($108>>>0)<(10);
       $110 = ($100>>>0)<(429496729);
       $111 = ($99>>>0)<(2576980378);
       $112 = ($100|0)==(429496729);
       $113 = $112 & $111;
       $114 = $110 | $113;
       $or$cond7 = $109 & $114;
       if ($or$cond7) {
        $85 = $99;$86 = $100;$89 = $108;$c$359 = $c$3$be;
       } else {
        $$lcssa = $108;$290 = $99;$291 = $100;$c$3$lcssa = $c$3$be;
        break;
       }
      }
      $115 = ($$lcssa>>>0)>(9);
      if ($115) {
       $259 = $291;$261 = $290;$neg$1 = $neg$0;
      } else {
       $$115 = 10;$292 = $290;$293 = $291;$c$8 = $c$3$lcssa;
       label = 72;
      }
     } else {
      $259 = $289;$261 = $288;$neg$1 = $neg$0;
     }
    } else {
     $$116 = $$1;$c$117 = $c$1;
     label = 46;
    }
   }
   L63: do {
    if ((label|0) == 46) {
     $116 = (($$116) + -1)|0;
     $117 = $116 & $$116;
     $118 = ($117|0)==(0);
     if ($118) {
      $123 = ($$116*23)|0;
      $124 = $123 >>> 5;
      $125 = $124 & 7;
      $126 = (15790 + ($125)|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = ((15534) + ($c$117)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130&255;
      $132 = ($131>>>0)<($$116>>>0);
      if ($132) {
       $135 = $131;$x$136 = 0;
       while(1) {
        $133 = $x$136 << $128;
        $134 = $135 | $133;
        $136 = HEAP32[$3>>2]|0;
        $137 = HEAP32[$4>>2]|0;
        $138 = ($136>>>0)<($137>>>0);
        if ($138) {
         $139 = ((($136)) + 1|0);
         HEAP32[$3>>2] = $139;
         $140 = HEAP8[$136>>0]|0;
         $141 = $140&255;
         $c$4$be = $141;
        } else {
         $142 = (___shgetc($f)|0);
         $c$4$be = $142;
        }
        $143 = ((15534) + ($c$4$be)|0);
        $144 = HEAP8[$143>>0]|0;
        $145 = $144&255;
        $146 = ($145>>>0)<($$116>>>0);
        $147 = ($134>>>0)<(134217728);
        $148 = $147 & $146;
        if ($148) {
         $135 = $145;$x$136 = $134;
        } else {
         $$lcssa108 = $134;$$lcssa109 = $144;$c$4$be$lcssa = $c$4$be;
         break;
        }
       }
       $152 = $$lcssa109;$154 = 0;$156 = $$lcssa108;$c$4$lcssa = $c$4$be$lcssa;
      } else {
       $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$117;
      }
      $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
      $150 = tempRet0;
      $151 = $152&255;
      $153 = ($151>>>0)>=($$116>>>0);
      $155 = ($154>>>0)>($150>>>0);
      $157 = ($156>>>0)>($149>>>0);
      $158 = ($154|0)==($150|0);
      $159 = $158 & $157;
      $160 = $155 | $159;
      $or$cond31 = $153 | $160;
      if ($or$cond31) {
       $$115 = $$116;$292 = $156;$293 = $154;$c$8 = $c$4$lcssa;
       label = 72;
       break;
      } else {
       $161 = $156;$162 = $154;$166 = $152;
      }
      while(1) {
       $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
       $164 = tempRet0;
       $165 = $166&255;
       $167 = $165 | $163;
       $168 = HEAP32[$3>>2]|0;
       $169 = HEAP32[$4>>2]|0;
       $170 = ($168>>>0)<($169>>>0);
       if ($170) {
        $171 = ((($168)) + 1|0);
        HEAP32[$3>>2] = $171;
        $172 = HEAP8[$168>>0]|0;
        $173 = $172&255;
        $c$5$be = $173;
       } else {
        $174 = (___shgetc($f)|0);
        $c$5$be = $174;
       }
       $175 = ((15534) + ($c$5$be)|0);
       $176 = HEAP8[$175>>0]|0;
       $177 = $176&255;
       $178 = ($177>>>0)>=($$116>>>0);
       $179 = ($164>>>0)>($150>>>0);
       $180 = ($167>>>0)>($149>>>0);
       $181 = ($164|0)==($150|0);
       $182 = $181 & $180;
       $183 = $179 | $182;
       $or$cond = $178 | $183;
       if ($or$cond) {
        $$115 = $$116;$292 = $167;$293 = $164;$c$8 = $c$5$be;
        label = 72;
        break L63;
       } else {
        $161 = $167;$162 = $164;$166 = $176;
       }
      }
     }
     $119 = ((15534) + ($c$117)|0);
     $120 = HEAP8[$119>>0]|0;
     $121 = $120&255;
     $122 = ($121>>>0)<($$116>>>0);
     if ($122) {
      $186 = $121;$x$254 = 0;
      while(1) {
       $184 = Math_imul($x$254, $$116)|0;
       $185 = (($186) + ($184))|0;
       $187 = HEAP32[$3>>2]|0;
       $188 = HEAP32[$4>>2]|0;
       $189 = ($187>>>0)<($188>>>0);
       if ($189) {
        $190 = ((($187)) + 1|0);
        HEAP32[$3>>2] = $190;
        $191 = HEAP8[$187>>0]|0;
        $192 = $191&255;
        $c$6$be = $192;
       } else {
        $193 = (___shgetc($f)|0);
        $c$6$be = $193;
       }
       $194 = ((15534) + ($c$6$be)|0);
       $195 = HEAP8[$194>>0]|0;
       $196 = $195&255;
       $197 = ($196>>>0)<($$116>>>0);
       $198 = ($185>>>0)<(119304647);
       $199 = $198 & $197;
       if ($199) {
        $186 = $196;$x$254 = $185;
       } else {
        $$lcssa110 = $185;$$lcssa111 = $195;$c$6$be$lcssa = $c$6$be;
        break;
       }
      }
      $201 = $$lcssa111;$294 = $$lcssa110;$295 = 0;$c$6$lcssa = $c$6$be$lcssa;
     } else {
      $201 = $120;$294 = 0;$295 = 0;$c$6$lcssa = $c$117;
     }
     $200 = $201&255;
     $202 = ($200>>>0)<($$116>>>0);
     if ($202) {
      $203 = (___udivdi3(-1,-1,($$116|0),0)|0);
      $204 = tempRet0;
      $205 = $295;$207 = $294;$215 = $201;$c$742 = $c$6$lcssa;
      while(1) {
       $206 = ($205>>>0)>($204>>>0);
       $208 = ($207>>>0)>($203>>>0);
       $209 = ($205|0)==($204|0);
       $210 = $209 & $208;
       $211 = $206 | $210;
       if ($211) {
        $$115 = $$116;$292 = $207;$293 = $205;$c$8 = $c$742;
        label = 72;
        break L63;
       }
       $212 = (___muldi3(($207|0),($205|0),($$116|0),0)|0);
       $213 = tempRet0;
       $214 = $215&255;
       $216 = $214 ^ -1;
       $217 = ($213>>>0)>(4294967295);
       $218 = ($212>>>0)>($216>>>0);
       $219 = ($213|0)==(-1);
       $220 = $219 & $218;
       $221 = $217 | $220;
       if ($221) {
        $$115 = $$116;$292 = $207;$293 = $205;$c$8 = $c$742;
        label = 72;
        break L63;
       }
       $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
       $223 = tempRet0;
       $224 = HEAP32[$3>>2]|0;
       $225 = HEAP32[$4>>2]|0;
       $226 = ($224>>>0)<($225>>>0);
       if ($226) {
        $227 = ((($224)) + 1|0);
        HEAP32[$3>>2] = $227;
        $228 = HEAP8[$224>>0]|0;
        $229 = $228&255;
        $c$7$be = $229;
       } else {
        $230 = (___shgetc($f)|0);
        $c$7$be = $230;
       }
       $231 = ((15534) + ($c$7$be)|0);
       $232 = HEAP8[$231>>0]|0;
       $233 = $232&255;
       $234 = ($233>>>0)<($$116>>>0);
       if ($234) {
        $205 = $223;$207 = $222;$215 = $232;$c$742 = $c$7$be;
       } else {
        $$115 = $$116;$292 = $222;$293 = $223;$c$8 = $c$7$be;
        label = 72;
        break;
       }
      }
     } else {
      $$115 = $$116;$292 = $294;$293 = $295;$c$8 = $c$6$lcssa;
      label = 72;
     }
    }
   } while(0);
   if ((label|0) == 72) {
    $235 = ((15534) + ($c$8)|0);
    $236 = HEAP8[$235>>0]|0;
    $237 = $236&255;
    $238 = ($237>>>0)<($$115>>>0);
    if ($238) {
     while(1) {
      $239 = HEAP32[$3>>2]|0;
      $240 = HEAP32[$4>>2]|0;
      $241 = ($239>>>0)<($240>>>0);
      if ($241) {
       $242 = ((($239)) + 1|0);
       HEAP32[$3>>2] = $242;
       $243 = HEAP8[$239>>0]|0;
       $244 = $243&255;
       $c$9$be = $244;
      } else {
       $245 = (___shgetc($f)|0);
       $c$9$be = $245;
      }
      $246 = ((15534) + ($c$9$be)|0);
      $247 = HEAP8[$246>>0]|0;
      $248 = $247&255;
      $249 = ($248>>>0)<($$115>>>0);
      if (!($249)) {
       break;
      }
     }
     $250 = (___errno_location()|0);
     HEAP32[$250>>2] = 34;
     $251 = $0 & 1;
     $252 = ($251|0)==(0);
     $253 = (0)==(0);
     $254 = $252 & $253;
     $neg$0$ = $254 ? $neg$0 : 0;
     $259 = $1;$261 = $0;$neg$1 = $neg$0$;
    } else {
     $259 = $293;$261 = $292;$neg$1 = $neg$0;
    }
   }
   $255 = HEAP32[$4>>2]|0;
   $256 = ($255|0)==(0|0);
   if (!($256)) {
    $257 = HEAP32[$3>>2]|0;
    $258 = ((($257)) + -1|0);
    HEAP32[$3>>2] = $258;
   }
   $260 = ($259>>>0)<($1>>>0);
   $262 = ($261>>>0)<($0>>>0);
   $263 = ($259|0)==($1|0);
   $264 = $263 & $262;
   $265 = $260 | $264;
   if (!($265)) {
    $266 = $0 & 1;
    $267 = ($266|0)!=(0);
    $268 = (0)!=(0);
    $269 = $267 | $268;
    $270 = ($neg$1|0)!=(0);
    $or$cond12 = $269 | $270;
    if (!($or$cond12)) {
     $271 = (___errno_location()|0);
     HEAP32[$271>>2] = 34;
     $272 = (_i64Add(($0|0),($1|0),-1,-1)|0);
     $273 = tempRet0;
     $286 = $273;$287 = $272;
     break;
    }
    $274 = ($259>>>0)>($1>>>0);
    $275 = ($261>>>0)>($0>>>0);
    $276 = ($259|0)==($1|0);
    $277 = $276 & $275;
    $278 = $274 | $277;
    if ($278) {
     $279 = (___errno_location()|0);
     HEAP32[$279>>2] = 34;
     $286 = $1;$287 = $0;
     break;
    }
   }
   $280 = ($neg$1|0)<(0);
   $281 = $280 << 31 >> 31;
   $282 = $261 ^ $neg$1;
   $283 = $259 ^ $281;
   $284 = (_i64Subtract(($282|0),($283|0),($neg$1|0),($281|0))|0);
   $285 = tempRet0;
   $286 = $285;$287 = $284;
  }
 } while(0);
 tempRet0 = ($286);
 return ($287|0);
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if ($7) {
   label = 4;
  } else {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($10) {
    $11 = $$pre;
    $41 = $11;
    label = 9;
   } else {
    $12 = ((($f)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = $13;
    $15 = (($$pre) - ($14))|0;
    $16 = ((($f)) + 108|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (($9) - ($17))|0;
    $19 = ($15|0)<($18|0);
    $20 = $$pre;
    if ($19) {
     $41 = $20;
     label = 9;
    } else {
     $21 = (($18) + -1)|0;
     $22 = (($13) + ($21)|0);
     $23 = ((($f)) + 100|0);
     HEAP32[$23>>2] = $22;
     $25 = $20;
    }
   }
   if ((label|0) == 9) {
    $24 = ((($f)) + 100|0);
    HEAP32[$24>>2] = $$pre;
    $25 = $41;
   }
   $26 = ($25|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   if ($26) {
    $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
    $36 = $$pre4;
   } else {
    $27 = HEAP32[$$phi$trans$insert3>>2]|0;
    $28 = $25;
    $29 = ((($f)) + 108|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = (($28) + 1)|0;
    $32 = (($31) - ($27))|0;
    $33 = (($32) + ($30))|0;
    HEAP32[$29>>2] = $33;
    $34 = $27;
    $36 = $34;
   }
   $35 = ((($36)) + -1|0);
   $37 = HEAP8[$35>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
   } else {
    $40 = $6&255;
    HEAP8[$35>>0] = $40;
    $$0 = $6;
   }
  }
 }
 if ((label|0) == 4) {
  $8 = ((($f)) + 100|0);
  HEAP32[$8>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1023]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1023]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
 } else {
  $18 = $15 & 4;
  $19 = ($18|0)==(0);
  if ($19) {
   $$0 = -1;
  } else {
   $20 = $15 | 32;
   HEAP32[$f>>2] = $20;
   $$0 = -1;
  }
 }
 return ($$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _strtoll_l($s,$p,$base,$loc) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $loc = $loc|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtoll($s,$p,$base)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtox_457($s,$p,$base,0,-2147483648)|0);
 $1 = tempRet0;
 tempRet0 = ($1);
 return ($0|0);
}
function _mbtowc($wc,$src,$n) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dummy = 0, $dummy$wc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $dummy = sp;
 $0 = ($src|0)==(0|0);
 L1: do {
  if ($0) {
   $$0 = 0;
  } else {
   $1 = ($n|0)==(0);
   do {
    if (!($1)) {
     $2 = ($wc|0)==(0|0);
     $dummy$wc = $2 ? $dummy : $wc;
     $3 = HEAP8[$src>>0]|0;
     $4 = $3&255;
     $5 = ($3<<24>>24)>(-1);
     if ($5) {
      HEAP32[$dummy$wc>>2] = $4;
      $6 = ($3<<24>>24)!=(0);
      $7 = $6&1;
      $$0 = $7;
      break L1;
     }
     $8 = (($4) + -194)|0;
     $9 = ($8>>>0)>(50);
     if (!($9)) {
      $10 = ((($src)) + 1|0);
      $11 = (3748 + ($8<<2)|0);
      $12 = HEAP32[$11>>2]|0;
      $13 = ($n>>>0)<(4);
      if ($13) {
       $14 = ($n*6)|0;
       $15 = (($14) + -6)|0;
       $16 = -2147483648 >>> $15;
       $17 = $12 & $16;
       $18 = ($17|0)==(0);
       if (!($18)) {
        break;
       }
      }
      $19 = HEAP8[$10>>0]|0;
      $20 = $19&255;
      $21 = $20 >>> 3;
      $22 = (($21) + -16)|0;
      $23 = $12 >> 26;
      $24 = (($21) + ($23))|0;
      $25 = $22 | $24;
      $26 = ($25>>>0)>(7);
      if (!($26)) {
       $27 = $12 << 6;
       $28 = (($20) + -128)|0;
       $29 = $28 | $27;
       $30 = ($29|0)<(0);
       if (!($30)) {
        HEAP32[$dummy$wc>>2] = $29;
        $$0 = 2;
        break L1;
       }
       $31 = ((($src)) + 2|0);
       $32 = HEAP8[$31>>0]|0;
       $33 = $32&255;
       $34 = $33 & 192;
       $35 = ($34|0)==(128);
       if ($35) {
        $36 = $29 << 6;
        $37 = (($33) + -128)|0;
        $38 = $37 | $36;
        $39 = ($38|0)<(0);
        if (!($39)) {
         HEAP32[$dummy$wc>>2] = $38;
         $$0 = 3;
         break L1;
        }
        $40 = ((($src)) + 3|0);
        $41 = HEAP8[$40>>0]|0;
        $42 = $41&255;
        $43 = $42 & 192;
        $44 = ($43|0)==(128);
        if ($44) {
         $45 = $38 << 6;
         $46 = (($42) + -128)|0;
         $47 = $46 | $45;
         HEAP32[$dummy$wc>>2] = $47;
         $$0 = 4;
         break L1;
        }
       }
      }
     }
    }
   } while(0);
   $48 = (___errno_location()|0);
   HEAP32[$48>>2] = 84;
   $$0 = -1;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=3952; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
   label = 4;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$01 = $s;$$02 = $n;
  label = 4;
 }
 if ((label|0) == 4) {
  $4 = $$01;
  $5 = (-2 - ($4))|0;
  $6 = ($$02>>>0)>($5>>>0);
  $$$02 = $6 ? $5 : $$02;
  $7 = ((($f)) + 48|0);
  HEAP32[$7>>2] = $$$02;
  $8 = ((($f)) + 20|0);
  HEAP32[$8>>2] = $$01;
  $9 = ((($f)) + 44|0);
  HEAP32[$9>>2] = $$01;
  $10 = (($$01) + ($$$02)|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = ((($f)) + 28|0);
  HEAP32[$12>>2] = $10;
  $13 = (_vfprintf($f,$fmt,$ap)|0);
  $14 = ($$$02|0)==(0);
  if ($14) {
   $$0 = $13;
  } else {
   $15 = HEAP32[$8>>2]|0;
   $16 = HEAP32[$11>>2]|0;
   $17 = ($15|0)==($16|0);
   $18 = $17 << 31 >> 31;
   $19 = (($15) + ($18)|0);
   HEAP8[$19>>0] = 0;
   $$0 = $13;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $$cast = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) - ($3))|0;
 $5 = ($4>>>0)>($l>>>0);
 $l$ = $5 ? $l : $4;
 $$cast = $3;
 _memcpy(($$cast|0),($s|0),($l$|0))|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = (($6) + ($l$)|0);
 HEAP32[$2>>2] = $7;
 return ($l|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0;
 var $ret$1 = 0, $ret$1$ = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
 } else {
  $2 = ((($f)) + 76|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)>(-1);
  if ($4) {
   $5 = (___lockfile($f)|0);
   $32 = $5;
  } else {
   $32 = 0;
  }
  $6 = HEAP32[$f>>2]|0;
  $7 = $6 & 32;
  $8 = ((($f)) + 74|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = ($9<<24>>24)<(1);
  if ($10) {
   $11 = $6 & -33;
   HEAP32[$f>>2] = $11;
  }
  $12 = ((($f)) + 48|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $16 = ((($f)) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$16>>2] = $internal_buf;
   $18 = ((($f)) + 28|0);
   HEAP32[$18>>2] = $internal_buf;
   $19 = ((($f)) + 20|0);
   HEAP32[$19>>2] = $internal_buf;
   HEAP32[$12>>2] = 80;
   $20 = ((($internal_buf)) + 80|0);
   $21 = ((($f)) + 16|0);
   HEAP32[$21>>2] = $20;
   $22 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $23 = ($17|0)==(0|0);
   if ($23) {
    $ret$1 = $22;
   } else {
    $24 = ((($f)) + 36|0);
    $25 = HEAP32[$24>>2]|0;
    (FUNCTION_TABLE_iiii[$25 & 1023]($f,0,0)|0);
    $26 = HEAP32[$19>>2]|0;
    $27 = ($26|0)==(0|0);
    $$ = $27 ? -1 : $22;
    HEAP32[$16>>2] = $17;
    HEAP32[$12>>2] = 0;
    HEAP32[$21>>2] = 0;
    HEAP32[$18>>2] = 0;
    HEAP32[$19>>2] = 0;
    $ret$1 = $$;
   }
  } else {
   $15 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $15;
  }
  $28 = HEAP32[$f>>2]|0;
  $29 = $28 & 32;
  $30 = ($29|0)==(0);
  $ret$1$ = $30 ? $ret$1 : -1;
  $31 = $28 | $7;
  HEAP32[$f>>2] = $31;
  $33 = ($32|0)==(0);
  if (!($33)) {
   ___unlockfile($f);
  }
  $$0 = $ret$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$210$$24$i = 0, $$210$$26$i = 0, $$210$i = 0, $$23$i = 0, $$25$i = 0, $$3$i = 0.0, $$311$i = 0;
 var $$33$i = 0, $$36$i = 0.0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41278$i = 0, $$43 = 0, $$5$lcssa$i = 0, $$589$i = 0, $$a$3$i = 0, $$a$3191$i = 0, $$a$3192$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa = 0, $$lcssa162$i = 0, $$lcssa295 = 0, $$lcssa300 = 0, $$lcssa301 = 0, $$lcssa302 = 0, $$lcssa303 = 0;
 var $$lcssa304 = 0, $$lcssa306 = 0, $$lcssa316 = 0, $$lcssa319 = 0.0, $$lcssa321 = 0, $$neg55$i = 0, $$neg56$i = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr50$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi190$iZ2D = 0, $$pre170 = 0, $$pre171 = 0, $$pre185$i = 0, $$pre188$i = 0;
 var $$pre189$i = 0, $$z$3$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0.0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0.0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0.0, $391 = 0.0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0.0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0.0, $411 = 0.0, $412 = 0.0, $413 = 0.0, $414 = 0.0, $415 = 0.0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0.0, $442 = 0.0, $443 = 0.0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0;
 var $474 = 0.0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0.0, $483 = 0.0, $484 = 0.0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0.0, $594 = 0.0, $595 = 0, $596 = 0.0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0;
 var $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0;
 var $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0;
 var $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1149$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3136$i = 0, $a$5$lcssa$i = 0, $a$5111$i = 0, $a$6$i = 0, $a$8$i = 0, $a$9$ph$i = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0142$i = 0, $carry3$0130$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0141$i = 0, $d$0143$i = 0, $d$1129$i = 0, $d$2$lcssa$i = 0, $d$2110$i = 0, $d$4$i = 0, $d$584$i = 0, $d$677$i = 0, $d$788$i = 0, $e$0125$i = 0;
 var $e$1$i = 0, $e$2106$i = 0, $e$4$i = 0, $e$5$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$195$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0;
 var $expanded8 = 0, $fl$0100 = 0, $fl$053 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa178 = 0, $i$0105 = 0, $i$0124$i = 0, $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116 = 0, $i$1118$i = 0, $i$2105$i = 0, $i$291 = 0, $i$291$lcssa = 0;
 var $i$3101$i = 0, $i$389 = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i27 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i23 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i26 = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0$i = 0;
 var $j$0117$i = 0, $j$0119$i = 0, $j$1102$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1104 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0;
 var $or$cond122 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond18$i = 0, $or$cond20 = 0, $or$cond22$i = 0, $or$cond3$not$i = 0, $or$cond31$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$0$ = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0, $p$4176 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0;
 var $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$9$i = 0, $re$171$i = 0, $round$070$i = 0.0, $round6$1$i = 0.0, $s$0 = 0, $s$0$i = 0, $s$1 = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s$2$lcssa = 0, $s$292 = 0, $s$4 = 0, $s$6 = 0;
 var $s$7 = 0, $s$7$lcssa298 = 0, $s1$0$i = 0, $s7$081$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$072$i = 0, $s9$0$i = 0, $s9$185$i = 0, $s9$2$i = 0, $scevgep182$i = 0, $scevgep182183$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa299 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge851 = 0, $storemerge899 = 0;
 var $sum = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $w$32$i = 0, $wc = 0, $ws$0106 = 0, $ws$1117 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$093 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1148$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0;
 var $z$3$lcssa$i = 0, $z$3135$i = 0, $z$4$i = 0, $z$7$$i = 0, $z$7$i = 0, $z$7$i$lcssa = 0, $z$7$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 24|0;
 $e2$i = sp + 16|0;
 $buf$i = sp + 588|0;
 $ebuf0$i = sp + 576|0;
 $arg = sp;
 $buf = sp + 536|0;
 $wc = sp + 8|0;
 $mb = sp + 528|0;
 $0 = ($f|0)!=(0|0);
 $1 = ((($buf)) + 40|0);
 $2 = $1;
 $3 = ((($buf)) + 39|0);
 $4 = ((($wc)) + 4|0);
 $5 = $buf$i;
 $6 = (0 - ($5))|0;
 $7 = ((($ebuf0$i)) + 12|0);
 $8 = ((($ebuf0$i)) + 11|0);
 $9 = $7;
 $10 = (($9) - ($5))|0;
 $11 = (-2 - ($5))|0;
 $12 = (($9) + 2)|0;
 $13 = ((($big$i)) + 288|0);
 $14 = ((($buf$i)) + 9|0);
 $15 = $14;
 $16 = ((($buf$i)) + 8|0);
 $cnt$0 = 0;$l$0 = 0;$l10n$0 = 0;$s$0 = $fmt;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$s$0>>0]|0;
  $23 = ($22<<24>>24)==(0);
  if ($23) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 244;
   break;
  } else {
   $24 = $22;$s$1 = $s$0;
  }
  L9: while(1) {
   switch ($24<<24>>24) {
   case 37:  {
    $s$292 = $s$1;$z$093 = $s$1;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $s$2$lcssa = $s$1;$z$0$lcssa = $s$1;
    break L9;
    break;
   }
   default: {
   }
   }
   $25 = ((($s$1)) + 1|0);
   $$pre = HEAP8[$25>>0]|0;
   $24 = $$pre;$s$1 = $25;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $26 = ((($s$292)) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = ($27<<24>>24)==(37);
     if (!($28)) {
      $s$2$lcssa = $s$292;$z$0$lcssa = $z$093;
      break L12;
     }
     $29 = ((($z$093)) + 1|0);
     $30 = ((($s$292)) + 2|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = ($31<<24>>24)==(37);
     if ($32) {
      $s$292 = $30;$z$093 = $29;
      label = 9;
     } else {
      $s$2$lcssa = $30;$z$0$lcssa = $29;
      break;
     }
    }
   }
  } while(0);
  $33 = $z$0$lcssa;
  $34 = $s$0;
  $35 = (($33) - ($34))|0;
  if ($0) {
   $36 = HEAP32[$f>>2]|0;
   $37 = $36 & 32;
   $38 = ($37|0)==(0);
   if ($38) {
    (___fwritex($s$0,$35,$f)|0);
   }
  }
  $39 = ($z$0$lcssa|0)==($s$0|0);
  if (!($39)) {
   $l10n$0$phi = $l10n$0;$cnt$0 = $cnt$1;$l$0 = $35;$s$0 = $s$2$lcssa;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $40 = ((($s$2$lcssa)) + 1|0);
  $41 = HEAP8[$40>>0]|0;
  $42 = $41 << 24 >> 24;
  $isdigittmp = (($42) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $43 = ((($s$2$lcssa)) + 2|0);
   $44 = HEAP8[$43>>0]|0;
   $45 = ($44<<24>>24)==(36);
   $46 = ((($s$2$lcssa)) + 3|0);
   $$43 = $45 ? $46 : $40;
   $$l10n$0 = $45 ? 1 : $l10n$0;
   $isdigittmp$ = $45 ? $isdigittmp : -1;
   $$pre170 = HEAP8[$$43>>0]|0;
   $48 = $$pre170;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$43;
  } else {
   $48 = $41;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $40;
  }
  $47 = $48 << 24 >> 24;
  $49 = $47 & -32;
  $50 = ($49|0)==(32);
  L25: do {
   if ($50) {
    $52 = $47;$57 = $48;$fl$0100 = 0;$storemerge899 = $storemerge;
    while(1) {
     $51 = (($52) + -32)|0;
     $53 = 1 << $51;
     $54 = $53 & 75913;
     $55 = ($54|0)==(0);
     if ($55) {
      $66 = $57;$fl$053 = $fl$0100;$storemerge851 = $storemerge899;
      break L25;
     }
     $56 = $57 << 24 >> 24;
     $58 = (($56) + -32)|0;
     $59 = 1 << $58;
     $60 = $59 | $fl$0100;
     $61 = ((($storemerge899)) + 1|0);
     $62 = HEAP8[$61>>0]|0;
     $63 = $62 << 24 >> 24;
     $64 = $63 & -32;
     $65 = ($64|0)==(32);
     if ($65) {
      $52 = $63;$57 = $62;$fl$0100 = $60;$storemerge899 = $61;
     } else {
      $66 = $62;$fl$053 = $60;$storemerge851 = $61;
      break;
     }
    }
   } else {
    $66 = $48;$fl$053 = 0;$storemerge851 = $storemerge;
   }
  } while(0);
  $67 = ($66<<24>>24)==(42);
  do {
   if ($67) {
    $68 = ((($storemerge851)) + 1|0);
    $69 = HEAP8[$68>>0]|0;
    $70 = $69 << 24 >> 24;
    $isdigittmp11 = (($70) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $71 = ((($storemerge851)) + 2|0);
     $72 = HEAP8[$71>>0]|0;
     $73 = ($72<<24>>24)==(36);
     if ($73) {
      $74 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$74>>2] = 10;
      $75 = HEAP8[$68>>0]|0;
      $76 = $75 << 24 >> 24;
      $77 = (($76) + -48)|0;
      $78 = (($nl_arg) + ($77<<3)|0);
      $79 = $78;
      $80 = $79;
      $81 = HEAP32[$80>>2]|0;
      $82 = (($79) + 4)|0;
      $83 = $82;
      $84 = HEAP32[$83>>2]|0;
      $85 = ((($storemerge851)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $85;$w$0 = $81;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $86 = ($l10n$1|0)==(0);
     if (!($86)) {
      $$0 = -1;
      break L1;
     }
     if (!($0)) {
      $fl$1 = $fl$053;$l10n$3 = 0;$s$4 = $68;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $87 = $arglist_current;
     $88 = ((0) + 4|0);
     $expanded4 = $88;
     $expanded = (($expanded4) - 1)|0;
     $89 = (($87) + ($expanded))|0;
     $90 = ((0) + 4|0);
     $expanded8 = $90;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $91 = $89 & $expanded6;
     $92 = $91;
     $93 = HEAP32[$92>>2]|0;
     $arglist_next = ((($92)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $68;$w$0 = $93;
    }
    $94 = ($w$0|0)<(0);
    if ($94) {
     $95 = $fl$053 | 8192;
     $96 = (0 - ($w$0))|0;
     $fl$1 = $95;$l10n$3 = $l10n$2;$s$4 = $storemerge13;$w$1 = $96;
    } else {
     $fl$1 = $fl$053;$l10n$3 = $l10n$2;$s$4 = $storemerge13;$w$1 = $w$0;
    }
   } else {
    $97 = $66 << 24 >> 24;
    $isdigittmp1$i = (($97) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $101 = $storemerge851;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $98 = ($i$03$i*10)|0;
      $99 = (($98) + ($isdigittmp4$i))|0;
      $100 = ((($101)) + 1|0);
      $102 = HEAP8[$100>>0]|0;
      $103 = $102 << 24 >> 24;
      $isdigittmp$i = (($103) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $101 = $100;$i$03$i = $99;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa = $99;$$lcssa295 = $100;
       break;
      }
     }
     $104 = ($$lcssa|0)<(0);
     if ($104) {
      $$0 = -1;
      break L1;
     } else {
      $fl$1 = $fl$053;$l10n$3 = $l10n$1;$s$4 = $$lcssa295;$w$1 = $$lcssa;
     }
    } else {
     $fl$1 = $fl$053;$l10n$3 = $l10n$1;$s$4 = $storemerge851;$w$1 = 0;
    }
   }
  } while(0);
  $105 = HEAP8[$s$4>>0]|0;
  $106 = ($105<<24>>24)==(46);
  L46: do {
   if ($106) {
    $107 = ((($s$4)) + 1|0);
    $108 = HEAP8[$107>>0]|0;
    $109 = ($108<<24>>24)==(42);
    if (!($109)) {
     $136 = $108 << 24 >> 24;
     $isdigittmp1$i22 = (($136) + -48)|0;
     $isdigit2$i23 = ($isdigittmp1$i22>>>0)<(10);
     if ($isdigit2$i23) {
      $140 = $107;$i$03$i25 = 0;$isdigittmp4$i24 = $isdigittmp1$i22;
     } else {
      $p$0 = 0;$s$6 = $107;
      break;
     }
     while(1) {
      $137 = ($i$03$i25*10)|0;
      $138 = (($137) + ($isdigittmp4$i24))|0;
      $139 = ((($140)) + 1|0);
      $141 = HEAP8[$139>>0]|0;
      $142 = $141 << 24 >> 24;
      $isdigittmp$i26 = (($142) + -48)|0;
      $isdigit$i27 = ($isdigittmp$i26>>>0)<(10);
      if ($isdigit$i27) {
       $140 = $139;$i$03$i25 = $138;$isdigittmp4$i24 = $isdigittmp$i26;
      } else {
       $p$0 = $138;$s$6 = $139;
       break L46;
      }
     }
    }
    $110 = ((($s$4)) + 2|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 << 24 >> 24;
    $isdigittmp9 = (($112) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $113 = ((($s$4)) + 3|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)==(36);
     if ($115) {
      $116 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$116>>2] = 10;
      $117 = HEAP8[$110>>0]|0;
      $118 = $117 << 24 >> 24;
      $119 = (($118) + -48)|0;
      $120 = (($nl_arg) + ($119<<3)|0);
      $121 = $120;
      $122 = $121;
      $123 = HEAP32[$122>>2]|0;
      $124 = (($121) + 4)|0;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = ((($s$4)) + 4|0);
      $p$0 = $123;$s$6 = $127;
      break;
     }
    }
    $128 = ($l10n$3|0)==(0);
    if (!($128)) {
     $$0 = -1;
     break L1;
    }
    if ($0) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $129 = $arglist_current2;
     $130 = ((0) + 4|0);
     $expanded11 = $130;
     $expanded10 = (($expanded11) - 1)|0;
     $131 = (($129) + ($expanded10))|0;
     $132 = ((0) + 4|0);
     $expanded15 = $132;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $133 = $131 & $expanded13;
     $134 = $133;
     $135 = HEAP32[$134>>2]|0;
     $arglist_next3 = ((($134)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $p$0 = $135;$s$6 = $110;
    } else {
     $p$0 = 0;$s$6 = $110;
    }
   } else {
    $p$0 = -1;$s$6 = $s$4;
   }
  } while(0);
  $s$7 = $s$6;$st$0 = 0;
  while(1) {
   $143 = HEAP8[$s$7>>0]|0;
   $144 = $143 << 24 >> 24;
   $145 = (($144) + -65)|0;
   $146 = ($145>>>0)>(57);
   if ($146) {
    $$0 = -1;
    break L1;
   }
   $147 = ((($s$7)) + 1|0);
   $148 = ((15799 + (($st$0*58)|0)|0) + ($145)|0);
   $149 = HEAP8[$148>>0]|0;
   $150 = $149&255;
   $151 = (($150) + -1)|0;
   $152 = ($151>>>0)<(8);
   if ($152) {
    $s$7 = $147;$st$0 = $150;
   } else {
    $$lcssa300 = $147;$$lcssa301 = $149;$$lcssa302 = $150;$s$7$lcssa298 = $s$7;$st$0$lcssa299 = $st$0;
    break;
   }
  }
  $153 = ($$lcssa301<<24>>24)==(0);
  if ($153) {
   $$0 = -1;
   break;
  }
  $154 = ($$lcssa301<<24>>24)==(19);
  $155 = ($argpos$0|0)>(-1);
  do {
   if ($154) {
    if ($155) {
     $$0 = -1;
     break L1;
    } else {
     label = 52;
    }
   } else {
    if ($155) {
     $156 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$156>>2] = $$lcssa302;
     $157 = (($nl_arg) + ($argpos$0<<3)|0);
     $158 = $157;
     $159 = $158;
     $160 = HEAP32[$159>>2]|0;
     $161 = (($158) + 4)|0;
     $162 = $161;
     $163 = HEAP32[$162>>2]|0;
     $164 = $arg;
     $165 = $164;
     HEAP32[$165>>2] = $160;
     $166 = (($164) + 4)|0;
     $167 = $166;
     HEAP32[$167>>2] = $163;
     label = 52;
     break;
    }
    if (!($0)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($arg,$$lcssa302,$ap);
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   if (!($0)) {
    $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
    continue;
   }
  }
  $168 = HEAP8[$s$7$lcssa298>>0]|0;
  $169 = $168 << 24 >> 24;
  $170 = ($st$0$lcssa299|0)!=(0);
  $171 = $169 & 15;
  $172 = ($171|0)==(3);
  $or$cond15 = $170 & $172;
  $173 = $169 & -33;
  $t$0 = $or$cond15 ? $173 : $169;
  $174 = $fl$1 & 8192;
  $175 = ($174|0)==(0);
  $176 = $fl$1 & -65537;
  $fl$1$ = $175 ? $fl$1 : $176;
  L75: do {
   switch ($t$0|0) {
   case 110:  {
    switch ($st$0$lcssa299|0) {
    case 0:  {
     $183 = HEAP32[$arg>>2]|0;
     HEAP32[$183>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    case 1:  {
     $184 = HEAP32[$arg>>2]|0;
     HEAP32[$184>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    case 2:  {
     $185 = ($cnt$1|0)<(0);
     $186 = $185 << 31 >> 31;
     $187 = HEAP32[$arg>>2]|0;
     $188 = $187;
     $189 = $188;
     HEAP32[$189>>2] = $cnt$1;
     $190 = (($188) + 4)|0;
     $191 = $190;
     HEAP32[$191>>2] = $186;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    case 3:  {
     $192 = $cnt$1&65535;
     $193 = HEAP32[$arg>>2]|0;
     HEAP16[$193>>1] = $192;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    case 4:  {
     $194 = $cnt$1&255;
     $195 = HEAP32[$arg>>2]|0;
     HEAP8[$195>>0] = $194;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    case 6:  {
     $196 = HEAP32[$arg>>2]|0;
     HEAP32[$196>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    case 7:  {
     $197 = ($cnt$1|0)<(0);
     $198 = $197 << 31 >> 31;
     $199 = HEAP32[$arg>>2]|0;
     $200 = $199;
     $201 = $200;
     HEAP32[$201>>2] = $cnt$1;
     $202 = (($200) + 4)|0;
     $203 = $202;
     HEAP32[$203>>2] = $198;
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
     break;
    }
    default: {
     $cnt$0 = $cnt$1;$l$0 = $35;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $204 = ($p$0>>>0)>(8);
    $205 = $204 ? $p$0 : 8;
    $206 = $fl$1$ | 8;
    $fl$3 = $206;$p$1 = $205;$t$1 = 120;
    label = 64;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 64;
    break;
   }
   case 111:  {
    $244 = $arg;
    $245 = $244;
    $246 = HEAP32[$245>>2]|0;
    $247 = (($244) + 4)|0;
    $248 = $247;
    $249 = HEAP32[$248>>2]|0;
    $250 = ($246|0)==(0);
    $251 = ($249|0)==(0);
    $252 = $250 & $251;
    if ($252) {
     $$0$lcssa$i = $1;
    } else {
     $$03$i33 = $1;$254 = $246;$258 = $249;
     while(1) {
      $253 = $254 & 7;
      $255 = $253 | 48;
      $256 = $255&255;
      $257 = ((($$03$i33)) + -1|0);
      HEAP8[$257>>0] = $256;
      $259 = (_bitshift64Lshr(($254|0),($258|0),3)|0);
      $260 = tempRet0;
      $261 = ($259|0)==(0);
      $262 = ($260|0)==(0);
      $263 = $261 & $262;
      if ($263) {
       $$0$lcssa$i = $257;
       break;
      } else {
       $$03$i33 = $257;$254 = $259;$258 = $260;
      }
     }
    }
    $264 = $fl$1$ & 8;
    $265 = ($264|0)==(0);
    if ($265) {
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = 0;$prefix$1 = 16279;
     label = 77;
    } else {
     $266 = $$0$lcssa$i;
     $267 = (($2) - ($266))|0;
     $268 = ($p$0|0)>($267|0);
     $269 = (($267) + 1)|0;
     $p$0$ = $268 ? $p$0 : $269;
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $p$0$;$pl$1 = 0;$prefix$1 = 16279;
     label = 77;
    }
    break;
   }
   case 105: case 100:  {
    $270 = $arg;
    $271 = $270;
    $272 = HEAP32[$271>>2]|0;
    $273 = (($270) + 4)|0;
    $274 = $273;
    $275 = HEAP32[$274>>2]|0;
    $276 = ($275|0)<(0);
    if ($276) {
     $277 = (_i64Subtract(0,0,($272|0),($275|0))|0);
     $278 = tempRet0;
     $279 = $arg;
     $280 = $279;
     HEAP32[$280>>2] = $277;
     $281 = (($279) + 4)|0;
     $282 = $281;
     HEAP32[$282>>2] = $278;
     $287 = $277;$288 = $278;$pl$0 = 1;$prefix$0 = 16279;
     label = 76;
     break L75;
    }
    $283 = $fl$1$ & 2048;
    $284 = ($283|0)==(0);
    if ($284) {
     $285 = $fl$1$ & 1;
     $286 = ($285|0)==(0);
     $$ = $286 ? 16279 : (16281);
     $287 = $272;$288 = $275;$pl$0 = $285;$prefix$0 = $$;
     label = 76;
    } else {
     $287 = $272;$288 = $275;$pl$0 = 1;$prefix$0 = (16280);
     label = 76;
    }
    break;
   }
   case 117:  {
    $177 = $arg;
    $178 = $177;
    $179 = HEAP32[$178>>2]|0;
    $180 = (($177) + 4)|0;
    $181 = $180;
    $182 = HEAP32[$181>>2]|0;
    $287 = $179;$288 = $182;$pl$0 = 0;$prefix$0 = 16279;
    label = 76;
    break;
   }
   case 99:  {
    $308 = $arg;
    $309 = $308;
    $310 = HEAP32[$309>>2]|0;
    $311 = (($308) + 4)|0;
    $312 = $311;
    $313 = HEAP32[$312>>2]|0;
    $314 = $310&255;
    HEAP8[$3>>0] = $314;
    $a$2 = $3;$fl$6 = $176;$p$5 = 1;$pl$2 = 0;$prefix$2 = 16279;$z$2 = $1;
    break;
   }
   case 109:  {
    $315 = (___errno_location()|0);
    $316 = HEAP32[$315>>2]|0;
    $317 = (_strerror($316)|0);
    $a$1 = $317;
    label = 82;
    break;
   }
   case 115:  {
    $318 = HEAP32[$arg>>2]|0;
    $319 = ($318|0)!=(0|0);
    $320 = $319 ? $318 : 16289;
    $a$1 = $320;
    label = 82;
    break;
   }
   case 67:  {
    $327 = $arg;
    $328 = $327;
    $329 = HEAP32[$328>>2]|0;
    $330 = (($327) + 4)|0;
    $331 = $330;
    $332 = HEAP32[$331>>2]|0;
    HEAP32[$wc>>2] = $329;
    HEAP32[$4>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $798 = $wc;$p$4176 = -1;
    label = 86;
    break;
   }
   case 83:  {
    $$pre171 = HEAP32[$arg>>2]|0;
    $333 = ($p$0|0)==(0);
    if ($333) {
     _pad($f,32,$w$1,0,$fl$1$);
     $i$0$lcssa178 = 0;
     label = 97;
    } else {
     $798 = $$pre171;$p$4176 = $p$0;
     label = 86;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $358 = +HEAPF64[$arg>>3];
    HEAP32[$e2$i>>2] = 0;
    HEAPF64[tempDoublePtr>>3] = $358;$359 = HEAP32[tempDoublePtr>>2]|0;
    $360 = HEAP32[tempDoublePtr+4>>2]|0;
    $361 = ($360|0)<(0);
    if ($361) {
     $362 = -$358;
     $$07$i = $362;$pl$0$i = 1;$prefix$0$i = 16296;
    } else {
     $363 = $fl$1$ & 2048;
     $364 = ($363|0)==(0);
     if ($364) {
      $365 = $fl$1$ & 1;
      $366 = ($365|0)==(0);
      $$$i = $366 ? (16297) : (16302);
      $$07$i = $358;$pl$0$i = $365;$prefix$0$i = $$$i;
     } else {
      $$07$i = $358;$pl$0$i = 1;$prefix$0$i = (16299);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$367 = HEAP32[tempDoublePtr>>2]|0;
    $368 = HEAP32[tempDoublePtr+4>>2]|0;
    $369 = $368 & 2146435072;
    $370 = ($369>>>0)<(2146435072);
    $371 = (0)<(0);
    $372 = ($369|0)==(2146435072);
    $373 = $372 & $371;
    $374 = $370 | $373;
    do {
     if ($374) {
      $390 = (+_frexpl($$07$i,$e2$i));
      $391 = $390 * 2.0;
      $392 = $391 != 0.0;
      if ($392) {
       $393 = HEAP32[$e2$i>>2]|0;
       $394 = (($393) + -1)|0;
       HEAP32[$e2$i>>2] = $394;
      }
      $395 = $t$0 | 32;
      $396 = ($395|0)==(97);
      if ($396) {
       $397 = $t$0 & 32;
       $398 = ($397|0)==(0);
       $399 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $398 ? $prefix$0$i : $399;
       $400 = $pl$0$i | 2;
       $401 = ($p$0>>>0)>(11);
       $402 = (12 - ($p$0))|0;
       $403 = ($402|0)==(0);
       $404 = $401 | $403;
       do {
        if ($404) {
         $$1$i = $391;
        } else {
         $re$171$i = $402;$round$070$i = 8.0;
         while(1) {
          $405 = (($re$171$i) + -1)|0;
          $406 = $round$070$i * 16.0;
          $407 = ($405|0)==(0);
          if ($407) {
           $$lcssa319 = $406;
           break;
          } else {
           $re$171$i = $405;$round$070$i = $406;
          }
         }
         $408 = HEAP8[$prefix$0$$i>>0]|0;
         $409 = ($408<<24>>24)==(45);
         if ($409) {
          $410 = -$391;
          $411 = $410 - $$lcssa319;
          $412 = $$lcssa319 + $411;
          $413 = -$412;
          $$1$i = $413;
          break;
         } else {
          $414 = $391 + $$lcssa319;
          $415 = $414 - $$lcssa319;
          $$1$i = $415;
          break;
         }
        }
       } while(0);
       $416 = HEAP32[$e2$i>>2]|0;
       $417 = ($416|0)<(0);
       $418 = (0 - ($416))|0;
       $419 = $417 ? $418 : $416;
       $420 = ($419|0)<(0);
       $421 = $420 << 31 >> 31;
       $422 = (_fmt_u($419,$421,$7)|0);
       $423 = ($422|0)==($7|0);
       if ($423) {
        HEAP8[$8>>0] = 48;
        $estr$0$i = $8;
       } else {
        $estr$0$i = $422;
       }
       $424 = $416 >> 31;
       $425 = $424 & 2;
       $426 = (($425) + 43)|0;
       $427 = $426&255;
       $428 = ((($estr$0$i)) + -1|0);
       HEAP8[$428>>0] = $427;
       $429 = (($t$0) + 15)|0;
       $430 = $429&255;
       $431 = ((($estr$0$i)) + -2|0);
       HEAP8[$431>>0] = $430;
       $notrhs$i = ($p$0|0)<(1);
       $432 = $fl$1$ & 8;
       $433 = ($432|0)==(0);
       $$2$i = $$1$i;$s$0$i = $buf$i;
       while(1) {
        $434 = (~~(($$2$i)));
        $435 = (16263 + ($434)|0);
        $436 = HEAP8[$435>>0]|0;
        $437 = $436&255;
        $438 = $437 | $397;
        $439 = $438&255;
        $440 = ((($s$0$i)) + 1|0);
        HEAP8[$s$0$i>>0] = $439;
        $441 = (+($434|0));
        $442 = $$2$i - $441;
        $443 = $442 * 16.0;
        $444 = $440;
        $445 = (($444) - ($5))|0;
        $446 = ($445|0)==(1);
        do {
         if ($446) {
          $notlhs$i = $443 == 0.0;
          $or$cond3$not$i = $notrhs$i & $notlhs$i;
          $or$cond$i = $433 & $or$cond3$not$i;
          if ($or$cond$i) {
           $s$1$i = $440;
           break;
          }
          $447 = ((($s$0$i)) + 2|0);
          HEAP8[$440>>0] = 46;
          $s$1$i = $447;
         } else {
          $s$1$i = $440;
         }
        } while(0);
        $448 = $443 != 0.0;
        if ($448) {
         $$2$i = $443;$s$0$i = $s$1$i;
        } else {
         $s$1$i$lcssa = $s$1$i;
         break;
        }
       }
       $449 = ($p$0|0)!=(0);
       $$pre188$i = $s$1$i$lcssa;
       $450 = (($11) + ($$pre188$i))|0;
       $451 = ($450|0)<($p$0|0);
       $or$cond122 = $449 & $451;
       $452 = $431;
       $453 = (($12) + ($p$0))|0;
       $454 = (($453) - ($452))|0;
       $455 = (($10) - ($452))|0;
       $456 = (($455) + ($$pre188$i))|0;
       $l$0$i = $or$cond122 ? $454 : $456;
       $457 = (($l$0$i) + ($400))|0;
       _pad($f,32,$w$1,$457,$fl$1$);
       $458 = HEAP32[$f>>2]|0;
       $459 = $458 & 32;
       $460 = ($459|0)==(0);
       if ($460) {
        (___fwritex($prefix$0$$i,$400,$f)|0);
       }
       $461 = $fl$1$ ^ 65536;
       _pad($f,48,$w$1,$457,$461);
       $462 = (($$pre188$i) - ($5))|0;
       $463 = HEAP32[$f>>2]|0;
       $464 = $463 & 32;
       $465 = ($464|0)==(0);
       if ($465) {
        (___fwritex($buf$i,$462,$f)|0);
       }
       $466 = (($9) - ($452))|0;
       $sum = (($462) + ($466))|0;
       $467 = (($l$0$i) - ($sum))|0;
       _pad($f,48,$467,0,0);
       $468 = HEAP32[$f>>2]|0;
       $469 = $468 & 32;
       $470 = ($469|0)==(0);
       if ($470) {
        (___fwritex($431,$466,$f)|0);
       }
       $471 = $fl$1$ ^ 8192;
       _pad($f,32,$w$1,$457,$471);
       $472 = ($457|0)<($w$1|0);
       $w$$i = $472 ? $w$1 : $457;
       $$0$i = $w$$i;
       break;
      }
      $473 = ($p$0|0)<(0);
      $$p$i = $473 ? 6 : $p$0;
      if ($392) {
       $474 = $391 * 268435456.0;
       $475 = HEAP32[$e2$i>>2]|0;
       $476 = (($475) + -28)|0;
       HEAP32[$e2$i>>2] = $476;
       $$3$i = $474;$477 = $476;
      } else {
       $$pre185$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $391;$477 = $$pre185$i;
      }
      $478 = ($477|0)<(0);
      $$33$i = $478 ? $big$i : $13;
      $479 = $$33$i;
      $$4$i = $$3$i;$z$0$i = $$33$i;
      while(1) {
       $480 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $480;
       $481 = ((($z$0$i)) + 4|0);
       $482 = (+($480>>>0));
       $483 = $$4$i - $482;
       $484 = $483 * 1.0E+9;
       $485 = $484 != 0.0;
       if ($485) {
        $$4$i = $484;$z$0$i = $481;
       } else {
        $$lcssa303 = $481;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $486 = ($$pr$i|0)>(0);
      if ($486) {
       $487 = $$pr$i;$a$1149$i = $$33$i;$z$1148$i = $$lcssa303;
       while(1) {
        $488 = ($487|0)>(29);
        $489 = $488 ? 29 : $487;
        $d$0141$i = ((($z$1148$i)) + -4|0);
        $490 = ($d$0141$i>>>0)<($a$1149$i>>>0);
        do {
         if ($490) {
          $a$2$ph$i = $a$1149$i;
         } else {
          $carry$0142$i = 0;$d$0143$i = $d$0141$i;
          while(1) {
           $491 = HEAP32[$d$0143$i>>2]|0;
           $492 = (_bitshift64Shl(($491|0),0,($489|0))|0);
           $493 = tempRet0;
           $494 = (_i64Add(($492|0),($493|0),($carry$0142$i|0),0)|0);
           $495 = tempRet0;
           $496 = (___uremdi3(($494|0),($495|0),1000000000,0)|0);
           $497 = tempRet0;
           HEAP32[$d$0143$i>>2] = $496;
           $498 = (___udivdi3(($494|0),($495|0),1000000000,0)|0);
           $499 = tempRet0;
           $d$0$i = ((($d$0143$i)) + -4|0);
           $500 = ($d$0$i>>>0)<($a$1149$i>>>0);
           if ($500) {
            $$lcssa304 = $498;
            break;
           } else {
            $carry$0142$i = $498;$d$0143$i = $d$0$i;
           }
          }
          $501 = ($$lcssa304|0)==(0);
          if ($501) {
           $a$2$ph$i = $a$1149$i;
           break;
          }
          $502 = ((($a$1149$i)) + -4|0);
          HEAP32[$502>>2] = $$lcssa304;
          $a$2$ph$i = $502;
         }
        } while(0);
        $z$2$i = $z$1148$i;
        while(1) {
         $503 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($503)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $504 = ((($z$2$i)) + -4|0);
         $505 = HEAP32[$504>>2]|0;
         $506 = ($505|0)==(0);
         if ($506) {
          $z$2$i = $504;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $507 = HEAP32[$e2$i>>2]|0;
        $508 = (($507) - ($489))|0;
        HEAP32[$e2$i>>2] = $508;
        $509 = ($508|0)>(0);
        if ($509) {
         $487 = $508;$a$1149$i = $a$2$ph$i;$z$1148$i = $z$2$i$lcssa;
        } else {
         $$pr50$i = $508;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr50$i = $$pr$i;$a$1$lcssa$i = $$33$i;$z$1$lcssa$i = $$lcssa303;
      }
      $510 = ($$pr50$i|0)<(0);
      if ($510) {
       $511 = (($$p$i) + 25)|0;
       $512 = (($511|0) / 9)&-1;
       $513 = (($512) + 1)|0;
       $514 = ($395|0)==(102);
       $516 = $$pr50$i;$a$3136$i = $a$1$lcssa$i;$z$3135$i = $z$1$lcssa$i;
       while(1) {
        $515 = (0 - ($516))|0;
        $517 = ($515|0)>(9);
        $518 = $517 ? 9 : $515;
        $519 = ($a$3136$i>>>0)<($z$3135$i>>>0);
        do {
         if ($519) {
          $523 = 1 << $518;
          $524 = (($523) + -1)|0;
          $525 = 1000000000 >>> $518;
          $carry3$0130$i = 0;$d$1129$i = $a$3136$i;
          while(1) {
           $526 = HEAP32[$d$1129$i>>2]|0;
           $527 = $526 & $524;
           $528 = $526 >>> $518;
           $529 = (($528) + ($carry3$0130$i))|0;
           HEAP32[$d$1129$i>>2] = $529;
           $530 = Math_imul($527, $525)|0;
           $531 = ((($d$1129$i)) + 4|0);
           $532 = ($531>>>0)<($z$3135$i>>>0);
           if ($532) {
            $carry3$0130$i = $530;$d$1129$i = $531;
           } else {
            $$lcssa306 = $530;
            break;
           }
          }
          $533 = HEAP32[$a$3136$i>>2]|0;
          $534 = ($533|0)==(0);
          $535 = ((($a$3136$i)) + 4|0);
          $$a$3$i = $534 ? $535 : $a$3136$i;
          $536 = ($$lcssa306|0)==(0);
          if ($536) {
           $$a$3192$i = $$a$3$i;$z$4$i = $z$3135$i;
           break;
          }
          $537 = ((($z$3135$i)) + 4|0);
          HEAP32[$z$3135$i>>2] = $$lcssa306;
          $$a$3192$i = $$a$3$i;$z$4$i = $537;
         } else {
          $520 = HEAP32[$a$3136$i>>2]|0;
          $521 = ($520|0)==(0);
          $522 = ((($a$3136$i)) + 4|0);
          $$a$3191$i = $521 ? $522 : $a$3136$i;
          $$a$3192$i = $$a$3191$i;$z$4$i = $z$3135$i;
         }
        } while(0);
        $538 = $514 ? $$33$i : $$a$3192$i;
        $539 = $z$4$i;
        $540 = $538;
        $541 = (($539) - ($540))|0;
        $542 = $541 >> 2;
        $543 = ($542|0)>($513|0);
        $544 = (($538) + ($513<<2)|0);
        $$z$4$i = $543 ? $544 : $z$4$i;
        $545 = HEAP32[$e2$i>>2]|0;
        $546 = (($545) + ($518))|0;
        HEAP32[$e2$i>>2] = $546;
        $547 = ($546|0)<(0);
        if ($547) {
         $516 = $546;$a$3136$i = $$a$3192$i;$z$3135$i = $$z$4$i;
        } else {
         $a$3$lcssa$i = $$a$3192$i;$z$3$lcssa$i = $$z$4$i;
         break;
        }
       }
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
      }
      $548 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($548) {
        $549 = $a$3$lcssa$i;
        $550 = (($479) - ($549))|0;
        $551 = $550 >> 2;
        $552 = ($551*9)|0;
        $553 = HEAP32[$a$3$lcssa$i>>2]|0;
        $554 = ($553>>>0)<(10);
        if ($554) {
         $e$1$i = $552;
         break;
        } else {
         $e$0125$i = $552;$i$0124$i = 10;
        }
        while(1) {
         $555 = ($i$0124$i*10)|0;
         $556 = (($e$0125$i) + 1)|0;
         $557 = ($553>>>0)<($555>>>0);
         if ($557) {
          $e$1$i = $556;
          break;
         } else {
          $e$0125$i = $556;$i$0124$i = $555;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $558 = ($395|0)!=(102);
      $559 = $558 ? $e$1$i : 0;
      $560 = (($$p$i) - ($559))|0;
      $561 = ($395|0)==(103);
      $562 = ($$p$i|0)!=(0);
      $563 = $562 & $561;
      $$neg55$i = $563 << 31 >> 31;
      $564 = (($560) + ($$neg55$i))|0;
      $565 = $z$3$lcssa$i;
      $566 = (($565) - ($479))|0;
      $567 = $566 >> 2;
      $568 = ($567*9)|0;
      $569 = (($568) + -9)|0;
      $570 = ($564|0)<($569|0);
      if ($570) {
       $571 = ((($$33$i)) + 4|0);
       $572 = (($564) + 9216)|0;
       $573 = (($572|0) / 9)&-1;
       $574 = (($573) + -1024)|0;
       $575 = (($571) + ($574<<2)|0);
       $576 = (($572|0) % 9)&-1;
       $j$0117$i = (($576) + 1)|0;
       $577 = ($j$0117$i|0)<(9);
       if ($577) {
        $i$1118$i = 10;$j$0119$i = $j$0117$i;
        while(1) {
         $578 = ($i$1118$i*10)|0;
         $j$0$i = (($j$0119$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $578;
          break;
         } else {
          $i$1118$i = $578;$j$0119$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $579 = HEAP32[$575>>2]|0;
       $580 = (($579>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $581 = ($580|0)==(0);
       $582 = ((($575)) + 4|0);
       $583 = ($582|0)==($z$3$lcssa$i|0);
       $or$cond18$i = $583 & $581;
       do {
        if ($or$cond18$i) {
         $a$8$i = $a$3$lcssa$i;$d$4$i = $575;$e$4$i = $e$1$i;
        } else {
         $584 = (($579>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $585 = $584 & 1;
         $586 = ($585|0)==(0);
         $$20$i = $586 ? 9007199254740992.0 : 9007199254740994.0;
         $587 = (($i$1$lcssa$i|0) / 2)&-1;
         $588 = ($580>>>0)<($587>>>0);
         if ($588) {
          $small$0$i = 0.5;
         } else {
          $589 = ($580|0)==($587|0);
          $or$cond22$i = $583 & $589;
          $$36$i = $or$cond22$i ? 1.0 : 1.5;
          $small$0$i = $$36$i;
         }
         $590 = ($pl$0$i|0)==(0);
         do {
          if ($590) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $591 = HEAP8[$prefix$0$i>>0]|0;
           $592 = ($591<<24>>24)==(45);
           if (!($592)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $593 = -$$20$i;
           $594 = -$small$0$i;
           $round6$1$i = $593;$small$1$i = $594;
          }
         } while(0);
         $595 = (($579) - ($580))|0;
         HEAP32[$575>>2] = $595;
         $596 = $round6$1$i + $small$1$i;
         $597 = $596 != $round6$1$i;
         if (!($597)) {
          $a$8$i = $a$3$lcssa$i;$d$4$i = $575;$e$4$i = $e$1$i;
          break;
         }
         $598 = (($595) + ($i$1$lcssa$i))|0;
         HEAP32[$575>>2] = $598;
         $599 = ($598>>>0)>(999999999);
         if ($599) {
          $a$5111$i = $a$3$lcssa$i;$d$2110$i = $575;
          while(1) {
           $600 = ((($d$2110$i)) + -4|0);
           HEAP32[$d$2110$i>>2] = 0;
           $601 = ($600>>>0)<($a$5111$i>>>0);
           if ($601) {
            $602 = ((($a$5111$i)) + -4|0);
            HEAP32[$602>>2] = 0;
            $a$6$i = $602;
           } else {
            $a$6$i = $a$5111$i;
           }
           $603 = HEAP32[$600>>2]|0;
           $604 = (($603) + 1)|0;
           HEAP32[$600>>2] = $604;
           $605 = ($604>>>0)>(999999999);
           if ($605) {
            $a$5111$i = $a$6$i;$d$2110$i = $600;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $600;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $575;
         }
         $606 = $a$5$lcssa$i;
         $607 = (($479) - ($606))|0;
         $608 = $607 >> 2;
         $609 = ($608*9)|0;
         $610 = HEAP32[$a$5$lcssa$i>>2]|0;
         $611 = ($610>>>0)<(10);
         if ($611) {
          $a$8$i = $a$5$lcssa$i;$d$4$i = $d$2$lcssa$i;$e$4$i = $609;
          break;
         } else {
          $e$2106$i = $609;$i$2105$i = 10;
         }
         while(1) {
          $612 = ($i$2105$i*10)|0;
          $613 = (($e$2106$i) + 1)|0;
          $614 = ($610>>>0)<($612>>>0);
          if ($614) {
           $a$8$i = $a$5$lcssa$i;$d$4$i = $d$2$lcssa$i;$e$4$i = $613;
           break;
          } else {
           $e$2106$i = $613;$i$2105$i = $612;
          }
         }
        }
       } while(0);
       $615 = ((($d$4$i)) + 4|0);
       $616 = ($z$3$lcssa$i>>>0)>($615>>>0);
       $$z$3$i = $616 ? $615 : $z$3$lcssa$i;
       $a$9$ph$i = $a$8$i;$e$5$ph$i = $e$4$i;$z$7$ph$i = $$z$3$i;
      } else {
       $a$9$ph$i = $a$3$lcssa$i;$e$5$ph$i = $e$1$i;$z$7$ph$i = $z$3$lcssa$i;
      }
      $617 = (0 - ($e$5$ph$i))|0;
      $z$7$i = $z$7$ph$i;
      while(1) {
       $618 = ($z$7$i>>>0)>($a$9$ph$i>>>0);
       if (!($618)) {
        $$lcssa162$i = 0;$z$7$i$lcssa = $z$7$i;
        break;
       }
       $619 = ((($z$7$i)) + -4|0);
       $620 = HEAP32[$619>>2]|0;
       $621 = ($620|0)==(0);
       if ($621) {
        $z$7$i = $619;
       } else {
        $$lcssa162$i = 1;$z$7$i$lcssa = $z$7$i;
        break;
       }
      }
      do {
       if ($561) {
        $622 = $562&1;
        $623 = $622 ^ 1;
        $$p$$i = (($623) + ($$p$i))|0;
        $624 = ($$p$$i|0)>($e$5$ph$i|0);
        $625 = ($e$5$ph$i|0)>(-5);
        $or$cond6$i = $624 & $625;
        if ($or$cond6$i) {
         $626 = (($t$0) + -1)|0;
         $$neg56$i = (($$p$$i) + -1)|0;
         $627 = (($$neg56$i) - ($e$5$ph$i))|0;
         $$013$i = $626;$$210$i = $627;
        } else {
         $628 = (($t$0) + -2)|0;
         $629 = (($$p$$i) + -1)|0;
         $$013$i = $628;$$210$i = $629;
        }
        $630 = $fl$1$ & 8;
        $631 = ($630|0)==(0);
        if (!($631)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi190$iZ2D = $630;
         break;
        }
        do {
         if ($$lcssa162$i) {
          $632 = ((($z$7$i$lcssa)) + -4|0);
          $633 = HEAP32[$632>>2]|0;
          $634 = ($633|0)==(0);
          if ($634) {
           $j$2$i = 9;
           break;
          }
          $635 = (($633>>>0) % 10)&-1;
          $636 = ($635|0)==(0);
          if ($636) {
           $i$3101$i = 10;$j$1102$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $637 = ($i$3101$i*10)|0;
           $638 = (($j$1102$i) + 1)|0;
           $639 = (($633>>>0) % ($637>>>0))&-1;
           $640 = ($639|0)==(0);
           if ($640) {
            $i$3101$i = $637;$j$1102$i = $638;
           } else {
            $j$2$i = $638;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $641 = $$013$i | 32;
        $642 = ($641|0)==(102);
        $643 = $z$7$i$lcssa;
        $644 = (($643) - ($479))|0;
        $645 = $644 >> 2;
        $646 = ($645*9)|0;
        $647 = (($646) + -9)|0;
        if ($642) {
         $648 = (($647) - ($j$2$i))|0;
         $649 = ($648|0)<(0);
         $$23$i = $649 ? 0 : $648;
         $650 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $650 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi190$iZ2D = 0;
         break;
        } else {
         $651 = (($647) + ($e$5$ph$i))|0;
         $652 = (($651) - ($j$2$i))|0;
         $653 = ($652|0)<(0);
         $$25$i = $653 ? 0 : $652;
         $654 = ($$210$i|0)<($$25$i|0);
         $$210$$26$i = $654 ? $$210$i : $$25$i;
         $$114$i = $$013$i;$$311$i = $$210$$26$i;$$pre$phi190$iZ2D = 0;
         break;
        }
       } else {
        $$pre189$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi190$iZ2D = $$pre189$i;
       }
      } while(0);
      $655 = $$311$i | $$pre$phi190$iZ2D;
      $656 = ($655|0)!=(0);
      $657 = $656&1;
      $658 = $$114$i | 32;
      $659 = ($658|0)==(102);
      if ($659) {
       $660 = ($e$5$ph$i|0)>(0);
       $661 = $660 ? $e$5$ph$i : 0;
       $$pn$i = $661;$estr$2$i = 0;
      } else {
       $662 = ($e$5$ph$i|0)<(0);
       $663 = $662 ? $617 : $e$5$ph$i;
       $664 = ($663|0)<(0);
       $665 = $664 << 31 >> 31;
       $666 = (_fmt_u($663,$665,$7)|0);
       $667 = $666;
       $668 = (($9) - ($667))|0;
       $669 = ($668|0)<(2);
       if ($669) {
        $estr$195$i = $666;
        while(1) {
         $670 = ((($estr$195$i)) + -1|0);
         HEAP8[$670>>0] = 48;
         $671 = $670;
         $672 = (($9) - ($671))|0;
         $673 = ($672|0)<(2);
         if ($673) {
          $estr$195$i = $670;
         } else {
          $estr$1$lcssa$i = $670;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $666;
       }
       $674 = $e$5$ph$i >> 31;
       $675 = $674 & 2;
       $676 = (($675) + 43)|0;
       $677 = $676&255;
       $678 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$678>>0] = $677;
       $679 = $$114$i&255;
       $680 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$680>>0] = $679;
       $681 = $680;
       $682 = (($9) - ($681))|0;
       $$pn$i = $682;$estr$2$i = $680;
      }
      $683 = (($pl$0$i) + 1)|0;
      $684 = (($683) + ($$311$i))|0;
      $l$1$i = (($684) + ($657))|0;
      $685 = (($l$1$i) + ($$pn$i))|0;
      _pad($f,32,$w$1,$685,$fl$1$);
      $686 = HEAP32[$f>>2]|0;
      $687 = $686 & 32;
      $688 = ($687|0)==(0);
      if ($688) {
       (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      }
      $689 = $fl$1$ ^ 65536;
      _pad($f,48,$w$1,$685,$689);
      do {
       if ($659) {
        $690 = ($a$9$ph$i>>>0)>($$33$i>>>0);
        $r$0$a$9$i = $690 ? $$33$i : $a$9$ph$i;
        $d$584$i = $r$0$a$9$i;
        while(1) {
         $691 = HEAP32[$d$584$i>>2]|0;
         $692 = (_fmt_u($691,0,$14)|0);
         $693 = ($d$584$i|0)==($r$0$a$9$i|0);
         do {
          if ($693) {
           $699 = ($692|0)==($14|0);
           if (!($699)) {
            $s7$1$i = $692;
            break;
           }
           HEAP8[$16>>0] = 48;
           $s7$1$i = $16;
          } else {
           $694 = ($692>>>0)>($buf$i>>>0);
           if (!($694)) {
            $s7$1$i = $692;
            break;
           }
           $695 = $692;
           $696 = (($695) - ($5))|0;
           _memset(($buf$i|0),48,($696|0))|0;
           $s7$081$i = $692;
           while(1) {
            $697 = ((($s7$081$i)) + -1|0);
            $698 = ($697>>>0)>($buf$i>>>0);
            if ($698) {
             $s7$081$i = $697;
            } else {
             $s7$1$i = $697;
             break;
            }
           }
          }
         } while(0);
         $700 = HEAP32[$f>>2]|0;
         $701 = $700 & 32;
         $702 = ($701|0)==(0);
         if ($702) {
          $703 = $s7$1$i;
          $704 = (($15) - ($703))|0;
          (___fwritex($s7$1$i,$704,$f)|0);
         }
         $705 = ((($d$584$i)) + 4|0);
         $706 = ($705>>>0)>($$33$i>>>0);
         if ($706) {
          $$lcssa316 = $705;
          break;
         } else {
          $d$584$i = $705;
         }
        }
        $707 = ($655|0)==(0);
        do {
         if (!($707)) {
          $708 = HEAP32[$f>>2]|0;
          $709 = $708 & 32;
          $710 = ($709|0)==(0);
          if (!($710)) {
           break;
          }
          (___fwritex(16327,1,$f)|0);
         }
        } while(0);
        $711 = ($$lcssa316>>>0)<($z$7$i$lcssa>>>0);
        $712 = ($$311$i|0)>(0);
        $713 = $712 & $711;
        if ($713) {
         $$41278$i = $$311$i;$d$677$i = $$lcssa316;
         while(1) {
          $714 = HEAP32[$d$677$i>>2]|0;
          $715 = (_fmt_u($714,0,$14)|0);
          $716 = ($715>>>0)>($buf$i>>>0);
          if ($716) {
           $717 = $715;
           $718 = (($717) - ($5))|0;
           _memset(($buf$i|0),48,($718|0))|0;
           $s8$072$i = $715;
           while(1) {
            $719 = ((($s8$072$i)) + -1|0);
            $720 = ($719>>>0)>($buf$i>>>0);
            if ($720) {
             $s8$072$i = $719;
            } else {
             $s8$0$lcssa$i = $719;
             break;
            }
           }
          } else {
           $s8$0$lcssa$i = $715;
          }
          $721 = HEAP32[$f>>2]|0;
          $722 = $721 & 32;
          $723 = ($722|0)==(0);
          if ($723) {
           $724 = ($$41278$i|0)>(9);
           $725 = $724 ? 9 : $$41278$i;
           (___fwritex($s8$0$lcssa$i,$725,$f)|0);
          }
          $726 = ((($d$677$i)) + 4|0);
          $727 = (($$41278$i) + -9)|0;
          $728 = ($726>>>0)<($z$7$i$lcssa>>>0);
          $729 = ($$41278$i|0)>(9);
          $730 = $729 & $728;
          if ($730) {
           $$41278$i = $727;$d$677$i = $726;
          } else {
           $$412$lcssa$i = $727;
           break;
          }
         }
        } else {
         $$412$lcssa$i = $$311$i;
        }
        $731 = (($$412$lcssa$i) + 9)|0;
        _pad($f,48,$731,9,0);
       } else {
        $732 = ((($a$9$ph$i)) + 4|0);
        $z$7$$i = $$lcssa162$i ? $z$7$i$lcssa : $732;
        $733 = ($$311$i|0)>(-1);
        if ($733) {
         $734 = ($$pre$phi190$iZ2D|0)==(0);
         $$589$i = $$311$i;$d$788$i = $a$9$ph$i;
         while(1) {
          $735 = HEAP32[$d$788$i>>2]|0;
          $736 = (_fmt_u($735,0,$14)|0);
          $737 = ($736|0)==($14|0);
          if ($737) {
           HEAP8[$16>>0] = 48;
           $s9$0$i = $16;
          } else {
           $s9$0$i = $736;
          }
          $738 = ($d$788$i|0)==($a$9$ph$i|0);
          do {
           if ($738) {
            $742 = ((($s9$0$i)) + 1|0);
            $743 = HEAP32[$f>>2]|0;
            $744 = $743 & 32;
            $745 = ($744|0)==(0);
            if ($745) {
             (___fwritex($s9$0$i,1,$f)|0);
            }
            $746 = ($$589$i|0)<(1);
            $or$cond31$i = $734 & $746;
            if ($or$cond31$i) {
             $s9$2$i = $742;
             break;
            }
            $747 = HEAP32[$f>>2]|0;
            $748 = $747 & 32;
            $749 = ($748|0)==(0);
            if (!($749)) {
             $s9$2$i = $742;
             break;
            }
            (___fwritex(16327,1,$f)|0);
            $s9$2$i = $742;
           } else {
            $739 = ($s9$0$i>>>0)>($buf$i>>>0);
            if (!($739)) {
             $s9$2$i = $s9$0$i;
             break;
            }
            $scevgep182$i = (($s9$0$i) + ($6)|0);
            $scevgep182183$i = $scevgep182$i;
            _memset(($buf$i|0),48,($scevgep182183$i|0))|0;
            $s9$185$i = $s9$0$i;
            while(1) {
             $740 = ((($s9$185$i)) + -1|0);
             $741 = ($740>>>0)>($buf$i>>>0);
             if ($741) {
              $s9$185$i = $740;
             } else {
              $s9$2$i = $740;
              break;
             }
            }
           }
          } while(0);
          $750 = $s9$2$i;
          $751 = (($15) - ($750))|0;
          $752 = HEAP32[$f>>2]|0;
          $753 = $752 & 32;
          $754 = ($753|0)==(0);
          if ($754) {
           $755 = ($$589$i|0)>($751|0);
           $756 = $755 ? $751 : $$589$i;
           (___fwritex($s9$2$i,$756,$f)|0);
          }
          $757 = (($$589$i) - ($751))|0;
          $758 = ((($d$788$i)) + 4|0);
          $759 = ($758>>>0)<($z$7$$i>>>0);
          $760 = ($757|0)>(-1);
          $761 = $759 & $760;
          if ($761) {
           $$589$i = $757;$d$788$i = $758;
          } else {
           $$5$lcssa$i = $757;
           break;
          }
         }
        } else {
         $$5$lcssa$i = $$311$i;
        }
        $762 = (($$5$lcssa$i) + 18)|0;
        _pad($f,48,$762,18,0);
        $763 = HEAP32[$f>>2]|0;
        $764 = $763 & 32;
        $765 = ($764|0)==(0);
        if (!($765)) {
         break;
        }
        $766 = $estr$2$i;
        $767 = (($9) - ($766))|0;
        (___fwritex($estr$2$i,$767,$f)|0);
       }
      } while(0);
      $768 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$685,$768);
      $769 = ($685|0)<($w$1|0);
      $w$32$i = $769 ? $w$1 : $685;
      $$0$i = $w$32$i;
     } else {
      $375 = $t$0 & 32;
      $376 = ($375|0)!=(0);
      $377 = $376 ? 16315 : 16319;
      $378 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $379 = $376 ? 16338 : 16323;
      $pl$1$i = $378 ? 0 : $pl$0$i;
      $s1$0$i = $378 ? $379 : $377;
      $380 = (($pl$1$i) + 3)|0;
      _pad($f,32,$w$1,$380,$176);
      $381 = HEAP32[$f>>2]|0;
      $382 = $381 & 32;
      $383 = ($382|0)==(0);
      if ($383) {
       (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
       $$pre$i = HEAP32[$f>>2]|0;
       $385 = $$pre$i;
      } else {
       $385 = $381;
      }
      $384 = $385 & 32;
      $386 = ($384|0)==(0);
      if ($386) {
       (___fwritex($s1$0$i,3,$f)|0);
      }
      $387 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$380,$387);
      $388 = ($380|0)<($w$1|0);
      $389 = $388 ? $w$1 : $380;
      $$0$i = $389;
     }
    } while(0);
    $cnt$0 = $cnt$1;$l$0 = $$0$i;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
    continue L1;
    break;
   }
   default: {
    $a$2 = $s$0;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 16279;$z$2 = $1;
   }
   }
  } while(0);
  L311: do {
   if ((label|0) == 64) {
    label = 0;
    $207 = $arg;
    $208 = $207;
    $209 = HEAP32[$208>>2]|0;
    $210 = (($207) + 4)|0;
    $211 = $210;
    $212 = HEAP32[$211>>2]|0;
    $213 = $t$1 & 32;
    $214 = ($209|0)==(0);
    $215 = ($212|0)==(0);
    $216 = $214 & $215;
    if ($216) {
     $a$0 = $1;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 16279;
     label = 77;
    } else {
     $$012$i = $1;$218 = $209;$225 = $212;
     while(1) {
      $217 = $218 & 15;
      $219 = (16263 + ($217)|0);
      $220 = HEAP8[$219>>0]|0;
      $221 = $220&255;
      $222 = $221 | $213;
      $223 = $222&255;
      $224 = ((($$012$i)) + -1|0);
      HEAP8[$224>>0] = $223;
      $226 = (_bitshift64Lshr(($218|0),($225|0),4)|0);
      $227 = tempRet0;
      $228 = ($226|0)==(0);
      $229 = ($227|0)==(0);
      $230 = $228 & $229;
      if ($230) {
       $$lcssa321 = $224;
       break;
      } else {
       $$012$i = $224;$218 = $226;$225 = $227;
      }
     }
     $231 = $arg;
     $232 = $231;
     $233 = HEAP32[$232>>2]|0;
     $234 = (($231) + 4)|0;
     $235 = $234;
     $236 = HEAP32[$235>>2]|0;
     $237 = ($233|0)==(0);
     $238 = ($236|0)==(0);
     $239 = $237 & $238;
     $240 = $fl$3 & 8;
     $241 = ($240|0)==(0);
     $or$cond17 = $241 | $239;
     if ($or$cond17) {
      $a$0 = $$lcssa321;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 16279;
      label = 77;
     } else {
      $242 = $t$1 >> 4;
      $243 = (16279 + ($242)|0);
      $a$0 = $$lcssa321;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $243;
      label = 77;
     }
    }
   }
   else if ((label|0) == 76) {
    label = 0;
    $289 = (_fmt_u($287,$288,$1)|0);
    $a$0 = $289;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 77;
   }
   else if ((label|0) == 82) {
    label = 0;
    $321 = (_memchr($a$1,0,$p$0)|0);
    $322 = ($321|0)==(0|0);
    $323 = $321;
    $324 = $a$1;
    $325 = (($323) - ($324))|0;
    $326 = (($a$1) + ($p$0)|0);
    $z$1 = $322 ? $326 : $321;
    $p$3 = $322 ? $p$0 : $325;
    $a$2 = $a$1;$fl$6 = $176;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 16279;$z$2 = $z$1;
   }
   else if ((label|0) == 86) {
    label = 0;
    $i$0105 = 0;$l$1104 = 0;$ws$0106 = $798;
    while(1) {
     $334 = HEAP32[$ws$0106>>2]|0;
     $335 = ($334|0)==(0);
     if ($335) {
      $i$0$lcssa = $i$0105;$l$2 = $l$1104;
      break;
     }
     $336 = (_wctomb($mb,$334)|0);
     $337 = ($336|0)<(0);
     $338 = (($p$4176) - ($i$0105))|0;
     $339 = ($336>>>0)>($338>>>0);
     $or$cond20 = $337 | $339;
     if ($or$cond20) {
      $i$0$lcssa = $i$0105;$l$2 = $336;
      break;
     }
     $340 = ((($ws$0106)) + 4|0);
     $341 = (($336) + ($i$0105))|0;
     $342 = ($p$4176>>>0)>($341>>>0);
     if ($342) {
      $i$0105 = $341;$l$1104 = $336;$ws$0106 = $340;
     } else {
      $i$0$lcssa = $341;$l$2 = $336;
      break;
     }
    }
    $343 = ($l$2|0)<(0);
    if ($343) {
     $$0 = -1;
     break L1;
    }
    _pad($f,32,$w$1,$i$0$lcssa,$fl$1$);
    $344 = ($i$0$lcssa|0)==(0);
    if ($344) {
     $i$0$lcssa178 = 0;
     label = 97;
    } else {
     $i$1116 = 0;$ws$1117 = $798;
     while(1) {
      $345 = HEAP32[$ws$1117>>2]|0;
      $346 = ($345|0)==(0);
      if ($346) {
       $i$0$lcssa178 = $i$0$lcssa;
       label = 97;
       break L311;
      }
      $347 = ((($ws$1117)) + 4|0);
      $348 = (_wctomb($mb,$345)|0);
      $349 = (($348) + ($i$1116))|0;
      $350 = ($349|0)>($i$0$lcssa|0);
      if ($350) {
       $i$0$lcssa178 = $i$0$lcssa;
       label = 97;
       break L311;
      }
      $351 = HEAP32[$f>>2]|0;
      $352 = $351 & 32;
      $353 = ($352|0)==(0);
      if ($353) {
       (___fwritex($mb,$348,$f)|0);
      }
      $354 = ($349>>>0)<($i$0$lcssa>>>0);
      if ($354) {
       $i$1116 = $349;$ws$1117 = $347;
      } else {
       $i$0$lcssa178 = $i$0$lcssa;
       label = 97;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 97) {
   label = 0;
   $355 = $fl$1$ ^ 8192;
   _pad($f,32,$w$1,$i$0$lcssa178,$355);
   $356 = ($w$1|0)>($i$0$lcssa178|0);
   $357 = $356 ? $w$1 : $i$0$lcssa178;
   $cnt$0 = $cnt$1;$l$0 = $357;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
   continue;
  }
  if ((label|0) == 77) {
   label = 0;
   $290 = ($p$2|0)>(-1);
   $291 = $fl$4 & -65537;
   $$fl$4 = $290 ? $291 : $fl$4;
   $292 = $arg;
   $293 = $292;
   $294 = HEAP32[$293>>2]|0;
   $295 = (($292) + 4)|0;
   $296 = $295;
   $297 = HEAP32[$296>>2]|0;
   $298 = ($294|0)!=(0);
   $299 = ($297|0)!=(0);
   $300 = $298 | $299;
   $301 = ($p$2|0)!=(0);
   $or$cond = $301 | $300;
   if ($or$cond) {
    $302 = $a$0;
    $303 = (($2) - ($302))|0;
    $304 = $300&1;
    $305 = $304 ^ 1;
    $306 = (($305) + ($303))|0;
    $307 = ($p$2|0)>($306|0);
    $p$2$ = $307 ? $p$2 : $306;
    $a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   } else {
    $a$2 = $1;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   }
  }
  $770 = $z$2;
  $771 = $a$2;
  $772 = (($770) - ($771))|0;
  $773 = ($p$5|0)<($772|0);
  $$p$5 = $773 ? $772 : $p$5;
  $774 = (($pl$2) + ($$p$5))|0;
  $775 = ($w$1|0)<($774|0);
  $w$2 = $775 ? $774 : $w$1;
  _pad($f,32,$w$2,$774,$fl$6);
  $776 = HEAP32[$f>>2]|0;
  $777 = $776 & 32;
  $778 = ($777|0)==(0);
  if ($778) {
   (___fwritex($prefix$2,$pl$2,$f)|0);
  }
  $779 = $fl$6 ^ 65536;
  _pad($f,48,$w$2,$774,$779);
  _pad($f,48,$$p$5,$772,0);
  $780 = HEAP32[$f>>2]|0;
  $781 = $780 & 32;
  $782 = ($781|0)==(0);
  if ($782) {
   (___fwritex($a$2,$772,$f)|0);
  }
  $783 = $fl$6 ^ 8192;
  _pad($f,32,$w$2,$774,$783);
  $cnt$0 = $cnt$1;$l$0 = $w$2;$l10n$0 = $l10n$3;$s$0 = $$lcssa300;
 }
 L345: do {
  if ((label|0) == 244) {
   $784 = ($f|0)==(0|0);
   if ($784) {
    $785 = ($l10n$0$lcssa|0)==(0);
    if ($785) {
     $$0 = 0;
    } else {
     $i$291 = 1;
     while(1) {
      $786 = (($nl_type) + ($i$291<<2)|0);
      $787 = HEAP32[$786>>2]|0;
      $788 = ($787|0)==(0);
      if ($788) {
       $i$291$lcssa = $i$291;
       break;
      }
      $790 = (($nl_arg) + ($i$291<<3)|0);
      _pop_arg($790,$787,$ap);
      $791 = (($i$291) + 1)|0;
      $792 = ($791|0)<(10);
      if ($792) {
       $i$291 = $791;
      } else {
       $$0 = 1;
       break L345;
      }
     }
     $789 = ($i$291$lcssa|0)<(10);
     if ($789) {
      $i$389 = $i$291$lcssa;
      while(1) {
       $795 = (($nl_type) + ($i$389<<2)|0);
       $796 = HEAP32[$795>>2]|0;
       $797 = ($796|0)==(0);
       $793 = (($i$389) + 1)|0;
       if (!($797)) {
        $$0 = -1;
        break L345;
       }
       $794 = ($793|0)<(10);
       if ($794) {
        $i$389 = $793;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $cnt$1$lcssa;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa12 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $4 = (___towrite($f)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   $$pre = HEAP32[$0>>2]|0;
   $9 = $$pre;
   label = 5;
  } else {
   $$0 = 0;
  }
 } else {
  $3 = $1;
  $9 = $3;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $6 = ((($f)) + 20|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (($9) - ($7))|0;
   $10 = ($8>>>0)<($l>>>0);
   $11 = $7;
   if ($10) {
    $12 = ((($f)) + 36|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (FUNCTION_TABLE_iiii[$13 & 1023]($f,$s,$l)|0);
    $$0 = $14;
    break;
   }
   $15 = ((($f)) + 75|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = ($16<<24>>24)>(-1);
   L10: do {
    if ($17) {
     $i$0 = $l;
     while(1) {
      $18 = ($i$0|0)==(0);
      if ($18) {
       $$01 = $l;$$02 = $s;$29 = $11;$i$1 = 0;
       break L10;
      }
      $19 = (($i$0) + -1)|0;
      $20 = (($s) + ($19)|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(10);
      if ($22) {
       $i$0$lcssa12 = $i$0;
       break;
      } else {
       $i$0 = $19;
      }
     }
     $23 = ((($f)) + 36|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iiii[$24 & 1023]($f,$s,$i$0$lcssa12)|0);
     $26 = ($25>>>0)<($i$0$lcssa12>>>0);
     if ($26) {
      $$0 = $i$0$lcssa12;
      break L5;
     }
     $27 = (($s) + ($i$0$lcssa12)|0);
     $28 = (($l) - ($i$0$lcssa12))|0;
     $$pre6 = HEAP32[$6>>2]|0;
     $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa12;
    } else {
     $$01 = $l;$$02 = $s;$29 = $11;$i$1 = 0;
    }
   } while(0);
   _memcpy(($29|0),($$02|0),($$01|0))|0;
   $30 = HEAP32[$6>>2]|0;
   $31 = (($30) + ($$01)|0);
   HEAP32[$6>>2] = $31;
   $32 = (($i$1) + ($$01))|0;
   $$0 = $32;
  }
 } while(0);
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
 }
 return ($$0|0);
}
function _pop_arg($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $$mask = 0, $$mask1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type>>>0)>(20);
 L1: do {
  if (!($0)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $1 = $arglist_current;
     $2 = ((0) + 4|0);
     $expanded28 = $2;
     $expanded = (($expanded28) - 1)|0;
     $3 = (($1) + ($expanded))|0;
     $4 = ((0) + 4|0);
     $expanded32 = $4;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $5 = $3 & $expanded30;
     $6 = $5;
     $7 = HEAP32[$6>>2]|0;
     $arglist_next = ((($6)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $7;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $8 = $arglist_current2;
     $9 = ((0) + 4|0);
     $expanded35 = $9;
     $expanded34 = (($expanded35) - 1)|0;
     $10 = (($8) + ($expanded34))|0;
     $11 = ((0) + 4|0);
     $expanded39 = $11;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $12 = $10 & $expanded37;
     $13 = $12;
     $14 = HEAP32[$13>>2]|0;
     $arglist_next3 = ((($13)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $15 = ($14|0)<(0);
     $16 = $15 << 31 >> 31;
     $17 = $arg;
     $18 = $17;
     HEAP32[$18>>2] = $14;
     $19 = (($17) + 4)|0;
     $20 = $19;
     HEAP32[$20>>2] = $16;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $21 = $arglist_current5;
     $22 = ((0) + 4|0);
     $expanded42 = $22;
     $expanded41 = (($expanded42) - 1)|0;
     $23 = (($21) + ($expanded41))|0;
     $24 = ((0) + 4|0);
     $expanded46 = $24;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $25 = $23 & $expanded44;
     $26 = $25;
     $27 = HEAP32[$26>>2]|0;
     $arglist_next6 = ((($26)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $28 = $arg;
     $29 = $28;
     HEAP32[$29>>2] = $27;
     $30 = (($28) + 4)|0;
     $31 = $30;
     HEAP32[$31>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $32 = $arglist_current8;
     $33 = ((0) + 8|0);
     $expanded49 = $33;
     $expanded48 = (($expanded49) - 1)|0;
     $34 = (($32) + ($expanded48))|0;
     $35 = ((0) + 8|0);
     $expanded53 = $35;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $36 = $34 & $expanded51;
     $37 = $36;
     $38 = $37;
     $39 = $38;
     $40 = HEAP32[$39>>2]|0;
     $41 = (($38) + 4)|0;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $arglist_next9 = ((($37)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $44 = $arg;
     $45 = $44;
     HEAP32[$45>>2] = $40;
     $46 = (($44) + 4)|0;
     $47 = $46;
     HEAP32[$47>>2] = $43;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $48 = $arglist_current11;
     $49 = ((0) + 4|0);
     $expanded56 = $49;
     $expanded55 = (($expanded56) - 1)|0;
     $50 = (($48) + ($expanded55))|0;
     $51 = ((0) + 4|0);
     $expanded60 = $51;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $52 = $50 & $expanded58;
     $53 = $52;
     $54 = HEAP32[$53>>2]|0;
     $arglist_next12 = ((($53)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $55 = $54&65535;
     $56 = $55 << 16 >> 16;
     $57 = ($56|0)<(0);
     $58 = $57 << 31 >> 31;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $63 = $arglist_current14;
     $64 = ((0) + 4|0);
     $expanded63 = $64;
     $expanded62 = (($expanded63) - 1)|0;
     $65 = (($63) + ($expanded62))|0;
     $66 = ((0) + 4|0);
     $expanded67 = $66;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $67 = $65 & $expanded65;
     $68 = $67;
     $69 = HEAP32[$68>>2]|0;
     $arglist_next15 = ((($68)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $$mask1 = $69 & 65535;
     $70 = $arg;
     $71 = $70;
     HEAP32[$71>>2] = $$mask1;
     $72 = (($70) + 4)|0;
     $73 = $72;
     HEAP32[$73>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $74 = $arglist_current17;
     $75 = ((0) + 4|0);
     $expanded70 = $75;
     $expanded69 = (($expanded70) - 1)|0;
     $76 = (($74) + ($expanded69))|0;
     $77 = ((0) + 4|0);
     $expanded74 = $77;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $78 = $76 & $expanded72;
     $79 = $78;
     $80 = HEAP32[$79>>2]|0;
     $arglist_next18 = ((($79)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $81 = $80&255;
     $82 = $81 << 24 >> 24;
     $83 = ($82|0)<(0);
     $84 = $83 << 31 >> 31;
     $85 = $arg;
     $86 = $85;
     HEAP32[$86>>2] = $82;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $84;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $89 = $arglist_current20;
     $90 = ((0) + 4|0);
     $expanded77 = $90;
     $expanded76 = (($expanded77) - 1)|0;
     $91 = (($89) + ($expanded76))|0;
     $92 = ((0) + 4|0);
     $expanded81 = $92;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $93 = $91 & $expanded79;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next21 = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $$mask = $95 & 255;
     $96 = $arg;
     $97 = $96;
     HEAP32[$97>>2] = $$mask;
     $98 = (($96) + 4)|0;
     $99 = $98;
     HEAP32[$99>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $100 = $arglist_current23;
     $101 = ((0) + 8|0);
     $expanded84 = $101;
     $expanded83 = (($expanded84) - 1)|0;
     $102 = (($100) + ($expanded83))|0;
     $103 = ((0) + 8|0);
     $expanded88 = $103;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $104 = $102 & $expanded86;
     $105 = $104;
     $106 = +HEAPF64[$105>>3];
     $arglist_next24 = ((($105)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $106;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $107 = $arglist_current26;
     $108 = ((0) + 8|0);
     $expanded91 = $108;
     $expanded90 = (($expanded91) - 1)|0;
     $109 = (($107) + ($expanded90))|0;
     $110 = ((0) + 8|0);
     $expanded95 = $110;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $111 = $109 & $expanded93;
     $112 = $111;
     $113 = +HEAPF64[$112>>3];
     $arglist_next27 = ((($112)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $113;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa19 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $$05 = $s;$7 = $0;$8 = $1;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9 | 48;
   $12 = $11&255;
   $13 = ((($$05)) + -1|0);
   HEAP8[$13>>0] = $12;
   $14 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $15 = tempRet0;
   $16 = ($8>>>0)>(9);
   $17 = ($7>>>0)>(4294967295);
   $18 = ($8|0)==(9);
   $19 = $18 & $17;
   $20 = $16 | $19;
   if ($20) {
    $$05 = $13;$7 = $14;$8 = $15;
   } else {
    $$lcssa19 = $13;$28 = $14;$29 = $15;
    break;
   }
  }
  $$0$lcssa = $$lcssa19;$$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;$$01$lcssa$off0 = $0;
 }
 $21 = ($$01$lcssa$off0|0)==(0);
 if ($21) {
  $$1$lcssa = $$0$lcssa;
 } else {
  $$12 = $$0$lcssa;$y$03 = $$01$lcssa$off0;
  while(1) {
   $22 = (($y$03>>>0) % 10)&-1;
   $23 = $22 | 48;
   $24 = $23&255;
   $25 = ((($$12)) + -1|0);
   HEAP8[$25>>0] = $24;
   $26 = (($y$03>>>0) / 10)&-1;
   $27 = ($y$03>>>0)<(10);
   if ($27) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;$y$03 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $$0$lcssa6 = 0, $$02 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $pad = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pad = sp;
 $0 = $fl & 73728;
 $1 = ($0|0)==(0);
 $2 = ($w|0)>($l|0);
 $or$cond = $2 & $1;
 do {
  if ($or$cond) {
   $3 = (($w) - ($l))|0;
   $4 = ($3>>>0)>(256);
   $5 = $4 ? 256 : $3;
   _memset(($pad|0),($c|0),($5|0))|0;
   $6 = ($3>>>0)>(255);
   $7 = HEAP32[$f>>2]|0;
   $8 = $7 & 32;
   $9 = ($8|0)==(0);
   if ($6) {
    $10 = (($w) - ($l))|0;
    $$02 = $3;$17 = $7;$18 = $9;
    while(1) {
     if ($18) {
      (___fwritex($pad,256,$f)|0);
      $$pre = HEAP32[$f>>2]|0;
      $14 = $$pre;
     } else {
      $14 = $17;
     }
     $11 = (($$02) + -256)|0;
     $12 = ($11>>>0)>(255);
     $13 = $14 & 32;
     $15 = ($13|0)==(0);
     if ($12) {
      $$02 = $11;$17 = $14;$18 = $15;
     } else {
      break;
     }
    }
    $16 = $10 & 255;
    if ($15) {
     $$0$lcssa6 = $16;
    } else {
     break;
    }
   } else {
    if ($9) {
     $$0$lcssa6 = $3;
    } else {
     break;
    }
   }
   (___fwritex($pad,$$0$lcssa6,$f)|0);
  }
 } while(0);
 STACKTOP = sp;return;
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 do {
  if ($0) {
   $$0 = 1;
  } else {
   $1 = ($wc>>>0)<(128);
   if ($1) {
    $2 = $wc&255;
    HEAP8[$s>>0] = $2;
    $$0 = 1;
    break;
   }
   $3 = ($wc>>>0)<(2048);
   if ($3) {
    $4 = $wc >>> 6;
    $5 = $4 | 192;
    $6 = $5&255;
    $7 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $6;
    $8 = $wc & 63;
    $9 = $8 | 128;
    $10 = $9&255;
    HEAP8[$7>>0] = $10;
    $$0 = 2;
    break;
   }
   $11 = ($wc>>>0)<(55296);
   $12 = $wc & -8192;
   $13 = ($12|0)==(57344);
   $or$cond = $11 | $13;
   if ($or$cond) {
    $14 = $wc >>> 12;
    $15 = $14 | 224;
    $16 = $15&255;
    $17 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $16;
    $18 = $wc >>> 6;
    $19 = $18 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    $22 = ((($s)) + 2|0);
    HEAP8[$17>>0] = $21;
    $23 = $wc & 63;
    $24 = $23 | 128;
    $25 = $24&255;
    HEAP8[$22>>0] = $25;
    $$0 = 3;
    break;
   }
   $26 = (($wc) + -65536)|0;
   $27 = ($26>>>0)<(1048576);
   if ($27) {
    $28 = $wc >>> 18;
    $29 = $28 | 240;
    $30 = $29&255;
    $31 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $30;
    $32 = $wc >>> 12;
    $33 = $32 & 63;
    $34 = $33 | 128;
    $35 = $34&255;
    $36 = ((($s)) + 2|0);
    HEAP8[$31>>0] = $35;
    $37 = $wc >>> 6;
    $38 = $37 & 63;
    $39 = $38 | 128;
    $40 = $39&255;
    $41 = ((($s)) + 3|0);
    HEAP8[$36>>0] = $40;
    $42 = $wc & 63;
    $43 = $42 | 128;
    $44 = $43&255;
    HEAP8[$41>>0] = $44;
    $$0 = 4;
    break;
   } else {
    $45 = (___errno_location()|0);
    HEAP32[$45>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 switch ($4|0) {
 case 0:  {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  break;
 }
 case 2047:  {
  $$0 = $x;
  break;
 }
 default: {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
 }
 }
 return (+$$0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 32|0);
 HEAP32[$0>>2] = 678;
 $1 = ((($f)) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ((($f)) + 76|0);
 HEAP32[$2>>2] = -1;
 $3 = ((($f)) + 84|0);
 HEAP32[$3>>2] = $s;
 $4 = (_vfscanf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($4|0);
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 return ($0|0);
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = (_memchr($1,0,$2)|0);
 $4 = ($3|0)==(0|0);
 $5 = $3;
 $6 = $1;
 $7 = (($5) - ($6))|0;
 $k$0 = $4 ? $2 : $7;
 $8 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $8 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $9 = (($1) + ($k$0$len)|0);
 $10 = ((($f)) + 4|0);
 HEAP32[$10>>2] = $9;
 $11 = (($1) + ($k$0)|0);
 $12 = ((($f)) + 8|0);
 HEAP32[$12>>2] = $11;
 HEAP32[$0>>2] = $11;
 return ($k$0$len|0);
}
function _vfscanf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$14 = 0, $$lcssa = 0, $$lcssa386 = 0, $$lcssa40 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi184Z2D = 0, $$pre173 = 0, $$pre175 = 0, $$pre177 = 0, $$pre179 = 0, $$pre180 = 0, $$pre181 = 0, $$pre182 = 0, $$pre183 = 0;
 var $$size$0 = 0, $$width$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0.0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0402 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $base$0 = 0;
 var $c$0102 = 0, $dest$0 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor18 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$phi = 0, $i$0$ph22 = 0, $i$0$ph22$lcssa = 0, $i$1 = 0;
 var $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0, $isdigit = 0, $isdigit8 = 0, $isdigit897 = 0, $isdigittmp = 0, $isdigittmp7 = 0, $isdigittmp796 = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0$ = 0, $matches$0107 = 0, $matches$0107$lcssa = 0, $matches$0107371 = 0, $matches$1 = 0, $matches$2 = 0;
 var $matches$3 = 0, $not$ = 0, $or$cond = 0, $or$cond10 = 0, $or$cond3 = 0, $or$cond5 = 0, $p$0110 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$398 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0;
 var $p$9 = 0, $pos$0111 = 0, $pos$1 = 0, $pos$2 = 0, $s$0105 = 0, $s$0105$lcssa = 0, $s$1 = 0, $s$2$ph = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $s$9 = 0, $scanset = 0, $size$0 = 0, $st = 0, $vacopy_currentptr = 0, $wc = 0, $wcs$0106 = 0;
 var $wcs$0106$lcssa = 0, $wcs$1 = 0, $wcs$10 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$099 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2$i = sp + 16|0;
 $st = sp + 8|0;
 $scanset = sp + 33|0;
 $wc = sp;
 $0 = sp + 32|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($f)|0);
  $326 = $4;
 } else {
  $326 = 0;
 }
 $5 = HEAP8[$fmt>>0]|0;
 $6 = ($5<<24>>24)==(0);
 L4: do {
  if ($6) {
   $matches$3 = 0;
  } else {
   $7 = ((($f)) + 4|0);
   $8 = ((($f)) + 100|0);
   $9 = ((($f)) + 108|0);
   $10 = ((($f)) + 8|0);
   $11 = ((($scanset)) + 10|0);
   $12 = ((($scanset)) + 33|0);
   $13 = ((($st)) + 4|0);
   $14 = ((($scanset)) + 46|0);
   $15 = ((($scanset)) + 94|0);
   $17 = $5;$matches$0107 = 0;$p$0110 = $fmt;$pos$0111 = 0;$s$0105 = 0;$wcs$0106 = 0;
   L6: while(1) {
    $16 = $17&255;
    $18 = (_isspace($16)|0);
    $19 = ($18|0)==(0);
    L8: do {
     if ($19) {
      $46 = HEAP8[$p$0110>>0]|0;
      $47 = ($46<<24>>24)==(37);
      L10: do {
       if ($47) {
        $48 = ((($p$0110)) + 1|0);
        $49 = HEAP8[$48>>0]|0;
        L12: do {
         switch ($49<<24>>24) {
         case 37:  {
          break L10;
          break;
         }
         case 42:  {
          $70 = ((($p$0110)) + 2|0);
          $dest$0 = 0;$p$2 = $70;
          break;
         }
         default: {
          $71 = $49&255;
          $isdigittmp = (($71) + -48)|0;
          $isdigit = ($isdigittmp>>>0)<(10);
          if ($isdigit) {
           $72 = ((($p$0110)) + 2|0);
           $73 = HEAP8[$72>>0]|0;
           $74 = ($73<<24>>24)==(36);
           if ($74) {
            $vacopy_currentptr = HEAP32[$ap>>2]|0;
            HEAP32[$ap2$i>>2] = $vacopy_currentptr;
            $i$0$i = $isdigittmp;
            while(1) {
             $75 = ($i$0$i>>>0)>(1);
             $arglist_current = HEAP32[$ap2$i>>2]|0;
             $76 = $arglist_current;
             $77 = ((0) + 4|0);
             $expanded4 = $77;
             $expanded = (($expanded4) - 1)|0;
             $78 = (($76) + ($expanded))|0;
             $79 = ((0) + 4|0);
             $expanded8 = $79;
             $expanded7 = (($expanded8) - 1)|0;
             $expanded6 = $expanded7 ^ -1;
             $80 = $78 & $expanded6;
             $81 = $80;
             $82 = HEAP32[$81>>2]|0;
             $arglist_next = ((($81)) + 4|0);
             HEAP32[$ap2$i>>2] = $arglist_next;
             $83 = (($i$0$i) + -1)|0;
             if ($75) {
              $i$0$i = $83;
             } else {
              $$lcssa = $82;
              break;
             }
            }
            $84 = ((($p$0110)) + 3|0);
            $dest$0 = $$lcssa;$p$2 = $84;
            break L12;
           }
          }
          $arglist_current2 = HEAP32[$ap>>2]|0;
          $85 = $arglist_current2;
          $86 = ((0) + 4|0);
          $expanded11 = $86;
          $expanded10 = (($expanded11) - 1)|0;
          $87 = (($85) + ($expanded10))|0;
          $88 = ((0) + 4|0);
          $expanded15 = $88;
          $expanded14 = (($expanded15) - 1)|0;
          $expanded13 = $expanded14 ^ -1;
          $89 = $87 & $expanded13;
          $90 = $89;
          $91 = HEAP32[$90>>2]|0;
          $arglist_next3 = ((($90)) + 4|0);
          HEAP32[$ap>>2] = $arglist_next3;
          $dest$0 = $91;$p$2 = $48;
         }
         }
        } while(0);
        $92 = HEAP8[$p$2>>0]|0;
        $93 = $92&255;
        $isdigittmp796 = (($93) + -48)|0;
        $isdigit897 = ($isdigittmp796>>>0)<(10);
        if ($isdigit897) {
         $97 = $93;$p$398 = $p$2;$width$099 = 0;
         while(1) {
          $94 = ($width$099*10)|0;
          $95 = (($94) + -48)|0;
          $96 = (($95) + ($97))|0;
          $98 = ((($p$398)) + 1|0);
          $99 = HEAP8[$98>>0]|0;
          $100 = $99&255;
          $isdigittmp7 = (($100) + -48)|0;
          $isdigit8 = ($isdigittmp7>>>0)<(10);
          if ($isdigit8) {
           $97 = $100;$p$398 = $98;$width$099 = $96;
          } else {
           $$lcssa40 = $99;$p$3$lcssa = $98;$width$0$lcssa = $96;
           break;
          }
         }
        } else {
         $$lcssa40 = $92;$p$3$lcssa = $p$2;$width$0$lcssa = 0;
        }
        $101 = ($$lcssa40<<24>>24)==(109);
        if ($101) {
         $102 = ($dest$0|0)!=(0|0);
         $103 = $102&1;
         $104 = ((($p$3$lcssa)) + 1|0);
         $$pre173 = HEAP8[$104>>0]|0;
         $107 = $$pre173;$alloc$0 = $103;$p$4 = $104;$s$1 = 0;$wcs$1 = 0;
        } else {
         $107 = $$lcssa40;$alloc$0 = 0;$p$4 = $p$3$lcssa;$s$1 = $s$0105;$wcs$1 = $wcs$0106;
        }
        $105 = ((($p$4)) + 1|0);
        $106 = $107&255;
        switch ($106|0) {
        case 104:  {
         $108 = HEAP8[$105>>0]|0;
         $109 = ($108<<24>>24)==(104);
         $110 = ((($p$4)) + 2|0);
         $$11 = $109 ? $110 : $105;
         $$12 = $109 ? -2 : -1;
         $p$5 = $$11;$size$0 = $$12;
         break;
        }
        case 108:  {
         $111 = HEAP8[$105>>0]|0;
         $112 = ($111<<24>>24)==(108);
         $113 = ((($p$4)) + 2|0);
         $$13 = $112 ? $113 : $105;
         $$14 = $112 ? 3 : 1;
         $p$5 = $$13;$size$0 = $$14;
         break;
        }
        case 106:  {
         $p$5 = $105;$size$0 = 3;
         break;
        }
        case 116: case 122:  {
         $p$5 = $105;$size$0 = 1;
         break;
        }
        case 76:  {
         $p$5 = $105;$size$0 = 2;
         break;
        }
        case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
         $p$5 = $p$4;$size$0 = 0;
         break;
        }
        default: {
         $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = $s$1;$wcs$8 = $wcs$1;
         label = 154;
         break L6;
        }
        }
        $114 = HEAP8[$p$5>>0]|0;
        $115 = $114&255;
        $116 = $115 & 47;
        $117 = ($116|0)==(3);
        $118 = $115 | 32;
        $$ = $117 ? $118 : $115;
        $$size$0 = $117 ? 1 : $size$0;
        switch ($$|0) {
        case 99:  {
         $119 = ($width$0$lcssa|0)<(1);
         $$width$0 = $119 ? 1 : $width$0$lcssa;
         $pos$1 = $pos$0111;$width$1 = $$width$0;
         break;
        }
        case 91:  {
         $pos$1 = $pos$0111;$width$1 = $width$0$lcssa;
         break;
        }
        case 110:  {
         $120 = ($pos$0111|0)<(0);
         $121 = $120 << 31 >> 31;
         $122 = ($dest$0|0)==(0|0);
         if ($122) {
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
         }
         switch ($$size$0|0) {
         case -2:  {
          $123 = $pos$0111&255;
          HEAP8[$dest$0>>0] = $123;
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
          break;
         }
         case -1:  {
          $124 = $pos$0111&65535;
          HEAP16[$dest$0>>1] = $124;
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
          break;
         }
         case 0:  {
          HEAP32[$dest$0>>2] = $pos$0111;
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
          break;
         }
         case 1:  {
          HEAP32[$dest$0>>2] = $pos$0111;
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
          break;
         }
         case 3:  {
          $125 = $dest$0;
          $126 = $125;
          HEAP32[$126>>2] = $pos$0111;
          $127 = (($125) + 4)|0;
          $128 = $127;
          HEAP32[$128>>2] = $121;
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
          break;
         }
         default: {
          $matches$1 = $matches$0107;$p$11 = $p$5;$pos$2 = $pos$0111;$s$6 = $s$1;$wcs$7 = $wcs$1;
          break L8;
         }
         }
         break;
        }
        default: {
         ___shlim($f,0);
         while(1) {
          $129 = HEAP32[$7>>2]|0;
          $130 = HEAP32[$8>>2]|0;
          $131 = ($129>>>0)<($130>>>0);
          if ($131) {
           $132 = ((($129)) + 1|0);
           HEAP32[$7>>2] = $132;
           $133 = HEAP8[$129>>0]|0;
           $134 = $133&255;
           $136 = $134;
          } else {
           $135 = (___shgetc($f)|0);
           $136 = $135;
          }
          $137 = (_isspace($136)|0);
          $138 = ($137|0)==(0);
          if ($138) {
           break;
          }
         }
         $139 = HEAP32[$8>>2]|0;
         $140 = ($139|0)==(0|0);
         if ($140) {
          $$pre175 = HEAP32[$7>>2]|0;
          $148 = $$pre175;
         } else {
          $141 = HEAP32[$7>>2]|0;
          $142 = ((($141)) + -1|0);
          HEAP32[$7>>2] = $142;
          $143 = $142;
          $148 = $143;
         }
         $144 = HEAP32[$9>>2]|0;
         $145 = HEAP32[$10>>2]|0;
         $146 = (($144) + ($pos$0111))|0;
         $147 = (($146) + ($148))|0;
         $149 = (($147) - ($145))|0;
         $pos$1 = $149;$width$1 = $width$0$lcssa;
        }
        }
        ___shlim($f,$width$1);
        $150 = HEAP32[$7>>2]|0;
        $151 = HEAP32[$8>>2]|0;
        $152 = ($150>>>0)<($151>>>0);
        if ($152) {
         $153 = ((($150)) + 1|0);
         HEAP32[$7>>2] = $153;
         $156 = $151;
        } else {
         $154 = (___shgetc($f)|0);
         $155 = ($154|0)<(0);
         if ($155) {
          $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = $s$1;$wcs$8 = $wcs$1;
          label = 154;
          break L6;
         }
         $$pre177 = HEAP32[$8>>2]|0;
         $156 = $$pre177;
        }
        $157 = ($156|0)==(0|0);
        if (!($157)) {
         $158 = HEAP32[$7>>2]|0;
         $159 = ((($158)) + -1|0);
         HEAP32[$7>>2] = $159;
        }
        L68: do {
         switch ($$|0) {
         case 91: case 99: case 115:  {
          $160 = ($$|0)==(99);
          $161 = $$ | 16;
          $162 = ($161|0)==(115);
          L70: do {
           if ($162) {
            $163 = ($$|0)==(115);
            _memset(($scanset|0),-1,257)|0;
            HEAP8[$scanset>>0] = 0;
            if ($163) {
             HEAP8[$12>>0] = 0;
             ;HEAP8[$11>>0]=0|0;HEAP8[$11+1>>0]=0|0;HEAP8[$11+2>>0]=0|0;HEAP8[$11+3>>0]=0|0;HEAP8[$11+4>>0]=0|0;
             $p$9 = $p$5;
            } else {
             $p$9 = $p$5;
            }
           } else {
            $164 = ((($p$5)) + 1|0);
            $165 = HEAP8[$164>>0]|0;
            $166 = ($165<<24>>24)==(94);
            $167 = ((($p$5)) + 2|0);
            $invert$0 = $166&1;
            $p$6 = $166 ? $167 : $164;
            $168 = $166&1;
            _memset(($scanset|0),($168|0),257)|0;
            HEAP8[$scanset>>0] = 0;
            $169 = HEAP8[$p$6>>0]|0;
            switch ($169<<24>>24) {
            case 45:  {
             $170 = ((($p$6)) + 1|0);
             $171 = $invert$0 ^ 1;
             $172 = $171&255;
             HEAP8[$14>>0] = $172;
             $$pre$phi184Z2D = $172;$p$7$ph = $170;
             break;
            }
            case 93:  {
             $173 = ((($p$6)) + 1|0);
             $174 = $invert$0 ^ 1;
             $175 = $174&255;
             HEAP8[$15>>0] = $175;
             $$pre$phi184Z2D = $175;$p$7$ph = $173;
             break;
            }
            default: {
             $$pre182 = $invert$0 ^ 1;
             $$pre183 = $$pre182&255;
             $$pre$phi184Z2D = $$pre183;$p$7$ph = $p$6;
            }
            }
            $p$7 = $p$7$ph;
            while(1) {
             $176 = HEAP8[$p$7>>0]|0;
             L81: do {
              switch ($176<<24>>24) {
              case 0:  {
               $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = $s$1;$wcs$8 = $wcs$1;
               label = 154;
               break L6;
               break;
              }
              case 93:  {
               $p$9 = $p$7;
               break L70;
               break;
              }
              case 45:  {
               $177 = ((($p$7)) + 1|0);
               $178 = HEAP8[$177>>0]|0;
               switch ($178<<24>>24) {
               case 93: case 0:  {
                $189 = 45;$p$8 = $p$7;
                break L81;
                break;
               }
               default: {
               }
               }
               $179 = ((($p$7)) + -1|0);
               $180 = HEAP8[$179>>0]|0;
               $181 = ($180&255)<($178&255);
               if ($181) {
                $182 = $180&255;
                $c$0102 = $182;
                while(1) {
                 $183 = (($c$0102) + 1)|0;
                 $184 = (($scanset) + ($183)|0);
                 HEAP8[$184>>0] = $$pre$phi184Z2D;
                 $185 = HEAP8[$177>>0]|0;
                 $186 = $185&255;
                 $187 = ($183|0)<($186|0);
                 if ($187) {
                  $c$0102 = $183;
                 } else {
                  $189 = $185;$p$8 = $177;
                  break;
                 }
                }
               } else {
                $189 = $178;$p$8 = $177;
               }
               break;
              }
              default: {
               $189 = $176;$p$8 = $p$7;
              }
              }
             } while(0);
             $188 = $189&255;
             $190 = (($188) + 1)|0;
             $191 = (($scanset) + ($190)|0);
             HEAP8[$191>>0] = $$pre$phi184Z2D;
             $192 = ((($p$8)) + 1|0);
             $p$7 = $192;
            }
           }
          } while(0);
          $193 = (($width$1) + 1)|0;
          $194 = $160 ? $193 : 31;
          $195 = ($$size$0|0)==(1);
          $196 = ($alloc$0|0)!=(0);
          L89: do {
           if ($195) {
            if ($196) {
             $197 = $194 << 2;
             $198 = (_malloc($197)|0);
             $199 = ($198|0)==(0|0);
             if ($199) {
              $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = 0;$wcs$8 = $198;
              label = 154;
              break L6;
             } else {
              $wcs$2 = $198;
             }
            } else {
             $wcs$2 = $dest$0;
            }
            HEAP32[$st>>2] = 0;
            HEAP32[$13>>2] = 0;
            $i$0$ph = 0;$k$0$ph = $194;$wcs$3$ph = $wcs$2;
            L95: while(1) {
             $200 = ($wcs$3$ph|0)==(0|0);
             $i$0$ph22 = $i$0$ph;
             while(1) {
              L99: while(1) {
               $201 = HEAP32[$7>>2]|0;
               $202 = HEAP32[$8>>2]|0;
               $203 = ($201>>>0)<($202>>>0);
               if ($203) {
                $204 = ((($201)) + 1|0);
                HEAP32[$7>>2] = $204;
                $205 = HEAP8[$201>>0]|0;
                $206 = $205&255;
                $209 = $206;
               } else {
                $207 = (___shgetc($f)|0);
                $209 = $207;
               }
               $208 = (($209) + 1)|0;
               $210 = (($scanset) + ($208)|0);
               $211 = HEAP8[$210>>0]|0;
               $212 = ($211<<24>>24)==(0);
               if ($212) {
                $i$0$ph22$lcssa = $i$0$ph22;$wcs$3$ph$lcssa = $wcs$3$ph;
                break L95;
               }
               $213 = $209&255;
               HEAP8[$0>>0] = $213;
               $214 = (_mbrtowc($wc,$0,1,$st)|0);
               switch ($214|0) {
               case -1:  {
                $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = 0;$wcs$8 = $wcs$3$ph;
                label = 154;
                break L6;
                break;
               }
               case -2:  {
                break;
               }
               default: {
                break L99;
               }
               }
              }
              if ($200) {
               $i$1 = $i$0$ph22;
              } else {
               $215 = HEAP32[$wc>>2]|0;
               $216 = (($i$0$ph22) + 1)|0;
               $217 = (($wcs$3$ph) + ($i$0$ph22<<2)|0);
               HEAP32[$217>>2] = $215;
               $i$1 = $216;
              }
              $218 = ($i$1|0)==($k$0$ph|0);
              $or$cond = $196 & $218;
              if ($or$cond) {
               break;
              } else {
               $i$0$ph22 = $i$1;
              }
             }
             $factor = $k$0$ph << 1;
             $219 = $factor | 1;
             $220 = $219 << 2;
             $221 = (_realloc($wcs$3$ph,$220)|0);
             $222 = ($221|0)==(0|0);
             if ($222) {
              $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = 0;$wcs$8 = $wcs$3$ph;
              label = 154;
              break L6;
             } else {
              $i$0$ph$phi = $k$0$ph;$k$0$ph = $219;$wcs$3$ph = $221;$i$0$ph = $i$0$ph$phi;
             }
            }
            $223 = (_mbsinit($st)|0);
            $224 = ($223|0)==(0);
            if ($224) {
             $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = 0;$wcs$8 = $wcs$3$ph$lcssa;
             label = 154;
             break L6;
            } else {
             $i$4 = $i$0$ph22$lcssa;$s$4 = 0;$wcs$5 = $wcs$3$ph$lcssa;
            }
           } else {
            if ($196) {
             $225 = (_malloc($194)|0);
             $226 = ($225|0)==(0|0);
             if ($226) {
              $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = 0;$wcs$8 = 0;
              label = 154;
              break L6;
             } else {
              $i$2$ph = 0;$k$1$ph = $194;$s$2$ph = $225;
             }
             while(1) {
              $i$2 = $i$2$ph;
              while(1) {
               $227 = HEAP32[$7>>2]|0;
               $228 = HEAP32[$8>>2]|0;
               $229 = ($227>>>0)<($228>>>0);
               if ($229) {
                $230 = ((($227)) + 1|0);
                HEAP32[$7>>2] = $230;
                $231 = HEAP8[$227>>0]|0;
                $232 = $231&255;
                $235 = $232;
               } else {
                $233 = (___shgetc($f)|0);
                $235 = $233;
               }
               $234 = (($235) + 1)|0;
               $236 = (($scanset) + ($234)|0);
               $237 = HEAP8[$236>>0]|0;
               $238 = ($237<<24>>24)==(0);
               if ($238) {
                $i$4 = $i$2;$s$4 = $s$2$ph;$wcs$5 = 0;
                break L89;
               }
               $239 = $235&255;
               $240 = (($i$2) + 1)|0;
               $241 = (($s$2$ph) + ($i$2)|0);
               HEAP8[$241>>0] = $239;
               $242 = ($240|0)==($k$1$ph|0);
               if ($242) {
                break;
               } else {
                $i$2 = $240;
               }
              }
              $factor18 = $k$1$ph << 1;
              $243 = $factor18 | 1;
              $244 = (_realloc($s$2$ph,$243)|0);
              $245 = ($244|0)==(0|0);
              if ($245) {
               $alloc$0402 = $alloc$0;$matches$0107371 = $matches$0107;$s$7 = $s$2$ph;$wcs$8 = 0;
               label = 154;
               break L6;
              } else {
               $i$2$ph$phi = $k$1$ph;$k$1$ph = $243;$s$2$ph = $244;$i$2$ph = $i$2$ph$phi;
              }
             }
            }
            $246 = ($dest$0|0)==(0|0);
            if ($246) {
             $264 = $156;
             while(1) {
              $262 = HEAP32[$7>>2]|0;
              $263 = ($262>>>0)<($264>>>0);
              if ($263) {
               $265 = ((($262)) + 1|0);
               HEAP32[$7>>2] = $265;
               $266 = HEAP8[$262>>0]|0;
               $267 = $266&255;
               $270 = $267;
              } else {
               $268 = (___shgetc($f)|0);
               $270 = $268;
              }
              $269 = (($270) + 1)|0;
              $271 = (($scanset) + ($269)|0);
              $272 = HEAP8[$271>>0]|0;
              $273 = ($272<<24>>24)==(0);
              if ($273) {
               $i$4 = 0;$s$4 = 0;$wcs$5 = 0;
               break L89;
              }
              $$pre180 = HEAP32[$8>>2]|0;
              $264 = $$pre180;
             }
            } else {
             $249 = $156;$i$3 = 0;
             while(1) {
              $247 = HEAP32[$7>>2]|0;
              $248 = ($247>>>0)<($249>>>0);
              if ($248) {
               $250 = ((($247)) + 1|0);
               HEAP32[$7>>2] = $250;
               $251 = HEAP8[$247>>0]|0;
               $252 = $251&255;
               $255 = $252;
              } else {
               $253 = (___shgetc($f)|0);
               $255 = $253;
              }
              $254 = (($255) + 1)|0;
              $256 = (($scanset) + ($254)|0);
              $257 = HEAP8[$256>>0]|0;
              $258 = ($257<<24>>24)==(0);
              if ($258) {
               $i$4 = $i$3;$s$4 = $dest$0;$wcs$5 = 0;
               break L89;
              }
              $259 = $255&255;
              $260 = (($i$3) + 1)|0;
              $261 = (($dest$0) + ($i$3)|0);
              HEAP8[$261>>0] = $259;
              $$pre179 = HEAP32[$8>>2]|0;
              $249 = $$pre179;$i$3 = $260;
             }
            }
           }
          } while(0);
          $274 = HEAP32[$8>>2]|0;
          $275 = ($274|0)==(0|0);
          if ($275) {
           $$pre181 = HEAP32[$7>>2]|0;
           $282 = $$pre181;
          } else {
           $276 = HEAP32[$7>>2]|0;
           $277 = ((($276)) + -1|0);
           HEAP32[$7>>2] = $277;
           $278 = $277;
           $282 = $278;
          }
          $279 = HEAP32[$9>>2]|0;
          $280 = HEAP32[$10>>2]|0;
          $281 = (($282) - ($280))|0;
          $283 = (($281) + ($279))|0;
          $284 = ($283|0)==(0);
          if ($284) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0107;$s$9 = $s$4;$wcs$10 = $wcs$5;
           break L6;
          }
          $$not = $160 ^ 1;
          $285 = ($283|0)==($width$1|0);
          $or$cond10 = $285 | $$not;
          if (!($or$cond10)) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0107;$s$9 = $s$4;$wcs$10 = $wcs$5;
           break L6;
          }
          do {
           if ($196) {
            if ($195) {
             HEAP32[$dest$0>>2] = $wcs$5;
             break;
            } else {
             HEAP32[$dest$0>>2] = $s$4;
             break;
            }
           }
          } while(0);
          if ($160) {
           $p$10 = $p$9;$s$5 = $s$4;$wcs$6 = $wcs$5;
          } else {
           $286 = ($wcs$5|0)==(0|0);
           if (!($286)) {
            $287 = (($wcs$5) + ($i$4<<2)|0);
            HEAP32[$287>>2] = 0;
           }
           $288 = ($s$4|0)==(0|0);
           if ($288) {
            $p$10 = $p$9;$s$5 = 0;$wcs$6 = $wcs$5;
            break L68;
           }
           $289 = (($s$4) + ($i$4)|0);
           HEAP8[$289>>0] = 0;
           $p$10 = $p$9;$s$5 = $s$4;$wcs$6 = $wcs$5;
          }
          break;
         }
         case 120: case 88: case 112:  {
          $base$0 = 16;
          label = 136;
          break;
         }
         case 111:  {
          $base$0 = 8;
          label = 136;
          break;
         }
         case 117: case 100:  {
          $base$0 = 10;
          label = 136;
          break;
         }
         case 105:  {
          $base$0 = 0;
          label = 136;
          break;
         }
         case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
          $307 = (+___floatscan($f,$$size$0,0));
          $308 = HEAP32[$9>>2]|0;
          $309 = HEAP32[$7>>2]|0;
          $310 = HEAP32[$10>>2]|0;
          $311 = (($310) - ($309))|0;
          $312 = ($308|0)==($311|0);
          if ($312) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0107;$s$9 = $s$1;$wcs$10 = $wcs$1;
           break L6;
          }
          $313 = ($dest$0|0)==(0|0);
          if ($313) {
           $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
          } else {
           switch ($$size$0|0) {
           case 0:  {
            $314 = $307;
            HEAPF32[$dest$0>>2] = $314;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L68;
            break;
           }
           case 1:  {
            HEAPF64[$dest$0>>3] = $307;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L68;
            break;
           }
           case 2:  {
            HEAPF64[$dest$0>>3] = $307;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L68;
            break;
           }
           default: {
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L68;
           }
           }
          }
          break;
         }
         default: {
          $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
         }
         }
        } while(0);
        L169: do {
         if ((label|0) == 136) {
          label = 0;
          $290 = (___intscan($f,$base$0,0,-1,-1)|0);
          $291 = tempRet0;
          $292 = HEAP32[$9>>2]|0;
          $293 = HEAP32[$7>>2]|0;
          $294 = HEAP32[$10>>2]|0;
          $295 = (($294) - ($293))|0;
          $296 = ($292|0)==($295|0);
          if ($296) {
           $alloc$2 = $alloc$0;$matches$2 = $matches$0107;$s$9 = $s$1;$wcs$10 = $wcs$1;
           break L6;
          }
          $297 = ($$|0)==(112);
          $298 = ($dest$0|0)!=(0|0);
          $or$cond3 = $298 & $297;
          if ($or$cond3) {
           $299 = $290;
           HEAP32[$dest$0>>2] = $299;
           $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
           break;
          }
          $300 = ($dest$0|0)==(0|0);
          if ($300) {
           $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
          } else {
           switch ($$size$0|0) {
           case -2:  {
            $301 = $290&255;
            HEAP8[$dest$0>>0] = $301;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L169;
            break;
           }
           case -1:  {
            $302 = $290&65535;
            HEAP16[$dest$0>>1] = $302;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L169;
            break;
           }
           case 0:  {
            HEAP32[$dest$0>>2] = $290;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L169;
            break;
           }
           case 1:  {
            HEAP32[$dest$0>>2] = $290;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L169;
            break;
           }
           case 3:  {
            $303 = $dest$0;
            $304 = $303;
            HEAP32[$304>>2] = $290;
            $305 = (($303) + 4)|0;
            $306 = $305;
            HEAP32[$306>>2] = $291;
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L169;
            break;
           }
           default: {
            $p$10 = $p$5;$s$5 = $s$1;$wcs$6 = $wcs$1;
            break L169;
           }
           }
          }
         }
        } while(0);
        $315 = HEAP32[$9>>2]|0;
        $316 = HEAP32[$7>>2]|0;
        $317 = HEAP32[$10>>2]|0;
        $318 = (($315) + ($pos$1))|0;
        $319 = (($318) + ($316))|0;
        $320 = (($319) - ($317))|0;
        $not$ = ($dest$0|0)!=(0|0);
        $321 = $not$&1;
        $matches$0$ = (($321) + ($matches$0107))|0;
        $matches$1 = $matches$0$;$p$11 = $p$10;$pos$2 = $320;$s$6 = $s$5;$wcs$7 = $wcs$6;
        break L8;
       }
      } while(0);
      $50 = $47&1;
      $51 = (($p$0110) + ($50)|0);
      ___shlim($f,0);
      $52 = HEAP32[$7>>2]|0;
      $53 = HEAP32[$8>>2]|0;
      $54 = ($52>>>0)<($53>>>0);
      if ($54) {
       $55 = ((($52)) + 1|0);
       HEAP32[$7>>2] = $55;
       $56 = HEAP8[$52>>0]|0;
       $57 = $56&255;
       $61 = $57;
      } else {
       $58 = (___shgetc($f)|0);
       $61 = $58;
      }
      $59 = HEAP8[$51>>0]|0;
      $60 = $59&255;
      $62 = ($61|0)==($60|0);
      if (!($62)) {
       $$lcssa386 = $61;$matches$0107$lcssa = $matches$0107;$s$0105$lcssa = $s$0105;$wcs$0106$lcssa = $wcs$0106;
       label = 22;
       break L6;
      }
      $69 = (($pos$0111) + 1)|0;
      $matches$1 = $matches$0107;$p$11 = $51;$pos$2 = $69;$s$6 = $s$0105;$wcs$7 = $wcs$0106;
     } else {
      $p$1 = $p$0110;
      while(1) {
       $20 = ((($p$1)) + 1|0);
       $21 = HEAP8[$20>>0]|0;
       $22 = $21&255;
       $23 = (_isspace($22)|0);
       $24 = ($23|0)==(0);
       if ($24) {
        $p$1$lcssa = $p$1;
        break;
       } else {
        $p$1 = $20;
       }
      }
      ___shlim($f,0);
      while(1) {
       $25 = HEAP32[$7>>2]|0;
       $26 = HEAP32[$8>>2]|0;
       $27 = ($25>>>0)<($26>>>0);
       if ($27) {
        $28 = ((($25)) + 1|0);
        HEAP32[$7>>2] = $28;
        $29 = HEAP8[$25>>0]|0;
        $30 = $29&255;
        $32 = $30;
       } else {
        $31 = (___shgetc($f)|0);
        $32 = $31;
       }
       $33 = (_isspace($32)|0);
       $34 = ($33|0)==(0);
       if ($34) {
        break;
       }
      }
      $35 = HEAP32[$8>>2]|0;
      $36 = ($35|0)==(0|0);
      if ($36) {
       $$pre = HEAP32[$7>>2]|0;
       $44 = $$pre;
      } else {
       $37 = HEAP32[$7>>2]|0;
       $38 = ((($37)) + -1|0);
       HEAP32[$7>>2] = $38;
       $39 = $38;
       $44 = $39;
      }
      $40 = HEAP32[$9>>2]|0;
      $41 = HEAP32[$10>>2]|0;
      $42 = (($40) + ($pos$0111))|0;
      $43 = (($42) + ($44))|0;
      $45 = (($43) - ($41))|0;
      $matches$1 = $matches$0107;$p$11 = $p$1$lcssa;$pos$2 = $45;$s$6 = $s$0105;$wcs$7 = $wcs$0106;
     }
    } while(0);
    $322 = ((($p$11)) + 1|0);
    $323 = HEAP8[$322>>0]|0;
    $324 = ($323<<24>>24)==(0);
    if ($324) {
     $matches$3 = $matches$1;
     break L4;
    } else {
     $17 = $323;$matches$0107 = $matches$1;$p$0110 = $322;$pos$0111 = $pos$2;$s$0105 = $s$6;$wcs$0106 = $wcs$7;
    }
   }
   if ((label|0) == 22) {
    $63 = HEAP32[$8>>2]|0;
    $64 = ($63|0)==(0|0);
    if (!($64)) {
     $65 = HEAP32[$7>>2]|0;
     $66 = ((($65)) + -1|0);
     HEAP32[$7>>2] = $66;
    }
    $67 = ($$lcssa386|0)>(-1);
    $68 = ($matches$0107$lcssa|0)!=(0);
    $or$cond5 = $68 | $67;
    if ($or$cond5) {
     $matches$3 = $matches$0107$lcssa;
     break;
    } else {
     $alloc$1 = 0;$s$8 = $s$0105$lcssa;$wcs$9 = $wcs$0106$lcssa;
     label = 155;
    }
   }
   else if ((label|0) == 154) {
    $$old4 = ($matches$0107371|0)==(0);
    if ($$old4) {
     $alloc$1 = $alloc$0402;$s$8 = $s$7;$wcs$9 = $wcs$8;
     label = 155;
    } else {
     $alloc$2 = $alloc$0402;$matches$2 = $matches$0107371;$s$9 = $s$7;$wcs$10 = $wcs$8;
    }
   }
   if ((label|0) == 155) {
    $alloc$2 = $alloc$1;$matches$2 = -1;$s$9 = $s$8;$wcs$10 = $wcs$9;
   }
   $325 = ($alloc$2|0)==(0);
   if ($325) {
    $matches$3 = $matches$2;
   } else {
    _free($s$9);
    _free($wcs$10);
    $matches$3 = $matches$2;
   }
  }
 } while(0);
 $327 = ($326|0)==(0);
 if (!($327)) {
  ___unlockfile($f);
 }
 STACKTOP = sp;return ($matches$3|0);
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$024 = 0, $$1 = 0, $$lcssa = 0, $$lcssa35 = 0, $$st = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$05 = 0, $c$1 = 0, $c$2 = 0, $dummy = 0, $dummy$wc = 0, $s$06 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $dummy = sp;
 $0 = ($st|0)==(0|0);
 $$st = $0 ? 20860 : $st;
 $1 = HEAP32[$$st>>2]|0;
 $2 = ($src|0)==(0|0);
 L1: do {
  if ($2) {
   $3 = ($1|0)==(0);
   if ($3) {
    $$0 = 0;
   } else {
    label = 15;
   }
  } else {
   $4 = ($wc|0)==(0|0);
   $dummy$wc = $4 ? $dummy : $wc;
   $5 = ($n|0)==(0);
   if ($5) {
    $$0 = -2;
   } else {
    $6 = ($1|0)==(0);
    if ($6) {
     $7 = HEAP8[$src>>0]|0;
     $8 = $7&255;
     $9 = ($7<<24>>24)>(-1);
     if ($9) {
      HEAP32[$dummy$wc>>2] = $8;
      $10 = ($7<<24>>24)!=(0);
      $11 = $10&1;
      $$0 = $11;
      break;
     }
     $12 = (($8) + -194)|0;
     $13 = ($12>>>0)>(50);
     if ($13) {
      label = 15;
      break;
     }
     $14 = ((($src)) + 1|0);
     $15 = (3748 + ($12<<2)|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = (($n) + -1)|0;
     $18 = ($17|0)==(0);
     if ($18) {
      $c$2 = $16;
     } else {
      $$024 = $17;$c$05 = $16;$s$06 = $14;
      label = 9;
     }
    } else {
     $$024 = $n;$c$05 = $1;$s$06 = $src;
     label = 9;
    }
    L11: do {
     if ((label|0) == 9) {
      $19 = HEAP8[$s$06>>0]|0;
      $20 = $19&255;
      $21 = $20 >>> 3;
      $22 = (($21) + -16)|0;
      $23 = $c$05 >> 26;
      $24 = (($21) + ($23))|0;
      $25 = $22 | $24;
      $26 = ($25>>>0)>(7);
      if ($26) {
       label = 15;
       break L1;
      } else {
       $$1 = $$024;$30 = $19;$c$1 = $c$05;$s$1 = $s$06;
      }
      while(1) {
       $27 = $c$1 << 6;
       $28 = ((($s$1)) + 1|0);
       $29 = $30&255;
       $31 = (($29) + -128)|0;
       $32 = $31 | $27;
       $33 = (($$1) + -1)|0;
       $34 = ($32|0)<(0);
       if (!($34)) {
        $$lcssa = $32;$$lcssa35 = $33;
        break;
       }
       $36 = ($33|0)==(0);
       if ($36) {
        $c$2 = $32;
        break L11;
       }
       $37 = HEAP8[$28>>0]|0;
       $38 = $37 & -64;
       $39 = ($38<<24>>24)==(-128);
       if ($39) {
        $$1 = $33;$30 = $37;$c$1 = $32;$s$1 = $28;
       } else {
        label = 15;
        break L1;
       }
      }
      HEAP32[$$st>>2] = 0;
      HEAP32[$dummy$wc>>2] = $$lcssa;
      $35 = (($n) - ($$lcssa35))|0;
      $$0 = $35;
      break L1;
     }
    } while(0);
    HEAP32[$$st>>2] = $c$2;
    $$0 = -2;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  HEAP32[$$st>>2] = 0;
  $40 = (___errno_location()|0);
  HEAP32[$40>>2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($st) {
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)==(0|0);
 if ($0) {
  $4 = 1;
 } else {
  $1 = HEAP32[$st>>2]|0;
  $2 = ($1|0)==(0);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$010$i = 0, $$012$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$1$i = 0.0, $$111$be$i = 0, $$111$ph$i = 0, $$16$i = 0, $$2$i = 0, $$24$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3112$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa258 = 0;
 var $$lcssa258$lcssa = 0, $$lcssa259 = 0, $$lcssa259$lcssa = 0, $$lcssa265 = 0, $$lcssa266 = 0, $$lcssa267 = 0, $$lcssa277 = 0, $$lnz$0$i = 0, $$neg$i = 0, $$neg40$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi43$iZ2D = 0.0, $$pre42$i = 0.0, $$promoted$i = 0, $$sink$off0$i = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0.0, $311 = 0.0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0.0, $425 = 0.0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0.0, $442 = 0.0, $443 = 0.0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0.0, $466 = 0.0, $467 = 0.0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0;
 var $478 = 0, $479 = 0.0, $48 = 0, $480 = 0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0.0, $485 = 0, $486 = 0.0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0;
 var $496 = 0, $497 = 0.0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0, $502 = 0, $503 = 0.0, $504 = 0.0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0;
 var $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0;
 var $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0;
 var $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0;
 var $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0;
 var $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0;
 var $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0.0, $619 = 0, $62 = 0, $620 = 0;
 var $621 = 0, $622 = 0, $623 = 0.0, $624 = 0.0, $625 = 0.0, $626 = 0, $627 = 0.0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0.0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0;
 var $64 = 0, $640 = 0, $641 = 0.0, $642 = 0.0, $643 = 0.0, $644 = 0, $645 = 0.0, $646 = 0.0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0.0, $651 = 0.0, $652 = 0.0, $653 = 0.0, $654 = 0, $655 = 0, $656 = 0.0, $657 = 0;
 var $658 = 0.0, $659 = 0.0, $66 = 0, $660 = 0.0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0.0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0;
 var $676 = 0, $677 = 0.0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0.0, $683 = 0, $684 = 0, $685 = 0.0, $686 = 0.0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0;
 var $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0;
 var $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0$lcssa161$i = 0, $a$093$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph46$i = 0, $a$4$i = 0, $a$4$i$lcssa250 = 0, $a$4$i251 = 0, $a$4$ph$i = 0, $a$4$ph167$i = 0, $a$586$i = 0, $a$6$i = 0, $a$6$i$lcssa = 0, $a$6$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $brmerge$i28 = 0;
 var $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$179 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$377 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$095$i = 0, $carry1$0$i = 0, $carry1$1$i = 0, $carry1$1$i$lcssa = 0, $carry1$1$i$lcssa$lcssa = 0, $carry4$089$i = 0, $cond$i = 0, $d$0$i = 0;
 var $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$i19 = 0, $e2$0$ph$i = 0, $e2$1$i = 0, $e2$1$i248 = 0, $e2$1$ph$i = 0, $e2$1$ph166$i = 0, $e2$3$i = 0, $e2$4$i = 0, $emin$0$ph = 0, $exitcond151$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$3$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa244 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa275 = 0;
 var $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3108$i = 0, $gotdig$3108$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1109$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$078 = 0;
 var $i$1 = 0, $i$276 = 0, $i$3 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0111$i = 0, $j$0111$i$lcssa = 0, $j$075$i = 0, $j$076$i = 0, $j$077$i = 0, $j$2$i = 0, $j$3102$i = 0, $k$0$lcssa$i = 0, $k$0110$i = 0, $k$0110$i$lcssa = 0, $k$071$i = 0, $k$072$i = 0, $k$073$i = 0, $k$2$i = 0;
 var $k$3$i = 0, $k$494$i = 0, $k$5$i = 0, $k$5$in$i = 0, $k$5$z$2$i = 0, $k$687$i = 0, $lnz$0$lcssa$i = 0, $lnz$0107$i = 0, $lnz$0107$i$lcssa = 0, $lnz$065$i = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$2$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond18$i = 0, $or$cond192$i = 0, $or$cond20$i = 0, $or$cond21$i = 0;
 var $or$cond22$i = 0, $or$cond25$i = 0, $or$cond26$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond9 = 0, $or$cond9$i = 0, $or$cond9$i27 = 0, $rp$0$lcssa162$i = 0, $rp$092$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph44$i = 0, $rp$4$ph$i = 0, $rp$4$ph42$i = 0, $rp$585$i = 0, $rp$6$i = 0;
 var $rp$6$i$lcssa = 0, $rp$6$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0;
 var $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$i = 0, $z$1$ph45$i = 0, $z$10$1$i = 0, $z$10$i = 0, $z$2$i = 0, $z$3$i = 0, $z$3$i$lcssa = 0, $z$3$i$lcssa$lcssa = 0, $z$4$i = 0;
 var $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 switch ($prec|0) {
 case 0:  {
  $bits$0$ph = 24;$emin$0$ph = -149;
  label = 4;
  break;
 }
 case 1:  {
  $bits$0$ph = 53;$emin$0$ph = -1074;
  label = 4;
  break;
 }
 case 2:  {
  $bits$0$ph = 53;$emin$0$ph = -1074;
  label = 4;
  break;
 }
 default: {
  $$0 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $0 = ((($f)) + 4|0);
   $1 = ((($f)) + 100|0);
   while(1) {
    $2 = HEAP32[$0>>2]|0;
    $3 = HEAP32[$1>>2]|0;
    $4 = ($2>>>0)<($3>>>0);
    if ($4) {
     $5 = ((($2)) + 1|0);
     HEAP32[$0>>2] = $5;
     $6 = HEAP8[$2>>0]|0;
     $7 = $6&255;
     $9 = $7;
    } else {
     $8 = (___shgetc($f)|0);
     $9 = $8;
    }
    $10 = (_isspace($9)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $$lcssa277 = $9;
     break;
    }
   }
   $12 = ($$lcssa277|0)==(45);
   L13: do {
    switch ($$lcssa277|0) {
    case 43: case 45:  {
     $13 = $12&1;
     $14 = $13 << 1;
     $15 = (1 - ($14))|0;
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$1>>2]|0;
     $18 = ($16>>>0)<($17>>>0);
     if ($18) {
      $19 = ((($16)) + 1|0);
      HEAP32[$0>>2] = $19;
      $20 = HEAP8[$16>>0]|0;
      $21 = $20&255;
      $c$0 = $21;$sign$0 = $15;
      break L13;
     } else {
      $22 = (___shgetc($f)|0);
      $c$0 = $22;$sign$0 = $15;
      break L13;
     }
     break;
    }
    default: {
     $c$0 = $$lcssa277;$sign$0 = 1;
    }
    }
   } while(0);
   $c$179 = $c$0;$i$078 = 0;
   while(1) {
    $23 = $c$179 | 32;
    $24 = (16329 + ($i$078)|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = $25 << 24 >> 24;
    $27 = ($23|0)==($26|0);
    if (!($27)) {
     $c$1$lcssa = $c$179;$i$0$lcssa = $i$078;
     break;
    }
    $28 = ($i$078>>>0)<(7);
    do {
     if ($28) {
      $29 = HEAP32[$0>>2]|0;
      $30 = HEAP32[$1>>2]|0;
      $31 = ($29>>>0)<($30>>>0);
      if ($31) {
       $32 = ((($29)) + 1|0);
       HEAP32[$0>>2] = $32;
       $33 = HEAP8[$29>>0]|0;
       $34 = $33&255;
       $c$2 = $34;
       break;
      } else {
       $35 = (___shgetc($f)|0);
       $c$2 = $35;
       break;
      }
     } else {
      $c$2 = $c$179;
     }
    } while(0);
    $36 = (($i$078) + 1)|0;
    $37 = ($36>>>0)<(8);
    if ($37) {
     $c$179 = $c$2;$i$078 = $36;
    } else {
     $c$1$lcssa = $c$2;$i$0$lcssa = $36;
     break;
    }
   }
   L29: do {
    switch ($i$0$lcssa|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $38 = ($i$0$lcssa>>>0)>(3);
     $39 = ($pok|0)!=(0);
     $or$cond5 = $39 & $38;
     if ($or$cond5) {
      $40 = ($i$0$lcssa|0)==(8);
      if ($40) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $53 = ($i$0$lcssa|0)==(0);
     L34: do {
      if ($53) {
       $c$377 = $c$1$lcssa;$i$276 = 0;
       while(1) {
        $54 = $c$377 | 32;
        $55 = (16338 + ($i$276)|0);
        $56 = HEAP8[$55>>0]|0;
        $57 = $56 << 24 >> 24;
        $58 = ($54|0)==($57|0);
        if (!($58)) {
         $c$5 = $c$377;$i$3 = $i$276;
         break L34;
        }
        $59 = ($i$276>>>0)<(2);
        do {
         if ($59) {
          $60 = HEAP32[$0>>2]|0;
          $61 = HEAP32[$1>>2]|0;
          $62 = ($60>>>0)<($61>>>0);
          if ($62) {
           $63 = ((($60)) + 1|0);
           HEAP32[$0>>2] = $63;
           $64 = HEAP8[$60>>0]|0;
           $65 = $64&255;
           $c$4 = $65;
           break;
          } else {
           $66 = (___shgetc($f)|0);
           $c$4 = $66;
           break;
          }
         } else {
          $c$4 = $c$377;
         }
        } while(0);
        $67 = (($i$276) + 1)|0;
        $68 = ($67>>>0)<(3);
        if ($68) {
         $c$377 = $c$4;$i$276 = $67;
        } else {
         $c$5 = $c$4;$i$3 = $67;
         break;
        }
       }
      } else {
       $c$5 = $c$1$lcssa;$i$3 = $i$0$lcssa;
      }
     } while(0);
     switch ($i$3|0) {
     case 3:  {
      $69 = HEAP32[$0>>2]|0;
      $70 = HEAP32[$1>>2]|0;
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $72 = ((($69)) + 1|0);
       HEAP32[$0>>2] = $72;
       $73 = HEAP8[$69>>0]|0;
       $74 = $73&255;
       $76 = $74;
      } else {
       $75 = (___shgetc($f)|0);
       $76 = $75;
      }
      $77 = ($76|0)==(40);
      if ($77) {
       $i$4 = 1;
      } else {
       $78 = HEAP32[$1>>2]|0;
       $79 = ($78|0)==(0|0);
       if ($79) {
        $$0 = nan;
        break L4;
       }
       $80 = HEAP32[$0>>2]|0;
       $81 = ((($80)) + -1|0);
       HEAP32[$0>>2] = $81;
       $$0 = nan;
       break L4;
      }
      while(1) {
       $82 = HEAP32[$0>>2]|0;
       $83 = HEAP32[$1>>2]|0;
       $84 = ($82>>>0)<($83>>>0);
       if ($84) {
        $85 = ((($82)) + 1|0);
        HEAP32[$0>>2] = $85;
        $86 = HEAP8[$82>>0]|0;
        $87 = $86&255;
        $90 = $87;
       } else {
        $88 = (___shgetc($f)|0);
        $90 = $88;
       }
       $89 = (($90) + -48)|0;
       $91 = ($89>>>0)<(10);
       $92 = (($90) + -65)|0;
       $93 = ($92>>>0)<(26);
       $or$cond = $91 | $93;
       if (!($or$cond)) {
        $94 = (($90) + -97)|0;
        $95 = ($94>>>0)<(26);
        $96 = ($90|0)==(95);
        $or$cond7 = $96 | $95;
        if (!($or$cond7)) {
         $$lcssa = $90;$i$4$lcssa = $i$4;
         break;
        }
       }
       $108 = (($i$4) + 1)|0;
       $i$4 = $108;
      }
      $97 = ($$lcssa|0)==(41);
      if ($97) {
       $$0 = nan;
       break L4;
      }
      $98 = HEAP32[$1>>2]|0;
      $99 = ($98|0)==(0|0);
      if (!($99)) {
       $100 = HEAP32[$0>>2]|0;
       $101 = ((($100)) + -1|0);
       HEAP32[$0>>2] = $101;
      }
      if (!($39)) {
       $103 = (___errno_location()|0);
       HEAP32[$103>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       break L4;
      }
      $102 = ($i$4$lcssa|0)==(0);
      if ($102) {
       $$0 = nan;
       break L4;
      } else {
       $$in = $i$4$lcssa;
      }
      while(1) {
       $104 = (($$in) + -1)|0;
       if (!($99)) {
        $105 = HEAP32[$0>>2]|0;
        $106 = ((($105)) + -1|0);
        HEAP32[$0>>2] = $106;
       }
       $107 = ($104|0)==(0);
       if ($107) {
        $$0 = nan;
        break L4;
       } else {
        $$in = $104;
       }
      }
      break;
     }
     case 0:  {
      $114 = ($c$5|0)==(48);
      do {
       if ($114) {
        $115 = HEAP32[$0>>2]|0;
        $116 = HEAP32[$1>>2]|0;
        $117 = ($115>>>0)<($116>>>0);
        if ($117) {
         $118 = ((($115)) + 1|0);
         HEAP32[$0>>2] = $118;
         $119 = HEAP8[$115>>0]|0;
         $120 = $119&255;
         $123 = $120;
        } else {
         $121 = (___shgetc($f)|0);
         $123 = $121;
        }
        $122 = $123 | 32;
        $124 = ($122|0)==(120);
        if (!($124)) {
         $326 = HEAP32[$1>>2]|0;
         $327 = ($326|0)==(0|0);
         if ($327) {
          $c$6 = 48;
          break;
         }
         $328 = HEAP32[$0>>2]|0;
         $329 = ((($328)) + -1|0);
         HEAP32[$0>>2] = $329;
         $c$6 = 48;
         break;
        }
        $125 = HEAP32[$0>>2]|0;
        $126 = HEAP32[$1>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$0>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $c$0$i = $130;$gotdig$0$i = 0;
        } else {
         $131 = (___shgetc($f)|0);
         $c$0$i = $131;$gotdig$0$i = 0;
        }
        L94: while(1) {
         switch ($c$0$i|0) {
         case 46:  {
          $gotdig$0$i$lcssa244 = $gotdig$0$i;
          label = 74;
          break L94;
          break;
         }
         case 48:  {
          break;
         }
         default: {
          $168 = 0;$170 = 0;$693 = 0;$694 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
          break L94;
         }
         }
         $132 = HEAP32[$0>>2]|0;
         $133 = HEAP32[$1>>2]|0;
         $134 = ($132>>>0)<($133>>>0);
         if ($134) {
          $135 = ((($132)) + 1|0);
          HEAP32[$0>>2] = $135;
          $136 = HEAP8[$132>>0]|0;
          $137 = $136&255;
          $c$0$i = $137;$gotdig$0$i = 1;
          continue;
         } else {
          $138 = (___shgetc($f)|0);
          $c$0$i = $138;$gotdig$0$i = 1;
          continue;
         }
        }
        if ((label|0) == 74) {
         $139 = HEAP32[$0>>2]|0;
         $140 = HEAP32[$1>>2]|0;
         $141 = ($139>>>0)<($140>>>0);
         if ($141) {
          $142 = ((($139)) + 1|0);
          HEAP32[$0>>2] = $142;
          $143 = HEAP8[$139>>0]|0;
          $144 = $143&255;
          $c$1$ph$i = $144;
         } else {
          $145 = (___shgetc($f)|0);
          $c$1$ph$i = $145;
         }
         $146 = ($c$1$ph$i|0)==(48);
         if ($146) {
          $154 = 0;$155 = 0;
          while(1) {
           $147 = HEAP32[$0>>2]|0;
           $148 = HEAP32[$1>>2]|0;
           $149 = ($147>>>0)<($148>>>0);
           if ($149) {
            $150 = ((($147)) + 1|0);
            HEAP32[$0>>2] = $150;
            $151 = HEAP8[$147>>0]|0;
            $152 = $151&255;
            $158 = $152;
           } else {
            $153 = (___shgetc($f)|0);
            $158 = $153;
           }
           $156 = (_i64Add(($154|0),($155|0),-1,-1)|0);
           $157 = tempRet0;
           $159 = ($158|0)==(48);
           if ($159) {
            $154 = $156;$155 = $157;
           } else {
            $168 = 0;$170 = 0;$693 = $156;$694 = $157;$c$2$i = $158;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
            break;
           }
          }
         } else {
          $168 = 0;$170 = 0;$693 = 0;$694 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa244;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         }
        }
        while(1) {
         $160 = (($c$2$i) + -48)|0;
         $161 = ($160>>>0)<(10);
         $$pre$i = $c$2$i | 32;
         if ($161) {
          label = 86;
         } else {
          $162 = (($$pre$i) + -97)|0;
          $163 = ($162>>>0)<(6);
          $164 = ($c$2$i|0)==(46);
          $or$cond6$i = $164 | $163;
          if (!($or$cond6$i)) {
           $212 = $693;$213 = $170;$215 = $694;$216 = $168;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
          if ($164) {
           $165 = ($gotrad$0$i|0)==(0);
           if ($165) {
            $695 = $170;$696 = $168;$697 = $170;$698 = $168;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
           } else {
            $212 = $693;$213 = $170;$215 = $694;$216 = $168;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
            break;
           }
          } else {
           label = 86;
          }
         }
         if ((label|0) == 86) {
          label = 0;
          $166 = ($c$2$i|0)>(57);
          $167 = (($$pre$i) + -87)|0;
          $d$0$i = $166 ? $167 : $160;
          $169 = ($168|0)<(0);
          $171 = ($170>>>0)<(8);
          $172 = ($168|0)==(0);
          $173 = $172 & $171;
          $174 = $169 | $173;
          do {
           if ($174) {
            $175 = $x$0$i << 4;
            $176 = (($d$0$i) + ($175))|0;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $176;$y$1$i = $y$0$i;
           } else {
            $177 = ($168|0)<(0);
            $178 = ($170>>>0)<(14);
            $179 = ($168|0)==(0);
            $180 = $179 & $178;
            $181 = $177 | $180;
            if ($181) {
             $182 = (+($d$0$i|0));
             $183 = $scale$0$i * 0.0625;
             $184 = $183 * $182;
             $185 = $y$0$i + $184;
             $gottail$1$i = $gottail$0$i;$scale$1$i = $183;$x$1$i = $x$0$i;$y$1$i = $185;
             break;
            }
            $186 = ($d$0$i|0)==(0);
            $187 = ($gottail$0$i|0)!=(0);
            $or$cond$i = $187 | $186;
            if ($or$cond$i) {
             $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
            } else {
             $188 = $scale$0$i * 0.5;
             $189 = $y$0$i + $188;
             $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $189;
            }
           }
          } while(0);
          $190 = (_i64Add(($170|0),($168|0),1,0)|0);
          $191 = tempRet0;
          $695 = $693;$696 = $694;$697 = $190;$698 = $191;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
         }
         $192 = HEAP32[$0>>2]|0;
         $193 = HEAP32[$1>>2]|0;
         $194 = ($192>>>0)<($193>>>0);
         if ($194) {
          $195 = ((($192)) + 1|0);
          HEAP32[$0>>2] = $195;
          $196 = HEAP8[$192>>0]|0;
          $197 = $196&255;
          $168 = $698;$170 = $697;$693 = $695;$694 = $696;$c$2$i = $197;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
          continue;
         } else {
          $198 = (___shgetc($f)|0);
          $168 = $698;$170 = $697;$693 = $695;$694 = $696;$c$2$i = $198;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
          continue;
         }
        }
        $199 = ($gotdig$2$i$lcssa|0)==(0);
        if ($199) {
         $200 = HEAP32[$1>>2]|0;
         $201 = ($200|0)==(0|0);
         if (!($201)) {
          $202 = HEAP32[$0>>2]|0;
          $203 = ((($202)) + -1|0);
          HEAP32[$0>>2] = $203;
         }
         $204 = ($pok|0)==(0);
         if ($204) {
          ___shlim($f,0);
         } else {
          if (!($201)) {
           $205 = HEAP32[$0>>2]|0;
           $206 = ((($205)) + -1|0);
           HEAP32[$0>>2] = $206;
           $207 = ($gotrad$0$i$lcssa|0)==(0);
           if (!($207)) {
            $208 = ((($205)) + -2|0);
            HEAP32[$0>>2] = $208;
           }
          }
         }
         $209 = (+($sign$0|0));
         $210 = $209 * 0.0;
         $$0 = $210;
         break L4;
        }
        $211 = ($gotrad$0$i$lcssa|0)==(0);
        $214 = $211 ? $213 : $212;
        $217 = $211 ? $216 : $215;
        $218 = ($216|0)<(0);
        $219 = ($213>>>0)<(8);
        $220 = ($216|0)==(0);
        $221 = $220 & $219;
        $222 = $218 | $221;
        if ($222) {
         $224 = $213;$225 = $216;$x$324$i = $x$0$i$lcssa;
         while(1) {
          $223 = $x$324$i << 4;
          $226 = (_i64Add(($224|0),($225|0),1,0)|0);
          $227 = tempRet0;
          $228 = ($227|0)<(0);
          $229 = ($226>>>0)<(8);
          $230 = ($227|0)==(0);
          $231 = $230 & $229;
          $232 = $228 | $231;
          if ($232) {
           $224 = $226;$225 = $227;$x$324$i = $223;
          } else {
           $x$3$lcssa$i = $223;
           break;
          }
         }
        } else {
         $x$3$lcssa$i = $x$0$i$lcssa;
        }
        $233 = $c$2$lcssa$i | 32;
        $234 = ($233|0)==(112);
        if ($234) {
         $235 = (_scanexp($f,$pok)|0);
         $236 = tempRet0;
         $237 = ($235|0)==(0);
         $238 = ($236|0)==(-2147483648);
         $239 = $237 & $238;
         if ($239) {
          $240 = ($pok|0)==(0);
          if ($240) {
           ___shlim($f,0);
           $$0 = 0.0;
           break L4;
          }
          $241 = HEAP32[$1>>2]|0;
          $242 = ($241|0)==(0|0);
          if ($242) {
           $253 = 0;$254 = 0;
          } else {
           $243 = HEAP32[$0>>2]|0;
           $244 = ((($243)) + -1|0);
           HEAP32[$0>>2] = $244;
           $253 = 0;$254 = 0;
          }
         } else {
          $253 = $235;$254 = $236;
         }
        } else {
         $245 = HEAP32[$1>>2]|0;
         $246 = ($245|0)==(0|0);
         if ($246) {
          $253 = 0;$254 = 0;
         } else {
          $247 = HEAP32[$0>>2]|0;
          $248 = ((($247)) + -1|0);
          HEAP32[$0>>2] = $248;
          $253 = 0;$254 = 0;
         }
        }
        $249 = (_bitshift64Shl(($214|0),($217|0),2)|0);
        $250 = tempRet0;
        $251 = (_i64Add(($249|0),($250|0),-32,-1)|0);
        $252 = tempRet0;
        $255 = (_i64Add(($251|0),($252|0),($253|0),($254|0))|0);
        $256 = tempRet0;
        $257 = ($x$3$lcssa$i|0)==(0);
        if ($257) {
         $258 = (+($sign$0|0));
         $259 = $258 * 0.0;
         $$0 = $259;
         break L4;
        }
        $260 = (0 - ($emin$0$ph))|0;
        $261 = ($256|0)>(0);
        $262 = ($255>>>0)>($260>>>0);
        $263 = ($256|0)==(0);
        $264 = $263 & $262;
        $265 = $261 | $264;
        if ($265) {
         $266 = (___errno_location()|0);
         HEAP32[$266>>2] = 34;
         $267 = (+($sign$0|0));
         $268 = $267 * 1.7976931348623157E+308;
         $269 = $268 * 1.7976931348623157E+308;
         $$0 = $269;
         break L4;
        }
        $270 = (($emin$0$ph) + -106)|0;
        $271 = ($270|0)<(0);
        $272 = $271 << 31 >> 31;
        $273 = ($256|0)<($272|0);
        $274 = ($255>>>0)<($270>>>0);
        $275 = ($256|0)==($272|0);
        $276 = $275 & $274;
        $277 = $273 | $276;
        if ($277) {
         $279 = (___errno_location()|0);
         HEAP32[$279>>2] = 34;
         $280 = (+($sign$0|0));
         $281 = $280 * 2.2250738585072014E-308;
         $282 = $281 * 2.2250738585072014E-308;
         $$0 = $282;
         break L4;
        }
        $278 = ($x$3$lcssa$i|0)>(-1);
        if ($278) {
         $288 = $255;$289 = $256;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
         while(1) {
          $283 = !($y$320$i >= 0.5);
          $284 = $x$419$i << 1;
          $285 = $y$320$i + -1.0;
          $286 = $283&1;
          $287 = $286 | $284;
          $x$5$i = $287 ^ 1;
          $$pn$i = $283 ? $y$320$i : $285;
          $y$4$i = $y$320$i + $$pn$i;
          $290 = (_i64Add(($288|0),($289|0),-1,-1)|0);
          $291 = tempRet0;
          $292 = ($287|0)>(-1);
          if ($292) {
           $288 = $290;$289 = $291;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
          } else {
           $297 = $290;$298 = $291;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
           break;
          }
         }
        } else {
         $297 = $255;$298 = $256;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
        }
        $293 = ($emin$0$ph|0)<(0);
        $294 = $293 << 31 >> 31;
        $295 = (_i64Subtract(32,0,($emin$0$ph|0),($294|0))|0);
        $296 = tempRet0;
        $299 = (_i64Add(($297|0),($298|0),($295|0),($296|0))|0);
        $300 = tempRet0;
        $301 = (0)>($300|0);
        $302 = ($bits$0$ph>>>0)>($299>>>0);
        $303 = (0)==($300|0);
        $304 = $303 & $302;
        $305 = $301 | $304;
        if ($305) {
         $306 = ($299|0)<(0);
         if ($306) {
          $$0710$i = 0;
          label = 127;
         } else {
          $$07$i = $299;
          label = 125;
         }
        } else {
         $$07$i = $bits$0$ph;
         label = 125;
        }
        if ((label|0) == 125) {
         $307 = ($$07$i|0)<(53);
         if ($307) {
          $$0710$i = $$07$i;
          label = 127;
         } else {
          $$pre42$i = (+($sign$0|0));
          $$0711$i = $$07$i;$$pre$phi43$iZ2D = $$pre42$i;$bias$0$i = 0.0;
         }
        }
        if ((label|0) == 127) {
         $308 = (84 - ($$0710$i))|0;
         $309 = (+_scalbn(1.0,$308));
         $310 = (+($sign$0|0));
         $311 = (+_copysignl($309,$310));
         $$0711$i = $$0710$i;$$pre$phi43$iZ2D = $310;$bias$0$i = $311;
        }
        $312 = ($$0711$i|0)<(32);
        $313 = $y$3$lcssa$i != 0.0;
        $or$cond4$i = $313 & $312;
        $314 = $x$4$lcssa$i & 1;
        $315 = ($314|0)==(0);
        $or$cond9$i = $315 & $or$cond4$i;
        $316 = $or$cond9$i&1;
        $x$6$i = (($316) + ($x$4$lcssa$i))|0;
        $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
        $317 = (+($x$6$i>>>0));
        $318 = $$pre$phi43$iZ2D * $317;
        $319 = $bias$0$i + $318;
        $320 = $$pre$phi43$iZ2D * $y$5$i;
        $321 = $320 + $319;
        $322 = $321 - $bias$0$i;
        $323 = $322 != 0.0;
        if (!($323)) {
         $324 = (___errno_location()|0);
         HEAP32[$324>>2] = 34;
        }
        $325 = (+_scalbnl($322,$297));
        $$0 = $325;
        break L4;
       } else {
        $c$6 = $c$5;
       }
      } while(0);
      $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
      $330 = (0 - ($sum$i))|0;
      $$010$i = $c$6;$gotdig$0$i12 = 0;
      L184: while(1) {
       switch ($$010$i|0) {
       case 46:  {
        $gotdig$0$i12$lcssa275 = $gotdig$0$i12;
        label = 138;
        break L184;
        break;
       }
       case 48:  {
        break;
       }
       default: {
        $$2$i = $$010$i;$699 = 0;$700 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
        break L184;
       }
       }
       $331 = HEAP32[$0>>2]|0;
       $332 = HEAP32[$1>>2]|0;
       $333 = ($331>>>0)<($332>>>0);
       if ($333) {
        $334 = ((($331)) + 1|0);
        HEAP32[$0>>2] = $334;
        $335 = HEAP8[$331>>0]|0;
        $336 = $335&255;
        $$010$i = $336;$gotdig$0$i12 = 1;
        continue;
       } else {
        $337 = (___shgetc($f)|0);
        $$010$i = $337;$gotdig$0$i12 = 1;
        continue;
       }
      }
      if ((label|0) == 138) {
       $338 = HEAP32[$0>>2]|0;
       $339 = HEAP32[$1>>2]|0;
       $340 = ($338>>>0)<($339>>>0);
       if ($340) {
        $341 = ((($338)) + 1|0);
        HEAP32[$0>>2] = $341;
        $342 = HEAP8[$338>>0]|0;
        $343 = $342&255;
        $$111$ph$i = $343;
       } else {
        $344 = (___shgetc($f)|0);
        $$111$ph$i = $344;
       }
       $345 = ($$111$ph$i|0)==(48);
       if ($345) {
        $346 = 0;$347 = 0;
        while(1) {
         $348 = (_i64Add(($346|0),($347|0),-1,-1)|0);
         $349 = tempRet0;
         $350 = HEAP32[$0>>2]|0;
         $351 = HEAP32[$1>>2]|0;
         $352 = ($350>>>0)<($351>>>0);
         if ($352) {
          $353 = ((($350)) + 1|0);
          HEAP32[$0>>2] = $353;
          $354 = HEAP8[$350>>0]|0;
          $355 = $354&255;
          $$111$be$i = $355;
         } else {
          $356 = (___shgetc($f)|0);
          $$111$be$i = $356;
         }
         $357 = ($$111$be$i|0)==(48);
         if ($357) {
          $346 = $348;$347 = $349;
         } else {
          $$2$i = $$111$be$i;$699 = $348;$700 = $349;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
          break;
         }
        }
       } else {
        $$2$i = $$111$ph$i;$699 = 0;$700 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa275;$gotrad$0$i14 = 1;
       }
      }
      HEAP32[$x$i>>2] = 0;
      $358 = (($$2$i) + -48)|0;
      $359 = ($358>>>0)<(10);
      $360 = ($$2$i|0)==(46);
      $361 = $360 | $359;
      L203: do {
       if ($361) {
        $362 = ((($x$i)) + 496|0);
        $$3112$i = $$2$i;$365 = 0;$366 = 0;$701 = $360;$702 = $358;$703 = $699;$704 = $700;$gotdig$3108$i = $gotdig$2$i13;$gotrad$1109$i = $gotrad$0$i14;$j$0111$i = 0;$k$0110$i = 0;$lnz$0107$i = 0;
        L205: while(1) {
         do {
          if ($701) {
           $cond$i = ($gotrad$1109$i|0)==(0);
           if ($cond$i) {
            $705 = $365;$706 = $366;$707 = $365;$708 = $366;$gotdig$4$i = $gotdig$3108$i;$gotrad$2$i = 1;$j$2$i = $j$0111$i;$k$2$i = $k$0110$i;$lnz$2$i = $lnz$0107$i;
           } else {
            $709 = $703;$710 = $704;$711 = $365;$712 = $366;$gotdig$3108$i$lcssa = $gotdig$3108$i;$j$0111$i$lcssa = $j$0111$i;$k$0110$i$lcssa = $k$0110$i;$lnz$0107$i$lcssa = $lnz$0107$i;
            break L205;
           }
          } else {
           $364 = ($k$0110$i|0)<(125);
           $367 = (_i64Add(($365|0),($366|0),1,0)|0);
           $368 = tempRet0;
           $369 = ($$3112$i|0)!=(48);
           if (!($364)) {
            if (!($369)) {
             $705 = $703;$706 = $704;$707 = $367;$708 = $368;$gotdig$4$i = $gotdig$3108$i;$gotrad$2$i = $gotrad$1109$i;$j$2$i = $j$0111$i;$k$2$i = $k$0110$i;$lnz$2$i = $lnz$0107$i;
             break;
            }
            $379 = HEAP32[$362>>2]|0;
            $380 = $379 | 1;
            HEAP32[$362>>2] = $380;
            $705 = $703;$706 = $704;$707 = $367;$708 = $368;$gotdig$4$i = $gotdig$3108$i;$gotrad$2$i = $gotrad$1109$i;$j$2$i = $j$0111$i;$k$2$i = $k$0110$i;$lnz$2$i = $lnz$0107$i;
            break;
           }
           $$lnz$0$i = $369 ? $367 : $lnz$0107$i;
           $370 = ($j$0111$i|0)==(0);
           $371 = (($x$i) + ($k$0110$i<<2)|0);
           if ($370) {
            $storemerge$i = $702;
           } else {
            $372 = HEAP32[$371>>2]|0;
            $373 = ($372*10)|0;
            $374 = (($$3112$i) + -48)|0;
            $375 = (($374) + ($373))|0;
            $storemerge$i = $375;
           }
           HEAP32[$371>>2] = $storemerge$i;
           $376 = (($j$0111$i) + 1)|0;
           $377 = ($376|0)==(9);
           $378 = $377&1;
           $$k$0$i = (($378) + ($k$0110$i))|0;
           $$16$i = $377 ? 0 : $376;
           $705 = $703;$706 = $704;$707 = $367;$708 = $368;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1109$i;$j$2$i = $$16$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
          }
         } while(0);
         $381 = HEAP32[$0>>2]|0;
         $382 = HEAP32[$1>>2]|0;
         $383 = ($381>>>0)<($382>>>0);
         if ($383) {
          $384 = ((($381)) + 1|0);
          HEAP32[$0>>2] = $384;
          $385 = HEAP8[$381>>0]|0;
          $386 = $385&255;
          $$3$be$i = $386;
         } else {
          $387 = (___shgetc($f)|0);
          $$3$be$i = $387;
         }
         $388 = (($$3$be$i) + -48)|0;
         $389 = ($388>>>0)<(10);
         $390 = ($$3$be$i|0)==(46);
         $391 = $390 | $389;
         if ($391) {
          $$3112$i = $$3$be$i;$365 = $707;$366 = $708;$701 = $390;$702 = $388;$703 = $705;$704 = $706;$gotdig$3108$i = $gotdig$4$i;$gotrad$1109$i = $gotrad$2$i;$j$0111$i = $j$2$i;$k$0110$i = $k$2$i;$lnz$0107$i = $lnz$2$i;
         } else {
          $$3$lcssa$i = $$3$be$i;$393 = $705;$394 = $707;$396 = $706;$397 = $708;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
          label = 161;
          break L203;
         }
        }
        $363 = ($gotdig$3108$i$lcssa|0)!=(0);
        $713 = $711;$714 = $712;$715 = $709;$716 = $710;$717 = $363;$j$077$i = $j$0111$i$lcssa;$k$073$i = $k$0110$i$lcssa;$lnz$067$i = $lnz$0107$i$lcssa;
        label = 169;
       } else {
        $$3$lcssa$i = $$2$i;$393 = $699;$394 = 0;$396 = $700;$397 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
        label = 161;
       }
      } while(0);
      do {
       if ((label|0) == 161) {
        $392 = ($gotrad$1$lcssa$i|0)==(0);
        $395 = $392 ? $394 : $393;
        $398 = $392 ? $397 : $396;
        $399 = ($gotdig$3$lcssa$i|0)!=(0);
        $400 = $$3$lcssa$i | 32;
        $401 = ($400|0)==(101);
        $or$cond18$i = $401 & $399;
        if (!($or$cond18$i)) {
         $416 = ($$3$lcssa$i|0)>(-1);
         if ($416) {
          $713 = $394;$714 = $397;$715 = $395;$716 = $398;$717 = $399;$j$077$i = $j$0$lcssa$i;$k$073$i = $k$0$lcssa$i;$lnz$067$i = $lnz$0$lcssa$i;
          label = 169;
          break;
         } else {
          $718 = $394;$719 = $397;$720 = $399;$721 = $395;$722 = $398;$j$076$i = $j$0$lcssa$i;$k$072$i = $k$0$lcssa$i;$lnz$066$i = $lnz$0$lcssa$i;
          label = 171;
          break;
         }
        }
        $402 = (_scanexp($f,$pok)|0);
        $403 = tempRet0;
        $404 = ($402|0)==(0);
        $405 = ($403|0)==(-2147483648);
        $406 = $404 & $405;
        if ($406) {
         $407 = ($pok|0)==(0);
         if ($407) {
          ___shlim($f,0);
          $$1$i = 0.0;
          break;
         }
         $408 = HEAP32[$1>>2]|0;
         $409 = ($408|0)==(0|0);
         if ($409) {
          $412 = 0;$413 = 0;
         } else {
          $410 = HEAP32[$0>>2]|0;
          $411 = ((($410)) + -1|0);
          HEAP32[$0>>2] = $411;
          $412 = 0;$413 = 0;
         }
        } else {
         $412 = $402;$413 = $403;
        }
        $414 = (_i64Add(($412|0),($413|0),($395|0),($398|0))|0);
        $415 = tempRet0;
        $426 = $414;$428 = $394;$429 = $415;$431 = $397;$j$075$i = $j$0$lcssa$i;$k$071$i = $k$0$lcssa$i;$lnz$065$i = $lnz$0$lcssa$i;
        label = 173;
       }
      } while(0);
      if ((label|0) == 169) {
       $417 = HEAP32[$1>>2]|0;
       $418 = ($417|0)==(0|0);
       if ($418) {
        $718 = $713;$719 = $714;$720 = $717;$721 = $715;$722 = $716;$j$076$i = $j$077$i;$k$072$i = $k$073$i;$lnz$066$i = $lnz$067$i;
        label = 171;
       } else {
        $419 = HEAP32[$0>>2]|0;
        $420 = ((($419)) + -1|0);
        HEAP32[$0>>2] = $420;
        if ($717) {
         $426 = $715;$428 = $713;$429 = $716;$431 = $714;$j$075$i = $j$077$i;$k$071$i = $k$073$i;$lnz$065$i = $lnz$067$i;
         label = 173;
        } else {
         label = 172;
        }
       }
      }
      if ((label|0) == 171) {
       if ($720) {
        $426 = $721;$428 = $718;$429 = $722;$431 = $719;$j$075$i = $j$076$i;$k$071$i = $k$072$i;$lnz$065$i = $lnz$066$i;
        label = 173;
       } else {
        label = 172;
       }
      }
      do {
       if ((label|0) == 172) {
        $421 = (___errno_location()|0);
        HEAP32[$421>>2] = 22;
        ___shlim($f,0);
        $$1$i = 0.0;
       }
       else if ((label|0) == 173) {
        $422 = HEAP32[$x$i>>2]|0;
        $423 = ($422|0)==(0);
        if ($423) {
         $424 = (+($sign$0|0));
         $425 = $424 * 0.0;
         $$1$i = $425;
         break;
        }
        $427 = ($426|0)==($428|0);
        $430 = ($429|0)==($431|0);
        $432 = $427 & $430;
        $433 = ($431|0)<(0);
        $434 = ($428>>>0)<(10);
        $435 = ($431|0)==(0);
        $436 = $435 & $434;
        $437 = $433 | $436;
        $or$cond$i16 = $437 & $432;
        if ($or$cond$i16) {
         $438 = ($bits$0$ph>>>0)>(30);
         $439 = $422 >>> $bits$0$ph;
         $440 = ($439|0)==(0);
         $or$cond20$i = $438 | $440;
         if ($or$cond20$i) {
          $441 = (+($sign$0|0));
          $442 = (+($422>>>0));
          $443 = $441 * $442;
          $$1$i = $443;
          break;
         }
        }
        $444 = (($emin$0$ph|0) / -2)&-1;
        $445 = ($444|0)<(0);
        $446 = $445 << 31 >> 31;
        $447 = ($429|0)>($446|0);
        $448 = ($426>>>0)>($444>>>0);
        $449 = ($429|0)==($446|0);
        $450 = $449 & $448;
        $451 = $447 | $450;
        if ($451) {
         $452 = (___errno_location()|0);
         HEAP32[$452>>2] = 34;
         $453 = (+($sign$0|0));
         $454 = $453 * 1.7976931348623157E+308;
         $455 = $454 * 1.7976931348623157E+308;
         $$1$i = $455;
         break;
        }
        $456 = (($emin$0$ph) + -106)|0;
        $457 = ($456|0)<(0);
        $458 = $457 << 31 >> 31;
        $459 = ($429|0)<($458|0);
        $460 = ($426>>>0)<($456>>>0);
        $461 = ($429|0)==($458|0);
        $462 = $461 & $460;
        $463 = $459 | $462;
        if ($463) {
         $464 = (___errno_location()|0);
         HEAP32[$464>>2] = 34;
         $465 = (+($sign$0|0));
         $466 = $465 * 2.2250738585072014E-308;
         $467 = $466 * 2.2250738585072014E-308;
         $$1$i = $467;
         break;
        }
        $468 = ($j$075$i|0)==(0);
        if ($468) {
         $k$3$i = $k$071$i;
        } else {
         $469 = ($j$075$i|0)<(9);
         if ($469) {
          $470 = (($x$i) + ($k$071$i<<2)|0);
          $$promoted$i = HEAP32[$470>>2]|0;
          $472 = $$promoted$i;$j$3102$i = $j$075$i;
          while(1) {
           $471 = ($472*10)|0;
           $473 = (($j$3102$i) + 1)|0;
           $exitcond151$i = ($473|0)==(9);
           if ($exitcond151$i) {
            $$lcssa267 = $471;
            break;
           } else {
            $472 = $471;$j$3102$i = $473;
           }
          }
          HEAP32[$470>>2] = $$lcssa267;
         }
         $474 = (($k$071$i) + 1)|0;
         $k$3$i = $474;
        }
        $475 = ($lnz$065$i|0)<(9);
        if ($475) {
         $476 = ($lnz$065$i|0)<=($426|0);
         $477 = ($426|0)<(18);
         $or$cond3$i = $476 & $477;
         if ($or$cond3$i) {
          $478 = ($426|0)==(9);
          if ($478) {
           $479 = (+($sign$0|0));
           $480 = HEAP32[$x$i>>2]|0;
           $481 = (+($480>>>0));
           $482 = $479 * $481;
           $$1$i = $482;
           break;
          }
          $483 = ($426|0)<(9);
          if ($483) {
           $484 = (+($sign$0|0));
           $485 = HEAP32[$x$i>>2]|0;
           $486 = (+($485>>>0));
           $487 = $484 * $486;
           $488 = (8 - ($426))|0;
           $489 = (4064 + ($488<<2)|0);
           $490 = HEAP32[$489>>2]|0;
           $491 = (+($490|0));
           $492 = $487 / $491;
           $$1$i = $492;
           break;
          }
          $$neg$i = Math_imul($426, -3)|0;
          $$neg40$i = (($bits$0$ph) + 27)|0;
          $493 = (($$neg40$i) + ($$neg$i))|0;
          $494 = ($493|0)>(30);
          $$pre$i17 = HEAP32[$x$i>>2]|0;
          $495 = $$pre$i17 >>> $493;
          $496 = ($495|0)==(0);
          $or$cond192$i = $494 | $496;
          if ($or$cond192$i) {
           $497 = (+($sign$0|0));
           $498 = (+($$pre$i17>>>0));
           $499 = $497 * $498;
           $500 = (($426) + -10)|0;
           $501 = (4064 + ($500<<2)|0);
           $502 = HEAP32[$501>>2]|0;
           $503 = (+($502|0));
           $504 = $499 * $503;
           $$1$i = $504;
           break;
          }
         }
        }
        $505 = (($426|0) % 9)&-1;
        $506 = ($505|0)==(0);
        if ($506) {
         $a$2$ph46$i = 0;$e2$0$ph$i = 0;$rp$2$ph44$i = $426;$z$1$ph45$i = $k$3$i;
        } else {
         $507 = ($426|0)>(-1);
         $508 = (($505) + 9)|0;
         $509 = $507 ? $505 : $508;
         $510 = (8 - ($509))|0;
         $511 = (4064 + ($510<<2)|0);
         $512 = HEAP32[$511>>2]|0;
         $513 = ($k$3$i|0)==(0);
         if ($513) {
          $a$0$lcssa161$i = 0;$rp$0$lcssa162$i = $426;$z$0$i = 0;
         } else {
          $514 = (1000000000 / ($512|0))&-1;
          $a$093$i = 0;$carry$095$i = 0;$k$494$i = 0;$rp$092$i = $426;
          while(1) {
           $515 = (($x$i) + ($k$494$i<<2)|0);
           $516 = HEAP32[$515>>2]|0;
           $517 = (($516>>>0) % ($512>>>0))&-1;
           $518 = (($516>>>0) / ($512>>>0))&-1;
           $519 = (($518) + ($carry$095$i))|0;
           HEAP32[$515>>2] = $519;
           $520 = Math_imul($517, $514)|0;
           $521 = ($k$494$i|0)==($a$093$i|0);
           $522 = ($519|0)==(0);
           $or$cond21$i = $521 & $522;
           $523 = (($k$494$i) + 1)|0;
           $524 = $523 & 127;
           $525 = (($rp$092$i) + -9)|0;
           $rp$1$i18 = $or$cond21$i ? $525 : $rp$092$i;
           $a$1$i = $or$cond21$i ? $524 : $a$093$i;
           $526 = ($523|0)==($k$3$i|0);
           if ($526) {
            $$lcssa266 = $520;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
            break;
           } else {
            $a$093$i = $a$1$i;$carry$095$i = $520;$k$494$i = $523;$rp$092$i = $rp$1$i18;
           }
          }
          $527 = ($$lcssa266|0)==(0);
          if ($527) {
           $a$0$lcssa161$i = $a$1$i$lcssa;$rp$0$lcssa162$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
          } else {
           $528 = (($k$3$i) + 1)|0;
           $529 = (($x$i) + ($k$3$i<<2)|0);
           HEAP32[$529>>2] = $$lcssa266;
           $a$0$lcssa161$i = $a$1$i$lcssa;$rp$0$lcssa162$i = $rp$1$i18$lcssa;$z$0$i = $528;
          }
         }
         $530 = (9 - ($509))|0;
         $531 = (($530) + ($rp$0$lcssa162$i))|0;
         $a$2$ph46$i = $a$0$lcssa161$i;$e2$0$ph$i = 0;$rp$2$ph44$i = $531;$z$1$ph45$i = $z$0$i;
        }
        L284: while(1) {
         $532 = ($rp$2$ph44$i|0)<(18);
         $533 = ($rp$2$ph44$i|0)==(18);
         $534 = (($x$i) + ($a$2$ph46$i<<2)|0);
         $e2$0$i19 = $e2$0$ph$i;$z$1$i = $z$1$ph45$i;
         while(1) {
          if (!($532)) {
           if (!($533)) {
            $a$4$ph$i = $a$2$ph46$i;$e2$1$ph$i = $e2$0$i19;$rp$4$ph42$i = $rp$2$ph44$i;$z$6$ph$i = $z$1$i;
            break L284;
           }
           $535 = HEAP32[$534>>2]|0;
           $536 = ($535>>>0)<(9007199);
           if (!($536)) {
            $a$4$ph$i = $a$2$ph46$i;$e2$1$ph$i = $e2$0$i19;$rp$4$ph42$i = 18;$z$6$ph$i = $z$1$i;
            break L284;
           }
          }
          $537 = (($z$1$i) + 127)|0;
          $carry1$0$i = 0;$k$5$in$i = $537;$z$2$i = $z$1$i;
          while(1) {
           $k$5$i = $k$5$in$i & 127;
           $538 = (($x$i) + ($k$5$i<<2)|0);
           $539 = HEAP32[$538>>2]|0;
           $540 = (_bitshift64Shl(($539|0),0,29)|0);
           $541 = tempRet0;
           $542 = (_i64Add(($540|0),($541|0),($carry1$0$i|0),0)|0);
           $543 = tempRet0;
           $544 = ($543>>>0)>(0);
           $545 = ($542>>>0)>(1000000000);
           $546 = ($543|0)==(0);
           $547 = $546 & $545;
           $548 = $544 | $547;
           if ($548) {
            $549 = (___udivdi3(($542|0),($543|0),1000000000,0)|0);
            $550 = tempRet0;
            $551 = (___uremdi3(($542|0),($543|0),1000000000,0)|0);
            $552 = tempRet0;
            $$sink$off0$i = $551;$carry1$1$i = $549;
           } else {
            $$sink$off0$i = $542;$carry1$1$i = 0;
           }
           HEAP32[$538>>2] = $$sink$off0$i;
           $553 = (($z$2$i) + 127)|0;
           $554 = $553 & 127;
           $555 = ($k$5$i|0)!=($554|0);
           $556 = ($k$5$i|0)==($a$2$ph46$i|0);
           $or$cond22$i = $555 | $556;
           $557 = ($$sink$off0$i|0)==(0);
           $k$5$z$2$i = $557 ? $k$5$i : $z$2$i;
           $z$3$i = $or$cond22$i ? $z$2$i : $k$5$z$2$i;
           $558 = (($k$5$i) + -1)|0;
           if ($556) {
            $carry1$1$i$lcssa = $carry1$1$i;$z$3$i$lcssa = $z$3$i;
            break;
           } else {
            $carry1$0$i = $carry1$1$i;$k$5$in$i = $558;$z$2$i = $z$3$i;
           }
          }
          $559 = (($e2$0$i19) + -29)|0;
          $560 = ($carry1$1$i$lcssa|0)==(0);
          if ($560) {
           $e2$0$i19 = $559;$z$1$i = $z$3$i$lcssa;
          } else {
           $$lcssa265 = $559;$carry1$1$i$lcssa$lcssa = $carry1$1$i$lcssa;$z$3$i$lcssa$lcssa = $z$3$i$lcssa;
           break;
          }
         }
         $561 = (($rp$2$ph44$i) + 9)|0;
         $562 = (($a$2$ph46$i) + 127)|0;
         $563 = $562 & 127;
         $564 = ($563|0)==($z$3$i$lcssa$lcssa|0);
         if ($564) {
          $565 = (($z$3$i$lcssa$lcssa) + 127)|0;
          $566 = $565 & 127;
          $567 = (($x$i) + ($566<<2)|0);
          $568 = HEAP32[$567>>2]|0;
          $569 = (($z$3$i$lcssa$lcssa) + 126)|0;
          $570 = $569 & 127;
          $571 = (($x$i) + ($570<<2)|0);
          $572 = HEAP32[$571>>2]|0;
          $573 = $572 | $568;
          HEAP32[$571>>2] = $573;
          $z$4$i = $566;
         } else {
          $z$4$i = $z$3$i$lcssa$lcssa;
         }
         $574 = (($x$i) + ($563<<2)|0);
         HEAP32[$574>>2] = $carry1$1$i$lcssa$lcssa;
         $a$2$ph46$i = $563;$e2$0$ph$i = $$lcssa265;$rp$2$ph44$i = $561;$z$1$ph45$i = $z$4$i;
        }
        L302: while(1) {
         $605 = (($z$6$ph$i) + 1)|0;
         $602 = $605 & 127;
         $606 = (($z$6$ph$i) + 127)|0;
         $607 = $606 & 127;
         $608 = (($x$i) + ($607<<2)|0);
         $a$4$ph167$i = $a$4$ph$i;$e2$1$ph166$i = $e2$1$ph$i;$rp$4$ph$i = $rp$4$ph42$i;
         while(1) {
          $609 = ($rp$4$ph$i|0)==(18);
          $610 = ($rp$4$ph$i|0)>(27);
          $$24$i = $610 ? 9 : 1;
          $$not$i = $609 ^ 1;
          $a$4$i = $a$4$ph167$i;$e2$1$i = $e2$1$ph166$i;
          while(1) {
           $575 = $a$4$i & 127;
           $576 = ($575|0)==($z$6$ph$i|0);
           do {
            if ($576) {
             label = 219;
            } else {
             $577 = (($x$i) + ($575<<2)|0);
             $578 = HEAP32[$577>>2]|0;
             $579 = ($578>>>0)<(9007199);
             if ($579) {
              label = 219;
              break;
             }
             $580 = ($578>>>0)>(9007199);
             if ($580) {
              break;
             }
             $581 = (($a$4$i) + 1)|0;
             $582 = $581 & 127;
             $583 = ($582|0)==($z$6$ph$i|0);
             if ($583) {
              label = 219;
              break;
             }
             $689 = (($x$i) + ($582<<2)|0);
             $690 = HEAP32[$689>>2]|0;
             $691 = ($690>>>0)<(254740991);
             if ($691) {
              label = 219;
              break;
             }
             $692 = ($690>>>0)>(254740991);
             $brmerge$i28 = $692 | $$not$i;
             if (!($brmerge$i28)) {
              $616 = $575;$a$4$i251 = $a$4$i;$e2$1$i248 = $e2$1$i;$z$10$i = $z$6$ph$i;
              break L302;
             }
            }
           } while(0);
           if ((label|0) == 219) {
            label = 0;
            if ($609) {
             label = 220;
             break L302;
            }
           }
           $584 = (($e2$1$i) + ($$24$i))|0;
           $585 = ($a$4$i|0)==($z$6$ph$i|0);
           if ($585) {
            $a$4$i = $z$6$ph$i;$e2$1$i = $584;
           } else {
            $$lcssa258 = $584;$a$4$i$lcssa250 = $a$4$i;
            break;
           }
          }
          $586 = 1 << $$24$i;
          $587 = (($586) + -1)|0;
          $588 = 1000000000 >>> $$24$i;
          $a$586$i = $a$4$i$lcssa250;$carry4$089$i = 0;$k$687$i = $a$4$i$lcssa250;$rp$585$i = $rp$4$ph$i;
          while(1) {
           $589 = (($x$i) + ($k$687$i<<2)|0);
           $590 = HEAP32[$589>>2]|0;
           $591 = $590 & $587;
           $592 = $590 >>> $$24$i;
           $593 = (($592) + ($carry4$089$i))|0;
           HEAP32[$589>>2] = $593;
           $594 = Math_imul($591, $588)|0;
           $595 = ($k$687$i|0)==($a$586$i|0);
           $596 = ($593|0)==(0);
           $or$cond25$i = $595 & $596;
           $597 = (($k$687$i) + 1)|0;
           $598 = $597 & 127;
           $599 = (($rp$585$i) + -9)|0;
           $rp$6$i = $or$cond25$i ? $599 : $rp$585$i;
           $a$6$i = $or$cond25$i ? $598 : $a$586$i;
           $600 = ($598|0)==($z$6$ph$i|0);
           if ($600) {
            $$lcssa259 = $594;$a$6$i$lcssa = $a$6$i;$rp$6$i$lcssa = $rp$6$i;
            break;
           } else {
            $a$586$i = $a$6$i;$carry4$089$i = $594;$k$687$i = $598;$rp$585$i = $rp$6$i;
           }
          }
          $601 = ($$lcssa259|0)==(0);
          if ($601) {
           $a$4$ph167$i = $a$6$i$lcssa;$e2$1$ph166$i = $$lcssa258;$rp$4$ph$i = $rp$6$i$lcssa;
           continue;
          }
          $603 = ($602|0)==($a$6$i$lcssa|0);
          if (!($603)) {
           $$lcssa258$lcssa = $$lcssa258;$$lcssa259$lcssa = $$lcssa259;$a$6$i$lcssa$lcssa = $a$6$i$lcssa;$rp$6$i$lcssa$lcssa = $rp$6$i$lcssa;
           break;
          }
          $611 = HEAP32[$608>>2]|0;
          $612 = $611 | 1;
          HEAP32[$608>>2] = $612;
          $a$4$ph167$i = $a$6$i$lcssa;$e2$1$ph166$i = $$lcssa258;$rp$4$ph$i = $rp$6$i$lcssa;
         }
         $604 = (($x$i) + ($z$6$ph$i<<2)|0);
         HEAP32[$604>>2] = $$lcssa259$lcssa;
         $a$4$ph$i = $a$6$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa258$lcssa;$rp$4$ph42$i = $rp$6$i$lcssa$lcssa;$z$6$ph$i = $602;
        }
        if ((label|0) == 220) {
         if ($576) {
          $613 = (($602) + -1)|0;
          $614 = (($x$i) + ($613<<2)|0);
          HEAP32[$614>>2] = 0;
          $616 = $z$6$ph$i;$a$4$i251 = $a$4$i;$e2$1$i248 = $e2$1$i;$z$10$i = $602;
         } else {
          $616 = $575;$a$4$i251 = $a$4$i;$e2$1$i248 = $e2$1$i;$z$10$i = $z$6$ph$i;
         }
        }
        $615 = (($x$i) + ($616<<2)|0);
        $617 = HEAP32[$615>>2]|0;
        $618 = (+($617>>>0));
        $619 = (($a$4$i251) + 1)|0;
        $620 = $619 & 127;
        $621 = ($620|0)==($z$10$i|0);
        if ($621) {
         $678 = (($a$4$i251) + 2)|0;
         $679 = $678 & 127;
         $680 = (($679) + -1)|0;
         $681 = (($x$i) + ($680<<2)|0);
         HEAP32[$681>>2] = 0;
         $z$10$1$i = $679;
        } else {
         $z$10$1$i = $z$10$i;
        }
        $682 = $618 * 1.0E+9;
        $683 = (($x$i) + ($620<<2)|0);
        $684 = HEAP32[$683>>2]|0;
        $685 = (+($684>>>0));
        $686 = $682 + $685;
        $642 = (+($sign$0|0));
        $624 = $642 * $686;
        $662 = (($e2$1$i248) + 53)|0;
        $668 = (($662) - ($emin$0$ph))|0;
        $669 = ($668|0)<($bits$0$ph|0);
        $687 = ($668|0)<(0);
        $$$i = $687 ? 0 : $668;
        $denormal$0$i = $669&1;
        $$012$i = $669 ? $$$i : $bits$0$ph;
        $688 = ($$012$i|0)<(53);
        if ($688) {
         $622 = (105 - ($$012$i))|0;
         $623 = (+_scalbn(1.0,$622));
         $625 = (+_copysignl($623,$624));
         $626 = (53 - ($$012$i))|0;
         $627 = (+_scalbn(1.0,$626));
         $628 = (+_fmodl($624,$627));
         $629 = $624 - $628;
         $630 = $625 + $629;
         $bias$0$i25 = $625;$frac$0$i = $628;$y$1$i24 = $630;
        } else {
         $bias$0$i25 = 0.0;$frac$0$i = 0.0;$y$1$i24 = $624;
        }
        $631 = (($a$4$i251) + 2)|0;
        $632 = $631 & 127;
        $633 = ($632|0)==($z$10$1$i|0);
        do {
         if ($633) {
          $frac$3$i = $frac$0$i;
         } else {
          $634 = (($x$i) + ($632<<2)|0);
          $635 = HEAP32[$634>>2]|0;
          $636 = ($635>>>0)<(500000000);
          do {
           if ($636) {
            $637 = ($635|0)==(0);
            if ($637) {
             $638 = (($a$4$i251) + 3)|0;
             $639 = $638 & 127;
             $640 = ($639|0)==($z$10$1$i|0);
             if ($640) {
              $frac$1$i = $frac$0$i;
              break;
             }
            }
            $641 = $642 * 0.25;
            $643 = $641 + $frac$0$i;
            $frac$1$i = $643;
           } else {
            $644 = ($635>>>0)>(500000000);
            if ($644) {
             $645 = $642 * 0.75;
             $646 = $645 + $frac$0$i;
             $frac$1$i = $646;
             break;
            }
            $647 = (($a$4$i251) + 3)|0;
            $648 = $647 & 127;
            $649 = ($648|0)==($z$10$1$i|0);
            if ($649) {
             $650 = $642 * 0.5;
             $651 = $650 + $frac$0$i;
             $frac$1$i = $651;
             break;
            } else {
             $652 = $642 * 0.75;
             $653 = $652 + $frac$0$i;
             $frac$1$i = $653;
             break;
            }
           }
          } while(0);
          $654 = (53 - ($$012$i))|0;
          $655 = ($654|0)>(1);
          if (!($655)) {
           $frac$3$i = $frac$1$i;
           break;
          }
          $656 = (+_fmodl($frac$1$i,1.0));
          $657 = $656 != 0.0;
          if ($657) {
           $frac$3$i = $frac$1$i;
           break;
          }
          $658 = $frac$1$i + 1.0;
          $frac$3$i = $658;
         }
        } while(0);
        $659 = $y$1$i24 + $frac$3$i;
        $660 = $659 - $bias$0$i25;
        $661 = $662 & 2147483647;
        $663 = (-2 - ($sum$i))|0;
        $664 = ($661|0)>($663|0);
        do {
         if ($664) {
          $665 = (+Math_abs((+$660)));
          $666 = !($665 >= 9007199254740992.0);
          if ($666) {
           $denormal$2$i = $denormal$0$i;$e2$3$i = $e2$1$i248;$y$2$i26 = $660;
          } else {
           $667 = ($$012$i|0)==($668|0);
           $or$cond26$i = $669 & $667;
           $denormal$1$i = $or$cond26$i ? 0 : $denormal$0$i;
           $670 = $660 * 0.5;
           $671 = (($e2$1$i248) + 1)|0;
           $denormal$2$i = $denormal$1$i;$e2$3$i = $671;$y$2$i26 = $670;
          }
          $672 = (($e2$3$i) + 50)|0;
          $673 = ($672|0)>($330|0);
          if (!($673)) {
           $674 = ($denormal$2$i|0)!=(0);
           $675 = $frac$3$i != 0.0;
           $or$cond9$i27 = $675 & $674;
           if (!($or$cond9$i27)) {
            $e2$4$i = $e2$3$i;$y$3$i = $y$2$i26;
            break;
           }
          }
          $676 = (___errno_location()|0);
          HEAP32[$676>>2] = 34;
          $e2$4$i = $e2$3$i;$y$3$i = $y$2$i26;
         } else {
          $e2$4$i = $e2$1$i248;$y$3$i = $660;
         }
        } while(0);
        $677 = (+_scalbnl($y$3$i,$e2$4$i));
        $$1$i = $677;
       }
      } while(0);
      $$0 = $$1$i;
      break L4;
      break;
     }
     default: {
      $109 = HEAP32[$1>>2]|0;
      $110 = ($109|0)==(0|0);
      if (!($110)) {
       $111 = HEAP32[$0>>2]|0;
       $112 = ((($111)) + -1|0);
       HEAP32[$0>>2] = $112;
      }
      $113 = (___errno_location()|0);
      HEAP32[$113>>2] = 22;
      ___shlim($f,0);
      $$0 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $41 = HEAP32[$1>>2]|0;
    $42 = ($41|0)==(0|0);
    if (!($42)) {
     $43 = HEAP32[$0>>2]|0;
     $44 = ((($43)) + -1|0);
     HEAP32[$0>>2] = $44;
    }
    $45 = ($pok|0)!=(0);
    $46 = ($i$0$lcssa>>>0)>(3);
    $or$cond9 = $45 & $46;
    if ($or$cond9) {
     $i$1 = $i$0$lcssa;
     while(1) {
      if (!($42)) {
       $47 = HEAP32[$0>>2]|0;
       $48 = ((($47)) + -1|0);
       HEAP32[$0>>2] = $48;
      }
      $49 = (($i$1) + -1)|0;
      $$old8 = ($49>>>0)>(3);
      if ($$old8) {
       $i$1 = $49;
      } else {
       break;
      }
     }
    }
   }
   $50 = (+($sign$0|0));
   $51 = $50 * inf;
   $52 = $51;
   $$0 = $52;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 switch ($9|0) {
 case 43: case 45:  {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
  break;
 }
 default: {
  $c$0 = $9;$neg$0 = 0;
 }
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
  } else {
   $31 = HEAP32[$0>>2]|0;
   $32 = ((($31)) + -1|0);
   HEAP32[$0>>2] = $32;
   $98 = -2147483648;$99 = 0;
  }
 } else {
  $c$112 = $c$0;$x$013 = 0;
  while(1) {
   $33 = ($x$013*10)|0;
   $34 = (($c$112) + -48)|0;
   $35 = (($34) + ($33))|0;
   $36 = HEAP32[$0>>2]|0;
   $37 = HEAP32[$2>>2]|0;
   $38 = ($36>>>0)<($37>>>0);
   if ($38) {
    $39 = ((($36)) + 1|0);
    HEAP32[$0>>2] = $39;
    $40 = HEAP8[$36>>0]|0;
    $41 = $40&255;
    $c$1$be = $41;
   } else {
    $42 = (___shgetc($f)|0);
    $c$1$be = $42;
   }
   $43 = (($c$1$be) + -48)|0;
   $44 = ($43>>>0)<(10);
   $45 = ($35|0)<(214748364);
   $46 = $44 & $45;
   if ($46) {
    $c$112 = $c$1$be;$x$013 = $35;
   } else {
    $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
    break;
   }
  }
  $47 = ($$lcssa22|0)<(0);
  $48 = $47 << 31 >> 31;
  $49 = (($c$1$be$lcssa) + -48)|0;
  $50 = ($49>>>0)<(10);
  if ($50) {
   $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
   while(1) {
    $55 = (___muldi3(($53|0),($54|0),10,0)|0);
    $56 = tempRet0;
    $57 = ($c$27|0)<(0);
    $58 = $57 << 31 >> 31;
    $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
    $60 = tempRet0;
    $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
    $62 = tempRet0;
    $63 = HEAP32[$0>>2]|0;
    $64 = HEAP32[$2>>2]|0;
    $65 = ($63>>>0)<($64>>>0);
    if ($65) {
     $66 = ((($63)) + 1|0);
     HEAP32[$0>>2] = $66;
     $67 = HEAP8[$63>>0]|0;
     $68 = $67&255;
     $c$2$be = $68;
    } else {
     $69 = (___shgetc($f)|0);
     $c$2$be = $69;
    }
    $70 = (($c$2$be) + -48)|0;
    $71 = ($70>>>0)<(10);
    $72 = ($62|0)<(21474836);
    $73 = ($61>>>0)<(2061584302);
    $74 = ($62|0)==(21474836);
    $75 = $74 & $73;
    $76 = $72 | $75;
    $77 = $71 & $76;
    if ($77) {
     $53 = $61;$54 = $62;$c$27 = $c$2$be;
    } else {
     $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
     break;
    }
   }
  } else {
   $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
  }
  $51 = (($c$2$lcssa) + -48)|0;
  $52 = ($51>>>0)<(10);
  if ($52) {
   while(1) {
    $78 = HEAP32[$0>>2]|0;
    $79 = HEAP32[$2>>2]|0;
    $80 = ($78>>>0)<($79>>>0);
    if ($80) {
     $81 = ((($78)) + 1|0);
     HEAP32[$0>>2] = $81;
     $82 = HEAP8[$78>>0]|0;
     $83 = $82&255;
     $c$3$be = $83;
    } else {
     $84 = (___shgetc($f)|0);
     $c$3$be = $84;
    }
    $85 = (($c$3$be) + -48)|0;
    $86 = ($85>>>0)<(10);
    if (!($86)) {
     break;
    }
   }
  }
  $87 = HEAP32[$2>>2]|0;
  $88 = ($87|0)==(0|0);
  if (!($88)) {
   $89 = HEAP32[$0>>2]|0;
   $90 = ((($89)) + -1|0);
   HEAP32[$0>>2] = $90;
  }
  $91 = ($neg$0|0)!=(0);
  $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
  $95 = tempRet0;
  $96 = $91 ? $94 : $92;
  $97 = $91 ? $95 : $93;
  $98 = $97;$99 = $96;
 }
 tempRet0 = ($98);
 return ($99|0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $fabs = 0.0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 L1: do {
  if ($15) {
   label = 3;
  } else {
   $fabs = (+Math_abs((+$y)));
   HEAPF64[tempDoublePtr>>3] = $fabs;$16 = HEAP32[tempDoublePtr>>2]|0;
   $17 = HEAP32[tempDoublePtr+4>>2]|0;
   $18 = ($17>>>0)>(2146435072);
   $19 = ($16>>>0)>(0);
   $20 = ($17|0)==(2146435072);
   $21 = $20 & $19;
   $22 = $18 | $21;
   $23 = ($6|0)==(2047);
   $or$cond = $22 | $23;
   if ($or$cond) {
    label = 3;
   } else {
    $26 = (_bitshift64Shl(($0|0),($1|0),1)|0);
    $27 = tempRet0;
    $28 = ($27>>>0)>($12>>>0);
    $29 = ($26>>>0)>($11>>>0);
    $30 = ($27|0)==($12|0);
    $31 = $30 & $29;
    $32 = $28 | $31;
    if (!($32)) {
     $33 = ($26|0)==($11|0);
     $34 = ($27|0)==($12|0);
     $35 = $33 & $34;
     $36 = $x * 0.0;
     $$x = $35 ? $36 : $x;
     return (+$$x);
    }
    $37 = ($6|0)==(0);
    if ($37) {
     $38 = (_bitshift64Shl(($0|0),($1|0),12)|0);
     $39 = tempRet0;
     $40 = ($39|0)>(-1);
     $41 = ($38>>>0)>(4294967295);
     $42 = ($39|0)==(-1);
     $43 = $42 & $41;
     $44 = $40 | $43;
     if ($44) {
      $46 = $38;$47 = $39;$ex$026 = 0;
      while(1) {
       $45 = (($ex$026) + -1)|0;
       $48 = (_bitshift64Shl(($46|0),($47|0),1)|0);
       $49 = tempRet0;
       $50 = ($49|0)>(-1);
       $51 = ($48>>>0)>(4294967295);
       $52 = ($49|0)==(-1);
       $53 = $52 & $51;
       $54 = $50 | $53;
       if ($54) {
        $46 = $48;$47 = $49;$ex$026 = $45;
       } else {
        $ex$0$lcssa = $45;
        break;
       }
      }
     } else {
      $ex$0$lcssa = 0;
     }
     $55 = (1 - ($ex$0$lcssa))|0;
     $56 = (_bitshift64Shl(($0|0),($1|0),($55|0))|0);
     $57 = tempRet0;
     $84 = $56;$85 = $57;$ex$1 = $ex$0$lcssa;
    } else {
     $58 = $1 & 1048575;
     $59 = $58 | 1048576;
     $84 = $0;$85 = $59;$ex$1 = $6;
    }
    $60 = ($9|0)==(0);
    if ($60) {
     $61 = (_bitshift64Shl(($2|0),($3|0),12)|0);
     $62 = tempRet0;
     $63 = ($62|0)>(-1);
     $64 = ($61>>>0)>(4294967295);
     $65 = ($62|0)==(-1);
     $66 = $65 & $64;
     $67 = $63 | $66;
     if ($67) {
      $69 = $61;$70 = $62;$ey$020 = 0;
      while(1) {
       $68 = (($ey$020) + -1)|0;
       $71 = (_bitshift64Shl(($69|0),($70|0),1)|0);
       $72 = tempRet0;
       $73 = ($72|0)>(-1);
       $74 = ($71>>>0)>(4294967295);
       $75 = ($72|0)==(-1);
       $76 = $75 & $74;
       $77 = $73 | $76;
       if ($77) {
        $69 = $71;$70 = $72;$ey$020 = $68;
       } else {
        $ey$0$lcssa = $68;
        break;
       }
      }
     } else {
      $ey$0$lcssa = 0;
     }
     $78 = (1 - ($ey$0$lcssa))|0;
     $79 = (_bitshift64Shl(($2|0),($3|0),($78|0))|0);
     $80 = tempRet0;
     $86 = $79;$87 = $80;$ey$1$ph = $ey$0$lcssa;
    } else {
     $81 = $3 & 1048575;
     $82 = $81 | 1048576;
     $86 = $2;$87 = $82;$ey$1$ph = $9;
    }
    $83 = ($ex$1|0)>($ey$1$ph|0);
    $88 = (_i64Subtract(($84|0),($85|0),($86|0),($87|0))|0);
    $89 = tempRet0;
    $90 = ($89|0)>(-1);
    $91 = ($88>>>0)>(4294967295);
    $92 = ($89|0)==(-1);
    $93 = $92 & $91;
    $94 = $90 | $93;
    L23: do {
     if ($83) {
      $153 = $94;$154 = $88;$155 = $89;$95 = $84;$97 = $85;$ex$212 = $ex$1;
      while(1) {
       if ($153) {
        $96 = ($95|0)==($86|0);
        $98 = ($97|0)==($87|0);
        $99 = $96 & $98;
        if ($99) {
         break;
        } else {
         $101 = $154;$102 = $155;
        }
       } else {
        $101 = $95;$102 = $97;
       }
       $103 = (_bitshift64Shl(($101|0),($102|0),1)|0);
       $104 = tempRet0;
       $105 = (($ex$212) + -1)|0;
       $106 = ($105|0)>($ey$1$ph|0);
       $107 = (_i64Subtract(($103|0),($104|0),($86|0),($87|0))|0);
       $108 = tempRet0;
       $109 = ($108|0)>(-1);
       $110 = ($107>>>0)>(4294967295);
       $111 = ($108|0)==(-1);
       $112 = $111 & $110;
       $113 = $109 | $112;
       if ($106) {
        $153 = $113;$154 = $107;$155 = $108;$95 = $103;$97 = $104;$ex$212 = $105;
       } else {
        $$lcssa7 = $113;$114 = $103;$116 = $104;$156 = $107;$157 = $108;$ex$2$lcssa = $105;
        break L23;
       }
      }
      $100 = $x * 0.0;
      $$0 = $100;
      break L1;
     } else {
      $$lcssa7 = $94;$114 = $84;$116 = $85;$156 = $88;$157 = $89;$ex$2$lcssa = $ex$1;
     }
    } while(0);
    if ($$lcssa7) {
     $115 = ($114|0)==($86|0);
     $117 = ($116|0)==($87|0);
     $118 = $115 & $117;
     if ($118) {
      $126 = $x * 0.0;
      $$0 = $126;
      break;
     } else {
      $119 = $157;$121 = $156;
     }
    } else {
     $119 = $116;$121 = $114;
    }
    $120 = ($119>>>0)<(1048576);
    $122 = ($121>>>0)<(0);
    $123 = ($119|0)==(1048576);
    $124 = $123 & $122;
    $125 = $120 | $124;
    if ($125) {
     $127 = $121;$128 = $119;$ex$39 = $ex$2$lcssa;
     while(1) {
      $129 = (_bitshift64Shl(($127|0),($128|0),1)|0);
      $130 = tempRet0;
      $131 = (($ex$39) + -1)|0;
      $132 = ($130>>>0)<(1048576);
      $133 = ($129>>>0)<(0);
      $134 = ($130|0)==(1048576);
      $135 = $134 & $133;
      $136 = $132 | $135;
      if ($136) {
       $127 = $129;$128 = $130;$ex$39 = $131;
      } else {
       $138 = $129;$139 = $130;$ex$3$lcssa = $131;
       break;
      }
     }
    } else {
     $138 = $121;$139 = $119;$ex$3$lcssa = $ex$2$lcssa;
    }
    $137 = ($ex$3$lcssa|0)>(0);
    if ($137) {
     $140 = (_i64Add(($138|0),($139|0),0,-1048576)|0);
     $141 = tempRet0;
     $142 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
     $143 = tempRet0;
     $144 = $140 | $142;
     $145 = $141 | $143;
     $150 = $145;$152 = $144;
    } else {
     $146 = (1 - ($ex$3$lcssa))|0;
     $147 = (_bitshift64Lshr(($138|0),($139|0),($146|0))|0);
     $148 = tempRet0;
     $150 = $148;$152 = $147;
    }
    $149 = $150 | $10;
    HEAP32[tempDoublePtr>>2] = $152;HEAP32[tempDoublePtr+4>>2] = $149;$151 = +HEAPF64[tempDoublePtr>>3];
    $$0 = $151;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $24 = $x * $y;
  $25 = $24 / $24;
  $$0 = $25;
 }
 return (+$$0);
}
function _fflush($f) {
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$012 = 0, $$014 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($f|0)==(0|0);
 do {
  if ($0) {
   $7 = HEAP32[878]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $27 = 0;
   } else {
    $9 = HEAP32[878]|0;
    $10 = (_fflush($9)|0);
    $27 = $10;
   }
   ___lock(((20840)|0));
   $$012 = HEAP32[(20836)>>2]|0;
   $11 = ($$012|0)==(0|0);
   if ($11) {
    $r$0$lcssa = $27;
   } else {
    $$014 = $$012;$r$03 = $27;
    while(1) {
     $12 = ((($$014)) + 76|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($13|0)>(-1);
     if ($14) {
      $15 = (___lockfile($$014)|0);
      $23 = $15;
     } else {
      $23 = 0;
     }
     $16 = ((($$014)) + 20|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($$014)) + 28|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ($17>>>0)>($19>>>0);
     if ($20) {
      $21 = (___fflush_unlocked($$014)|0);
      $22 = $21 | $r$03;
      $r$1 = $22;
     } else {
      $r$1 = $r$03;
     }
     $24 = ($23|0)==(0);
     if (!($24)) {
      ___unlockfile($$014);
     }
     $25 = ((($$014)) + 56|0);
     $$01 = HEAP32[$25>>2]|0;
     $26 = ($$01|0)==(0|0);
     if ($26) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $$014 = $$01;$r$03 = $r$1;
     }
    }
   }
   ___unlock(((20840)|0));
   $$0 = $r$0$lcssa;
  } else {
   $1 = ((($f)) + 76|0);
   $2 = HEAP32[$1>>2]|0;
   $3 = ($2|0)>(-1);
   if (!($3)) {
    $4 = (___fflush_unlocked($f)|0);
    $$0 = $4;
    break;
   }
   $5 = (___lockfile($f)|0);
   $phitmp = ($5|0)==(0);
   $6 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $$0 = $6;
   } else {
    ___unlockfile($f);
    $$0 = $6;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)>($3>>>0);
 if ($4) {
  $5 = ((($f)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  (FUNCTION_TABLE_iiii[$6 & 1023]($f,0,0)|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $9 = ((($f)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($f)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($10>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($f)) + 40|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $10;
   $17 = $12;
   $18 = (($16) - ($17))|0;
   (FUNCTION_TABLE_iiii[$15 & 1023]($f,$18,1)|0);
  }
  $19 = ((($f)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$2>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$11>>2] = 0;
  HEAP32[$9>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function ___ctype_toupper_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (4096|0);
}
function ___ctype_b_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5636|0);
}
function ___ctype_tolower_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5640|0);
}
function _isxdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if ($isdigit) {
  $4 = 1;
 } else {
  $0 = $c | 32;
  $1 = (($0) + -97)|0;
  $2 = ($1>>>0)<(6);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function ___overflow($f,$_c) {
 $f = $f|0;
 $_c = $_c|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = $_c&255;
 HEAP8[$c>>0] = $0;
 $1 = ((($f)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $4 = (___towrite($f)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   $$pre = HEAP32[$1>>2]|0;
   $9 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $9 = $2;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $6 = ((($f)) + 20|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7>>>0)<($9>>>0);
   if ($8) {
    $10 = $_c & 255;
    $11 = ((($f)) + 75|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12 << 24 >> 24;
    $14 = ($10|0)==($13|0);
    if (!($14)) {
     $15 = ((($7)) + 1|0);
     HEAP32[$6>>2] = $15;
     HEAP8[$7>>0] = $0;
     $$0 = $10;
     break;
    }
   }
   $16 = ((($f)) + 36|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iiii[$17 & 1023]($f,$c,1)|0);
   $19 = ($18|0)==(1);
   if ($19) {
    $20 = HEAP8[$c>>0]|0;
    $21 = $20&255;
    $$0 = $21;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _getc($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (___lockfile($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $14 = ((($f)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($f)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($15>>>0)<($17>>>0);
   if ($18) {
    $19 = ((($15)) + 1|0);
    HEAP32[$14>>2] = $19;
    $20 = HEAP8[$15>>0]|0;
    $21 = $20&255;
    $23 = $21;
   } else {
    $22 = (___uflow($f)|0);
    $23 = $22;
   }
   ___unlockfile($f);
   $$0 = $23;
  }
 }
 do {
  if ((label|0) == 3) {
   $5 = ((($f)) + 4|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ((($f)) + 8|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($6>>>0)<($8>>>0);
   if ($9) {
    $10 = ((($6)) + 1|0);
    HEAP32[$5>>2] = $10;
    $11 = HEAP8[$6>>0]|0;
    $12 = $11&255;
    $$0 = $12;
    break;
   } else {
    $13 = (___uflow($f)|0);
    $$0 = $13;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _mbsnrtowcs($wcs,$src,$n,$wn,$st) {
 $wcs = $wcs|0;
 $src = $src|0;
 $n = $n|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$019 = 0, $$02$ = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$214 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$020 = 0, $cnt$1 = 0, $cnt$215 = 0, $cnt$215$lcssa = 0, $cnt$3 = 0, $or$cond = 0, $or$cond17 = 0, $s = 0, $wbuf = 0, $wcs$ = 0;
 var $wn$ = 0, $ws$010 = 0, $ws$021 = 0, $ws$021$lcssa56 = 0, $ws$1 = 0, $ws$216 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $wbuf = sp + 8|0;
 $s = sp;
 $0 = HEAP32[$src>>2]|0;
 HEAP32[$s>>2] = $0;
 $1 = ($wcs|0)!=(0|0);
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($wn$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$019 = $n;$$0218 = $wn$;$37 = $$cast;$cnt$020 = 0;$ws$021 = $wcs$;
   while(1) {
    $4 = $$019 >>> 2;
    $5 = ($4>>>0)>=($$0218>>>0);
    $6 = ($$019>>>0)>(131);
    $7 = $6 | $5;
    if (!($7)) {
     $$1 = $$019;$$24 = $$0218;$18 = $37;$cnt$1 = $cnt$020;$ws$010 = $ws$021;
     break L1;
    }
    $$02$ = $5 ? $$0218 : $4;
    $8 = (($$019) - ($$02$))|0;
    $9 = (_mbsrtowcs($ws$021,$s,$$02$,$st)|0);
    $10 = ($9|0)==(-1);
    if ($10) {
     $$lcssa57 = $8;$ws$021$lcssa56 = $ws$021;
     break;
    }
    $11 = ($ws$021|0)==($wbuf|0);
    $12 = (($ws$021) + ($9<<2)|0);
    $13 = $11 ? 0 : $9;
    $$13 = (($$0218) - ($13))|0;
    $ws$1 = $11 ? $ws$021 : $12;
    $14 = (($9) + ($cnt$020))|0;
    $15 = HEAP32[$s>>2]|0;
    $16 = ($15|0)!=(0|0);
    $17 = ($$0218|0)!=($13|0);
    $or$cond = $17 & $16;
    if ($or$cond) {
     $$019 = $8;$$0218 = $$13;$37 = $15;$cnt$020 = $14;$ws$021 = $ws$1;
    } else {
     $$1 = $8;$$24 = $$13;$18 = $15;$cnt$1 = $14;$ws$010 = $ws$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$s>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$18 = $$pr$pre;$cnt$1 = -1;$ws$010 = $ws$021$lcssa56;
  } else {
   $$1 = $n;$$24 = $wn$;$18 = $$cast;$cnt$1 = 0;$ws$010 = $wcs$;
  }
 } while(0);
 $19 = ($18|0)==(0|0);
 L8: do {
  if ($19) {
   $cnt$3 = $cnt$1;
  } else {
   $20 = ($$24|0)!=(0);
   $21 = ($$1|0)!=(0);
   $22 = $20 & $21;
   if ($22) {
    $$214 = $$1;$$313 = $$24;$23 = $18;$cnt$215 = $cnt$1;$ws$216 = $ws$010;
    while(1) {
     $24 = (_mbrtowc($ws$216,$23,$$214,$st)|0);
     $25 = (($24) + 2)|0;
     $26 = ($25>>>0)<(3);
     if ($26) {
      $$lcssa = $24;$cnt$215$lcssa = $cnt$215;
      break;
     }
     $27 = HEAP32[$s>>2]|0;
     $28 = (($27) + ($24)|0);
     HEAP32[$s>>2] = $28;
     $29 = (($$214) - ($24))|0;
     $30 = ((($ws$216)) + 4|0);
     $31 = (($$313) + -1)|0;
     $32 = (($cnt$215) + 1)|0;
     $33 = ($31|0)!=(0);
     $34 = ($$214|0)!=($24|0);
     $35 = $33 & $34;
     if ($35) {
      $$214 = $29;$$313 = $31;$23 = $28;$cnt$215 = $32;$ws$216 = $30;
     } else {
      $cnt$3 = $32;
      break L8;
     }
    }
    switch ($$lcssa|0) {
    case -1:  {
     $cnt$3 = -1;
     break L8;
     break;
    }
    case 0:  {
     HEAP32[$s>>2] = 0;
     $cnt$3 = $cnt$215$lcssa;
     break L8;
     break;
    }
    default: {
     HEAP32[$st>>2] = 0;
     $cnt$3 = $cnt$215$lcssa;
     break L8;
    }
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if ($1) {
  $36 = HEAP32[$s>>2]|0;
  HEAP32[$src>>2] = $36;
 }
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0, $$5$lcssa = 0;
 var $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$lcssa = 0, $$lcssa102 = 0, $$lcssa88 = 0, $$lcssa89 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$old1 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0, $s$0 = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0;
 var $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 37;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0219 = $$02$ph;$$4718 = $$47$ph;$s$520 = $s$5$ph;
   }
   while(1) {
    $64 = HEAP8[$s$520>>0]|0;
    $65 = $64&255;
    $66 = (($65) + -1)|0;
    $67 = ($66>>>0)<(127);
    do {
     if ($67) {
      $68 = $s$520;
      $69 = $68 & 3;
      $70 = ($69|0)==(0);
      $71 = ($$4718>>>0)>(4);
      $or$cond = $71 & $70;
      if ($or$cond) {
       $$1 = $$0219;$$5 = $$4718;$s$6 = $s$520;
       while(1) {
        $72 = HEAP32[$s$6>>2]|0;
        $73 = (($72) + -16843009)|0;
        $74 = $73 | $72;
        $75 = $74 & -2139062144;
        $76 = ($75|0)==(0);
        if (!($76)) {
         $$1$lcssa = $$1;$$5$lcssa = $$5;$$lcssa94 = $72;$s$6$lcssa = $s$6;
         label = 32;
         break;
        }
        $77 = ((($s$6)) + 1|0);
        $78 = $72 & 255;
        $79 = ((($$1)) + 4|0);
        HEAP32[$$1>>2] = $78;
        $80 = ((($s$6)) + 2|0);
        $81 = HEAP8[$77>>0]|0;
        $82 = $81&255;
        $83 = ((($$1)) + 8|0);
        HEAP32[$79>>2] = $82;
        $84 = ((($s$6)) + 3|0);
        $85 = HEAP8[$80>>0]|0;
        $86 = $85&255;
        $87 = ((($$1)) + 12|0);
        HEAP32[$83>>2] = $86;
        $88 = ((($s$6)) + 4|0);
        $89 = HEAP8[$84>>0]|0;
        $90 = $89&255;
        $91 = ((($$1)) + 16|0);
        HEAP32[$87>>2] = $90;
        $92 = (($$5) + -4)|0;
        $$old1 = ($92>>>0)>(4);
        if ($$old1) {
         $$1 = $91;$$5 = $92;$s$6 = $88;
        } else {
         $$lcssa96 = $88;$$lcssa97 = $91;$$lcssa98 = $92;
         label = 31;
         break;
        }
       }
       if ((label|0) == 31) {
        label = 0;
        $$pre$pre = HEAP8[$$lcssa96>>0]|0;
        $$2 = $$lcssa97;$$6 = $$lcssa98;$95 = $$pre$pre;$s$7 = $$lcssa96;
        break;
       }
       else if ((label|0) == 32) {
        label = 0;
        $93 = $$lcssa94&255;
        $$2 = $$1$lcssa;$$6 = $$5$lcssa;$95 = $93;$s$7 = $s$6$lcssa;
        break;
       }
      } else {
       $$2 = $$0219;$$6 = $$4718;$95 = $64;$s$7 = $s$520;
      }
     } else {
      $$2 = $$0219;$$6 = $$4718;$95 = $64;$s$7 = $s$520;
     }
    } while(0);
    $94 = $95&255;
    $96 = (($94) + -1)|0;
    $97 = ($96>>>0)<(127);
    if (!($97)) {
     $$2$lcssa = $$2;$$6$lcssa = $$6;$$lcssa102 = $94;$s$7$lcssa = $s$7;
     break;
    }
    $98 = ((($s$7)) + 1|0);
    $99 = ((($$2)) + 4|0);
    HEAP32[$$2>>2] = $94;
    $100 = (($$6) + -1)|0;
    $101 = ($100|0)==(0);
    if ($101) {
     $s$5$lcssa = $98;
     label = 26;
     break L7;
    } else {
     $$0219 = $99;$$4718 = $100;$s$520 = $98;
    }
   }
   $102 = (($$lcssa102) + -194)|0;
   $103 = ($102>>>0)>(50);
   if ($103) {
    $$434 = $$2$lcssa;$$833 = $$6$lcssa;$s$1035 = $s$7$lcssa;
    label = 48;
    break;
   }
   $104 = ((($s$7$lcssa)) + 1|0);
   $105 = (3748 + ($102<<2)|0);
   $106 = HEAP32[$105>>2]|0;
   $$3 = $$2$lcssa;$$7 = $$6$lcssa;$c$4 = $106;$s$8 = $104;
   label = 37;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     $19 = $14&255;
     if ($18) {
      $$1415 = $$03;$s$116 = $s$0;
      while(1) {
       $20 = ((($s$116)) + 4|0);
       $21 = (($$1415) + -4)|0;
       $22 = HEAP32[$20>>2]|0;
       $23 = (($22) + -16843009)|0;
       $24 = $23 | $22;
       $25 = $24 & -2139062144;
       $26 = ($25|0)==(0);
       if ($26) {
        $$1415 = $21;$s$116 = $20;
       } else {
        $$lcssa = $20;$$lcssa88 = $21;$$lcssa89 = $22;
        break;
       }
      }
      $27 = $$lcssa89&255;
      $$25 = $$lcssa88;$29 = $27;$s$2 = $$lcssa;
     } else {
      $$25 = $$03;$29 = $19;$s$2 = $s$0;
     }
    } else {
     $$25 = $$03;$29 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$29 = $7;$s$2 = $s$0;
   }
   $28 = $29&255;
   $30 = (($28) + -1)|0;
   $31 = ($30>>>0)<(127);
   if ($31) {
    $32 = ((($s$2)) + 1|0);
    $33 = (($$25) + -1)|0;
    $$03 = $33;$s$0 = $32;
    label = 7;
    continue;
   } else {
    $$25$lcssa = $$25;$$lcssa90 = $28;$s$2$lcssa = $s$2;
   }
   $34 = (($$lcssa90) + -194)|0;
   $35 = ($34>>>0)>(50);
   if ($35) {
    $$434 = $ws;$$833 = $$25$lcssa;$s$1035 = $s$2$lcssa;
    label = 48;
    break;
   }
   $36 = ((($s$2$lcssa)) + 1|0);
   $37 = (3748 + ($34<<2)|0);
   $38 = HEAP32[$37>>2]|0;
   $$36 = $$25$lcssa;$c$2 = $38;$s$3 = $36;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $39 = HEAP8[$s$3>>0]|0;
   $40 = $39&255;
   $41 = $40 >>> 3;
   $42 = (($41) + -16)|0;
   $43 = $c$2 >> 26;
   $44 = (($41) + ($43))|0;
   $45 = $42 | $44;
   $46 = ($45>>>0)>(7);
   if ($46) {
    label = 17;
    break;
   }
   $48 = ((($s$3)) + 1|0);
   $49 = $c$2 & 33554432;
   $50 = ($49|0)==(0);
   if ($50) {
    $s$4 = $48;
   } else {
    $51 = HEAP8[$48>>0]|0;
    $52 = $51 & -64;
    $53 = ($52<<24>>24)==(-128);
    if (!($53)) {
     label = 20;
     break;
    }
    $55 = ((($s$3)) + 2|0);
    $56 = $c$2 & 524288;
    $57 = ($56|0)==(0);
    if ($57) {
     $s$4 = $55;
    } else {
     $58 = HEAP8[$55>>0]|0;
     $59 = $58 & -64;
     $60 = ($59<<24>>24)==(-128);
     if (!($60)) {
      label = 23;
      break;
     }
     $62 = ((($s$3)) + 3|0);
     $s$4 = $62;
    }
   }
   $63 = (($$36) + -1)|0;
   $$03 = $63;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 37) {
   label = 0;
   $107 = HEAP8[$s$8>>0]|0;
   $108 = $107&255;
   $109 = $108 >>> 3;
   $110 = (($109) + -16)|0;
   $111 = $c$4 >> 26;
   $112 = (($109) + ($111))|0;
   $113 = $110 | $112;
   $114 = ($113>>>0)>(7);
   if ($114) {
    label = 38;
    break;
   }
   $116 = $c$4 << 6;
   $117 = ((($s$8)) + 1|0);
   $118 = (($108) + -128)|0;
   $119 = $118 | $116;
   $120 = ($119|0)<(0);
   if ($120) {
    $121 = HEAP8[$117>>0]|0;
    $122 = $121&255;
    $123 = $122 & 192;
    $124 = ($123|0)==(128);
    if (!($124)) {
     label = 41;
     break;
    }
    $126 = $119 << 6;
    $127 = ((($s$8)) + 2|0);
    $128 = (($122) + -128)|0;
    $129 = $128 | $126;
    $130 = ($129|0)<(0);
    if ($130) {
     $131 = HEAP8[$127>>0]|0;
     $132 = $131&255;
     $133 = $132 & 192;
     $134 = ($133|0)==(128);
     if (!($134)) {
      label = 44;
      break;
     }
     $136 = $129 << 6;
     $137 = ((($s$8)) + 3|0);
     $138 = (($132) + -128)|0;
     $139 = $138 | $136;
     $c$5 = $139;$s$9 = $137;
    } else {
     $c$5 = $129;$s$9 = $127;
    }
   } else {
    $c$5 = $119;$s$9 = $117;
   }
   $140 = ((($$3)) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $141 = (($$7) + -1)|0;
   $$02$ph = $140;$$47$ph = $141;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $47 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $47;
  label = 47;
 }
 else if ((label|0) == 20) {
  $54 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $54;
  label = 47;
 }
 else if ((label|0) == 23) {
  $61 = ((($s$3)) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $61;
  label = 47;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
 }
 else if ((label|0) == 38) {
  $115 = ((($s$8)) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $115;
  label = 47;
 }
 else if ((label|0) == 41) {
  $125 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $125;
  label = 52;
 }
 else if ((label|0) == 44) {
  $135 = ((($s$8)) + -1|0);
  $$48 = $$3;$s$109 = $135;
  label = 52;
 }
 if ((label|0) == 47) {
  $142 = ($c$6|0)==(0);
  if ($142) {
   $$434 = $$4;$$833 = $$8;$s$1035 = $s$10;
   label = 48;
  } else {
   $$48 = $$4;$s$109 = $s$10;
   label = 52;
  }
 }
 if ((label|0) == 48) {
  $143 = HEAP8[$s$1035>>0]|0;
  $144 = ($143<<24>>24)==(0);
  if ($144) {
   $145 = ($$434|0)==(0|0);
   if (!($145)) {
    HEAP32[$$434>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $146 = (($wn) - ($$833))|0;
   $$0 = $146;
  } else {
   $$48 = $$434;$s$109 = $s$1035;
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $147 = (___errno_location()|0);
  HEAP32[$147>>2] = 84;
  $148 = ($$48|0)==(0|0);
  if ($148) {
   $$0 = -1;
  } else {
   HEAP32[$src>>2] = $s$109;
   $$0 = -1;
  }
 }
 return ($$0|0);
}
function _fputc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (___lockfile($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $18 = ((($f)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 << 24 >> 24;
   $21 = ($20|0)==($c|0);
   if ($21) {
    label = 10;
   } else {
    $22 = ((($f)) + 20|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($f)) + 16|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($23>>>0)<($25>>>0);
    if ($26) {
     $27 = $c&255;
     $28 = ((($23)) + 1|0);
     HEAP32[$22>>2] = $28;
     HEAP8[$23>>0] = $27;
     $29 = $c & 255;
     $31 = $29;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $30 = (___overflow($f,$c)|0);
    $31 = $30;
   }
   ___unlockfile($f);
   $$0 = $31;
  }
 }
 do {
  if ((label|0) == 3) {
   $5 = ((($f)) + 75|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = $6 << 24 >> 24;
   $8 = ($7|0)==($c|0);
   if (!($8)) {
    $9 = ((($f)) + 20|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ((($f)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($10>>>0)<($12>>>0);
    if ($13) {
     $14 = $c&255;
     $15 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $15;
     HEAP8[$10>>0] = $14;
     $16 = $c & 255;
     $$0 = $16;
     break;
    }
   }
   $17 = (___overflow($f,$c)|0);
   $$0 = $17;
  }
 } while(0);
 return ($$0|0);
}
function _fwrite($src,$size,$nmemb,$f) {
 $src = $src|0;
 $size = $size|0;
 $nmemb = $nmemb|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = Math_imul($nmemb, $size)|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $5 = (___lockfile($f)|0);
  $phitmp = ($5|0)==(0);
  $6 = (___fwritex($src,$0,$f)|0);
  if ($phitmp) {
   $7 = $6;
  } else {
   ___unlockfile($f);
   $7 = $6;
  }
 } else {
  $4 = (___fwritex($src,$0,$f)|0);
  $7 = $4;
 }
 $8 = ($7|0)==($0|0);
 if ($8) {
  $10 = $nmemb;
 } else {
  $9 = (($7>>>0) / ($size>>>0))&-1;
  $10 = $9;
 }
 return ($10|0);
}
function _vasprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp;
 $0 = (_malloc(240)|0);
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $$0 = -1;
  } else {
   $vacopy_currentptr = HEAP32[$ap>>2]|0;
   HEAP32[$ap2>>2] = $vacopy_currentptr;
   $2 = (_vsnprintf($0,240,$fmt,$ap2)|0);
   $3 = ($2>>>0)<(240);
   if ($3) {
    $4 = (($2) + 1)|0;
    $5 = (_realloc($0,$4)|0);
    $6 = ($5|0)!=(0|0);
    $7 = $6 ? $5 : $0;
    HEAP32[$s>>2] = $7;
    $$0 = $2;
    break;
   }
   _free($0);
   $8 = ($2|0)<(0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = (($2) + 1)|0;
    $10 = (_malloc($9)|0);
    HEAP32[$s>>2] = $10;
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$0 = -1;
    } else {
     $12 = (_vsnprintf($10,$9,$fmt,$ap)|0);
     $$0 = $12;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _wcsrtombs($s,$ws,$n,$st) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa83 = 0, $$5 = 0, $$pn = 0, $$pre = 0;
 var $$pre44 = 0, $$pre45 = 0, $$pre46 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp;
 $0 = ($s|0)==(0|0);
 L1: do {
  if ($0) {
   $2 = HEAP32[$ws>>2]|0;
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==(0);
   if ($4) {
    $$0 = 0;
   } else {
    $$0218 = 0;$5 = $3;$ws2$019 = $2;
    while(1) {
     $6 = ($5>>>0)>(127);
     if ($6) {
      $7 = (_wcrtomb($buf,$5,0)|0);
      $8 = ($7|0)==(-1);
      if ($8) {
       $$0 = -1;
       break L1;
      } else {
       $$pn = $7;
      }
     } else {
      $$pn = 1;
     }
     $$13 = (($$pn) + ($$0218))|0;
     $9 = ((($ws2$019)) + 4|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = ($10|0)==(0);
     if ($11) {
      $$0 = $$13;
      break;
     } else {
      $$0218 = $$13;$5 = $10;$ws2$019 = $9;
     }
    }
   }
  } else {
   $1 = ($n>>>0)>(3);
   L9: do {
    if ($1) {
     $$pre = HEAP32[$ws>>2]|0;
     $$0129 = $s;$$2428 = $n;$14 = $$pre;
     while(1) {
      $13 = HEAP32[$14>>2]|0;
      $15 = (($13) + -1)|0;
      $16 = ($15>>>0)>(126);
      if ($16) {
       $17 = ($13|0)==(0);
       if ($17) {
        $$0129$lcssa = $$0129;$$2428$lcssa = $$2428;
        break;
       }
       $19 = (_wcrtomb($$0129,$13,0)|0);
       $20 = ($19|0)==(-1);
       if ($20) {
        $$0 = -1;
        break L1;
       }
       $21 = (($$0129) + ($19)|0);
       $22 = (($$2428) - ($19))|0;
       $$1 = $21;$$35 = $22;$27 = $14;
      } else {
       $23 = $13&255;
       $24 = ((($$0129)) + 1|0);
       HEAP8[$$0129>>0] = $23;
       $25 = (($$2428) + -1)|0;
       $$pre44 = HEAP32[$ws>>2]|0;
       $$1 = $24;$$35 = $25;$27 = $$pre44;
      }
      $26 = ((($27)) + 4|0);
      HEAP32[$ws>>2] = $26;
      $28 = ($$35>>>0)>(3);
      if ($28) {
       $$0129 = $$1;$$2428 = $$35;$14 = $26;
      } else {
       $$01$lcssa = $$1;$$24$lcssa = $$35;
       break L9;
      }
     }
     HEAP8[$$0129$lcssa>>0] = 0;
     HEAP32[$ws>>2] = 0;
     $18 = (($n) - ($$2428$lcssa))|0;
     $$0 = $18;
     break L1;
    } else {
     $$01$lcssa = $s;$$24$lcssa = $n;
    }
   } while(0);
   $12 = ($$24$lcssa|0)==(0);
   if ($12) {
    $$0 = $n;
   } else {
    $$pre45 = HEAP32[$ws>>2]|0;
    $$223 = $$01$lcssa;$$422 = $$24$lcssa;$30 = $$pre45;
    while(1) {
     $29 = HEAP32[$30>>2]|0;
     $31 = (($29) + -1)|0;
     $32 = ($31>>>0)>(126);
     if ($32) {
      $33 = ($29|0)==(0);
      if ($33) {
       $$223$lcssa = $$223;$$422$lcssa = $$422;
       label = 19;
       break;
      }
      $35 = (_wcrtomb($buf,$29,0)|0);
      $36 = ($35|0)==(-1);
      if ($36) {
       $$0 = -1;
       break L1;
      }
      $37 = ($$422>>>0)<($35>>>0);
      if ($37) {
       $$422$lcssa83 = $$422;
       label = 22;
       break;
      }
      $39 = HEAP32[$30>>2]|0;
      (_wcrtomb($$223,$39,0)|0);
      $40 = (($$223) + ($35)|0);
      $41 = (($$422) - ($35))|0;
      $$3 = $40;$$5 = $41;$46 = $30;
     } else {
      $42 = $29&255;
      $43 = ((($$223)) + 1|0);
      HEAP8[$$223>>0] = $42;
      $44 = (($$422) + -1)|0;
      $$pre46 = HEAP32[$ws>>2]|0;
      $$3 = $43;$$5 = $44;$46 = $$pre46;
     }
     $45 = ((($46)) + 4|0);
     HEAP32[$ws>>2] = $45;
     $47 = ($$5|0)==(0);
     if ($47) {
      $$0 = $n;
      break L1;
     } else {
      $$223 = $$3;$$422 = $$5;$30 = $45;
     }
    }
    if ((label|0) == 19) {
     HEAP8[$$223$lcssa>>0] = 0;
     HEAP32[$ws>>2] = 0;
     $34 = (($n) - ($$422$lcssa))|0;
     $$0 = $34;
     break;
    }
    else if ((label|0) == 22) {
     $38 = (($n) - ($$422$lcssa83))|0;
     $$0 = $38;
     break;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _ungetc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(-1);
 do {
  if ($0) {
   $$1 = -1;
  } else {
   $1 = ((($f)) + 76|0);
   $2 = HEAP32[$1>>2]|0;
   $3 = ($2|0)>(-1);
   if ($3) {
    $4 = (___lockfile($f)|0);
    $16 = $4;
   } else {
    $16 = 0;
   }
   $5 = ((($f)) + 8|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    $8 = (___toread($f)|0);
    $9 = ($8|0)==(0);
    if ($9) {
     label = 6;
    }
   } else {
    label = 6;
   }
   if ((label|0) == 6) {
    $10 = ((($f)) + 4|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ((($f)) + 44|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ((($13)) + -8|0);
    $15 = ($11>>>0)>($14>>>0);
    if ($15) {
     $18 = $c&255;
     $19 = ((($11)) + -1|0);
     HEAP32[$10>>2] = $19;
     HEAP8[$19>>0] = $18;
     $20 = HEAP32[$f>>2]|0;
     $21 = $20 & -17;
     HEAP32[$f>>2] = $21;
     $22 = ($16|0)==(0);
     if ($22) {
      $$1 = $c;
      break;
     }
     ___unlockfile($f);
     $$1 = $c;
     break;
    }
   }
   $17 = ($16|0)==(0);
   if ($17) {
    $$1 = -1;
   } else {
    ___unlockfile($f);
    $$1 = -1;
   }
  }
 } while(0);
 return ($$1|0);
}
function _freelocale($l) {
 $l = $l|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($l);
 return;
}
function _catgets($catd,$set_id,$msg_id,$s) {
 $catd = $catd|0;
 $set_id = $set_id|0;
 $msg_id = $msg_id|0;
 $s = $s|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($s|0);
}
function _isxdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isxdigit($c)|0);
 return ($0|0);
}
function _catclose($catd) {
 $catd = $catd|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _catopen($name,$oflag) {
 $name = $name|0;
 $oflag = $oflag|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ((-1)|0);
}
function _uselocale($l) {
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 $1 = ((($0)) + 180|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($l|0)==(0|0);
 if (!($3)) {
  HEAP32[$1>>2] = $l;
 }
 return ($2|0);
}
function _newlocale($mask,$name,$base) {
 $mask = $mask|0;
 $name = $name|0;
 $base = $base|0;
 var $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$name>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  label = 4;
 } else {
  $2 = (_strcmp($name,17221)|0);
  $3 = ($2|0)==(0);
  if ($3) {
   label = 4;
  } else {
   $4 = (_strcmp($name,16342)|0);
   $5 = ($4|0)==(0);
   if ($5) {
    label = 4;
   } else {
    $$01 = 0;
   }
  }
 }
 if ((label|0) == 4) {
  $6 = ($base|0)==(0|0);
  if ($6) {
   $7 = (_calloc(1,4)|0);
   $$01 = $7;
  } else {
   $$01 = $base;
  }
 }
 return ($$01|0);
}
function _isdigit_l($c,$l) {
 $c = $c|0;
 $l = $l|0;
 var $0 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isdigittmp = (($c) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $0 = $isdigit&1;
 return ($0|0);
}
function _atoi($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $$1$ph = 0, $$13 = 0, $$lcssa9 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit2 = 0, $isdigittmp = 0, $isdigittmp1 = 0, $isdigittmp5 = 0, $n$0$lcssa = 0, $n$04 = 0, $neg$0 = 0, $neg$1$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP8[$$0>>0]|0;
  $1 = $0 << 24 >> 24;
  $2 = (_isspace($1)|0);
  $3 = ($2|0)==(0);
  $4 = ((($$0)) + 1|0);
  if ($3) {
   $$0$lcssa = $$0;$$lcssa9 = $4;
   break;
  } else {
   $$0 = $4;
  }
 }
 $5 = HEAP8[$$0$lcssa>>0]|0;
 $6 = $5 << 24 >> 24;
 switch ($6|0) {
 case 45:  {
  $neg$0 = 1;
  label = 5;
  break;
 }
 case 43:  {
  $neg$0 = 0;
  label = 5;
  break;
 }
 default: {
  $$1$ph = $$0$lcssa;$8 = $5;$neg$1$ph = 0;
 }
 }
 if ((label|0) == 5) {
  $$pre = HEAP8[$$lcssa9>>0]|0;
  $$1$ph = $$lcssa9;$8 = $$pre;$neg$1$ph = $neg$0;
 }
 $7 = $8 << 24 >> 24;
 $isdigittmp1 = (($7) + -48)|0;
 $isdigit2 = ($isdigittmp1>>>0)<(10);
 if ($isdigit2) {
  $$13 = $$1$ph;$isdigittmp5 = $isdigittmp1;$n$04 = 0;
  while(1) {
   $9 = ($n$04*10)|0;
   $10 = ((($$13)) + 1|0);
   $11 = (($9) - ($isdigittmp5))|0;
   $12 = HEAP8[$10>>0]|0;
   $13 = $12 << 24 >> 24;
   $isdigittmp = (($13) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $$13 = $10;$isdigittmp5 = $isdigittmp;$n$04 = $11;
   } else {
    $n$0$lcssa = $11;
    break;
   }
  }
 } else {
  $n$0$lcssa = 0;
 }
 $14 = ($neg$1$ph|0)!=(0);
 $15 = (0 - ($n$0$lcssa))|0;
 $16 = $14 ? $n$0$lcssa : $15;
 return ($16|0);
}
function _strtox($s,$p,$prec) {
 $s = $s|0;
 $p = $p|0;
 $prec = $prec|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f,0);
 $4 = (+___floatscan($f,$prec,1));
 $5 = ((($f)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = (($7) - ($8))|0;
 $10 = (($9) + ($6))|0;
 $11 = ($p|0)==(0|0);
 if (!($11)) {
  $12 = ($10|0)!=(0);
  $13 = (($s) + ($10)|0);
  $14 = $12 ? $13 : $s;
  HEAP32[$p>>2] = $14;
 }
 STACKTOP = sp;return (+$4);
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtox($s,$p,1));
 return (+$0);
}
function _strtold_l($s,$p,$l) {
 $s = $s|0;
 $p = $p|0;
 $l = $l|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtox($s,$p,2));
 return (+$0);
}
function _atof($s) {
 $s = $s|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtod($s,0));
 return (+$0);
}
function _modf($x,$iptr) {
 $x = +$x;
 $iptr = $iptr|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 $5 = (($4) + -1023)|0;
 $6 = ($5|0)>(51);
 do {
  if ($6) {
   HEAPF64[$iptr>>3] = $x;
   $7 = ($5|0)!=(1024);
   $8 = $1 & 1048575;
   $9 = ($0|0)==(0);
   $10 = ($8|0)==(0);
   $11 = $9 & $10;
   $or$cond = $11 | $7;
   if ($or$cond) {
    $12 = $1 & -2147483648;
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
    $$0 = $13;
   } else {
    $$0 = $x;
   }
  } else {
   $14 = ($4>>>0)<(1023);
   if ($14) {
    $15 = $1 & -2147483648;
    $16 = $iptr;
    $17 = $16;
    HEAP32[$17>>2] = 0;
    $18 = (($16) + 4)|0;
    $19 = $18;
    HEAP32[$19>>2] = $15;
    $$0 = $x;
    break;
   }
   $20 = (_bitshift64Lshr(-1,1048575,($5|0))|0);
   $21 = tempRet0;
   $22 = $20 & $0;
   $23 = $21 & $1;
   $24 = ($22|0)==(0);
   $25 = ($23|0)==(0);
   $26 = $24 & $25;
   if ($26) {
    HEAPF64[$iptr>>3] = $x;
    $27 = $1 & -2147483648;
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $27;$28 = +HEAPF64[tempDoublePtr>>3];
    $$0 = $28;
    break;
   } else {
    $29 = $20 ^ -1;
    $30 = $21 ^ -1;
    $31 = $0 & $29;
    $32 = $1 & $30;
    HEAP32[tempDoublePtr>>2] = $31;HEAP32[tempDoublePtr+4>>2] = $32;$33 = +HEAPF64[tempDoublePtr>>3];
    $34 = $iptr;
    $35 = $34;
    HEAP32[$35>>2] = $31;
    $36 = (($34) + 4)|0;
    $37 = $36;
    HEAP32[$37>>2] = $32;
    $38 = $x - $33;
    $$0 = $38;
    break;
   }
  }
 } while(0);
 return (+$$0);
}
function _wcsnrtombs($dst,$wcs,$wn,$n,$st) {
 $dst = $dst|0;
 $wcs = $wcs|0;
 $wn = $wn|0;
 $n = $n|0;
 $st = $st|0;
 var $$019 = 0, $$02$$0 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$214 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $cnt$020 = 0, $cnt$1 = 0, $cnt$215 = 0, $cnt$215$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $or$cond = 0;
 var $or$cond17 = 0, $s$010 = 0, $s$021 = 0, $s$021$lcssa56 = 0, $s$1 = 0, $s$216 = 0, $ws = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buf = sp + 8|0;
 $ws = sp;
 $0 = HEAP32[$wcs>>2]|0;
 HEAP32[$ws>>2] = $0;
 $1 = ($dst|0)!=(0|0);
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 $2 = ($0|0)!=(0);
 $3 = ($n$|0)!=(0);
 $or$cond17 = $3 & $2;
 L1: do {
  if ($or$cond17) {
   $$019 = $wn;$$0218 = $n$;$38 = $$cast;$cnt$020 = 0;$s$021 = $dst$;
   while(1) {
    $4 = ($$019>>>0)>=($$0218>>>0);
    $5 = ($$019>>>0)>(32);
    $6 = $4 | $5;
    if (!($6)) {
     $$1 = $$019;$$24 = $$0218;$17 = $38;$cnt$1 = $cnt$020;$s$010 = $s$021;
     break L1;
    }
    $$02$$0 = $4 ? $$0218 : $$019;
    $7 = (($$019) - ($$02$$0))|0;
    $8 = (_wcsrtombs($s$021,$ws,$$02$$0,0)|0);
    $9 = ($8|0)==(-1);
    if ($9) {
     $$lcssa57 = $7;$s$021$lcssa56 = $s$021;
     break;
    }
    $10 = ($s$021|0)==($buf|0);
    $11 = (($s$021) + ($8)|0);
    $12 = $10 ? 0 : $8;
    $$13 = (($$0218) - ($12))|0;
    $s$1 = $10 ? $s$021 : $11;
    $13 = (($8) + ($cnt$020))|0;
    $14 = HEAP32[$ws>>2]|0;
    $15 = ($14|0)!=(0|0);
    $16 = ($$0218|0)!=($12|0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$019 = $7;$$0218 = $$13;$38 = $14;$cnt$020 = $13;$s$021 = $s$1;
    } else {
     $$1 = $7;$$24 = $$13;$17 = $14;$cnt$1 = $13;$s$010 = $s$1;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$ws>>2]|0;
   $$1 = $$lcssa57;$$24 = 0;$17 = $$pr$pre;$cnt$1 = -1;$s$010 = $s$021$lcssa56;
  } else {
   $$1 = $wn;$$24 = $n$;$17 = $$cast;$cnt$1 = 0;$s$010 = $dst$;
  }
 } while(0);
 $18 = ($17|0)==(0|0);
 L8: do {
  if ($18) {
   $cnt$3 = $cnt$1;
  } else {
   $19 = ($$24|0)!=(0);
   $20 = ($$1|0)!=(0);
   $21 = $19 & $20;
   if ($21) {
    $$214 = $$1;$$313 = $$24;$23 = $17;$cnt$215 = $cnt$1;$s$216 = $s$010;
    while(1) {
     $22 = HEAP32[$23>>2]|0;
     $24 = (_wcrtomb($s$216,$22,0)|0);
     $25 = (($24) + 1)|0;
     $26 = ($25>>>0)<(2);
     if ($26) {
      $$lcssa = $24;$cnt$215$lcssa = $cnt$215;
      break;
     }
     $28 = HEAP32[$ws>>2]|0;
     $29 = ((($28)) + 4|0);
     HEAP32[$ws>>2] = $29;
     $30 = (($$214) + -1)|0;
     $31 = (($s$216) + ($24)|0);
     $32 = (($$313) - ($24))|0;
     $33 = (($cnt$215) + 1)|0;
     $34 = ($$313|0)!=($24|0);
     $35 = ($30|0)!=(0);
     $36 = $34 & $35;
     if ($36) {
      $$214 = $30;$$313 = $32;$23 = $29;$cnt$215 = $33;$s$216 = $31;
     } else {
      $cnt$3 = $33;
      break L8;
     }
    }
    $27 = ($$lcssa|0)==(0);
    if ($27) {
     HEAP32[$ws>>2] = 0;
     $cnt$3 = $cnt$215$lcssa;
    } else {
     $cnt$3 = -1;
    }
   } else {
    $cnt$3 = $cnt$1;
   }
  }
 } while(0);
 if ($1) {
  $37 = HEAP32[$ws>>2]|0;
  HEAP32[$wcs>>2] = $37;
 }
 STACKTOP = sp;return ($cnt$3|0);
}
function _mbrlen($s,$n,$st) {
 $s = $s|0;
 $n = $n|0;
 $st = $st|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($st|0)!=(0|0);
 $1 = $0 ? $st : 20864;
 $2 = (_mbrtowc(0,$s,$n,$1)|0);
 return ($2|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$0 = 0, $$lcssa = 0, $$lcssa141 = 0, $$lcssa142 = 0, $$lcssa144 = 0, $$lcssa147 = 0, $$lcssa149 = 0, $$lcssa151 = 0, $$lcssa153 = 0, $$lcssa155 = 0, $$lcssa157 = 0, $$not$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i13 = 0, $$pre$i16$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i14Z2D = 0, $$pre$phi$i17$iZ2D = 0;
 var $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre71 = 0, $$pre9$i$i = 0, $$rsize$0$i = 0, $$rsize$4$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0;
 var $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0;
 var $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0;
 var $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0;
 var $1062 = 0, $1063 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0;
 var $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0;
 var $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0;
 var $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0;
 var $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0;
 var $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0;
 var $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0;
 var $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0;
 var $K12$0$i = 0, $K2$0$i$i = 0, $K8$0$i$i = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i$i$lcssa = 0, $R$1$i$lcssa = 0, $R$1$i9 = 0, $R$1$i9$lcssa = 0, $R$3$i = 0, $R$3$i$i = 0, $R$3$i11 = 0, $RP$1$i = 0, $RP$1$i$i = 0, $RP$1$i$i$lcssa = 0, $RP$1$i$lcssa = 0, $RP$1$i8 = 0, $RP$1$i8$lcssa = 0, $T$0$i = 0, $T$0$i$i = 0;
 var $T$0$i$i$lcssa = 0, $T$0$i$i$lcssa140 = 0, $T$0$i$lcssa = 0, $T$0$i$lcssa156 = 0, $T$0$i18$i = 0, $T$0$i18$i$lcssa = 0, $T$0$i18$i$lcssa139 = 0, $br$2$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i12 = 0, $exitcond$i$i = 0, $i$01$i$i = 0, $idx$0$i = 0, $nb$0 = 0, $not$$i$i = 0, $not$$i20$i = 0, $not$7$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0;
 var $or$cond$i17 = 0, $or$cond1$i = 0, $or$cond1$i16 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond2$i = 0, $or$cond48$i = 0, $or$cond5$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $p$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i5 = 0, $rsize$1$i = 0, $rsize$3$i = 0, $rsize$4$lcssa$i = 0, $rsize$412$i = 0, $rst$0$i = 0;
 var $rst$1$i = 0, $sizebits$0$$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$068$i = 0, $sp$068$i$lcssa = 0, $sp$167$i = 0, $sp$167$i$lcssa = 0, $ssize$0$i = 0, $ssize$2$ph$i = 0, $ssize$5$i = 0, $t$0$i = 0, $t$0$i4 = 0, $t$2$i = 0, $t$4$ph$i = 0, $t$4$v$4$i = 0, $t$411$i = 0, $tbase$746$i = 0, $tsize$745$i = 0;
 var $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i6 = 0, $v$1$i = 0, $v$3$i = 0, $v$4$lcssa$i = 0, $v$413$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[5217]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (20908 + ($13<<2)|0);
    $15 = ((($14)) + 8|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[5217] = $22;
     } else {
      $23 = HEAP32[(20884)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $31 = (($16) + ($28)|0);
    $32 = ((($31)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = $33 | 1;
    HEAP32[$32>>2] = $34;
    $$0 = $17;
    return ($$0|0);
   }
   $35 = HEAP32[(20876)>>2]|0;
   $36 = ($4>>>0)>($35>>>0);
   if ($36) {
    $37 = ($7|0)==(0);
    if (!($37)) {
     $38 = $7 << $5;
     $39 = 2 << $5;
     $40 = (0 - ($39))|0;
     $41 = $39 | $40;
     $42 = $38 & $41;
     $43 = (0 - ($42))|0;
     $44 = $42 & $43;
     $45 = (($44) + -1)|0;
     $46 = $45 >>> 12;
     $47 = $46 & 16;
     $48 = $45 >>> $47;
     $49 = $48 >>> 5;
     $50 = $49 & 8;
     $51 = $50 | $47;
     $52 = $48 >>> $50;
     $53 = $52 >>> 2;
     $54 = $53 & 4;
     $55 = $51 | $54;
     $56 = $52 >>> $54;
     $57 = $56 >>> 1;
     $58 = $57 & 2;
     $59 = $55 | $58;
     $60 = $56 >>> $58;
     $61 = $60 >>> 1;
     $62 = $61 & 1;
     $63 = $59 | $62;
     $64 = $60 >>> $62;
     $65 = (($63) + ($64))|0;
     $66 = $65 << 1;
     $67 = (20908 + ($66<<2)|0);
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ($67|0)==($71|0);
     do {
      if ($72) {
       $73 = 1 << $65;
       $74 = $73 ^ -1;
       $75 = $6 & $74;
       HEAP32[5217] = $75;
       $89 = $35;
      } else {
       $76 = HEAP32[(20884)>>2]|0;
       $77 = ($71>>>0)<($76>>>0);
       if ($77) {
        _abort();
        // unreachable;
       }
       $78 = ((($71)) + 12|0);
       $79 = HEAP32[$78>>2]|0;
       $80 = ($79|0)==($69|0);
       if ($80) {
        HEAP32[$78>>2] = $67;
        HEAP32[$68>>2] = $71;
        $$pre = HEAP32[(20876)>>2]|0;
        $89 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $81 = $65 << 3;
     $82 = (($81) - ($4))|0;
     $83 = $4 | 3;
     $84 = ((($69)) + 4|0);
     HEAP32[$84>>2] = $83;
     $85 = (($69) + ($4)|0);
     $86 = $82 | 1;
     $87 = ((($85)) + 4|0);
     HEAP32[$87>>2] = $86;
     $88 = (($85) + ($82)|0);
     HEAP32[$88>>2] = $82;
     $90 = ($89|0)==(0);
     if (!($90)) {
      $91 = HEAP32[(20888)>>2]|0;
      $92 = $89 >>> 3;
      $93 = $92 << 1;
      $94 = (20908 + ($93<<2)|0);
      $95 = HEAP32[5217]|0;
      $96 = 1 << $92;
      $97 = $95 & $96;
      $98 = ($97|0)==(0);
      if ($98) {
       $99 = $95 | $96;
       HEAP32[5217] = $99;
       $$pre71 = ((($94)) + 8|0);
       $$pre$phiZ2D = $$pre71;$F4$0 = $94;
      } else {
       $100 = ((($94)) + 8|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = HEAP32[(20884)>>2]|0;
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $100;$F4$0 = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $91;
      $104 = ((($F4$0)) + 12|0);
      HEAP32[$104>>2] = $91;
      $105 = ((($91)) + 8|0);
      HEAP32[$105>>2] = $F4$0;
      $106 = ((($91)) + 12|0);
      HEAP32[$106>>2] = $94;
     }
     HEAP32[(20876)>>2] = $82;
     HEAP32[(20888)>>2] = $85;
     $$0 = $70;
     return ($$0|0);
    }
    $107 = HEAP32[(20872)>>2]|0;
    $108 = ($107|0)==(0);
    if ($108) {
     $nb$0 = $4;
    } else {
     $109 = (0 - ($107))|0;
     $110 = $107 & $109;
     $111 = (($110) + -1)|0;
     $112 = $111 >>> 12;
     $113 = $112 & 16;
     $114 = $111 >>> $113;
     $115 = $114 >>> 5;
     $116 = $115 & 8;
     $117 = $116 | $113;
     $118 = $114 >>> $116;
     $119 = $118 >>> 2;
     $120 = $119 & 4;
     $121 = $117 | $120;
     $122 = $118 >>> $120;
     $123 = $122 >>> 1;
     $124 = $123 & 2;
     $125 = $121 | $124;
     $126 = $122 >>> $124;
     $127 = $126 >>> 1;
     $128 = $127 & 1;
     $129 = $125 | $128;
     $130 = $126 >>> $128;
     $131 = (($129) + ($130))|0;
     $132 = (21172 + ($131<<2)|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ((($133)) + 4|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = $135 & -8;
     $137 = (($136) - ($4))|0;
     $rsize$0$i = $137;$t$0$i = $133;$v$0$i = $133;
     while(1) {
      $138 = ((($t$0$i)) + 16|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ($139|0)==(0|0);
      if ($140) {
       $141 = ((($t$0$i)) + 20|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = ($142|0)==(0|0);
       if ($143) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $145 = $142;
       }
      } else {
       $145 = $139;
      }
      $144 = ((($145)) + 4|0);
      $146 = HEAP32[$144>>2]|0;
      $147 = $146 & -8;
      $148 = (($147) - ($4))|0;
      $149 = ($148>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $149 ? $148 : $rsize$0$i;
      $$v$0$i = $149 ? $145 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $145;$v$0$i = $$v$0$i;
     }
     $150 = HEAP32[(20884)>>2]|0;
     $151 = ($v$0$i$lcssa>>>0)<($150>>>0);
     if ($151) {
      _abort();
      // unreachable;
     }
     $152 = (($v$0$i$lcssa) + ($4)|0);
     $153 = ($v$0$i$lcssa>>>0)<($152>>>0);
     if (!($153)) {
      _abort();
      // unreachable;
     }
     $154 = ((($v$0$i$lcssa)) + 24|0);
     $155 = HEAP32[$154>>2]|0;
     $156 = ((($v$0$i$lcssa)) + 12|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($v$0$i$lcssa|0);
     do {
      if ($158) {
       $168 = ((($v$0$i$lcssa)) + 20|0);
       $169 = HEAP32[$168>>2]|0;
       $170 = ($169|0)==(0|0);
       if ($170) {
        $171 = ((($v$0$i$lcssa)) + 16|0);
        $172 = HEAP32[$171>>2]|0;
        $173 = ($172|0)==(0|0);
        if ($173) {
         $R$3$i = 0;
         break;
        } else {
         $R$1$i = $172;$RP$1$i = $171;
        }
       } else {
        $R$1$i = $169;$RP$1$i = $168;
       }
       while(1) {
        $174 = ((($R$1$i)) + 20|0);
        $175 = HEAP32[$174>>2]|0;
        $176 = ($175|0)==(0|0);
        if (!($176)) {
         $R$1$i = $175;$RP$1$i = $174;
         continue;
        }
        $177 = ((($R$1$i)) + 16|0);
        $178 = HEAP32[$177>>2]|0;
        $179 = ($178|0)==(0|0);
        if ($179) {
         $R$1$i$lcssa = $R$1$i;$RP$1$i$lcssa = $RP$1$i;
         break;
        } else {
         $R$1$i = $178;$RP$1$i = $177;
        }
       }
       $180 = ($RP$1$i$lcssa>>>0)<($150>>>0);
       if ($180) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$1$i$lcssa>>2] = 0;
        $R$3$i = $R$1$i$lcssa;
        break;
       }
      } else {
       $159 = ((($v$0$i$lcssa)) + 8|0);
       $160 = HEAP32[$159>>2]|0;
       $161 = ($160>>>0)<($150>>>0);
       if ($161) {
        _abort();
        // unreachable;
       }
       $162 = ((($160)) + 12|0);
       $163 = HEAP32[$162>>2]|0;
       $164 = ($163|0)==($v$0$i$lcssa|0);
       if (!($164)) {
        _abort();
        // unreachable;
       }
       $165 = ((($157)) + 8|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ($166|0)==($v$0$i$lcssa|0);
       if ($167) {
        HEAP32[$162>>2] = $157;
        HEAP32[$165>>2] = $160;
        $R$3$i = $157;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $181 = ($155|0)==(0|0);
     do {
      if (!($181)) {
       $182 = ((($v$0$i$lcssa)) + 28|0);
       $183 = HEAP32[$182>>2]|0;
       $184 = (21172 + ($183<<2)|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($v$0$i$lcssa|0)==($185|0);
       if ($186) {
        HEAP32[$184>>2] = $R$3$i;
        $cond$i = ($R$3$i|0)==(0|0);
        if ($cond$i) {
         $187 = 1 << $183;
         $188 = $187 ^ -1;
         $189 = HEAP32[(20872)>>2]|0;
         $190 = $189 & $188;
         HEAP32[(20872)>>2] = $190;
         break;
        }
       } else {
        $191 = HEAP32[(20884)>>2]|0;
        $192 = ($155>>>0)<($191>>>0);
        if ($192) {
         _abort();
         // unreachable;
        }
        $193 = ((($155)) + 16|0);
        $194 = HEAP32[$193>>2]|0;
        $195 = ($194|0)==($v$0$i$lcssa|0);
        if ($195) {
         HEAP32[$193>>2] = $R$3$i;
        } else {
         $196 = ((($155)) + 20|0);
         HEAP32[$196>>2] = $R$3$i;
        }
        $197 = ($R$3$i|0)==(0|0);
        if ($197) {
         break;
        }
       }
       $198 = HEAP32[(20884)>>2]|0;
       $199 = ($R$3$i>>>0)<($198>>>0);
       if ($199) {
        _abort();
        // unreachable;
       }
       $200 = ((($R$3$i)) + 24|0);
       HEAP32[$200>>2] = $155;
       $201 = ((($v$0$i$lcssa)) + 16|0);
       $202 = HEAP32[$201>>2]|0;
       $203 = ($202|0)==(0|0);
       do {
        if (!($203)) {
         $204 = ($202>>>0)<($198>>>0);
         if ($204) {
          _abort();
          // unreachable;
         } else {
          $205 = ((($R$3$i)) + 16|0);
          HEAP32[$205>>2] = $202;
          $206 = ((($202)) + 24|0);
          HEAP32[$206>>2] = $R$3$i;
          break;
         }
        }
       } while(0);
       $207 = ((($v$0$i$lcssa)) + 20|0);
       $208 = HEAP32[$207>>2]|0;
       $209 = ($208|0)==(0|0);
       if (!($209)) {
        $210 = HEAP32[(20884)>>2]|0;
        $211 = ($208>>>0)<($210>>>0);
        if ($211) {
         _abort();
         // unreachable;
        } else {
         $212 = ((($R$3$i)) + 20|0);
         HEAP32[$212>>2] = $208;
         $213 = ((($208)) + 24|0);
         HEAP32[$213>>2] = $R$3$i;
         break;
        }
       }
      }
     } while(0);
     $214 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($214) {
      $215 = (($rsize$0$i$lcssa) + ($4))|0;
      $216 = $215 | 3;
      $217 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$217>>2] = $216;
      $218 = (($v$0$i$lcssa) + ($215)|0);
      $219 = ((($218)) + 4|0);
      $220 = HEAP32[$219>>2]|0;
      $221 = $220 | 1;
      HEAP32[$219>>2] = $221;
     } else {
      $222 = $4 | 3;
      $223 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$223>>2] = $222;
      $224 = $rsize$0$i$lcssa | 1;
      $225 = ((($152)) + 4|0);
      HEAP32[$225>>2] = $224;
      $226 = (($152) + ($rsize$0$i$lcssa)|0);
      HEAP32[$226>>2] = $rsize$0$i$lcssa;
      $227 = HEAP32[(20876)>>2]|0;
      $228 = ($227|0)==(0);
      if (!($228)) {
       $229 = HEAP32[(20888)>>2]|0;
       $230 = $227 >>> 3;
       $231 = $230 << 1;
       $232 = (20908 + ($231<<2)|0);
       $233 = HEAP32[5217]|0;
       $234 = 1 << $230;
       $235 = $233 & $234;
       $236 = ($235|0)==(0);
       if ($236) {
        $237 = $233 | $234;
        HEAP32[5217] = $237;
        $$pre$i = ((($232)) + 8|0);
        $$pre$phi$iZ2D = $$pre$i;$F1$0$i = $232;
       } else {
        $238 = ((($232)) + 8|0);
        $239 = HEAP32[$238>>2]|0;
        $240 = HEAP32[(20884)>>2]|0;
        $241 = ($239>>>0)<($240>>>0);
        if ($241) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $238;$F1$0$i = $239;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $229;
       $242 = ((($F1$0$i)) + 12|0);
       HEAP32[$242>>2] = $229;
       $243 = ((($229)) + 8|0);
       HEAP32[$243>>2] = $F1$0$i;
       $244 = ((($229)) + 12|0);
       HEAP32[$244>>2] = $232;
      }
      HEAP32[(20876)>>2] = $rsize$0$i$lcssa;
      HEAP32[(20888)>>2] = $152;
     }
     $245 = ((($v$0$i$lcssa)) + 8|0);
     $$0 = $245;
     return ($$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $246 = ($bytes>>>0)>(4294967231);
   if ($246) {
    $nb$0 = -1;
   } else {
    $247 = (($bytes) + 11)|0;
    $248 = $247 & -8;
    $249 = HEAP32[(20872)>>2]|0;
    $250 = ($249|0)==(0);
    if ($250) {
     $nb$0 = $248;
    } else {
     $251 = (0 - ($248))|0;
     $252 = $247 >>> 8;
     $253 = ($252|0)==(0);
     if ($253) {
      $idx$0$i = 0;
     } else {
      $254 = ($248>>>0)>(16777215);
      if ($254) {
       $idx$0$i = 31;
      } else {
       $255 = (($252) + 1048320)|0;
       $256 = $255 >>> 16;
       $257 = $256 & 8;
       $258 = $252 << $257;
       $259 = (($258) + 520192)|0;
       $260 = $259 >>> 16;
       $261 = $260 & 4;
       $262 = $261 | $257;
       $263 = $258 << $261;
       $264 = (($263) + 245760)|0;
       $265 = $264 >>> 16;
       $266 = $265 & 2;
       $267 = $262 | $266;
       $268 = (14 - ($267))|0;
       $269 = $263 << $266;
       $270 = $269 >>> 15;
       $271 = (($268) + ($270))|0;
       $272 = $271 << 1;
       $273 = (($271) + 7)|0;
       $274 = $248 >>> $273;
       $275 = $274 & 1;
       $276 = $275 | $272;
       $idx$0$i = $276;
      }
     }
     $277 = (21172 + ($idx$0$i<<2)|0);
     $278 = HEAP32[$277>>2]|0;
     $279 = ($278|0)==(0|0);
     L123: do {
      if ($279) {
       $rsize$3$i = $251;$t$2$i = 0;$v$3$i = 0;
       label = 86;
      } else {
       $280 = ($idx$0$i|0)==(31);
       $281 = $idx$0$i >>> 1;
       $282 = (25 - ($281))|0;
       $283 = $280 ? 0 : $282;
       $284 = $248 << $283;
       $rsize$0$i5 = $251;$rst$0$i = 0;$sizebits$0$i = $284;$t$0$i4 = $278;$v$0$i6 = 0;
       while(1) {
        $285 = ((($t$0$i4)) + 4|0);
        $286 = HEAP32[$285>>2]|0;
        $287 = $286 & -8;
        $288 = (($287) - ($248))|0;
        $289 = ($288>>>0)<($rsize$0$i5>>>0);
        if ($289) {
         $290 = ($287|0)==($248|0);
         if ($290) {
          $rsize$412$i = $288;$t$411$i = $t$0$i4;$v$413$i = $t$0$i4;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $288;$v$1$i = $t$0$i4;
         }
        } else {
         $rsize$1$i = $rsize$0$i5;$v$1$i = $v$0$i6;
        }
        $291 = ((($t$0$i4)) + 20|0);
        $292 = HEAP32[$291>>2]|0;
        $293 = $sizebits$0$i >>> 31;
        $294 = (((($t$0$i4)) + 16|0) + ($293<<2)|0);
        $295 = HEAP32[$294>>2]|0;
        $296 = ($292|0)==(0|0);
        $297 = ($292|0)==($295|0);
        $or$cond1$i = $296 | $297;
        $rst$1$i = $or$cond1$i ? $rst$0$i : $292;
        $298 = ($295|0)==(0|0);
        $299 = $298&1;
        $300 = $299 ^ 1;
        $sizebits$0$$i = $sizebits$0$i << $300;
        if ($298) {
         $rsize$3$i = $rsize$1$i;$t$2$i = $rst$1$i;$v$3$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i5 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $sizebits$0$$i;$t$0$i4 = $295;$v$0$i6 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $301 = ($t$2$i|0)==(0|0);
      $302 = ($v$3$i|0)==(0|0);
      $or$cond$i = $301 & $302;
      if ($or$cond$i) {
       $303 = 2 << $idx$0$i;
       $304 = (0 - ($303))|0;
       $305 = $303 | $304;
       $306 = $249 & $305;
       $307 = ($306|0)==(0);
       if ($307) {
        $nb$0 = $248;
        break;
       }
       $308 = (0 - ($306))|0;
       $309 = $306 & $308;
       $310 = (($309) + -1)|0;
       $311 = $310 >>> 12;
       $312 = $311 & 16;
       $313 = $310 >>> $312;
       $314 = $313 >>> 5;
       $315 = $314 & 8;
       $316 = $315 | $312;
       $317 = $313 >>> $315;
       $318 = $317 >>> 2;
       $319 = $318 & 4;
       $320 = $316 | $319;
       $321 = $317 >>> $319;
       $322 = $321 >>> 1;
       $323 = $322 & 2;
       $324 = $320 | $323;
       $325 = $321 >>> $323;
       $326 = $325 >>> 1;
       $327 = $326 & 1;
       $328 = $324 | $327;
       $329 = $325 >>> $327;
       $330 = (($328) + ($329))|0;
       $331 = (21172 + ($330<<2)|0);
       $332 = HEAP32[$331>>2]|0;
       $t$4$ph$i = $332;
      } else {
       $t$4$ph$i = $t$2$i;
      }
      $333 = ($t$4$ph$i|0)==(0|0);
      if ($333) {
       $rsize$4$lcssa$i = $rsize$3$i;$v$4$lcssa$i = $v$3$i;
      } else {
       $rsize$412$i = $rsize$3$i;$t$411$i = $t$4$ph$i;$v$413$i = $v$3$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $334 = ((($t$411$i)) + 4|0);
       $335 = HEAP32[$334>>2]|0;
       $336 = $335 & -8;
       $337 = (($336) - ($248))|0;
       $338 = ($337>>>0)<($rsize$412$i>>>0);
       $$rsize$4$i = $338 ? $337 : $rsize$412$i;
       $t$4$v$4$i = $338 ? $t$411$i : $v$413$i;
       $339 = ((($t$411$i)) + 16|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if (!($341)) {
        $rsize$412$i = $$rsize$4$i;$t$411$i = $340;$v$413$i = $t$4$v$4$i;
        label = 90;
        continue;
       }
       $342 = ((($t$411$i)) + 20|0);
       $343 = HEAP32[$342>>2]|0;
       $344 = ($343|0)==(0|0);
       if ($344) {
        $rsize$4$lcssa$i = $$rsize$4$i;$v$4$lcssa$i = $t$4$v$4$i;
        break;
       } else {
        $rsize$412$i = $$rsize$4$i;$t$411$i = $343;$v$413$i = $t$4$v$4$i;
        label = 90;
       }
      }
     }
     $345 = ($v$4$lcssa$i|0)==(0|0);
     if ($345) {
      $nb$0 = $248;
     } else {
      $346 = HEAP32[(20876)>>2]|0;
      $347 = (($346) - ($248))|0;
      $348 = ($rsize$4$lcssa$i>>>0)<($347>>>0);
      if ($348) {
       $349 = HEAP32[(20884)>>2]|0;
       $350 = ($v$4$lcssa$i>>>0)<($349>>>0);
       if ($350) {
        _abort();
        // unreachable;
       }
       $351 = (($v$4$lcssa$i) + ($248)|0);
       $352 = ($v$4$lcssa$i>>>0)<($351>>>0);
       if (!($352)) {
        _abort();
        // unreachable;
       }
       $353 = ((($v$4$lcssa$i)) + 24|0);
       $354 = HEAP32[$353>>2]|0;
       $355 = ((($v$4$lcssa$i)) + 12|0);
       $356 = HEAP32[$355>>2]|0;
       $357 = ($356|0)==($v$4$lcssa$i|0);
       do {
        if ($357) {
         $367 = ((($v$4$lcssa$i)) + 20|0);
         $368 = HEAP32[$367>>2]|0;
         $369 = ($368|0)==(0|0);
         if ($369) {
          $370 = ((($v$4$lcssa$i)) + 16|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if ($372) {
           $R$3$i11 = 0;
           break;
          } else {
           $R$1$i9 = $371;$RP$1$i8 = $370;
          }
         } else {
          $R$1$i9 = $368;$RP$1$i8 = $367;
         }
         while(1) {
          $373 = ((($R$1$i9)) + 20|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if (!($375)) {
           $R$1$i9 = $374;$RP$1$i8 = $373;
           continue;
          }
          $376 = ((($R$1$i9)) + 16|0);
          $377 = HEAP32[$376>>2]|0;
          $378 = ($377|0)==(0|0);
          if ($378) {
           $R$1$i9$lcssa = $R$1$i9;$RP$1$i8$lcssa = $RP$1$i8;
           break;
          } else {
           $R$1$i9 = $377;$RP$1$i8 = $376;
          }
         }
         $379 = ($RP$1$i8$lcssa>>>0)<($349>>>0);
         if ($379) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$1$i8$lcssa>>2] = 0;
          $R$3$i11 = $R$1$i9$lcssa;
          break;
         }
        } else {
         $358 = ((($v$4$lcssa$i)) + 8|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359>>>0)<($349>>>0);
         if ($360) {
          _abort();
          // unreachable;
         }
         $361 = ((($359)) + 12|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$4$lcssa$i|0);
         if (!($363)) {
          _abort();
          // unreachable;
         }
         $364 = ((($356)) + 8|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==($v$4$lcssa$i|0);
         if ($366) {
          HEAP32[$361>>2] = $356;
          HEAP32[$364>>2] = $359;
          $R$3$i11 = $356;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $380 = ($354|0)==(0|0);
       do {
        if (!($380)) {
         $381 = ((($v$4$lcssa$i)) + 28|0);
         $382 = HEAP32[$381>>2]|0;
         $383 = (21172 + ($382<<2)|0);
         $384 = HEAP32[$383>>2]|0;
         $385 = ($v$4$lcssa$i|0)==($384|0);
         if ($385) {
          HEAP32[$383>>2] = $R$3$i11;
          $cond$i12 = ($R$3$i11|0)==(0|0);
          if ($cond$i12) {
           $386 = 1 << $382;
           $387 = $386 ^ -1;
           $388 = HEAP32[(20872)>>2]|0;
           $389 = $388 & $387;
           HEAP32[(20872)>>2] = $389;
           break;
          }
         } else {
          $390 = HEAP32[(20884)>>2]|0;
          $391 = ($354>>>0)<($390>>>0);
          if ($391) {
           _abort();
           // unreachable;
          }
          $392 = ((($354)) + 16|0);
          $393 = HEAP32[$392>>2]|0;
          $394 = ($393|0)==($v$4$lcssa$i|0);
          if ($394) {
           HEAP32[$392>>2] = $R$3$i11;
          } else {
           $395 = ((($354)) + 20|0);
           HEAP32[$395>>2] = $R$3$i11;
          }
          $396 = ($R$3$i11|0)==(0|0);
          if ($396) {
           break;
          }
         }
         $397 = HEAP32[(20884)>>2]|0;
         $398 = ($R$3$i11>>>0)<($397>>>0);
         if ($398) {
          _abort();
          // unreachable;
         }
         $399 = ((($R$3$i11)) + 24|0);
         HEAP32[$399>>2] = $354;
         $400 = ((($v$4$lcssa$i)) + 16|0);
         $401 = HEAP32[$400>>2]|0;
         $402 = ($401|0)==(0|0);
         do {
          if (!($402)) {
           $403 = ($401>>>0)<($397>>>0);
           if ($403) {
            _abort();
            // unreachable;
           } else {
            $404 = ((($R$3$i11)) + 16|0);
            HEAP32[$404>>2] = $401;
            $405 = ((($401)) + 24|0);
            HEAP32[$405>>2] = $R$3$i11;
            break;
           }
          }
         } while(0);
         $406 = ((($v$4$lcssa$i)) + 20|0);
         $407 = HEAP32[$406>>2]|0;
         $408 = ($407|0)==(0|0);
         if (!($408)) {
          $409 = HEAP32[(20884)>>2]|0;
          $410 = ($407>>>0)<($409>>>0);
          if ($410) {
           _abort();
           // unreachable;
          } else {
           $411 = ((($R$3$i11)) + 20|0);
           HEAP32[$411>>2] = $407;
           $412 = ((($407)) + 24|0);
           HEAP32[$412>>2] = $R$3$i11;
           break;
          }
         }
        }
       } while(0);
       $413 = ($rsize$4$lcssa$i>>>0)<(16);
       do {
        if ($413) {
         $414 = (($rsize$4$lcssa$i) + ($248))|0;
         $415 = $414 | 3;
         $416 = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$416>>2] = $415;
         $417 = (($v$4$lcssa$i) + ($414)|0);
         $418 = ((($417)) + 4|0);
         $419 = HEAP32[$418>>2]|0;
         $420 = $419 | 1;
         HEAP32[$418>>2] = $420;
        } else {
         $421 = $248 | 3;
         $422 = ((($v$4$lcssa$i)) + 4|0);
         HEAP32[$422>>2] = $421;
         $423 = $rsize$4$lcssa$i | 1;
         $424 = ((($351)) + 4|0);
         HEAP32[$424>>2] = $423;
         $425 = (($351) + ($rsize$4$lcssa$i)|0);
         HEAP32[$425>>2] = $rsize$4$lcssa$i;
         $426 = $rsize$4$lcssa$i >>> 3;
         $427 = ($rsize$4$lcssa$i>>>0)<(256);
         if ($427) {
          $428 = $426 << 1;
          $429 = (20908 + ($428<<2)|0);
          $430 = HEAP32[5217]|0;
          $431 = 1 << $426;
          $432 = $430 & $431;
          $433 = ($432|0)==(0);
          if ($433) {
           $434 = $430 | $431;
           HEAP32[5217] = $434;
           $$pre$i13 = ((($429)) + 8|0);
           $$pre$phi$i14Z2D = $$pre$i13;$F5$0$i = $429;
          } else {
           $435 = ((($429)) + 8|0);
           $436 = HEAP32[$435>>2]|0;
           $437 = HEAP32[(20884)>>2]|0;
           $438 = ($436>>>0)<($437>>>0);
           if ($438) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i14Z2D = $435;$F5$0$i = $436;
           }
          }
          HEAP32[$$pre$phi$i14Z2D>>2] = $351;
          $439 = ((($F5$0$i)) + 12|0);
          HEAP32[$439>>2] = $351;
          $440 = ((($351)) + 8|0);
          HEAP32[$440>>2] = $F5$0$i;
          $441 = ((($351)) + 12|0);
          HEAP32[$441>>2] = $429;
          break;
         }
         $442 = $rsize$4$lcssa$i >>> 8;
         $443 = ($442|0)==(0);
         if ($443) {
          $I7$0$i = 0;
         } else {
          $444 = ($rsize$4$lcssa$i>>>0)>(16777215);
          if ($444) {
           $I7$0$i = 31;
          } else {
           $445 = (($442) + 1048320)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 8;
           $448 = $442 << $447;
           $449 = (($448) + 520192)|0;
           $450 = $449 >>> 16;
           $451 = $450 & 4;
           $452 = $451 | $447;
           $453 = $448 << $451;
           $454 = (($453) + 245760)|0;
           $455 = $454 >>> 16;
           $456 = $455 & 2;
           $457 = $452 | $456;
           $458 = (14 - ($457))|0;
           $459 = $453 << $456;
           $460 = $459 >>> 15;
           $461 = (($458) + ($460))|0;
           $462 = $461 << 1;
           $463 = (($461) + 7)|0;
           $464 = $rsize$4$lcssa$i >>> $463;
           $465 = $464 & 1;
           $466 = $465 | $462;
           $I7$0$i = $466;
          }
         }
         $467 = (21172 + ($I7$0$i<<2)|0);
         $468 = ((($351)) + 28|0);
         HEAP32[$468>>2] = $I7$0$i;
         $469 = ((($351)) + 16|0);
         $470 = ((($469)) + 4|0);
         HEAP32[$470>>2] = 0;
         HEAP32[$469>>2] = 0;
         $471 = HEAP32[(20872)>>2]|0;
         $472 = 1 << $I7$0$i;
         $473 = $471 & $472;
         $474 = ($473|0)==(0);
         if ($474) {
          $475 = $471 | $472;
          HEAP32[(20872)>>2] = $475;
          HEAP32[$467>>2] = $351;
          $476 = ((($351)) + 24|0);
          HEAP32[$476>>2] = $467;
          $477 = ((($351)) + 12|0);
          HEAP32[$477>>2] = $351;
          $478 = ((($351)) + 8|0);
          HEAP32[$478>>2] = $351;
          break;
         }
         $479 = HEAP32[$467>>2]|0;
         $480 = ($I7$0$i|0)==(31);
         $481 = $I7$0$i >>> 1;
         $482 = (25 - ($481))|0;
         $483 = $480 ? 0 : $482;
         $484 = $rsize$4$lcssa$i << $483;
         $K12$0$i = $484;$T$0$i = $479;
         while(1) {
          $485 = ((($T$0$i)) + 4|0);
          $486 = HEAP32[$485>>2]|0;
          $487 = $486 & -8;
          $488 = ($487|0)==($rsize$4$lcssa$i|0);
          if ($488) {
           $T$0$i$lcssa = $T$0$i;
           label = 148;
           break;
          }
          $489 = $K12$0$i >>> 31;
          $490 = (((($T$0$i)) + 16|0) + ($489<<2)|0);
          $491 = $K12$0$i << 1;
          $492 = HEAP32[$490>>2]|0;
          $493 = ($492|0)==(0|0);
          if ($493) {
           $$lcssa157 = $490;$T$0$i$lcssa156 = $T$0$i;
           label = 145;
           break;
          } else {
           $K12$0$i = $491;$T$0$i = $492;
          }
         }
         if ((label|0) == 145) {
          $494 = HEAP32[(20884)>>2]|0;
          $495 = ($$lcssa157>>>0)<($494>>>0);
          if ($495) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa157>>2] = $351;
           $496 = ((($351)) + 24|0);
           HEAP32[$496>>2] = $T$0$i$lcssa156;
           $497 = ((($351)) + 12|0);
           HEAP32[$497>>2] = $351;
           $498 = ((($351)) + 8|0);
           HEAP32[$498>>2] = $351;
           break;
          }
         }
         else if ((label|0) == 148) {
          $499 = ((($T$0$i$lcssa)) + 8|0);
          $500 = HEAP32[$499>>2]|0;
          $501 = HEAP32[(20884)>>2]|0;
          $502 = ($500>>>0)>=($501>>>0);
          $not$7$i = ($T$0$i$lcssa>>>0)>=($501>>>0);
          $503 = $502 & $not$7$i;
          if ($503) {
           $504 = ((($500)) + 12|0);
           HEAP32[$504>>2] = $351;
           HEAP32[$499>>2] = $351;
           $505 = ((($351)) + 8|0);
           HEAP32[$505>>2] = $500;
           $506 = ((($351)) + 12|0);
           HEAP32[$506>>2] = $T$0$i$lcssa;
           $507 = ((($351)) + 24|0);
           HEAP32[$507>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $508 = ((($v$4$lcssa$i)) + 8|0);
       $$0 = $508;
       return ($$0|0);
      } else {
       $nb$0 = $248;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(20876)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(20888)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(20888)>>2] = $514;
   HEAP32[(20876)>>2] = $511;
   $515 = $511 | 1;
   $516 = ((($514)) + 4|0);
   HEAP32[$516>>2] = $515;
   $517 = (($514) + ($511)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(20876)>>2] = 0;
   HEAP32[(20888)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $522 = (($512) + ($509)|0);
   $523 = ((($522)) + 4|0);
   $524 = HEAP32[$523>>2]|0;
   $525 = $524 | 1;
   HEAP32[$523>>2] = $525;
  }
  $526 = ((($512)) + 8|0);
  $$0 = $526;
  return ($$0|0);
 }
 $527 = HEAP32[(20880)>>2]|0;
 $528 = ($527>>>0)>($nb$0>>>0);
 if ($528) {
  $529 = (($527) - ($nb$0))|0;
  HEAP32[(20880)>>2] = $529;
  $530 = HEAP32[(20892)>>2]|0;
  $531 = (($530) + ($nb$0)|0);
  HEAP32[(20892)>>2] = $531;
  $532 = $529 | 1;
  $533 = ((($531)) + 4|0);
  HEAP32[$533>>2] = $532;
  $534 = $nb$0 | 3;
  $535 = ((($530)) + 4|0);
  HEAP32[$535>>2] = $534;
  $536 = ((($530)) + 8|0);
  $$0 = $536;
  return ($$0|0);
 }
 $537 = HEAP32[5335]|0;
 $538 = ($537|0)==(0);
 do {
  if ($538) {
   $539 = (_sysconf(30)|0);
   $540 = (($539) + -1)|0;
   $541 = $540 & $539;
   $542 = ($541|0)==(0);
   if ($542) {
    HEAP32[(21348)>>2] = $539;
    HEAP32[(21344)>>2] = $539;
    HEAP32[(21352)>>2] = -1;
    HEAP32[(21356)>>2] = -1;
    HEAP32[(21360)>>2] = 0;
    HEAP32[(21312)>>2] = 0;
    $543 = (_time((0|0))|0);
    $544 = $543 & -16;
    $545 = $544 ^ 1431655768;
    HEAP32[5335] = $545;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $546 = (($nb$0) + 48)|0;
 $547 = HEAP32[(21348)>>2]|0;
 $548 = (($nb$0) + 47)|0;
 $549 = (($547) + ($548))|0;
 $550 = (0 - ($547))|0;
 $551 = $549 & $550;
 $552 = ($551>>>0)>($nb$0>>>0);
 if (!($552)) {
  $$0 = 0;
  return ($$0|0);
 }
 $553 = HEAP32[(21308)>>2]|0;
 $554 = ($553|0)==(0);
 if (!($554)) {
  $555 = HEAP32[(21300)>>2]|0;
  $556 = (($555) + ($551))|0;
  $557 = ($556>>>0)<=($555>>>0);
  $558 = ($556>>>0)>($553>>>0);
  $or$cond1$i16 = $557 | $558;
  if ($or$cond1$i16) {
   $$0 = 0;
   return ($$0|0);
  }
 }
 $559 = HEAP32[(21312)>>2]|0;
 $560 = $559 & 4;
 $561 = ($560|0)==(0);
 L257: do {
  if ($561) {
   $562 = HEAP32[(20892)>>2]|0;
   $563 = ($562|0)==(0|0);
   L259: do {
    if ($563) {
     label = 173;
    } else {
     $sp$0$i$i = (21316);
     while(1) {
      $564 = HEAP32[$sp$0$i$i>>2]|0;
      $565 = ($564>>>0)>($562>>>0);
      if (!($565)) {
       $566 = ((($sp$0$i$i)) + 4|0);
       $567 = HEAP32[$566>>2]|0;
       $568 = (($564) + ($567)|0);
       $569 = ($568>>>0)>($562>>>0);
       if ($569) {
        $$lcssa153 = $sp$0$i$i;$$lcssa155 = $566;
        break;
       }
      }
      $570 = ((($sp$0$i$i)) + 8|0);
      $571 = HEAP32[$570>>2]|0;
      $572 = ($571|0)==(0|0);
      if ($572) {
       label = 173;
       break L259;
      } else {
       $sp$0$i$i = $571;
      }
     }
     $595 = HEAP32[(20880)>>2]|0;
     $596 = (($549) - ($595))|0;
     $597 = $596 & $550;
     $598 = ($597>>>0)<(2147483647);
     if ($598) {
      $599 = (_sbrk(($597|0))|0);
      $600 = HEAP32[$$lcssa153>>2]|0;
      $601 = HEAP32[$$lcssa155>>2]|0;
      $602 = (($600) + ($601)|0);
      $603 = ($599|0)==($602|0);
      if ($603) {
       $604 = ($599|0)==((-1)|0);
       if (!($604)) {
        $tbase$746$i = $599;$tsize$745$i = $597;
        label = 193;
        break L257;
       }
      } else {
       $br$2$ph$i = $599;$ssize$2$ph$i = $597;
       label = 183;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 173) {
     $573 = (_sbrk(0)|0);
     $574 = ($573|0)==((-1)|0);
     if (!($574)) {
      $575 = $573;
      $576 = HEAP32[(21344)>>2]|0;
      $577 = (($576) + -1)|0;
      $578 = $577 & $575;
      $579 = ($578|0)==(0);
      if ($579) {
       $ssize$0$i = $551;
      } else {
       $580 = (($577) + ($575))|0;
       $581 = (0 - ($576))|0;
       $582 = $580 & $581;
       $583 = (($551) - ($575))|0;
       $584 = (($583) + ($582))|0;
       $ssize$0$i = $584;
      }
      $585 = HEAP32[(21300)>>2]|0;
      $586 = (($585) + ($ssize$0$i))|0;
      $587 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $588 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i17 = $587 & $588;
      if ($or$cond$i17) {
       $589 = HEAP32[(21308)>>2]|0;
       $590 = ($589|0)==(0);
       if (!($590)) {
        $591 = ($586>>>0)<=($585>>>0);
        $592 = ($586>>>0)>($589>>>0);
        $or$cond2$i = $591 | $592;
        if ($or$cond2$i) {
         break;
        }
       }
       $593 = (_sbrk(($ssize$0$i|0))|0);
       $594 = ($593|0)==($573|0);
       if ($594) {
        $tbase$746$i = $573;$tsize$745$i = $ssize$0$i;
        label = 193;
        break L257;
       } else {
        $br$2$ph$i = $593;$ssize$2$ph$i = $ssize$0$i;
        label = 183;
       }
      }
     }
    }
   } while(0);
   L279: do {
    if ((label|0) == 183) {
     $605 = (0 - ($ssize$2$ph$i))|0;
     $606 = ($br$2$ph$i|0)!=((-1)|0);
     $607 = ($ssize$2$ph$i>>>0)<(2147483647);
     $or$cond7$i = $607 & $606;
     $608 = ($546>>>0)>($ssize$2$ph$i>>>0);
     $or$cond8$i = $608 & $or$cond7$i;
     do {
      if ($or$cond8$i) {
       $609 = HEAP32[(21348)>>2]|0;
       $610 = (($548) - ($ssize$2$ph$i))|0;
       $611 = (($610) + ($609))|0;
       $612 = (0 - ($609))|0;
       $613 = $611 & $612;
       $614 = ($613>>>0)<(2147483647);
       if ($614) {
        $615 = (_sbrk(($613|0))|0);
        $616 = ($615|0)==((-1)|0);
        if ($616) {
         (_sbrk(($605|0))|0);
         break L279;
        } else {
         $617 = (($613) + ($ssize$2$ph$i))|0;
         $ssize$5$i = $617;
         break;
        }
       } else {
        $ssize$5$i = $ssize$2$ph$i;
       }
      } else {
       $ssize$5$i = $ssize$2$ph$i;
      }
     } while(0);
     $618 = ($br$2$ph$i|0)==((-1)|0);
     if (!($618)) {
      $tbase$746$i = $br$2$ph$i;$tsize$745$i = $ssize$5$i;
      label = 193;
      break L257;
     }
    }
   } while(0);
   $619 = HEAP32[(21312)>>2]|0;
   $620 = $619 | 4;
   HEAP32[(21312)>>2] = $620;
   label = 190;
  } else {
   label = 190;
  }
 } while(0);
 if ((label|0) == 190) {
  $621 = ($551>>>0)<(2147483647);
  if ($621) {
   $622 = (_sbrk(($551|0))|0);
   $623 = (_sbrk(0)|0);
   $624 = ($622|0)!=((-1)|0);
   $625 = ($623|0)!=((-1)|0);
   $or$cond5$i = $624 & $625;
   $626 = ($622>>>0)<($623>>>0);
   $or$cond10$i = $626 & $or$cond5$i;
   if ($or$cond10$i) {
    $627 = $623;
    $628 = $622;
    $629 = (($627) - ($628))|0;
    $630 = (($nb$0) + 40)|0;
    $$not$i = ($629>>>0)>($630>>>0);
    if ($$not$i) {
     $tbase$746$i = $622;$tsize$745$i = $629;
     label = 193;
    }
   }
  }
 }
 if ((label|0) == 193) {
  $631 = HEAP32[(21300)>>2]|0;
  $632 = (($631) + ($tsize$745$i))|0;
  HEAP32[(21300)>>2] = $632;
  $633 = HEAP32[(21304)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(21304)>>2] = $632;
  }
  $635 = HEAP32[(20892)>>2]|0;
  $636 = ($635|0)==(0|0);
  do {
   if ($636) {
    $637 = HEAP32[(20884)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$746$i>>>0)<($637>>>0);
    $or$cond11$i = $638 | $639;
    if ($or$cond11$i) {
     HEAP32[(20884)>>2] = $tbase$746$i;
    }
    HEAP32[(21316)>>2] = $tbase$746$i;
    HEAP32[(21320)>>2] = $tsize$745$i;
    HEAP32[(21328)>>2] = 0;
    $640 = HEAP32[5335]|0;
    HEAP32[(20904)>>2] = $640;
    HEAP32[(20900)>>2] = -1;
    $i$01$i$i = 0;
    while(1) {
     $641 = $i$01$i$i << 1;
     $642 = (20908 + ($641<<2)|0);
     $643 = ((($642)) + 12|0);
     HEAP32[$643>>2] = $642;
     $644 = ((($642)) + 8|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$01$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$01$i$i = $645;
     }
    }
    $646 = (($tsize$745$i) + -40)|0;
    $647 = ((($tbase$746$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$746$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(20892)>>2] = $654;
    HEAP32[(20880)>>2] = $655;
    $656 = $655 | 1;
    $657 = ((($654)) + 4|0);
    HEAP32[$657>>2] = $656;
    $658 = (($654) + ($655)|0);
    $659 = ((($658)) + 4|0);
    HEAP32[$659>>2] = 40;
    $660 = HEAP32[(21356)>>2]|0;
    HEAP32[(20896)>>2] = $660;
   } else {
    $sp$068$i = (21316);
    while(1) {
     $661 = HEAP32[$sp$068$i>>2]|0;
     $662 = ((($sp$068$i)) + 4|0);
     $663 = HEAP32[$662>>2]|0;
     $664 = (($661) + ($663)|0);
     $665 = ($tbase$746$i|0)==($664|0);
     if ($665) {
      $$lcssa147 = $661;$$lcssa149 = $662;$$lcssa151 = $663;$sp$068$i$lcssa = $sp$068$i;
      label = 203;
      break;
     }
     $666 = ((($sp$068$i)) + 8|0);
     $667 = HEAP32[$666>>2]|0;
     $668 = ($667|0)==(0|0);
     if ($668) {
      break;
     } else {
      $sp$068$i = $667;
     }
    }
    if ((label|0) == 203) {
     $669 = ((($sp$068$i$lcssa)) + 12|0);
     $670 = HEAP32[$669>>2]|0;
     $671 = $670 & 8;
     $672 = ($671|0)==(0);
     if ($672) {
      $673 = ($635>>>0)>=($$lcssa147>>>0);
      $674 = ($635>>>0)<($tbase$746$i>>>0);
      $or$cond48$i = $674 & $673;
      if ($or$cond48$i) {
       $675 = (($$lcssa151) + ($tsize$745$i))|0;
       HEAP32[$$lcssa149>>2] = $675;
       $676 = HEAP32[(20880)>>2]|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($tsize$745$i) - ($683))|0;
       $686 = (($685) + ($676))|0;
       HEAP32[(20892)>>2] = $684;
       HEAP32[(20880)>>2] = $686;
       $687 = $686 | 1;
       $688 = ((($684)) + 4|0);
       HEAP32[$688>>2] = $687;
       $689 = (($684) + ($686)|0);
       $690 = ((($689)) + 4|0);
       HEAP32[$690>>2] = 40;
       $691 = HEAP32[(21356)>>2]|0;
       HEAP32[(20896)>>2] = $691;
       break;
      }
     }
    }
    $692 = HEAP32[(20884)>>2]|0;
    $693 = ($tbase$746$i>>>0)<($692>>>0);
    if ($693) {
     HEAP32[(20884)>>2] = $tbase$746$i;
     $757 = $tbase$746$i;
    } else {
     $757 = $692;
    }
    $694 = (($tbase$746$i) + ($tsize$745$i)|0);
    $sp$167$i = (21316);
    while(1) {
     $695 = HEAP32[$sp$167$i>>2]|0;
     $696 = ($695|0)==($694|0);
     if ($696) {
      $$lcssa144 = $sp$167$i;$sp$167$i$lcssa = $sp$167$i;
      label = 211;
      break;
     }
     $697 = ((($sp$167$i)) + 8|0);
     $698 = HEAP32[$697>>2]|0;
     $699 = ($698|0)==(0|0);
     if ($699) {
      $sp$0$i$i$i = (21316);
      break;
     } else {
      $sp$167$i = $698;
     }
    }
    if ((label|0) == 211) {
     $700 = ((($sp$167$i$lcssa)) + 12|0);
     $701 = HEAP32[$700>>2]|0;
     $702 = $701 & 8;
     $703 = ($702|0)==(0);
     if ($703) {
      HEAP32[$$lcssa144>>2] = $tbase$746$i;
      $704 = ((($sp$167$i$lcssa)) + 4|0);
      $705 = HEAP32[$704>>2]|0;
      $706 = (($705) + ($tsize$745$i))|0;
      HEAP32[$704>>2] = $706;
      $707 = ((($tbase$746$i)) + 8|0);
      $708 = $707;
      $709 = $708 & 7;
      $710 = ($709|0)==(0);
      $711 = (0 - ($708))|0;
      $712 = $711 & 7;
      $713 = $710 ? 0 : $712;
      $714 = (($tbase$746$i) + ($713)|0);
      $715 = ((($694)) + 8|0);
      $716 = $715;
      $717 = $716 & 7;
      $718 = ($717|0)==(0);
      $719 = (0 - ($716))|0;
      $720 = $719 & 7;
      $721 = $718 ? 0 : $720;
      $722 = (($694) + ($721)|0);
      $723 = $722;
      $724 = $714;
      $725 = (($723) - ($724))|0;
      $726 = (($714) + ($nb$0)|0);
      $727 = (($725) - ($nb$0))|0;
      $728 = $nb$0 | 3;
      $729 = ((($714)) + 4|0);
      HEAP32[$729>>2] = $728;
      $730 = ($722|0)==($635|0);
      do {
       if ($730) {
        $731 = HEAP32[(20880)>>2]|0;
        $732 = (($731) + ($727))|0;
        HEAP32[(20880)>>2] = $732;
        HEAP32[(20892)>>2] = $726;
        $733 = $732 | 1;
        $734 = ((($726)) + 4|0);
        HEAP32[$734>>2] = $733;
       } else {
        $735 = HEAP32[(20888)>>2]|0;
        $736 = ($722|0)==($735|0);
        if ($736) {
         $737 = HEAP32[(20876)>>2]|0;
         $738 = (($737) + ($727))|0;
         HEAP32[(20876)>>2] = $738;
         HEAP32[(20888)>>2] = $726;
         $739 = $738 | 1;
         $740 = ((($726)) + 4|0);
         HEAP32[$740>>2] = $739;
         $741 = (($726) + ($738)|0);
         HEAP32[$741>>2] = $738;
         break;
        }
        $742 = ((($722)) + 4|0);
        $743 = HEAP32[$742>>2]|0;
        $744 = $743 & 3;
        $745 = ($744|0)==(1);
        if ($745) {
         $746 = $743 & -8;
         $747 = $743 >>> 3;
         $748 = ($743>>>0)<(256);
         L331: do {
          if ($748) {
           $749 = ((($722)) + 8|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = ((($722)) + 12|0);
           $752 = HEAP32[$751>>2]|0;
           $753 = $747 << 1;
           $754 = (20908 + ($753<<2)|0);
           $755 = ($750|0)==($754|0);
           do {
            if (!($755)) {
             $756 = ($750>>>0)<($757>>>0);
             if ($756) {
              _abort();
              // unreachable;
             }
             $758 = ((($750)) + 12|0);
             $759 = HEAP32[$758>>2]|0;
             $760 = ($759|0)==($722|0);
             if ($760) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $761 = ($752|0)==($750|0);
           if ($761) {
            $762 = 1 << $747;
            $763 = $762 ^ -1;
            $764 = HEAP32[5217]|0;
            $765 = $764 & $763;
            HEAP32[5217] = $765;
            break;
           }
           $766 = ($752|0)==($754|0);
           do {
            if ($766) {
             $$pre9$i$i = ((($752)) + 8|0);
             $$pre$phi10$i$iZ2D = $$pre9$i$i;
            } else {
             $767 = ($752>>>0)<($757>>>0);
             if ($767) {
              _abort();
              // unreachable;
             }
             $768 = ((($752)) + 8|0);
             $769 = HEAP32[$768>>2]|0;
             $770 = ($769|0)==($722|0);
             if ($770) {
              $$pre$phi10$i$iZ2D = $768;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $771 = ((($750)) + 12|0);
           HEAP32[$771>>2] = $752;
           HEAP32[$$pre$phi10$i$iZ2D>>2] = $750;
          } else {
           $772 = ((($722)) + 24|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ((($722)) + 12|0);
           $775 = HEAP32[$774>>2]|0;
           $776 = ($775|0)==($722|0);
           do {
            if ($776) {
             $786 = ((($722)) + 16|0);
             $787 = ((($786)) + 4|0);
             $788 = HEAP32[$787>>2]|0;
             $789 = ($788|0)==(0|0);
             if ($789) {
              $790 = HEAP32[$786>>2]|0;
              $791 = ($790|0)==(0|0);
              if ($791) {
               $R$3$i$i = 0;
               break;
              } else {
               $R$1$i$i = $790;$RP$1$i$i = $786;
              }
             } else {
              $R$1$i$i = $788;$RP$1$i$i = $787;
             }
             while(1) {
              $792 = ((($R$1$i$i)) + 20|0);
              $793 = HEAP32[$792>>2]|0;
              $794 = ($793|0)==(0|0);
              if (!($794)) {
               $R$1$i$i = $793;$RP$1$i$i = $792;
               continue;
              }
              $795 = ((($R$1$i$i)) + 16|0);
              $796 = HEAP32[$795>>2]|0;
              $797 = ($796|0)==(0|0);
              if ($797) {
               $R$1$i$i$lcssa = $R$1$i$i;$RP$1$i$i$lcssa = $RP$1$i$i;
               break;
              } else {
               $R$1$i$i = $796;$RP$1$i$i = $795;
              }
             }
             $798 = ($RP$1$i$i$lcssa>>>0)<($757>>>0);
             if ($798) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$1$i$i$lcssa>>2] = 0;
              $R$3$i$i = $R$1$i$i$lcssa;
              break;
             }
            } else {
             $777 = ((($722)) + 8|0);
             $778 = HEAP32[$777>>2]|0;
             $779 = ($778>>>0)<($757>>>0);
             if ($779) {
              _abort();
              // unreachable;
             }
             $780 = ((($778)) + 12|0);
             $781 = HEAP32[$780>>2]|0;
             $782 = ($781|0)==($722|0);
             if (!($782)) {
              _abort();
              // unreachable;
             }
             $783 = ((($775)) + 8|0);
             $784 = HEAP32[$783>>2]|0;
             $785 = ($784|0)==($722|0);
             if ($785) {
              HEAP32[$780>>2] = $775;
              HEAP32[$783>>2] = $778;
              $R$3$i$i = $775;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $799 = ($773|0)==(0|0);
           if ($799) {
            break;
           }
           $800 = ((($722)) + 28|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = (21172 + ($801<<2)|0);
           $803 = HEAP32[$802>>2]|0;
           $804 = ($722|0)==($803|0);
           do {
            if ($804) {
             HEAP32[$802>>2] = $R$3$i$i;
             $cond$i$i = ($R$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $805 = 1 << $801;
             $806 = $805 ^ -1;
             $807 = HEAP32[(20872)>>2]|0;
             $808 = $807 & $806;
             HEAP32[(20872)>>2] = $808;
             break L331;
            } else {
             $809 = HEAP32[(20884)>>2]|0;
             $810 = ($773>>>0)<($809>>>0);
             if ($810) {
              _abort();
              // unreachable;
             }
             $811 = ((($773)) + 16|0);
             $812 = HEAP32[$811>>2]|0;
             $813 = ($812|0)==($722|0);
             if ($813) {
              HEAP32[$811>>2] = $R$3$i$i;
             } else {
              $814 = ((($773)) + 20|0);
              HEAP32[$814>>2] = $R$3$i$i;
             }
             $815 = ($R$3$i$i|0)==(0|0);
             if ($815) {
              break L331;
             }
            }
           } while(0);
           $816 = HEAP32[(20884)>>2]|0;
           $817 = ($R$3$i$i>>>0)<($816>>>0);
           if ($817) {
            _abort();
            // unreachable;
           }
           $818 = ((($R$3$i$i)) + 24|0);
           HEAP32[$818>>2] = $773;
           $819 = ((($722)) + 16|0);
           $820 = HEAP32[$819>>2]|0;
           $821 = ($820|0)==(0|0);
           do {
            if (!($821)) {
             $822 = ($820>>>0)<($816>>>0);
             if ($822) {
              _abort();
              // unreachable;
             } else {
              $823 = ((($R$3$i$i)) + 16|0);
              HEAP32[$823>>2] = $820;
              $824 = ((($820)) + 24|0);
              HEAP32[$824>>2] = $R$3$i$i;
              break;
             }
            }
           } while(0);
           $825 = ((($819)) + 4|0);
           $826 = HEAP32[$825>>2]|0;
           $827 = ($826|0)==(0|0);
           if ($827) {
            break;
           }
           $828 = HEAP32[(20884)>>2]|0;
           $829 = ($826>>>0)<($828>>>0);
           if ($829) {
            _abort();
            // unreachable;
           } else {
            $830 = ((($R$3$i$i)) + 20|0);
            HEAP32[$830>>2] = $826;
            $831 = ((($826)) + 24|0);
            HEAP32[$831>>2] = $R$3$i$i;
            break;
           }
          }
         } while(0);
         $832 = (($722) + ($746)|0);
         $833 = (($746) + ($727))|0;
         $oldfirst$0$i$i = $832;$qsize$0$i$i = $833;
        } else {
         $oldfirst$0$i$i = $722;$qsize$0$i$i = $727;
        }
        $834 = ((($oldfirst$0$i$i)) + 4|0);
        $835 = HEAP32[$834>>2]|0;
        $836 = $835 & -2;
        HEAP32[$834>>2] = $836;
        $837 = $qsize$0$i$i | 1;
        $838 = ((($726)) + 4|0);
        HEAP32[$838>>2] = $837;
        $839 = (($726) + ($qsize$0$i$i)|0);
        HEAP32[$839>>2] = $qsize$0$i$i;
        $840 = $qsize$0$i$i >>> 3;
        $841 = ($qsize$0$i$i>>>0)<(256);
        if ($841) {
         $842 = $840 << 1;
         $843 = (20908 + ($842<<2)|0);
         $844 = HEAP32[5217]|0;
         $845 = 1 << $840;
         $846 = $844 & $845;
         $847 = ($846|0)==(0);
         do {
          if ($847) {
           $848 = $844 | $845;
           HEAP32[5217] = $848;
           $$pre$i16$i = ((($843)) + 8|0);
           $$pre$phi$i17$iZ2D = $$pre$i16$i;$F4$0$i$i = $843;
          } else {
           $849 = ((($843)) + 8|0);
           $850 = HEAP32[$849>>2]|0;
           $851 = HEAP32[(20884)>>2]|0;
           $852 = ($850>>>0)<($851>>>0);
           if (!($852)) {
            $$pre$phi$i17$iZ2D = $849;$F4$0$i$i = $850;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i17$iZ2D>>2] = $726;
         $853 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$853>>2] = $726;
         $854 = ((($726)) + 8|0);
         HEAP32[$854>>2] = $F4$0$i$i;
         $855 = ((($726)) + 12|0);
         HEAP32[$855>>2] = $843;
         break;
        }
        $856 = $qsize$0$i$i >>> 8;
        $857 = ($856|0)==(0);
        do {
         if ($857) {
          $I7$0$i$i = 0;
         } else {
          $858 = ($qsize$0$i$i>>>0)>(16777215);
          if ($858) {
           $I7$0$i$i = 31;
           break;
          }
          $859 = (($856) + 1048320)|0;
          $860 = $859 >>> 16;
          $861 = $860 & 8;
          $862 = $856 << $861;
          $863 = (($862) + 520192)|0;
          $864 = $863 >>> 16;
          $865 = $864 & 4;
          $866 = $865 | $861;
          $867 = $862 << $865;
          $868 = (($867) + 245760)|0;
          $869 = $868 >>> 16;
          $870 = $869 & 2;
          $871 = $866 | $870;
          $872 = (14 - ($871))|0;
          $873 = $867 << $870;
          $874 = $873 >>> 15;
          $875 = (($872) + ($874))|0;
          $876 = $875 << 1;
          $877 = (($875) + 7)|0;
          $878 = $qsize$0$i$i >>> $877;
          $879 = $878 & 1;
          $880 = $879 | $876;
          $I7$0$i$i = $880;
         }
        } while(0);
        $881 = (21172 + ($I7$0$i$i<<2)|0);
        $882 = ((($726)) + 28|0);
        HEAP32[$882>>2] = $I7$0$i$i;
        $883 = ((($726)) + 16|0);
        $884 = ((($883)) + 4|0);
        HEAP32[$884>>2] = 0;
        HEAP32[$883>>2] = 0;
        $885 = HEAP32[(20872)>>2]|0;
        $886 = 1 << $I7$0$i$i;
        $887 = $885 & $886;
        $888 = ($887|0)==(0);
        if ($888) {
         $889 = $885 | $886;
         HEAP32[(20872)>>2] = $889;
         HEAP32[$881>>2] = $726;
         $890 = ((($726)) + 24|0);
         HEAP32[$890>>2] = $881;
         $891 = ((($726)) + 12|0);
         HEAP32[$891>>2] = $726;
         $892 = ((($726)) + 8|0);
         HEAP32[$892>>2] = $726;
         break;
        }
        $893 = HEAP32[$881>>2]|0;
        $894 = ($I7$0$i$i|0)==(31);
        $895 = $I7$0$i$i >>> 1;
        $896 = (25 - ($895))|0;
        $897 = $894 ? 0 : $896;
        $898 = $qsize$0$i$i << $897;
        $K8$0$i$i = $898;$T$0$i18$i = $893;
        while(1) {
         $899 = ((($T$0$i18$i)) + 4|0);
         $900 = HEAP32[$899>>2]|0;
         $901 = $900 & -8;
         $902 = ($901|0)==($qsize$0$i$i|0);
         if ($902) {
          $T$0$i18$i$lcssa = $T$0$i18$i;
          label = 281;
          break;
         }
         $903 = $K8$0$i$i >>> 31;
         $904 = (((($T$0$i18$i)) + 16|0) + ($903<<2)|0);
         $905 = $K8$0$i$i << 1;
         $906 = HEAP32[$904>>2]|0;
         $907 = ($906|0)==(0|0);
         if ($907) {
          $$lcssa = $904;$T$0$i18$i$lcssa139 = $T$0$i18$i;
          label = 278;
          break;
         } else {
          $K8$0$i$i = $905;$T$0$i18$i = $906;
         }
        }
        if ((label|0) == 278) {
         $908 = HEAP32[(20884)>>2]|0;
         $909 = ($$lcssa>>>0)<($908>>>0);
         if ($909) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$lcssa>>2] = $726;
          $910 = ((($726)) + 24|0);
          HEAP32[$910>>2] = $T$0$i18$i$lcssa139;
          $911 = ((($726)) + 12|0);
          HEAP32[$911>>2] = $726;
          $912 = ((($726)) + 8|0);
          HEAP32[$912>>2] = $726;
          break;
         }
        }
        else if ((label|0) == 281) {
         $913 = ((($T$0$i18$i$lcssa)) + 8|0);
         $914 = HEAP32[$913>>2]|0;
         $915 = HEAP32[(20884)>>2]|0;
         $916 = ($914>>>0)>=($915>>>0);
         $not$$i20$i = ($T$0$i18$i$lcssa>>>0)>=($915>>>0);
         $917 = $916 & $not$$i20$i;
         if ($917) {
          $918 = ((($914)) + 12|0);
          HEAP32[$918>>2] = $726;
          HEAP32[$913>>2] = $726;
          $919 = ((($726)) + 8|0);
          HEAP32[$919>>2] = $914;
          $920 = ((($726)) + 12|0);
          HEAP32[$920>>2] = $T$0$i18$i$lcssa;
          $921 = ((($726)) + 24|0);
          HEAP32[$921>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1052 = ((($714)) + 8|0);
      $$0 = $1052;
      return ($$0|0);
     } else {
      $sp$0$i$i$i = (21316);
     }
    }
    while(1) {
     $922 = HEAP32[$sp$0$i$i$i>>2]|0;
     $923 = ($922>>>0)>($635>>>0);
     if (!($923)) {
      $924 = ((($sp$0$i$i$i)) + 4|0);
      $925 = HEAP32[$924>>2]|0;
      $926 = (($922) + ($925)|0);
      $927 = ($926>>>0)>($635>>>0);
      if ($927) {
       $$lcssa142 = $926;
       break;
      }
     }
     $928 = ((($sp$0$i$i$i)) + 8|0);
     $929 = HEAP32[$928>>2]|0;
     $sp$0$i$i$i = $929;
    }
    $930 = ((($$lcssa142)) + -47|0);
    $931 = ((($930)) + 8|0);
    $932 = $931;
    $933 = $932 & 7;
    $934 = ($933|0)==(0);
    $935 = (0 - ($932))|0;
    $936 = $935 & 7;
    $937 = $934 ? 0 : $936;
    $938 = (($930) + ($937)|0);
    $939 = ((($635)) + 16|0);
    $940 = ($938>>>0)<($939>>>0);
    $941 = $940 ? $635 : $938;
    $942 = ((($941)) + 8|0);
    $943 = ((($941)) + 24|0);
    $944 = (($tsize$745$i) + -40)|0;
    $945 = ((($tbase$746$i)) + 8|0);
    $946 = $945;
    $947 = $946 & 7;
    $948 = ($947|0)==(0);
    $949 = (0 - ($946))|0;
    $950 = $949 & 7;
    $951 = $948 ? 0 : $950;
    $952 = (($tbase$746$i) + ($951)|0);
    $953 = (($944) - ($951))|0;
    HEAP32[(20892)>>2] = $952;
    HEAP32[(20880)>>2] = $953;
    $954 = $953 | 1;
    $955 = ((($952)) + 4|0);
    HEAP32[$955>>2] = $954;
    $956 = (($952) + ($953)|0);
    $957 = ((($956)) + 4|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(21356)>>2]|0;
    HEAP32[(20896)>>2] = $958;
    $959 = ((($941)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$942>>2]=HEAP32[(21316)>>2]|0;HEAP32[$942+4>>2]=HEAP32[(21316)+4>>2]|0;HEAP32[$942+8>>2]=HEAP32[(21316)+8>>2]|0;HEAP32[$942+12>>2]=HEAP32[(21316)+12>>2]|0;
    HEAP32[(21316)>>2] = $tbase$746$i;
    HEAP32[(21320)>>2] = $tsize$745$i;
    HEAP32[(21328)>>2] = 0;
    HEAP32[(21324)>>2] = $942;
    $p$0$i$i = $943;
    while(1) {
     $960 = ((($p$0$i$i)) + 4|0);
     HEAP32[$960>>2] = 7;
     $961 = ((($960)) + 4|0);
     $962 = ($961>>>0)<($$lcssa142>>>0);
     if ($962) {
      $p$0$i$i = $960;
     } else {
      break;
     }
    }
    $963 = ($941|0)==($635|0);
    if (!($963)) {
     $964 = $941;
     $965 = $635;
     $966 = (($964) - ($965))|0;
     $967 = HEAP32[$959>>2]|0;
     $968 = $967 & -2;
     HEAP32[$959>>2] = $968;
     $969 = $966 | 1;
     $970 = ((($635)) + 4|0);
     HEAP32[$970>>2] = $969;
     HEAP32[$941>>2] = $966;
     $971 = $966 >>> 3;
     $972 = ($966>>>0)<(256);
     if ($972) {
      $973 = $971 << 1;
      $974 = (20908 + ($973<<2)|0);
      $975 = HEAP32[5217]|0;
      $976 = 1 << $971;
      $977 = $975 & $976;
      $978 = ($977|0)==(0);
      if ($978) {
       $979 = $975 | $976;
       HEAP32[5217] = $979;
       $$pre$i$i = ((($974)) + 8|0);
       $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $974;
      } else {
       $980 = ((($974)) + 8|0);
       $981 = HEAP32[$980>>2]|0;
       $982 = HEAP32[(20884)>>2]|0;
       $983 = ($981>>>0)<($982>>>0);
       if ($983) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $980;$F$0$i$i = $981;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $984 = ((($F$0$i$i)) + 12|0);
      HEAP32[$984>>2] = $635;
      $985 = ((($635)) + 8|0);
      HEAP32[$985>>2] = $F$0$i$i;
      $986 = ((($635)) + 12|0);
      HEAP32[$986>>2] = $974;
      break;
     }
     $987 = $966 >>> 8;
     $988 = ($987|0)==(0);
     if ($988) {
      $I1$0$i$i = 0;
     } else {
      $989 = ($966>>>0)>(16777215);
      if ($989) {
       $I1$0$i$i = 31;
      } else {
       $990 = (($987) + 1048320)|0;
       $991 = $990 >>> 16;
       $992 = $991 & 8;
       $993 = $987 << $992;
       $994 = (($993) + 520192)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 4;
       $997 = $996 | $992;
       $998 = $993 << $996;
       $999 = (($998) + 245760)|0;
       $1000 = $999 >>> 16;
       $1001 = $1000 & 2;
       $1002 = $997 | $1001;
       $1003 = (14 - ($1002))|0;
       $1004 = $998 << $1001;
       $1005 = $1004 >>> 15;
       $1006 = (($1003) + ($1005))|0;
       $1007 = $1006 << 1;
       $1008 = (($1006) + 7)|0;
       $1009 = $966 >>> $1008;
       $1010 = $1009 & 1;
       $1011 = $1010 | $1007;
       $I1$0$i$i = $1011;
      }
     }
     $1012 = (21172 + ($I1$0$i$i<<2)|0);
     $1013 = ((($635)) + 28|0);
     HEAP32[$1013>>2] = $I1$0$i$i;
     $1014 = ((($635)) + 20|0);
     HEAP32[$1014>>2] = 0;
     HEAP32[$939>>2] = 0;
     $1015 = HEAP32[(20872)>>2]|0;
     $1016 = 1 << $I1$0$i$i;
     $1017 = $1015 & $1016;
     $1018 = ($1017|0)==(0);
     if ($1018) {
      $1019 = $1015 | $1016;
      HEAP32[(20872)>>2] = $1019;
      HEAP32[$1012>>2] = $635;
      $1020 = ((($635)) + 24|0);
      HEAP32[$1020>>2] = $1012;
      $1021 = ((($635)) + 12|0);
      HEAP32[$1021>>2] = $635;
      $1022 = ((($635)) + 8|0);
      HEAP32[$1022>>2] = $635;
      break;
     }
     $1023 = HEAP32[$1012>>2]|0;
     $1024 = ($I1$0$i$i|0)==(31);
     $1025 = $I1$0$i$i >>> 1;
     $1026 = (25 - ($1025))|0;
     $1027 = $1024 ? 0 : $1026;
     $1028 = $966 << $1027;
     $K2$0$i$i = $1028;$T$0$i$i = $1023;
     while(1) {
      $1029 = ((($T$0$i$i)) + 4|0);
      $1030 = HEAP32[$1029>>2]|0;
      $1031 = $1030 & -8;
      $1032 = ($1031|0)==($966|0);
      if ($1032) {
       $T$0$i$i$lcssa = $T$0$i$i;
       label = 307;
       break;
      }
      $1033 = $K2$0$i$i >>> 31;
      $1034 = (((($T$0$i$i)) + 16|0) + ($1033<<2)|0);
      $1035 = $K2$0$i$i << 1;
      $1036 = HEAP32[$1034>>2]|0;
      $1037 = ($1036|0)==(0|0);
      if ($1037) {
       $$lcssa141 = $1034;$T$0$i$i$lcssa140 = $T$0$i$i;
       label = 304;
       break;
      } else {
       $K2$0$i$i = $1035;$T$0$i$i = $1036;
      }
     }
     if ((label|0) == 304) {
      $1038 = HEAP32[(20884)>>2]|0;
      $1039 = ($$lcssa141>>>0)<($1038>>>0);
      if ($1039) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$lcssa141>>2] = $635;
       $1040 = ((($635)) + 24|0);
       HEAP32[$1040>>2] = $T$0$i$i$lcssa140;
       $1041 = ((($635)) + 12|0);
       HEAP32[$1041>>2] = $635;
       $1042 = ((($635)) + 8|0);
       HEAP32[$1042>>2] = $635;
       break;
      }
     }
     else if ((label|0) == 307) {
      $1043 = ((($T$0$i$i$lcssa)) + 8|0);
      $1044 = HEAP32[$1043>>2]|0;
      $1045 = HEAP32[(20884)>>2]|0;
      $1046 = ($1044>>>0)>=($1045>>>0);
      $not$$i$i = ($T$0$i$i$lcssa>>>0)>=($1045>>>0);
      $1047 = $1046 & $not$$i$i;
      if ($1047) {
       $1048 = ((($1044)) + 12|0);
       HEAP32[$1048>>2] = $635;
       HEAP32[$1043>>2] = $635;
       $1049 = ((($635)) + 8|0);
       HEAP32[$1049>>2] = $1044;
       $1050 = ((($635)) + 12|0);
       HEAP32[$1050>>2] = $T$0$i$i$lcssa;
       $1051 = ((($635)) + 24|0);
       HEAP32[$1051>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1053 = HEAP32[(20880)>>2]|0;
  $1054 = ($1053>>>0)>($nb$0>>>0);
  if ($1054) {
   $1055 = (($1053) - ($nb$0))|0;
   HEAP32[(20880)>>2] = $1055;
   $1056 = HEAP32[(20892)>>2]|0;
   $1057 = (($1056) + ($nb$0)|0);
   HEAP32[(20892)>>2] = $1057;
   $1058 = $1055 | 1;
   $1059 = ((($1057)) + 4|0);
   HEAP32[$1059>>2] = $1058;
   $1060 = $nb$0 | 3;
   $1061 = ((($1056)) + 4|0);
   HEAP32[$1061>>2] = $1060;
   $1062 = ((($1056)) + 8|0);
   $$0 = $1062;
   return ($$0|0);
  }
 }
 $1063 = (___errno_location()|0);
 HEAP32[$1063>>2] = 12;
 $$0 = 0;
 return ($$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi41Z2D = 0, $$pre$phi43Z2D = 0, $$pre$phiZ2D = 0, $$pre40 = 0, $$pre42 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F18$0 = 0, $I20$0 = 0, $K21$0 = 0, $R$1 = 0, $R$1$lcssa = 0, $R$3 = 0, $R8$1 = 0, $R8$1$lcssa = 0, $R8$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $RP10$1 = 0, $RP10$1$lcssa = 0;
 var $T$0 = 0, $T$0$lcssa = 0, $T$0$lcssa48 = 0, $cond20 = 0, $cond21 = 0, $not$ = 0, $p$1 = 0, $psize$1 = 0, $psize$2 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(20884)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $9 = (($1) + ($8)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $14 = (0 - ($12))|0;
   $15 = (($1) + ($14)|0);
   $16 = (($12) + ($8))|0;
   $17 = ($15>>>0)<($2>>>0);
   if ($17) {
    _abort();
    // unreachable;
   }
   $18 = HEAP32[(20888)>>2]|0;
   $19 = ($15|0)==($18|0);
   if ($19) {
    $104 = ((($9)) + 4|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = $105 & 3;
    $107 = ($106|0)==(3);
    if (!($107)) {
     $p$1 = $15;$psize$1 = $16;
     break;
    }
    HEAP32[(20876)>>2] = $16;
    $108 = $105 & -2;
    HEAP32[$104>>2] = $108;
    $109 = $16 | 1;
    $110 = ((($15)) + 4|0);
    HEAP32[$110>>2] = $109;
    $111 = (($15) + ($16)|0);
    HEAP32[$111>>2] = $16;
    return;
   }
   $20 = $12 >>> 3;
   $21 = ($12>>>0)<(256);
   if ($21) {
    $22 = ((($15)) + 8|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($15)) + 12|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = $20 << 1;
    $27 = (20908 + ($26<<2)|0);
    $28 = ($23|0)==($27|0);
    if (!($28)) {
     $29 = ($23>>>0)<($2>>>0);
     if ($29) {
      _abort();
      // unreachable;
     }
     $30 = ((($23)) + 12|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = ($31|0)==($15|0);
     if (!($32)) {
      _abort();
      // unreachable;
     }
    }
    $33 = ($25|0)==($23|0);
    if ($33) {
     $34 = 1 << $20;
     $35 = $34 ^ -1;
     $36 = HEAP32[5217]|0;
     $37 = $36 & $35;
     HEAP32[5217] = $37;
     $p$1 = $15;$psize$1 = $16;
     break;
    }
    $38 = ($25|0)==($27|0);
    if ($38) {
     $$pre42 = ((($25)) + 8|0);
     $$pre$phi43Z2D = $$pre42;
    } else {
     $39 = ($25>>>0)<($2>>>0);
     if ($39) {
      _abort();
      // unreachable;
     }
     $40 = ((($25)) + 8|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($41|0)==($15|0);
     if ($42) {
      $$pre$phi43Z2D = $40;
     } else {
      _abort();
      // unreachable;
     }
    }
    $43 = ((($23)) + 12|0);
    HEAP32[$43>>2] = $25;
    HEAP32[$$pre$phi43Z2D>>2] = $23;
    $p$1 = $15;$psize$1 = $16;
    break;
   }
   $44 = ((($15)) + 24|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($15)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ($47|0)==($15|0);
   do {
    if ($48) {
     $58 = ((($15)) + 16|0);
     $59 = ((($58)) + 4|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ($60|0)==(0|0);
     if ($61) {
      $62 = HEAP32[$58>>2]|0;
      $63 = ($62|0)==(0|0);
      if ($63) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $62;$RP$1 = $58;
      }
     } else {
      $R$1 = $60;$RP$1 = $59;
     }
     while(1) {
      $64 = ((($R$1)) + 20|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($65|0)==(0|0);
      if (!($66)) {
       $R$1 = $65;$RP$1 = $64;
       continue;
      }
      $67 = ((($R$1)) + 16|0);
      $68 = HEAP32[$67>>2]|0;
      $69 = ($68|0)==(0|0);
      if ($69) {
       $R$1$lcssa = $R$1;$RP$1$lcssa = $RP$1;
       break;
      } else {
       $R$1 = $68;$RP$1 = $67;
      }
     }
     $70 = ($RP$1$lcssa>>>0)<($2>>>0);
     if ($70) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1$lcssa>>2] = 0;
      $R$3 = $R$1$lcssa;
      break;
     }
    } else {
     $49 = ((($15)) + 8|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = ($50>>>0)<($2>>>0);
     if ($51) {
      _abort();
      // unreachable;
     }
     $52 = ((($50)) + 12|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ($53|0)==($15|0);
     if (!($54)) {
      _abort();
      // unreachable;
     }
     $55 = ((($47)) + 8|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($56|0)==($15|0);
     if ($57) {
      HEAP32[$52>>2] = $47;
      HEAP32[$55>>2] = $50;
      $R$3 = $47;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $71 = ($45|0)==(0|0);
   if ($71) {
    $p$1 = $15;$psize$1 = $16;
   } else {
    $72 = ((($15)) + 28|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = (21172 + ($73<<2)|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($15|0)==($75|0);
    if ($76) {
     HEAP32[$74>>2] = $R$3;
     $cond20 = ($R$3|0)==(0|0);
     if ($cond20) {
      $77 = 1 << $73;
      $78 = $77 ^ -1;
      $79 = HEAP32[(20872)>>2]|0;
      $80 = $79 & $78;
      HEAP32[(20872)>>2] = $80;
      $p$1 = $15;$psize$1 = $16;
      break;
     }
    } else {
     $81 = HEAP32[(20884)>>2]|0;
     $82 = ($45>>>0)<($81>>>0);
     if ($82) {
      _abort();
      // unreachable;
     }
     $83 = ((($45)) + 16|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = ($84|0)==($15|0);
     if ($85) {
      HEAP32[$83>>2] = $R$3;
     } else {
      $86 = ((($45)) + 20|0);
      HEAP32[$86>>2] = $R$3;
     }
     $87 = ($R$3|0)==(0|0);
     if ($87) {
      $p$1 = $15;$psize$1 = $16;
      break;
     }
    }
    $88 = HEAP32[(20884)>>2]|0;
    $89 = ($R$3>>>0)<($88>>>0);
    if ($89) {
     _abort();
     // unreachable;
    }
    $90 = ((($R$3)) + 24|0);
    HEAP32[$90>>2] = $45;
    $91 = ((($15)) + 16|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==(0|0);
    do {
     if (!($93)) {
      $94 = ($92>>>0)<($88>>>0);
      if ($94) {
       _abort();
       // unreachable;
      } else {
       $95 = ((($R$3)) + 16|0);
       HEAP32[$95>>2] = $92;
       $96 = ((($92)) + 24|0);
       HEAP32[$96>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $97 = ((($91)) + 4|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = ($98|0)==(0|0);
    if ($99) {
     $p$1 = $15;$psize$1 = $16;
    } else {
     $100 = HEAP32[(20884)>>2]|0;
     $101 = ($98>>>0)<($100>>>0);
     if ($101) {
      _abort();
      // unreachable;
     } else {
      $102 = ((($R$3)) + 20|0);
      HEAP32[$102>>2] = $98;
      $103 = ((($98)) + 24|0);
      HEAP32[$103>>2] = $R$3;
      $p$1 = $15;$psize$1 = $16;
      break;
     }
    }
   }
  } else {
   $p$1 = $1;$psize$1 = $8;
  }
 } while(0);
 $112 = ($p$1>>>0)<($9>>>0);
 if (!($112)) {
  _abort();
  // unreachable;
 }
 $113 = ((($9)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = $114 & 1;
 $116 = ($115|0)==(0);
 if ($116) {
  _abort();
  // unreachable;
 }
 $117 = $114 & 2;
 $118 = ($117|0)==(0);
 if ($118) {
  $119 = HEAP32[(20892)>>2]|0;
  $120 = ($9|0)==($119|0);
  if ($120) {
   $121 = HEAP32[(20880)>>2]|0;
   $122 = (($121) + ($psize$1))|0;
   HEAP32[(20880)>>2] = $122;
   HEAP32[(20892)>>2] = $p$1;
   $123 = $122 | 1;
   $124 = ((($p$1)) + 4|0);
   HEAP32[$124>>2] = $123;
   $125 = HEAP32[(20888)>>2]|0;
   $126 = ($p$1|0)==($125|0);
   if (!($126)) {
    return;
   }
   HEAP32[(20888)>>2] = 0;
   HEAP32[(20876)>>2] = 0;
   return;
  }
  $127 = HEAP32[(20888)>>2]|0;
  $128 = ($9|0)==($127|0);
  if ($128) {
   $129 = HEAP32[(20876)>>2]|0;
   $130 = (($129) + ($psize$1))|0;
   HEAP32[(20876)>>2] = $130;
   HEAP32[(20888)>>2] = $p$1;
   $131 = $130 | 1;
   $132 = ((($p$1)) + 4|0);
   HEAP32[$132>>2] = $131;
   $133 = (($p$1) + ($130)|0);
   HEAP32[$133>>2] = $130;
   return;
  }
  $134 = $114 & -8;
  $135 = (($134) + ($psize$1))|0;
  $136 = $114 >>> 3;
  $137 = ($114>>>0)<(256);
  do {
   if ($137) {
    $138 = ((($9)) + 8|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($9)) + 12|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = $136 << 1;
    $143 = (20908 + ($142<<2)|0);
    $144 = ($139|0)==($143|0);
    if (!($144)) {
     $145 = HEAP32[(20884)>>2]|0;
     $146 = ($139>>>0)<($145>>>0);
     if ($146) {
      _abort();
      // unreachable;
     }
     $147 = ((($139)) + 12|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($148|0)==($9|0);
     if (!($149)) {
      _abort();
      // unreachable;
     }
    }
    $150 = ($141|0)==($139|0);
    if ($150) {
     $151 = 1 << $136;
     $152 = $151 ^ -1;
     $153 = HEAP32[5217]|0;
     $154 = $153 & $152;
     HEAP32[5217] = $154;
     break;
    }
    $155 = ($141|0)==($143|0);
    if ($155) {
     $$pre40 = ((($141)) + 8|0);
     $$pre$phi41Z2D = $$pre40;
    } else {
     $156 = HEAP32[(20884)>>2]|0;
     $157 = ($141>>>0)<($156>>>0);
     if ($157) {
      _abort();
      // unreachable;
     }
     $158 = ((($141)) + 8|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==($9|0);
     if ($160) {
      $$pre$phi41Z2D = $158;
     } else {
      _abort();
      // unreachable;
     }
    }
    $161 = ((($139)) + 12|0);
    HEAP32[$161>>2] = $141;
    HEAP32[$$pre$phi41Z2D>>2] = $139;
   } else {
    $162 = ((($9)) + 24|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ((($9)) + 12|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = ($165|0)==($9|0);
    do {
     if ($166) {
      $177 = ((($9)) + 16|0);
      $178 = ((($177)) + 4|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ($179|0)==(0|0);
      if ($180) {
       $181 = HEAP32[$177>>2]|0;
       $182 = ($181|0)==(0|0);
       if ($182) {
        $R8$3 = 0;
        break;
       } else {
        $R8$1 = $181;$RP10$1 = $177;
       }
      } else {
       $R8$1 = $179;$RP10$1 = $178;
      }
      while(1) {
       $183 = ((($R8$1)) + 20|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($184|0)==(0|0);
       if (!($185)) {
        $R8$1 = $184;$RP10$1 = $183;
        continue;
       }
       $186 = ((($R8$1)) + 16|0);
       $187 = HEAP32[$186>>2]|0;
       $188 = ($187|0)==(0|0);
       if ($188) {
        $R8$1$lcssa = $R8$1;$RP10$1$lcssa = $RP10$1;
        break;
       } else {
        $R8$1 = $187;$RP10$1 = $186;
       }
      }
      $189 = HEAP32[(20884)>>2]|0;
      $190 = ($RP10$1$lcssa>>>0)<($189>>>0);
      if ($190) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP10$1$lcssa>>2] = 0;
       $R8$3 = $R8$1$lcssa;
       break;
      }
     } else {
      $167 = ((($9)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = HEAP32[(20884)>>2]|0;
      $170 = ($168>>>0)<($169>>>0);
      if ($170) {
       _abort();
       // unreachable;
      }
      $171 = ((($168)) + 12|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = ($172|0)==($9|0);
      if (!($173)) {
       _abort();
       // unreachable;
      }
      $174 = ((($165)) + 8|0);
      $175 = HEAP32[$174>>2]|0;
      $176 = ($175|0)==($9|0);
      if ($176) {
       HEAP32[$171>>2] = $165;
       HEAP32[$174>>2] = $168;
       $R8$3 = $165;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $191 = ($163|0)==(0|0);
    if (!($191)) {
     $192 = ((($9)) + 28|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = (21172 + ($193<<2)|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = ($9|0)==($195|0);
     if ($196) {
      HEAP32[$194>>2] = $R8$3;
      $cond21 = ($R8$3|0)==(0|0);
      if ($cond21) {
       $197 = 1 << $193;
       $198 = $197 ^ -1;
       $199 = HEAP32[(20872)>>2]|0;
       $200 = $199 & $198;
       HEAP32[(20872)>>2] = $200;
       break;
      }
     } else {
      $201 = HEAP32[(20884)>>2]|0;
      $202 = ($163>>>0)<($201>>>0);
      if ($202) {
       _abort();
       // unreachable;
      }
      $203 = ((($163)) + 16|0);
      $204 = HEAP32[$203>>2]|0;
      $205 = ($204|0)==($9|0);
      if ($205) {
       HEAP32[$203>>2] = $R8$3;
      } else {
       $206 = ((($163)) + 20|0);
       HEAP32[$206>>2] = $R8$3;
      }
      $207 = ($R8$3|0)==(0|0);
      if ($207) {
       break;
      }
     }
     $208 = HEAP32[(20884)>>2]|0;
     $209 = ($R8$3>>>0)<($208>>>0);
     if ($209) {
      _abort();
      // unreachable;
     }
     $210 = ((($R8$3)) + 24|0);
     HEAP32[$210>>2] = $163;
     $211 = ((($9)) + 16|0);
     $212 = HEAP32[$211>>2]|0;
     $213 = ($212|0)==(0|0);
     do {
      if (!($213)) {
       $214 = ($212>>>0)<($208>>>0);
       if ($214) {
        _abort();
        // unreachable;
       } else {
        $215 = ((($R8$3)) + 16|0);
        HEAP32[$215>>2] = $212;
        $216 = ((($212)) + 24|0);
        HEAP32[$216>>2] = $R8$3;
        break;
       }
      }
     } while(0);
     $217 = ((($211)) + 4|0);
     $218 = HEAP32[$217>>2]|0;
     $219 = ($218|0)==(0|0);
     if (!($219)) {
      $220 = HEAP32[(20884)>>2]|0;
      $221 = ($218>>>0)<($220>>>0);
      if ($221) {
       _abort();
       // unreachable;
      } else {
       $222 = ((($R8$3)) + 20|0);
       HEAP32[$222>>2] = $218;
       $223 = ((($218)) + 24|0);
       HEAP32[$223>>2] = $R8$3;
       break;
      }
     }
    }
   }
  } while(0);
  $224 = $135 | 1;
  $225 = ((($p$1)) + 4|0);
  HEAP32[$225>>2] = $224;
  $226 = (($p$1) + ($135)|0);
  HEAP32[$226>>2] = $135;
  $227 = HEAP32[(20888)>>2]|0;
  $228 = ($p$1|0)==($227|0);
  if ($228) {
   HEAP32[(20876)>>2] = $135;
   return;
  } else {
   $psize$2 = $135;
  }
 } else {
  $229 = $114 & -2;
  HEAP32[$113>>2] = $229;
  $230 = $psize$1 | 1;
  $231 = ((($p$1)) + 4|0);
  HEAP32[$231>>2] = $230;
  $232 = (($p$1) + ($psize$1)|0);
  HEAP32[$232>>2] = $psize$1;
  $psize$2 = $psize$1;
 }
 $233 = $psize$2 >>> 3;
 $234 = ($psize$2>>>0)<(256);
 if ($234) {
  $235 = $233 << 1;
  $236 = (20908 + ($235<<2)|0);
  $237 = HEAP32[5217]|0;
  $238 = 1 << $233;
  $239 = $237 & $238;
  $240 = ($239|0)==(0);
  if ($240) {
   $241 = $237 | $238;
   HEAP32[5217] = $241;
   $$pre = ((($236)) + 8|0);
   $$pre$phiZ2D = $$pre;$F18$0 = $236;
  } else {
   $242 = ((($236)) + 8|0);
   $243 = HEAP32[$242>>2]|0;
   $244 = HEAP32[(20884)>>2]|0;
   $245 = ($243>>>0)<($244>>>0);
   if ($245) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $242;$F18$0 = $243;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$1;
  $246 = ((($F18$0)) + 12|0);
  HEAP32[$246>>2] = $p$1;
  $247 = ((($p$1)) + 8|0);
  HEAP32[$247>>2] = $F18$0;
  $248 = ((($p$1)) + 12|0);
  HEAP32[$248>>2] = $236;
  return;
 }
 $249 = $psize$2 >>> 8;
 $250 = ($249|0)==(0);
 if ($250) {
  $I20$0 = 0;
 } else {
  $251 = ($psize$2>>>0)>(16777215);
  if ($251) {
   $I20$0 = 31;
  } else {
   $252 = (($249) + 1048320)|0;
   $253 = $252 >>> 16;
   $254 = $253 & 8;
   $255 = $249 << $254;
   $256 = (($255) + 520192)|0;
   $257 = $256 >>> 16;
   $258 = $257 & 4;
   $259 = $258 | $254;
   $260 = $255 << $258;
   $261 = (($260) + 245760)|0;
   $262 = $261 >>> 16;
   $263 = $262 & 2;
   $264 = $259 | $263;
   $265 = (14 - ($264))|0;
   $266 = $260 << $263;
   $267 = $266 >>> 15;
   $268 = (($265) + ($267))|0;
   $269 = $268 << 1;
   $270 = (($268) + 7)|0;
   $271 = $psize$2 >>> $270;
   $272 = $271 & 1;
   $273 = $272 | $269;
   $I20$0 = $273;
  }
 }
 $274 = (21172 + ($I20$0<<2)|0);
 $275 = ((($p$1)) + 28|0);
 HEAP32[$275>>2] = $I20$0;
 $276 = ((($p$1)) + 16|0);
 $277 = ((($p$1)) + 20|0);
 HEAP32[$277>>2] = 0;
 HEAP32[$276>>2] = 0;
 $278 = HEAP32[(20872)>>2]|0;
 $279 = 1 << $I20$0;
 $280 = $278 & $279;
 $281 = ($280|0)==(0);
 do {
  if ($281) {
   $282 = $278 | $279;
   HEAP32[(20872)>>2] = $282;
   HEAP32[$274>>2] = $p$1;
   $283 = ((($p$1)) + 24|0);
   HEAP32[$283>>2] = $274;
   $284 = ((($p$1)) + 12|0);
   HEAP32[$284>>2] = $p$1;
   $285 = ((($p$1)) + 8|0);
   HEAP32[$285>>2] = $p$1;
  } else {
   $286 = HEAP32[$274>>2]|0;
   $287 = ($I20$0|0)==(31);
   $288 = $I20$0 >>> 1;
   $289 = (25 - ($288))|0;
   $290 = $287 ? 0 : $289;
   $291 = $psize$2 << $290;
   $K21$0 = $291;$T$0 = $286;
   while(1) {
    $292 = ((($T$0)) + 4|0);
    $293 = HEAP32[$292>>2]|0;
    $294 = $293 & -8;
    $295 = ($294|0)==($psize$2|0);
    if ($295) {
     $T$0$lcssa = $T$0;
     label = 130;
     break;
    }
    $296 = $K21$0 >>> 31;
    $297 = (((($T$0)) + 16|0) + ($296<<2)|0);
    $298 = $K21$0 << 1;
    $299 = HEAP32[$297>>2]|0;
    $300 = ($299|0)==(0|0);
    if ($300) {
     $$lcssa = $297;$T$0$lcssa48 = $T$0;
     label = 127;
     break;
    } else {
     $K21$0 = $298;$T$0 = $299;
    }
   }
   if ((label|0) == 127) {
    $301 = HEAP32[(20884)>>2]|0;
    $302 = ($$lcssa>>>0)<($301>>>0);
    if ($302) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$$lcssa>>2] = $p$1;
     $303 = ((($p$1)) + 24|0);
     HEAP32[$303>>2] = $T$0$lcssa48;
     $304 = ((($p$1)) + 12|0);
     HEAP32[$304>>2] = $p$1;
     $305 = ((($p$1)) + 8|0);
     HEAP32[$305>>2] = $p$1;
     break;
    }
   }
   else if ((label|0) == 130) {
    $306 = ((($T$0$lcssa)) + 8|0);
    $307 = HEAP32[$306>>2]|0;
    $308 = HEAP32[(20884)>>2]|0;
    $309 = ($307>>>0)>=($308>>>0);
    $not$ = ($T$0$lcssa>>>0)>=($308>>>0);
    $310 = $309 & $not$;
    if ($310) {
     $311 = ((($307)) + 12|0);
     HEAP32[$311>>2] = $p$1;
     HEAP32[$306>>2] = $p$1;
     $312 = ((($p$1)) + 8|0);
     HEAP32[$312>>2] = $307;
     $313 = ((($p$1)) + 12|0);
     HEAP32[$313>>2] = $T$0$lcssa;
     $314 = ((($p$1)) + 24|0);
     HEAP32[$314>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $315 = HEAP32[(20900)>>2]|0;
 $316 = (($315) + -1)|0;
 HEAP32[(20900)>>2] = $316;
 $317 = ($316|0)==(0);
 if ($317) {
  $sp$0$in$i = (21324);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $318 = ($sp$0$i|0)==(0|0);
  $319 = ((($sp$0$i)) + 8|0);
  if ($318) {
   break;
  } else {
   $sp$0$in$i = $319;
  }
 }
 HEAP32[(20900)>>2] = -1;
 return;
}
function _calloc($n_elements,$elem_size) {
 $n_elements = $n_elements|0;
 $elem_size = $elem_size|0;
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $req$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n_elements|0)==(0);
 if ($0) {
  $req$0 = 0;
 } else {
  $1 = Math_imul($elem_size, $n_elements)|0;
  $2 = $elem_size | $n_elements;
  $3 = ($2>>>0)>(65535);
  if ($3) {
   $4 = (($1>>>0) / ($n_elements>>>0))&-1;
   $5 = ($4|0)==($elem_size|0);
   $$ = $5 ? $1 : -1;
   $req$0 = $$;
  } else {
   $req$0 = $1;
  }
 }
 $6 = (_malloc($req$0)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  return ($6|0);
 }
 $8 = ((($6)) + -4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 3;
 $11 = ($10|0)==(0);
 if ($11) {
  return ($6|0);
 }
 _memset(($6|0),0,($req$0|0))|0;
 return ($6|0);
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$1 = $1;
  return ($mem$1|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$1 = 0;
  return ($mem$1|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$1 = $11;
  return ($mem$1|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$1 = 0;
  return ($mem$1|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$1 = $12;
 return ($mem$1|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$1 = 0, $R$1$lcssa = 0;
 var $R$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $cond = 0, $newp$2 = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond3 = 0, $storemerge = 0, $storemerge1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(20884)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond3 = $or$cond$not & $6;
 if (!($or$cond3)) {
  _abort();
  // unreachable;
 }
 $7 = ((($3)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$2 = 0;
   return ($newp$2|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(21348)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$2 = $p;
    return ($newp$2|0);
   }
  }
  $newp$2 = 0;
  return ($newp$2|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$2 = $p;
   return ($newp$2|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $26 = ((($22)) + 4|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = (($22) + ($20)|0);
  $29 = ((($28)) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = $30 | 1;
  HEAP32[$29>>2] = $31;
  _dispose_chunk($22,$20);
  $newp$2 = $p;
  return ($newp$2|0);
 }
 $32 = HEAP32[(20892)>>2]|0;
 $33 = ($3|0)==($32|0);
 if ($33) {
  $34 = HEAP32[(20880)>>2]|0;
  $35 = (($34) + ($2))|0;
  $36 = ($35>>>0)>($nb>>>0);
  if (!($36)) {
   $newp$2 = 0;
   return ($newp$2|0);
  }
  $37 = (($35) - ($nb))|0;
  $38 = (($p) + ($nb)|0);
  $39 = $1 & 1;
  $40 = $39 | $nb;
  $41 = $40 | 2;
  HEAP32[$0>>2] = $41;
  $42 = ((($38)) + 4|0);
  $43 = $37 | 1;
  HEAP32[$42>>2] = $43;
  HEAP32[(20892)>>2] = $38;
  HEAP32[(20880)>>2] = $37;
  $newp$2 = $p;
  return ($newp$2|0);
 }
 $44 = HEAP32[(20888)>>2]|0;
 $45 = ($3|0)==($44|0);
 if ($45) {
  $46 = HEAP32[(20876)>>2]|0;
  $47 = (($46) + ($2))|0;
  $48 = ($47>>>0)<($nb>>>0);
  if ($48) {
   $newp$2 = 0;
   return ($newp$2|0);
  }
  $49 = (($47) - ($nb))|0;
  $50 = ($49>>>0)>(15);
  if ($50) {
   $51 = (($p) + ($nb)|0);
   $52 = (($51) + ($49)|0);
   $53 = $1 & 1;
   $54 = $53 | $nb;
   $55 = $54 | 2;
   HEAP32[$0>>2] = $55;
   $56 = ((($51)) + 4|0);
   $57 = $49 | 1;
   HEAP32[$56>>2] = $57;
   HEAP32[$52>>2] = $49;
   $58 = ((($52)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = $59 & -2;
   HEAP32[$58>>2] = $60;
   $storemerge = $51;$storemerge1 = $49;
  } else {
   $61 = $1 & 1;
   $62 = $61 | $47;
   $63 = $62 | 2;
   HEAP32[$0>>2] = $63;
   $64 = (($p) + ($47)|0);
   $65 = ((($64)) + 4|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = $66 | 1;
   HEAP32[$65>>2] = $67;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(20876)>>2] = $storemerge1;
  HEAP32[(20888)>>2] = $storemerge;
  $newp$2 = $p;
  return ($newp$2|0);
 }
 $68 = $8 & 2;
 $69 = ($68|0)==(0);
 if (!($69)) {
  $newp$2 = 0;
  return ($newp$2|0);
 }
 $70 = $8 & -8;
 $71 = (($70) + ($2))|0;
 $72 = ($71>>>0)<($nb>>>0);
 if ($72) {
  $newp$2 = 0;
  return ($newp$2|0);
 }
 $73 = (($71) - ($nb))|0;
 $74 = $8 >>> 3;
 $75 = ($8>>>0)<(256);
 do {
  if ($75) {
   $76 = ((($3)) + 8|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ((($3)) + 12|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = $74 << 1;
   $81 = (20908 + ($80<<2)|0);
   $82 = ($77|0)==($81|0);
   if (!($82)) {
    $83 = ($77>>>0)<($4>>>0);
    if ($83) {
     _abort();
     // unreachable;
    }
    $84 = ((($77)) + 12|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($85|0)==($3|0);
    if (!($86)) {
     _abort();
     // unreachable;
    }
   }
   $87 = ($79|0)==($77|0);
   if ($87) {
    $88 = 1 << $74;
    $89 = $88 ^ -1;
    $90 = HEAP32[5217]|0;
    $91 = $90 & $89;
    HEAP32[5217] = $91;
    break;
   }
   $92 = ($79|0)==($81|0);
   if ($92) {
    $$pre = ((($79)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $93 = ($79>>>0)<($4>>>0);
    if ($93) {
     _abort();
     // unreachable;
    }
    $94 = ((($79)) + 8|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($95|0)==($3|0);
    if ($96) {
     $$pre$phiZ2D = $94;
    } else {
     _abort();
     // unreachable;
    }
   }
   $97 = ((($77)) + 12|0);
   HEAP32[$97>>2] = $79;
   HEAP32[$$pre$phiZ2D>>2] = $77;
  } else {
   $98 = ((($3)) + 24|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = ((($3)) + 12|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ($101|0)==($3|0);
   do {
    if ($102) {
     $112 = ((($3)) + 16|0);
     $113 = ((($112)) + 4|0);
     $114 = HEAP32[$113>>2]|0;
     $115 = ($114|0)==(0|0);
     if ($115) {
      $116 = HEAP32[$112>>2]|0;
      $117 = ($116|0)==(0|0);
      if ($117) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $116;$RP$1 = $112;
      }
     } else {
      $R$1 = $114;$RP$1 = $113;
     }
     while(1) {
      $118 = ((($R$1)) + 20|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if (!($120)) {
       $R$1 = $119;$RP$1 = $118;
       continue;
      }
      $121 = ((($R$1)) + 16|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = ($122|0)==(0|0);
      if ($123) {
       $R$1$lcssa = $R$1;$RP$1$lcssa = $RP$1;
       break;
      } else {
       $R$1 = $122;$RP$1 = $121;
      }
     }
     $124 = ($RP$1$lcssa>>>0)<($4>>>0);
     if ($124) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1$lcssa>>2] = 0;
      $R$3 = $R$1$lcssa;
      break;
     }
    } else {
     $103 = ((($3)) + 8|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104>>>0)<($4>>>0);
     if ($105) {
      _abort();
      // unreachable;
     }
     $106 = ((($104)) + 12|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if (!($108)) {
      _abort();
      // unreachable;
     }
     $109 = ((($101)) + 8|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==($3|0);
     if ($111) {
      HEAP32[$106>>2] = $101;
      HEAP32[$109>>2] = $104;
      $R$3 = $101;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $125 = ($99|0)==(0|0);
   if (!($125)) {
    $126 = ((($3)) + 28|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (21172 + ($127<<2)|0);
    $129 = HEAP32[$128>>2]|0;
    $130 = ($3|0)==($129|0);
    if ($130) {
     HEAP32[$128>>2] = $R$3;
     $cond = ($R$3|0)==(0|0);
     if ($cond) {
      $131 = 1 << $127;
      $132 = $131 ^ -1;
      $133 = HEAP32[(20872)>>2]|0;
      $134 = $133 & $132;
      HEAP32[(20872)>>2] = $134;
      break;
     }
    } else {
     $135 = HEAP32[(20884)>>2]|0;
     $136 = ($99>>>0)<($135>>>0);
     if ($136) {
      _abort();
      // unreachable;
     }
     $137 = ((($99)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($138|0)==($3|0);
     if ($139) {
      HEAP32[$137>>2] = $R$3;
     } else {
      $140 = ((($99)) + 20|0);
      HEAP32[$140>>2] = $R$3;
     }
     $141 = ($R$3|0)==(0|0);
     if ($141) {
      break;
     }
    }
    $142 = HEAP32[(20884)>>2]|0;
    $143 = ($R$3>>>0)<($142>>>0);
    if ($143) {
     _abort();
     // unreachable;
    }
    $144 = ((($R$3)) + 24|0);
    HEAP32[$144>>2] = $99;
    $145 = ((($3)) + 16|0);
    $146 = HEAP32[$145>>2]|0;
    $147 = ($146|0)==(0|0);
    do {
     if (!($147)) {
      $148 = ($146>>>0)<($142>>>0);
      if ($148) {
       _abort();
       // unreachable;
      } else {
       $149 = ((($R$3)) + 16|0);
       HEAP32[$149>>2] = $146;
       $150 = ((($146)) + 24|0);
       HEAP32[$150>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $151 = ((($145)) + 4|0);
    $152 = HEAP32[$151>>2]|0;
    $153 = ($152|0)==(0|0);
    if (!($153)) {
     $154 = HEAP32[(20884)>>2]|0;
     $155 = ($152>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     } else {
      $156 = ((($R$3)) + 20|0);
      HEAP32[$156>>2] = $152;
      $157 = ((($152)) + 24|0);
      HEAP32[$157>>2] = $R$3;
      break;
     }
    }
   }
  }
 } while(0);
 $158 = ($73>>>0)<(16);
 if ($158) {
  $159 = $1 & 1;
  $160 = $71 | $159;
  $161 = $160 | 2;
  HEAP32[$0>>2] = $161;
  $162 = (($p) + ($71)|0);
  $163 = ((($162)) + 4|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = $164 | 1;
  HEAP32[$163>>2] = $165;
  $newp$2 = $p;
  return ($newp$2|0);
 } else {
  $166 = (($p) + ($nb)|0);
  $167 = $1 & 1;
  $168 = $167 | $nb;
  $169 = $168 | 2;
  HEAP32[$0>>2] = $169;
  $170 = ((($166)) + 4|0);
  $171 = $73 | 3;
  HEAP32[$170>>2] = $171;
  $172 = (($166) + ($73)|0);
  $173 = ((($172)) + 4|0);
  $174 = HEAP32[$173>>2]|0;
  $175 = $174 | 1;
  HEAP32[$173>>2] = $175;
  _dispose_chunk($166,$73);
  $newp$2 = $p;
  return ($newp$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$1 = 0, $$14 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi22Z2D = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $$pre21 = 0, $$pre23 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F17$0 = 0, $I20$0 = 0, $K21$0 = 0, $R$1 = 0, $R$1$lcssa = 0;
 var $R$3 = 0, $R7$1 = 0, $R7$1$lcssa = 0, $R7$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $RP9$1 = 0, $RP9$1$lcssa = 0, $T$0 = 0, $T$0$lcssa = 0, $T$0$lcssa30 = 0, $cond = 0, $cond16 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(20884)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(20888)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $99 = ((($0)) + 4|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$1 = $9;$$14 = $10;
     break;
    }
    HEAP32[(20876)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $105 = ((($9)) + 4|0);
    HEAP32[$105>>2] = $104;
    $106 = (($9) + ($10)|0);
    HEAP32[$106>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $17 = ((($9)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($9)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (20908 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[5217]|0;
     $32 = $31 & $30;
     HEAP32[5217] = $32;
     $$1 = $9;$$14 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre23 = ((($20)) + 8|0);
     $$pre$phi24Z2D = $$pre23;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi24Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi24Z2D>>2] = $18;
    $$1 = $9;$$14 = $10;
    break;
   }
   $39 = ((($9)) + 24|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($9)) + 12|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $53 = ((($9)) + 16|0);
     $54 = ((($53)) + 4|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==(0|0);
     if ($56) {
      $57 = HEAP32[$53>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$3 = 0;
       break;
      } else {
       $R$1 = $57;$RP$1 = $53;
      }
     } else {
      $R$1 = $55;$RP$1 = $54;
     }
     while(1) {
      $59 = ((($R$1)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$1 = $60;$RP$1 = $59;
       continue;
      }
      $62 = ((($R$1)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$1$lcssa = $R$1;$RP$1$lcssa = $RP$1;
       break;
      } else {
       $R$1 = $63;$RP$1 = $62;
      }
     }
     $65 = ($RP$1$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$1$lcssa>>2] = 0;
      $R$3 = $R$1$lcssa;
      break;
     }
    } else {
     $44 = ((($9)) + 8|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$3 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$1 = $9;$$14 = $10;
   } else {
    $67 = ((($9)) + 28|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (21172 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$3;
     $cond = ($R$3|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(20872)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(20872)>>2] = $75;
      $$1 = $9;$$14 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(20884)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$3;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$3;
     }
     $82 = ($R$3|0)==(0|0);
     if ($82) {
      $$1 = $9;$$14 = $10;
      break;
     }
    }
    $83 = HEAP32[(20884)>>2]|0;
    $84 = ($R$3>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$3)) + 24|0);
    HEAP32[$85>>2] = $40;
    $86 = ((($9)) + 16|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$3)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$3;
       break;
      }
     }
    } while(0);
    $92 = ((($86)) + 4|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$1 = $9;$$14 = $10;
    } else {
     $95 = HEAP32[(20884)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$3)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$3;
      $$1 = $9;$$14 = $10;
      break;
     }
    }
   }
  } else {
   $$1 = $p;$$14 = $psize;
  }
 } while(0);
 $107 = HEAP32[(20884)>>2]|0;
 $108 = ($0>>>0)<($107>>>0);
 if ($108) {
  _abort();
  // unreachable;
 }
 $109 = ((($0)) + 4|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = $110 & 2;
 $112 = ($111|0)==(0);
 if ($112) {
  $113 = HEAP32[(20892)>>2]|0;
  $114 = ($0|0)==($113|0);
  if ($114) {
   $115 = HEAP32[(20880)>>2]|0;
   $116 = (($115) + ($$14))|0;
   HEAP32[(20880)>>2] = $116;
   HEAP32[(20892)>>2] = $$1;
   $117 = $116 | 1;
   $118 = ((($$1)) + 4|0);
   HEAP32[$118>>2] = $117;
   $119 = HEAP32[(20888)>>2]|0;
   $120 = ($$1|0)==($119|0);
   if (!($120)) {
    return;
   }
   HEAP32[(20888)>>2] = 0;
   HEAP32[(20876)>>2] = 0;
   return;
  }
  $121 = HEAP32[(20888)>>2]|0;
  $122 = ($0|0)==($121|0);
  if ($122) {
   $123 = HEAP32[(20876)>>2]|0;
   $124 = (($123) + ($$14))|0;
   HEAP32[(20876)>>2] = $124;
   HEAP32[(20888)>>2] = $$1;
   $125 = $124 | 1;
   $126 = ((($$1)) + 4|0);
   HEAP32[$126>>2] = $125;
   $127 = (($$1) + ($124)|0);
   HEAP32[$127>>2] = $124;
   return;
  }
  $128 = $110 & -8;
  $129 = (($128) + ($$14))|0;
  $130 = $110 >>> 3;
  $131 = ($110>>>0)<(256);
  do {
   if ($131) {
    $132 = ((($0)) + 8|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = ((($0)) + 12|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = $130 << 1;
    $137 = (20908 + ($136<<2)|0);
    $138 = ($133|0)==($137|0);
    if (!($138)) {
     $139 = ($133>>>0)<($107>>>0);
     if ($139) {
      _abort();
      // unreachable;
     }
     $140 = ((($133)) + 12|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($141|0)==($0|0);
     if (!($142)) {
      _abort();
      // unreachable;
     }
    }
    $143 = ($135|0)==($133|0);
    if ($143) {
     $144 = 1 << $130;
     $145 = $144 ^ -1;
     $146 = HEAP32[5217]|0;
     $147 = $146 & $145;
     HEAP32[5217] = $147;
     break;
    }
    $148 = ($135|0)==($137|0);
    if ($148) {
     $$pre21 = ((($135)) + 8|0);
     $$pre$phi22Z2D = $$pre21;
    } else {
     $149 = ($135>>>0)<($107>>>0);
     if ($149) {
      _abort();
      // unreachable;
     }
     $150 = ((($135)) + 8|0);
     $151 = HEAP32[$150>>2]|0;
     $152 = ($151|0)==($0|0);
     if ($152) {
      $$pre$phi22Z2D = $150;
     } else {
      _abort();
      // unreachable;
     }
    }
    $153 = ((($133)) + 12|0);
    HEAP32[$153>>2] = $135;
    HEAP32[$$pre$phi22Z2D>>2] = $133;
   } else {
    $154 = ((($0)) + 24|0);
    $155 = HEAP32[$154>>2]|0;
    $156 = ((($0)) + 12|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = ($157|0)==($0|0);
    do {
     if ($158) {
      $168 = ((($0)) + 16|0);
      $169 = ((($168)) + 4|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==(0|0);
      if ($171) {
       $172 = HEAP32[$168>>2]|0;
       $173 = ($172|0)==(0|0);
       if ($173) {
        $R7$3 = 0;
        break;
       } else {
        $R7$1 = $172;$RP9$1 = $168;
       }
      } else {
       $R7$1 = $170;$RP9$1 = $169;
      }
      while(1) {
       $174 = ((($R7$1)) + 20|0);
       $175 = HEAP32[$174>>2]|0;
       $176 = ($175|0)==(0|0);
       if (!($176)) {
        $R7$1 = $175;$RP9$1 = $174;
        continue;
       }
       $177 = ((($R7$1)) + 16|0);
       $178 = HEAP32[$177>>2]|0;
       $179 = ($178|0)==(0|0);
       if ($179) {
        $R7$1$lcssa = $R7$1;$RP9$1$lcssa = $RP9$1;
        break;
       } else {
        $R7$1 = $178;$RP9$1 = $177;
       }
      }
      $180 = ($RP9$1$lcssa>>>0)<($107>>>0);
      if ($180) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$1$lcssa>>2] = 0;
       $R7$3 = $R7$1$lcssa;
       break;
      }
     } else {
      $159 = ((($0)) + 8|0);
      $160 = HEAP32[$159>>2]|0;
      $161 = ($160>>>0)<($107>>>0);
      if ($161) {
       _abort();
       // unreachable;
      }
      $162 = ((($160)) + 12|0);
      $163 = HEAP32[$162>>2]|0;
      $164 = ($163|0)==($0|0);
      if (!($164)) {
       _abort();
       // unreachable;
      }
      $165 = ((($157)) + 8|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = ($166|0)==($0|0);
      if ($167) {
       HEAP32[$162>>2] = $157;
       HEAP32[$165>>2] = $160;
       $R7$3 = $157;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $181 = ($155|0)==(0|0);
    if (!($181)) {
     $182 = ((($0)) + 28|0);
     $183 = HEAP32[$182>>2]|0;
     $184 = (21172 + ($183<<2)|0);
     $185 = HEAP32[$184>>2]|0;
     $186 = ($0|0)==($185|0);
     if ($186) {
      HEAP32[$184>>2] = $R7$3;
      $cond16 = ($R7$3|0)==(0|0);
      if ($cond16) {
       $187 = 1 << $183;
       $188 = $187 ^ -1;
       $189 = HEAP32[(20872)>>2]|0;
       $190 = $189 & $188;
       HEAP32[(20872)>>2] = $190;
       break;
      }
     } else {
      $191 = HEAP32[(20884)>>2]|0;
      $192 = ($155>>>0)<($191>>>0);
      if ($192) {
       _abort();
       // unreachable;
      }
      $193 = ((($155)) + 16|0);
      $194 = HEAP32[$193>>2]|0;
      $195 = ($194|0)==($0|0);
      if ($195) {
       HEAP32[$193>>2] = $R7$3;
      } else {
       $196 = ((($155)) + 20|0);
       HEAP32[$196>>2] = $R7$3;
      }
      $197 = ($R7$3|0)==(0|0);
      if ($197) {
       break;
      }
     }
     $198 = HEAP32[(20884)>>2]|0;
     $199 = ($R7$3>>>0)<($198>>>0);
     if ($199) {
      _abort();
      // unreachable;
     }
     $200 = ((($R7$3)) + 24|0);
     HEAP32[$200>>2] = $155;
     $201 = ((($0)) + 16|0);
     $202 = HEAP32[$201>>2]|0;
     $203 = ($202|0)==(0|0);
     do {
      if (!($203)) {
       $204 = ($202>>>0)<($198>>>0);
       if ($204) {
        _abort();
        // unreachable;
       } else {
        $205 = ((($R7$3)) + 16|0);
        HEAP32[$205>>2] = $202;
        $206 = ((($202)) + 24|0);
        HEAP32[$206>>2] = $R7$3;
        break;
       }
      }
     } while(0);
     $207 = ((($201)) + 4|0);
     $208 = HEAP32[$207>>2]|0;
     $209 = ($208|0)==(0|0);
     if (!($209)) {
      $210 = HEAP32[(20884)>>2]|0;
      $211 = ($208>>>0)<($210>>>0);
      if ($211) {
       _abort();
       // unreachable;
      } else {
       $212 = ((($R7$3)) + 20|0);
       HEAP32[$212>>2] = $208;
       $213 = ((($208)) + 24|0);
       HEAP32[$213>>2] = $R7$3;
       break;
      }
     }
    }
   }
  } while(0);
  $214 = $129 | 1;
  $215 = ((($$1)) + 4|0);
  HEAP32[$215>>2] = $214;
  $216 = (($$1) + ($129)|0);
  HEAP32[$216>>2] = $129;
  $217 = HEAP32[(20888)>>2]|0;
  $218 = ($$1|0)==($217|0);
  if ($218) {
   HEAP32[(20876)>>2] = $129;
   return;
  } else {
   $$2 = $129;
  }
 } else {
  $219 = $110 & -2;
  HEAP32[$109>>2] = $219;
  $220 = $$14 | 1;
  $221 = ((($$1)) + 4|0);
  HEAP32[$221>>2] = $220;
  $222 = (($$1) + ($$14)|0);
  HEAP32[$222>>2] = $$14;
  $$2 = $$14;
 }
 $223 = $$2 >>> 3;
 $224 = ($$2>>>0)<(256);
 if ($224) {
  $225 = $223 << 1;
  $226 = (20908 + ($225<<2)|0);
  $227 = HEAP32[5217]|0;
  $228 = 1 << $223;
  $229 = $227 & $228;
  $230 = ($229|0)==(0);
  if ($230) {
   $231 = $227 | $228;
   HEAP32[5217] = $231;
   $$pre = ((($226)) + 8|0);
   $$pre$phiZ2D = $$pre;$F17$0 = $226;
  } else {
   $232 = ((($226)) + 8|0);
   $233 = HEAP32[$232>>2]|0;
   $234 = HEAP32[(20884)>>2]|0;
   $235 = ($233>>>0)<($234>>>0);
   if ($235) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $232;$F17$0 = $233;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $236 = ((($F17$0)) + 12|0);
  HEAP32[$236>>2] = $$1;
  $237 = ((($$1)) + 8|0);
  HEAP32[$237>>2] = $F17$0;
  $238 = ((($$1)) + 12|0);
  HEAP32[$238>>2] = $226;
  return;
 }
 $239 = $$2 >>> 8;
 $240 = ($239|0)==(0);
 if ($240) {
  $I20$0 = 0;
 } else {
  $241 = ($$2>>>0)>(16777215);
  if ($241) {
   $I20$0 = 31;
  } else {
   $242 = (($239) + 1048320)|0;
   $243 = $242 >>> 16;
   $244 = $243 & 8;
   $245 = $239 << $244;
   $246 = (($245) + 520192)|0;
   $247 = $246 >>> 16;
   $248 = $247 & 4;
   $249 = $248 | $244;
   $250 = $245 << $248;
   $251 = (($250) + 245760)|0;
   $252 = $251 >>> 16;
   $253 = $252 & 2;
   $254 = $249 | $253;
   $255 = (14 - ($254))|0;
   $256 = $250 << $253;
   $257 = $256 >>> 15;
   $258 = (($255) + ($257))|0;
   $259 = $258 << 1;
   $260 = (($258) + 7)|0;
   $261 = $$2 >>> $260;
   $262 = $261 & 1;
   $263 = $262 | $259;
   $I20$0 = $263;
  }
 }
 $264 = (21172 + ($I20$0<<2)|0);
 $265 = ((($$1)) + 28|0);
 HEAP32[$265>>2] = $I20$0;
 $266 = ((($$1)) + 16|0);
 $267 = ((($$1)) + 20|0);
 HEAP32[$267>>2] = 0;
 HEAP32[$266>>2] = 0;
 $268 = HEAP32[(20872)>>2]|0;
 $269 = 1 << $I20$0;
 $270 = $268 & $269;
 $271 = ($270|0)==(0);
 if ($271) {
  $272 = $268 | $269;
  HEAP32[(20872)>>2] = $272;
  HEAP32[$264>>2] = $$1;
  $273 = ((($$1)) + 24|0);
  HEAP32[$273>>2] = $264;
  $274 = ((($$1)) + 12|0);
  HEAP32[$274>>2] = $$1;
  $275 = ((($$1)) + 8|0);
  HEAP32[$275>>2] = $$1;
  return;
 }
 $276 = HEAP32[$264>>2]|0;
 $277 = ($I20$0|0)==(31);
 $278 = $I20$0 >>> 1;
 $279 = (25 - ($278))|0;
 $280 = $277 ? 0 : $279;
 $281 = $$2 << $280;
 $K21$0 = $281;$T$0 = $276;
 while(1) {
  $282 = ((($T$0)) + 4|0);
  $283 = HEAP32[$282>>2]|0;
  $284 = $283 & -8;
  $285 = ($284|0)==($$2|0);
  if ($285) {
   $T$0$lcssa = $T$0;
   label = 127;
   break;
  }
  $286 = $K21$0 >>> 31;
  $287 = (((($T$0)) + 16|0) + ($286<<2)|0);
  $288 = $K21$0 << 1;
  $289 = HEAP32[$287>>2]|0;
  $290 = ($289|0)==(0|0);
  if ($290) {
   $$lcssa = $287;$T$0$lcssa30 = $T$0;
   label = 124;
   break;
  } else {
   $K21$0 = $288;$T$0 = $289;
  }
 }
 if ((label|0) == 124) {
  $291 = HEAP32[(20884)>>2]|0;
  $292 = ($$lcssa>>>0)<($291>>>0);
  if ($292) {
   _abort();
   // unreachable;
  }
  HEAP32[$$lcssa>>2] = $$1;
  $293 = ((($$1)) + 24|0);
  HEAP32[$293>>2] = $T$0$lcssa30;
  $294 = ((($$1)) + 12|0);
  HEAP32[$294>>2] = $$1;
  $295 = ((($$1)) + 8|0);
  HEAP32[$295>>2] = $$1;
  return;
 }
 else if ((label|0) == 127) {
  $296 = ((($T$0$lcssa)) + 8|0);
  $297 = HEAP32[$296>>2]|0;
  $298 = HEAP32[(20884)>>2]|0;
  $299 = ($297>>>0)>=($298>>>0);
  $not$ = ($T$0$lcssa>>>0)>=($298>>>0);
  $300 = $299 & $not$;
  if (!($300)) {
   _abort();
   // unreachable;
  }
  $301 = ((($297)) + 12|0);
  HEAP32[$301>>2] = $$1;
  HEAP32[$296>>2] = $$1;
  $302 = ((($$1)) + 8|0);
  HEAP32[$302>>2] = $297;
  $303 = ((($$1)) + 12|0);
  HEAP32[$303>>2] = $T$0$lcssa;
  $304 = ((($$1)) + 24|0);
  HEAP32[$304>>2] = 0;
  return;
 }
}
function __GLOBAL__I_000101() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_base4InitC2Ev(0);
 (___cxa_atexit((679|0),(26416|0),(___dso_handle|0))|0);
 return;
}
function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[879]|0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(22044,$0,22100);
 HEAP32[5341] = (7592);
 HEAP32[(21372)>>2] = (7612);
 HEAP32[(21368)>>2] = 0;
 __THREW__ = 0;
 invoke_vii(680,((21372)|0),(22044|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((21372));
  ___resumeException($3|0);
  // unreachable;
 }
 HEAP32[(21444)>>2] = 0;
 HEAP32[(21448)>>2] = -1;
 $5 = HEAP32[849]|0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(22148,$5,(22108));
 HEAP32[5363] = (7672);
 HEAP32[(21456)>>2] = (7692);
 __THREW__ = 0;
 invoke_vii(680,((21456)|0),(22148|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_2()|0;
  $9 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((21456));
  ___resumeException($8|0);
  // unreachable;
 }
 HEAP32[(21528)>>2] = 0;
 HEAP32[(21532)>>2] = -1;
 $10 = HEAP32[908]|0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(22196,$10,(22116));
 HEAP32[5384] = (7672);
 HEAP32[(21540)>>2] = (7692);
 __THREW__ = 0;
 invoke_vii(680,((21540)|0),(22196|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((21540));
  ___resumeException($13|0);
  // unreachable;
 }
 HEAP32[(21612)>>2] = 0;
 HEAP32[(21616)>>2] = -1;
 $15 = HEAP32[5384]|0;
 $16 = ((($15)) + -12|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (21536 + ($17)|0);
 $19 = ((($18)) + 24|0);
 $20 = HEAP32[$19>>2]|0;
 HEAP32[5405] = (7672);
 HEAP32[(21624)>>2] = (7692);
 __THREW__ = 0;
 invoke_vii(680,((21624)|0),($20|0));
 $21 = __THREW__; __THREW__ = 0;
 $22 = $21&1;
 if ($22) {
  $23 = ___cxa_find_matching_catch_2()|0;
  $24 = tempRet0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev((21624));
  ___resumeException($23|0);
  // unreachable;
 }
 HEAP32[(21696)>>2] = 0;
 HEAP32[(21700)>>2] = -1;
 $25 = HEAP32[5341]|0;
 $26 = ((($25)) + -12|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (21364 + ($27)|0);
 $29 = ((($28)) + 72|0);
 HEAP32[$29>>2] = 21452;
 $30 = HEAP32[5384]|0;
 $31 = ((($30)) + -12|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (21536 + ($32)|0);
 $34 = ((($33)) + 4|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $35 | 8192;
 HEAP32[$34>>2] = $36;
 $37 = HEAP32[5384]|0;
 $38 = ((($37)) + -12|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (21536 + ($39)|0);
 $41 = ((($40)) + 72|0);
 HEAP32[$41>>2] = 21452;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(22244,$0,(22124));
 HEAP32[5426] = (7632);
 HEAP32[(21712)>>2] = (7652);
 HEAP32[(21708)>>2] = 0;
 __THREW__ = 0;
 invoke_vii(680,((21712)|0),(22244|0));
 $42 = __THREW__; __THREW__ = 0;
 $43 = $42&1;
 if ($43) {
  $44 = ___cxa_find_matching_catch_2()|0;
  $45 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((21712));
  ___resumeException($44|0);
  // unreachable;
 }
 HEAP32[(21784)>>2] = 0;
 HEAP32[(21788)>>2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(22300,$5,(22132));
 HEAP32[5448] = (7712);
 HEAP32[(21796)>>2] = (7732);
 __THREW__ = 0;
 invoke_vii(680,((21796)|0),(22300|0));
 $46 = __THREW__; __THREW__ = 0;
 $47 = $46&1;
 if ($47) {
  $48 = ___cxa_find_matching_catch_2()|0;
  $49 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((21796));
  ___resumeException($48|0);
  // unreachable;
 }
 HEAP32[(21868)>>2] = 0;
 HEAP32[(21872)>>2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(22348,$10,(22140));
 HEAP32[5469] = (7712);
 HEAP32[(21880)>>2] = (7732);
 __THREW__ = 0;
 invoke_vii(680,((21880)|0),(22348|0));
 $50 = __THREW__; __THREW__ = 0;
 $51 = $50&1;
 if ($51) {
  $52 = ___cxa_find_matching_catch_2()|0;
  $53 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((21880));
  ___resumeException($52|0);
  // unreachable;
 }
 HEAP32[(21952)>>2] = 0;
 HEAP32[(21956)>>2] = -1;
 $54 = HEAP32[5469]|0;
 $55 = ((($54)) + -12|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = (21876 + ($56)|0);
 $58 = ((($57)) + 24|0);
 $59 = HEAP32[$58>>2]|0;
 HEAP32[5490] = (7712);
 HEAP32[(21964)>>2] = (7732);
 __THREW__ = 0;
 invoke_vii(680,((21964)|0),($59|0));
 $60 = __THREW__; __THREW__ = 0;
 $61 = $60&1;
 if ($61) {
  $62 = ___cxa_find_matching_catch_2()|0;
  $63 = tempRet0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev((21964));
  ___resumeException($62|0);
  // unreachable;
 } else {
  HEAP32[(22036)>>2] = 0;
  HEAP32[(22040)>>2] = -1;
  $64 = HEAP32[5426]|0;
  $65 = ((($64)) + -12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (21704 + ($66)|0);
  $68 = ((($67)) + 72|0);
  HEAP32[$68>>2] = 21792;
  $69 = HEAP32[5469]|0;
  $70 = ((($69)) + -12|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = (21876 + ($71)|0);
  $73 = ((($72)) + 4|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = $74 | 8192;
  HEAP32[$73>>2] = $75;
  $76 = HEAP32[5469]|0;
  $77 = ((($76)) + -12|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (21876 + ($78)|0);
  $80 = ((($79)) + 72|0);
  HEAP32[$80>>2] = 21792;
  return;
 }
}
function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this>>2] = (7188);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 40|0);
 HEAP32[$3>>2] = $__st;
 $4 = ((($this)) + 48|0);
 HEAP32[$4>>2] = -1;
 $5 = ((($this)) + 52|0);
 HEAP8[$5>>0] = 0;
 $6 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$6);
 $7 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $7;
 __THREW__ = 0;
 invoke_vii(194,($this|0),($1|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch_2()|0;
  $11 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($10|0);
  // unreachable;
 } else {
  __ZNSt3__16localeD2Ev($1);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24208)|0);
 $1 = ((($this)) + 36|0);
 HEAP32[$1>>2] = $0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($0)|0);
 $6 = ((($this)) + 44|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = ((($this)) + 53|0);
 $13 = $11&1;
 HEAP8[$12>>0] = $13;
 $14 = HEAP32[$6>>2]|0;
 $15 = ($14|0)>(8);
 if ($15) {
  __ZNSt3__121__throw_runtime_errorEPKc(16372);
 }
 return;
}
function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIcE9__getcharEb($this,0)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIcE9__getcharEb($this,$__consume) {
 $this = $this|0;
 $__consume = $__consume|0;
 var $$10 = 0, $$11 = 0, $$9 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$0 = 0, $__i6$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa42 = 0, $__nread$044 = 0, $__nread$3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__enxt = sp + 4|0;
 $__inxt = sp;
 $0 = ((($this)) + 52|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = ((($this)) + 44|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)>(1);
  $8 = $7 ? $6 : 1;
  $9 = ((($this)) + 32|0);
  $__i$0 = 0;
  while(1) {
   $10 = ($__i$0|0)<($8|0);
   if (!($10)) {
    label = 8;
    break;
   }
   $11 = HEAP32[$9>>2]|0;
   $12 = (_getc($11)|0);
   $13 = ($12|0)==(-1);
   if ($13) {
    $$10 = -1;
    break;
   }
   $14 = $12&255;
   $15 = (($__extbuf) + ($__i$0)|0);
   HEAP8[$15>>0] = $14;
   $16 = (($__i$0) + 1)|0;
   $__i$0 = $16;
  }
  if ((label|0) == 8) {
   $17 = ((($this)) + 53|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18<<24>>24)==(0);
   do {
    if ($19) {
     $21 = ((($this)) + 40|0);
     $22 = ((($this)) + 36|0);
     $23 = ((($__1buf)) + 1|0);
     $__nread$0 = $8;
     L11: while(1) {
      $24 = HEAP32[$21>>2]|0;
      $25 = $24;
      $26 = $25;
      $27 = HEAP32[$26>>2]|0;
      $28 = (($25) + 4)|0;
      $29 = $28;
      $30 = HEAP32[$29>>2]|0;
      $31 = HEAP32[$22>>2]|0;
      $32 = (($__extbuf) + ($__nread$0)|0);
      $33 = HEAP32[$31>>2]|0;
      $34 = ((($33)) + 16|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (FUNCTION_TABLE_iiiiiiiii[$35 & 511]($31,$24,$__extbuf,$32,$__enxt,$__1buf,$23,$__inxt)|0);
      switch ($36|0) {
      case 3:  {
       $__nread$0$lcssa42 = $__nread$0;
       label = 15;
       break L11;
       break;
      }
      case 2:  {
       label = 17;
       break L11;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       $__nread$044 = $__nread$0;
       break L11;
      }
      }
      $37 = HEAP32[$21>>2]|0;
      $38 = $37;
      $39 = $38;
      HEAP32[$39>>2] = $27;
      $40 = (($38) + 4)|0;
      $41 = $40;
      HEAP32[$41>>2] = $30;
      $42 = ($__nread$0|0)==(8);
      if ($42) {
       label = 17;
       break;
      }
      $43 = HEAP32[$9>>2]|0;
      $44 = (_getc($43)|0);
      $45 = ($44|0)==(-1);
      if ($45) {
       label = 17;
       break;
      }
      $46 = $44&255;
      HEAP8[$32>>0] = $46;
      $47 = (($__nread$0) + 1)|0;
      $__nread$0 = $47;
     }
     if ((label|0) == 15) {
      $48 = HEAP8[$__extbuf>>0]|0;
      HEAP8[$__1buf>>0] = $48;
      $__nread$044 = $__nread$0$lcssa42;
     }
     else if ((label|0) == 17) {
      $$9 = -1;
      break;
     }
     $__nread$3 = $__nread$044;
     label = 18;
    } else {
     $20 = HEAP8[$__extbuf>>0]|0;
     HEAP8[$__1buf>>0] = $20;
     $__nread$3 = $8;
     label = 18;
    }
   } while(0);
   L21: do {
    if ((label|0) == 18) {
     if ($__consume) {
      $57 = HEAP8[$__1buf>>0]|0;
      $58 = $57&255;
      $59 = ((($this)) + 48|0);
      HEAP32[$59>>2] = $58;
      $61 = $57;
     } else {
      $__i6$0 = $__nread$3;
      while(1) {
       $49 = ($__i6$0|0)>(0);
       if (!($49)) {
        break;
       }
       $50 = (($__i6$0) + -1)|0;
       $51 = (($__extbuf) + ($50)|0);
       $52 = HEAP8[$51>>0]|0;
       $53 = $52&255;
       $54 = HEAP32[$9>>2]|0;
       $55 = (_ungetc($53,$54)|0);
       $56 = ($55|0)==(-1);
       if ($56) {
        $$9 = -1;
        break L21;
       } else {
        $__i6$0 = $50;
       }
      }
      $$pre = HEAP8[$__1buf>>0]|0;
      $61 = $$pre;
     }
     $60 = $61&255;
     $$9 = $60;
    }
   } while(0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $3 = ((($this)) + 48|0);
  $4 = HEAP32[$3>>2]|0;
  if ($__consume) {
   HEAP32[$3>>2] = -1;
   HEAP8[$0>>0] = 0;
   $$11 = $4;
  } else {
   $$11 = $4;
  }
 }
 STACKTOP = sp;return ($$11|0);
}
function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIcE9__getcharEb($this,1)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__enxt = sp + 4|0;
 $__ci = sp + 8|0;
 $__inxt = sp;
 $0 = ($__c|0)==(-1);
 $1 = ((($this)) + 52|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)!=(0);
 L1: do {
  if ($0) {
   if ($3) {
    $$1 = -1;
   } else {
    $4 = ((($this)) + 48|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($5|0)!=(-1);
    $7 = $6&1;
    HEAP8[$1>>0] = $7;
    $$1 = $5;
   }
  } else {
   do {
    if ($3) {
     $8 = ((($this)) + 48|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = $9&255;
     HEAP8[$__ci>>0] = $10;
     $11 = ((($this)) + 36|0);
     $12 = HEAP32[$11>>2]|0;
     $13 = ((($this)) + 40|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ((($__ci)) + 1|0);
     $16 = ((($__extbuf)) + 8|0);
     $17 = HEAP32[$12>>2]|0;
     $18 = ((($17)) + 12|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = (FUNCTION_TABLE_iiiiiiiii[$19 & 511]($12,$14,$__ci,$15,$__inxt,$__extbuf,$16,$__enxt)|0);
     switch ($20|0) {
     case 1: case 2:  {
      $$1 = -1;
      break L1;
      break;
     }
     case 3:  {
      $21 = HEAP32[$8>>2]|0;
      $22 = $21&255;
      HEAP8[$__extbuf>>0] = $22;
      $23 = ((($__extbuf)) + 1|0);
      HEAP32[$__enxt>>2] = $23;
      break;
     }
     default: {
     }
     }
     $24 = ((($this)) + 32|0);
     while(1) {
      $25 = HEAP32[$__enxt>>2]|0;
      $26 = ($25>>>0)>($__extbuf>>>0);
      if (!($26)) {
       label = 13;
       break;
      }
      $27 = ((($25)) + -1|0);
      HEAP32[$__enxt>>2] = $27;
      $28 = HEAP8[$27>>0]|0;
      $29 = $28 << 24 >> 24;
      $30 = HEAP32[$24>>2]|0;
      $31 = (_ungetc($29,$30)|0);
      $32 = ($31|0)==(-1);
      if ($32) {
       label = 12;
       break;
      }
     }
     if ((label|0) == 12) {
      $$1 = -1;
      break L1;
     }
     else if ((label|0) == 13) {
      $$pre$phiZ2D = $8;
      break;
     }
    } else {
     $$pre = ((($this)) + 48|0);
     $$pre$phiZ2D = $$pre;
    }
   } while(0);
   HEAP32[$$pre$phiZ2D>>2] = $__c;
   HEAP8[$1>>0] = 1;
   $$1 = $__c;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this>>2] = (7252);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$3);
 $4 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $4;
 __THREW__ = 0;
 $5 = (invoke_iii(608,($1|0),(24208|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($16|0);
  // unreachable;
 } else {
  $8 = ((($this)) + 36|0);
  __ZNSt3__16localeD2Ev($1);
  HEAP32[$8>>2] = $5;
  $9 = ((($this)) + 40|0);
  HEAP32[$9>>2] = $__st;
  $10 = ((($this)) + 44|0);
  $11 = HEAP32[$5>>2]|0;
  $12 = ((($11)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_ii[$13 & 1023]($5)|0);
  $15 = $14&1;
  HEAP8[$10>>0] = $15;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24208)|0);
 $4 = ((($this)) + 36|0);
 HEAP32[$4>>2] = $3;
 $5 = HEAP32[$3>>2]|0;
 $6 = ((($5)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 $9 = ((($this)) + 44|0);
 $10 = $8&1;
 HEAP8[$9>>0] = $10;
 return;
}
function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this|0;
 var $$2 = 0, $$3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__extbe = 0, $__extbuf = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 8|0;
 $__extbe = sp;
 $0 = ((($this)) + 36|0);
 $1 = ((($this)) + 40|0);
 $2 = ((($__extbuf)) + 8|0);
 $3 = $__extbuf;
 $4 = ((($this)) + 32|0);
 L1: while(1) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP32[$5>>2]|0;
  $8 = ((($7)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iiiiii[$9 & 1023]($5,$6,$__extbuf,$2,$__extbe)|0);
  $11 = HEAP32[$__extbe>>2]|0;
  $12 = (($11) - ($3))|0;
  $13 = HEAP32[$4>>2]|0;
  $14 = (_fwrite($__extbuf,1,$12,$13)|0);
  $15 = ($14|0)==($12|0);
  if (!($15)) {
   $$2 = -1;
   break;
  }
  switch ($10|0) {
  case 1:  {
   break;
  }
  case 2:  {
   $$2 = -1;
   break L1;
   break;
  }
  default: {
   label = 4;
   break L1;
  }
  }
 }
 if ((label|0) == 4) {
  $16 = HEAP32[$4>>2]|0;
  $17 = (_fflush($16)|0);
  $not$ = ($17|0)!=(0);
  $$3 = $not$ << 31 >> 31;
  $$2 = $$3;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$0 = 0;
   while(1) {
    $6 = ($__i$0|0)<($__n|0);
    if (!($6)) {
     $$0 = $__i$0;
     break L1;
    }
    $7 = HEAP32[$this>>2]|0;
    $8 = ((($7)) + 52|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP8[$$01>>0]|0;
    $11 = $10&255;
    $12 = (FUNCTION_TABLE_iii[$9 & 1023]($this,$11)|0);
    $13 = ($12|0)==(-1);
    if ($13) {
     $$0 = $__i$0;
     break L1;
    }
    $14 = (($__i$0) + 1)|0;
    $15 = ((($$01)) + 1|0);
    $$01 = $15;$__i$0 = $14;
   }
  } else {
   $3 = ((($this)) + 32|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = (_fwrite($__s,1,$__n,$4)|0);
   $$0 = $5;
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__111__stdoutbufIcE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$4 = 0, $$__c$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0;
 var $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__extbe = sp + 4|0;
 $__e = sp;
 $0 = ($__c|0)==(-1);
 do {
  if ($0) {
   label = 14;
  } else {
   $1 = $__c&255;
   HEAP8[$__1buf>>0] = $1;
   $2 = ((($this)) + 44|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==(0);
   if (!($4)) {
    $5 = ((($this)) + 32|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (_fwrite($__1buf,1,1,$6)|0);
    $8 = ($7|0)==(1);
    if ($8) {
     label = 14;
     break;
    } else {
     $$4 = -1;
     break;
    }
   }
   HEAP32[$__extbe>>2] = $__extbuf;
   $9 = ((($__1buf)) + 1|0);
   $10 = ((($this)) + 36|0);
   $11 = ((($this)) + 40|0);
   $12 = ((($__extbuf)) + 8|0);
   $13 = $__extbuf;
   $14 = ((($this)) + 32|0);
   $pbase$0 = $__1buf;
   while(1) {
    $15 = HEAP32[$10>>2]|0;
    $16 = HEAP32[$11>>2]|0;
    $17 = HEAP32[$15>>2]|0;
    $18 = ((($17)) + 12|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (FUNCTION_TABLE_iiiiiiiii[$19 & 511]($15,$16,$pbase$0,$9,$__e,$__extbuf,$12,$__extbe)|0);
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==($pbase$0|0);
    if ($22) {
     label = 13;
     break;
    }
    $23 = ($20|0)==(3);
    if ($23) {
     $pbase$0$lcssa25 = $pbase$0;
     label = 7;
     break;
    }
    $27 = ($20|0)==(1);
    $28 = $20 | 1;
    $29 = ($28|0)==(1);
    if (!($29)) {
     label = 13;
     break;
    }
    $30 = HEAP32[$__extbe>>2]|0;
    $31 = (($30) - ($13))|0;
    $32 = HEAP32[$14>>2]|0;
    $33 = (_fwrite($__extbuf,1,$31,$32)|0);
    $34 = ($33|0)==($31|0);
    if (!($34)) {
     label = 13;
     break;
    }
    $35 = HEAP32[$__e>>2]|0;
    if ($27) {
     $pbase$0 = $35;
    } else {
     label = 12;
     break;
    }
   }
   if ((label|0) == 7) {
    $24 = HEAP32[$14>>2]|0;
    $25 = (_fwrite($pbase$0$lcssa25,1,1,$24)|0);
    $26 = ($25|0)==(1);
    if ($26) {
     label = 12;
    } else {
     label = 13;
    }
   }
   if ((label|0) == 12) {
    label = 14;
    break;
   }
   else if ((label|0) == 13) {
    $$4 = -1;
    break;
   }
  }
 } while(0);
 if ((label|0) == 14) {
  $$__c$i = $0 ? 0 : $__c;
  $$4 = $$__c$i;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this>>2] = (7316);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 40|0);
 HEAP32[$3>>2] = $__st;
 $4 = ((($this)) + 48|0);
 HEAP32[$4>>2] = -1;
 $5 = ((($this)) + 52|0);
 HEAP8[$5>>0] = 0;
 $6 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$6);
 $7 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $7;
 __THREW__ = 0;
 invoke_vii(216,($this|0),($1|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch_2()|0;
  $11 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($10|0);
  // unreachable;
 } else {
  __ZNSt3__16localeD2Ev($1);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24216)|0);
 $1 = ((($this)) + 36|0);
 HEAP32[$1>>2] = $0;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($0)|0);
 $6 = ((($this)) + 44|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$1>>2]|0;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = ((($this)) + 53|0);
 $13 = $11&1;
 HEAP8[$12>>0] = $13;
 $14 = HEAP32[$6>>2]|0;
 $15 = ($14|0)>(8);
 if ($15) {
  __ZNSt3__121__throw_runtime_errorEPKc(16372);
 }
 return;
}
function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIwE9__getcharEb($this,0)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIwE9__getcharEb($this,$__consume) {
 $this = $this|0;
 $__consume = $__consume|0;
 var $$10 = 0, $$11 = 0, $$9 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$0 = 0, $__i6$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa42 = 0, $__nread$044 = 0, $__nread$3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__enxt = sp + 4|0;
 $__inxt = sp;
 $0 = ((($this)) + 52|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = ((($this)) + 44|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)>(1);
  $8 = $7 ? $6 : 1;
  $9 = ((($this)) + 32|0);
  $__i$0 = 0;
  while(1) {
   $10 = ($__i$0|0)<($8|0);
   if (!($10)) {
    label = 8;
    break;
   }
   $11 = HEAP32[$9>>2]|0;
   $12 = (_getc($11)|0);
   $13 = ($12|0)==(-1);
   if ($13) {
    $$10 = -1;
    break;
   }
   $14 = $12&255;
   $15 = (($__extbuf) + ($__i$0)|0);
   HEAP8[$15>>0] = $14;
   $16 = (($__i$0) + 1)|0;
   $__i$0 = $16;
  }
  if ((label|0) == 8) {
   $17 = ((($this)) + 53|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18<<24>>24)==(0);
   do {
    if ($19) {
     $22 = ((($this)) + 40|0);
     $23 = ((($this)) + 36|0);
     $24 = ((($__1buf)) + 4|0);
     $__nread$0 = $8;
     L11: while(1) {
      $25 = HEAP32[$22>>2]|0;
      $26 = $25;
      $27 = $26;
      $28 = HEAP32[$27>>2]|0;
      $29 = (($26) + 4)|0;
      $30 = $29;
      $31 = HEAP32[$30>>2]|0;
      $32 = HEAP32[$23>>2]|0;
      $33 = (($__extbuf) + ($__nread$0)|0);
      $34 = HEAP32[$32>>2]|0;
      $35 = ((($34)) + 16|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (FUNCTION_TABLE_iiiiiiiii[$36 & 511]($32,$25,$__extbuf,$33,$__enxt,$__1buf,$24,$__inxt)|0);
      switch ($37|0) {
      case 3:  {
       $__nread$0$lcssa42 = $__nread$0;
       label = 15;
       break L11;
       break;
      }
      case 2:  {
       label = 17;
       break L11;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       $__nread$044 = $__nread$0;
       break L11;
      }
      }
      $38 = HEAP32[$22>>2]|0;
      $39 = $38;
      $40 = $39;
      HEAP32[$40>>2] = $28;
      $41 = (($39) + 4)|0;
      $42 = $41;
      HEAP32[$42>>2] = $31;
      $43 = ($__nread$0|0)==(8);
      if ($43) {
       label = 17;
       break;
      }
      $44 = HEAP32[$9>>2]|0;
      $45 = (_getc($44)|0);
      $46 = ($45|0)==(-1);
      if ($46) {
       label = 17;
       break;
      }
      $47 = $45&255;
      HEAP8[$33>>0] = $47;
      $48 = (($__nread$0) + 1)|0;
      $__nread$0 = $48;
     }
     if ((label|0) == 15) {
      $49 = HEAP8[$__extbuf>>0]|0;
      $50 = $49 << 24 >> 24;
      HEAP32[$__1buf>>2] = $50;
      $__nread$044 = $__nread$0$lcssa42;
     }
     else if ((label|0) == 17) {
      $$9 = -1;
      break;
     }
     $__nread$3 = $__nread$044;
     label = 18;
    } else {
     $20 = HEAP8[$__extbuf>>0]|0;
     $21 = $20 << 24 >> 24;
     HEAP32[$__1buf>>2] = $21;
     $__nread$3 = $8;
     label = 18;
    }
   } while(0);
   L21: do {
    if ((label|0) == 18) {
     if ($__consume) {
      $59 = HEAP32[$__1buf>>2]|0;
      $60 = ((($this)) + 48|0);
      HEAP32[$60>>2] = $59;
      $$9 = $59;
      break;
     } else {
      $__i6$0 = $__nread$3;
     }
     while(1) {
      $51 = ($__i6$0|0)>(0);
      if (!($51)) {
       break;
      }
      $52 = (($__i6$0) + -1)|0;
      $53 = (($__extbuf) + ($52)|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54 << 24 >> 24;
      $56 = HEAP32[$9>>2]|0;
      $57 = (_ungetc($55,$56)|0);
      $58 = ($57|0)==(-1);
      if ($58) {
       $$9 = -1;
       break L21;
      } else {
       $__i6$0 = $52;
      }
     }
     $$pre = HEAP32[$__1buf>>2]|0;
     $$9 = $$pre;
    }
   } while(0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $3 = ((($this)) + 48|0);
  $4 = HEAP32[$3>>2]|0;
  if ($__consume) {
   HEAP32[$3>>2] = -1;
   HEAP8[$0>>0] = 0;
   $$11 = $4;
  } else {
   $$11 = $4;
  }
 }
 STACKTOP = sp;return ($$11|0);
}
function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIwE9__getcharEb($this,1)|0);
 return ($0|0);
}
function __ZNSt3__110__stdinbufIwE9pbackfailEj($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__enxt = sp + 8|0;
 $__ci = sp + 4|0;
 $__inxt = sp;
 $0 = ($__c|0)==(-1);
 $1 = ((($this)) + 52|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)!=(0);
 L1: do {
  if ($0) {
   if ($3) {
    $$1 = -1;
   } else {
    $4 = ((($this)) + 48|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($5|0)!=(-1);
    $7 = $6&1;
    HEAP8[$1>>0] = $7;
    $$1 = $5;
   }
  } else {
   do {
    if ($3) {
     $8 = ((($this)) + 48|0);
     $9 = HEAP32[$8>>2]|0;
     HEAP32[$__ci>>2] = $9;
     $10 = ((($this)) + 36|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($this)) + 40|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ((($__ci)) + 4|0);
     $15 = ((($__extbuf)) + 8|0);
     $16 = HEAP32[$11>>2]|0;
     $17 = ((($16)) + 12|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = (FUNCTION_TABLE_iiiiiiiii[$18 & 511]($11,$13,$__ci,$14,$__inxt,$__extbuf,$15,$__enxt)|0);
     switch ($19|0) {
     case 1: case 2:  {
      $$1 = -1;
      break L1;
      break;
     }
     case 3:  {
      $20 = HEAP32[$8>>2]|0;
      $21 = $20&255;
      HEAP8[$__extbuf>>0] = $21;
      $22 = ((($__extbuf)) + 1|0);
      HEAP32[$__enxt>>2] = $22;
      break;
     }
     default: {
     }
     }
     $23 = ((($this)) + 32|0);
     while(1) {
      $24 = HEAP32[$__enxt>>2]|0;
      $25 = ($24>>>0)>($__extbuf>>>0);
      if (!($25)) {
       label = 13;
       break;
      }
      $26 = ((($24)) + -1|0);
      HEAP32[$__enxt>>2] = $26;
      $27 = HEAP8[$26>>0]|0;
      $28 = $27 << 24 >> 24;
      $29 = HEAP32[$23>>2]|0;
      $30 = (_ungetc($28,$29)|0);
      $31 = ($30|0)==(-1);
      if ($31) {
       label = 12;
       break;
      }
     }
     if ((label|0) == 12) {
      $$1 = -1;
      break L1;
     }
     else if ((label|0) == 13) {
      $$pre$phiZ2D = $8;
      break;
     }
    } else {
     $$pre = ((($this)) + 48|0);
     $$pre$phiZ2D = $$pre;
    }
   } while(0);
   HEAP32[$$pre$phiZ2D>>2] = $__c;
   HEAP8[$1>>0] = 1;
   $$1 = $__c;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 4|0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this>>2] = (7380);
 $2 = ((($this)) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = ((($this)) + 4|0);
 __ZNSt3__16localeC2ERKS0_($0,$3);
 $4 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $4;
 __THREW__ = 0;
 $5 = (invoke_iii(608,($1|0),(24216|0))|0);
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($16|0);
  // unreachable;
 } else {
  $8 = ((($this)) + 36|0);
  __ZNSt3__16localeD2Ev($1);
  HEAP32[$8>>2] = $5;
  $9 = ((($this)) + 40|0);
  HEAP32[$9>>2] = $__st;
  $10 = ((($this)) + 44|0);
  $11 = HEAP32[$5>>2]|0;
  $12 = ((($11)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_ii[$13 & 1023]($5)|0);
  $15 = $14&1;
  HEAP8[$10>>0] = $15;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $3 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24216)|0);
 $4 = ((($this)) + 36|0);
 HEAP32[$4>>2] = $3;
 $5 = HEAP32[$3>>2]|0;
 $6 = ((($5)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($3)|0);
 $9 = ((($this)) + 44|0);
 $10 = $8&1;
 HEAP8[$9>>0] = $10;
 return;
}
function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this|0;
 var $$2 = 0, $$3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__extbe = 0, $__extbuf = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 8|0;
 $__extbe = sp;
 $0 = ((($this)) + 36|0);
 $1 = ((($this)) + 40|0);
 $2 = ((($__extbuf)) + 8|0);
 $3 = $__extbuf;
 $4 = ((($this)) + 32|0);
 L1: while(1) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP32[$5>>2]|0;
  $8 = ((($7)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iiiiii[$9 & 1023]($5,$6,$__extbuf,$2,$__extbe)|0);
  $11 = HEAP32[$__extbe>>2]|0;
  $12 = (($11) - ($3))|0;
  $13 = HEAP32[$4>>2]|0;
  $14 = (_fwrite($__extbuf,1,$12,$13)|0);
  $15 = ($14|0)==($12|0);
  if (!($15)) {
   $$2 = -1;
   break;
  }
  switch ($10|0) {
  case 1:  {
   break;
  }
  case 2:  {
   $$2 = -1;
   break L1;
   break;
  }
  default: {
   label = 4;
   break L1;
  }
  }
 }
 if ((label|0) == 4) {
  $16 = HEAP32[$4>>2]|0;
  $17 = (_fflush($16)|0);
  $not$ = ($17|0)!=(0);
  $$3 = $not$ << 31 >> 31;
  $$2 = $$3;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 44|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 L1: do {
  if ($2) {
   $$01 = $__s;$__i$0 = 0;
   while(1) {
    $6 = ($__i$0|0)<($__n|0);
    if (!($6)) {
     $$0 = $__i$0;
     break L1;
    }
    $7 = HEAP32[$this>>2]|0;
    $8 = ((($7)) + 52|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$$01>>2]|0;
    $11 = (FUNCTION_TABLE_iii[$9 & 1023]($this,$10)|0);
    $12 = ($11|0)==(-1);
    if ($12) {
     $$0 = $__i$0;
     break L1;
    }
    $13 = (($__i$0) + 1)|0;
    $14 = ((($$01)) + 4|0);
    $$01 = $14;$__i$0 = $13;
   }
  } else {
   $3 = ((($this)) + 32|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = (_fwrite($__s,4,$__n,$4)|0);
   $$0 = $5;
  }
 } while(0);
 return ($$0|0);
}
function __ZNSt3__111__stdoutbufIwE8overflowEj($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$4 = 0, $$__c$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0;
 var $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa25 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__extbe = sp + 4|0;
 $__e = sp;
 $0 = ($__c|0)==(-1);
 do {
  if ($0) {
   label = 14;
  } else {
   HEAP32[$__1buf>>2] = $__c;
   $1 = ((($this)) + 44|0);
   $2 = HEAP8[$1>>0]|0;
   $3 = ($2<<24>>24)==(0);
   if (!($3)) {
    $4 = ((($this)) + 32|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = (_fwrite($__1buf,4,1,$5)|0);
    $7 = ($6|0)==(1);
    if ($7) {
     label = 14;
     break;
    } else {
     $$4 = -1;
     break;
    }
   }
   HEAP32[$__extbe>>2] = $__extbuf;
   $8 = ((($__1buf)) + 4|0);
   $9 = ((($this)) + 36|0);
   $10 = ((($this)) + 40|0);
   $11 = ((($__extbuf)) + 8|0);
   $12 = $__extbuf;
   $13 = ((($this)) + 32|0);
   $pbase$0 = $__1buf;
   while(1) {
    $14 = HEAP32[$9>>2]|0;
    $15 = HEAP32[$10>>2]|0;
    $16 = HEAP32[$14>>2]|0;
    $17 = ((($16)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (FUNCTION_TABLE_iiiiiiiii[$18 & 511]($14,$15,$pbase$0,$8,$__e,$__extbuf,$11,$__extbe)|0);
    $20 = HEAP32[$__e>>2]|0;
    $21 = ($20|0)==($pbase$0|0);
    if ($21) {
     label = 13;
     break;
    }
    $22 = ($19|0)==(3);
    if ($22) {
     $pbase$0$lcssa25 = $pbase$0;
     label = 7;
     break;
    }
    $26 = ($19|0)==(1);
    $27 = $19 | 1;
    $28 = ($27|0)==(1);
    if (!($28)) {
     label = 13;
     break;
    }
    $29 = HEAP32[$__extbe>>2]|0;
    $30 = (($29) - ($12))|0;
    $31 = HEAP32[$13>>2]|0;
    $32 = (_fwrite($__extbuf,1,$30,$31)|0);
    $33 = ($32|0)==($30|0);
    if (!($33)) {
     label = 13;
     break;
    }
    $34 = HEAP32[$__e>>2]|0;
    if ($26) {
     $pbase$0 = $34;
    } else {
     label = 12;
     break;
    }
   }
   if ((label|0) == 7) {
    $23 = HEAP32[$13>>2]|0;
    $24 = (_fwrite($pbase$0$lcssa25,1,1,$23)|0);
    $25 = ($24|0)==(1);
    if ($25) {
     label = 12;
    } else {
     label = 13;
    }
   }
   if ((label|0) == 12) {
    label = 14;
    break;
   }
   else if ((label|0) == 13) {
    $$4 = -1;
    break;
   }
  }
 } while(0);
 if ((label|0) == 14) {
  $$__c$i = $0 ? 0 : $__c;
  $$4 = $$__c$i;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 (invoke_ii(681,(21452|0))|0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if (!($1)) {
  __THREW__ = 0;
  (invoke_ii(681,(21620|0))|0);
  $2 = __THREW__; __THREW__ = 0;
  $3 = $2&1;
  if (!($3)) {
   __THREW__ = 0;
   (invoke_ii(682,(21792|0))|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if (!($5)) {
    __THREW__ = 0;
    (invoke_ii(682,(21960|0))|0);
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if (!($7)) {
     return;
    }
   }
  }
 }
 $8 = ___cxa_find_matching_catch_3(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __GLOBAL__sub_I_iostream_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(683,($0|0),(16484|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = (10736);
  ___cxa_throw(($0|0),(2208|0),(527|0));
  // unreachable;
 }
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(683,($0|0),(16484|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = (10756);
  ___cxa_throw(($0|0),(2224|0),(527|0));
  // unreachable;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this>>2]=HEAP32[$__str>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
 } else {
  $3 = ((($__str)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ((($__str)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(11);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__n;
  $__p$0 = $7;
 }
 _memset(($__p$0|0),($__c|0),($__n|0))|0;
 $11 = (($__p$0) + ($__n)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = ((($this)) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = ((($this)) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = ((($this)) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = $__last;
 $15 = (($14) - ($0))|0;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $16 = ($$0|0)==($__last|0);
  if ($16) {
   break;
  }
  $17 = HEAP8[$$0>>0]|0;
  HEAP8[$__p$0>>0] = $17;
  $18 = ((($$0)) + 1|0);
  $19 = ((($__p$0)) + 1|0);
  $$0 = $18;$__p$0 = $19;
 }
 $scevgep2 = (($__p$0$ph) + ($15)|0);
 HEAP8[$scevgep2>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if (!($0)) {
  $1 = HEAP8[$__str>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  $4 = ((($__str)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($__str)) + 1|0);
  $7 = $3 ? $6 : $5;
  $8 = ((($__str)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $1&255;
  $11 = $10 >>> 1;
  $12 = $3 ? $11 : $9;
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$7,$12)|0);
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 1|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   _memmove(($14|0),($__s|0),($__n|0))|0;
   $15 = (($14) + ($__n)|0);
   HEAP8[$15>>0] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = ($__n_add|0)==(0);
 if (!($21)) {
  $22 = (($18) + ($__n_copy)|0);
  _memcpy(($22|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $23 = (($__old_sz) - ($__n_del))|0;
 $24 = ($23|0)==($__n_copy|0);
 if (!($24)) {
  $25 = (($23) - ($__n_copy))|0;
  $26 = (($18) + ($__n_copy)|0);
  $27 = (($26) + ($__n_add)|0);
  $28 = (($20) + ($__n_copy)|0);
  $29 = (($28) + ($__n_del)|0);
  _memcpy(($27|0),($29|0),($25|0))|0;
 }
 $30 = ($__old_cap|0)==(10);
 if (!($30)) {
  __ZdlPv($20);
 }
 $31 = ((($this)) + 8|0);
 HEAP32[$31>>2] = $18;
 $32 = $17 | 1;
 HEAP32[$this>>2] = $32;
 $33 = (($23) + ($__n_add))|0;
 $34 = ((($this)) + 4|0);
 HEAP32[$34>>2] = $33;
 $35 = (($18) + ($33)|0);
 HEAP8[$35>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0;
 var $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 10;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(11);
 if ($17) {
  $20 = 10;
 } else {
  $18 = (($16) + 16)|0;
  $19 = $18 & -16;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(10);
   do {
    if ($23) {
     $24 = ((($this)) + 1|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = (($20) + 1)|0;
     if ($27) {
      $29 = (__Znwj($28)|0);
      $__new_data$0 = $29;
     } else {
      __THREW__ = 0;
      $30 = (invoke_ii(548,($28|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if ($32) {
       $33 = ___cxa_find_matching_catch_3(0|0)|0;
       $34 = tempRet0;
       (___cxa_begin_catch(($33|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $__new_data$0 = $30;
      }
     }
     $35 = $8 & 1;
     $36 = ($35<<24>>24)==(0);
     if ($36) {
      $39 = ((($this)) + 1|0);
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 0;
      break;
     } else {
      $37 = ((($this)) + 8|0);
      $38 = HEAP32[$37>>2]|0;
      $__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $38;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $40 = $8 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $44 = $8&255;
    $45 = $44 >>> 1;
    $47 = $45;
   } else {
    $42 = ((($this)) + 4|0);
    $43 = HEAP32[$42>>2]|0;
    $47 = $43;
   }
   $46 = (($47) + 1)|0;
   _memcpy(($__new_data$1|0),($__p$0|0),($46|0))|0;
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $48 = (($20) + 1)|0;
    $49 = $48 | 1;
    HEAP32[$this>>2] = $49;
    $50 = ((($this)) + 4|0);
    HEAP32[$50>>2] = $14;
    $51 = ((($this)) + 8|0);
    HEAP32[$51>>2] = $__new_data$1;
    break;
   } else {
    $52 = $14 << 1;
    $53 = $52&255;
    HEAP8[$this>>0] = $53;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__n>>>0);
 do {
  if ($8) {
   $9 = (($__n) - ($7))|0;
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$9,$__c)|0);
  } else {
   if ($2) {
    $14 = (((($this)) + 1|0) + ($__n)|0);
    HEAP8[$14>>0] = 0;
    $15 = $__n << 1;
    $16 = $15&255;
    HEAP8[$this>>0] = $16;
    break;
   } else {
    $10 = ((($this)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($11) + ($__n)|0);
    HEAP8[$12>>0] = 0;
    $13 = ((($this)) + 4|0);
    HEAP32[$13>>2] = $__n;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)==(0);
 if (!($0)) {
  $1 = HEAP8[$this>>0]|0;
  $2 = $1 & 1;
  $3 = ($2<<24>>24)==(0);
  if ($3) {
   $16 = 10;$8 = $1;
  } else {
   $4 = HEAP32[$this>>2]|0;
   $5 = $4 & -2;
   $phitmp$i = (($5) + -1)|0;
   $6 = $4&255;
   $16 = $phitmp$i;$8 = $6;
  }
  $7 = $8 & 1;
  $9 = ($7<<24>>24)==(0);
  if ($9) {
   $12 = $8&255;
   $13 = $12 >>> 1;
   $15 = $13;
  } else {
   $10 = ((($this)) + 4|0);
   $11 = HEAP32[$10>>2]|0;
   $15 = $11;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($__n>>>0);
  if ($17) {
   $18 = (($__n) - ($16))|0;
   $19 = (($18) + ($15))|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$this>>0]|0;
   $21 = $$pre;
  } else {
   $21 = $8;
  }
  $20 = $21 & 1;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   $25 = ((($this)) + 1|0);
   $27 = $25;
  } else {
   $23 = ((($this)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $27 = $24;
  }
  $26 = (($27) + ($15)|0);
  _memset(($26|0),($__c|0),($__n|0))|0;
  $28 = (($15) + ($__n))|0;
  $29 = HEAP8[$this>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $33 = $28 << 1;
   $34 = $33&255;
   HEAP8[$this>>0] = $34;
  } else {
   $32 = ((($this)) + 4|0);
   HEAP32[$32>>2] = $28;
  }
  $35 = (($27) + ($28)|0);
  HEAP8[$35>>0] = 0;
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 1|0);
  $20 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $20 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  $14 = (($12) + 16)|0;
  $15 = $14 & -16;
  $16 = $13 ? 11 : $15;
  $17 = $16;
 } else {
  $17 = -17;
 }
 $18 = (__Znwj($17)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  _memcpy(($18|0),($20|0),($__n_copy|0))|0;
 }
 $21 = (($__old_sz) - ($__n_del))|0;
 $22 = ($21|0)==($__n_copy|0);
 if (!($22)) {
  $23 = (($21) - ($__n_copy))|0;
  $24 = (($18) + ($__n_copy)|0);
  $25 = (($24) + ($__n_add)|0);
  $26 = (($20) + ($__n_copy)|0);
  $27 = (($26) + ($__n_del)|0);
  _memcpy(($25|0),($27|0),($23|0))|0;
 }
 $28 = ($__old_cap|0)==(10);
 if (!($28)) {
  __ZdlPv($20);
 }
 $29 = ((($this)) + 8|0);
 HEAP32[$29>>2] = $18;
 $30 = $17 | 1;
 HEAP32[$this>>2] = $30;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $15 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $15 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = ((($this)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $33 = (($__n) - ($15))|0;
  $34 = (($33) + ($14))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$15,$34,$14,$14,0,$__n,$__s);
 } else {
  $17 = ($__n|0)==(0);
  if (!($17)) {
   $18 = $7 & 1;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    $22 = ((($this)) + 1|0);
    $24 = $22;
   } else {
    $20 = ((($this)) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $21;
   }
   $23 = (($24) + ($14)|0);
   _memcpy(($23|0),($__s|0),($__n|0))|0;
   $25 = (($14) + ($__n))|0;
   $26 = HEAP8[$this>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)==(0);
   if ($28) {
    $30 = $25 << 1;
    $31 = $30&255;
    HEAP8[$this>>0] = $31;
   } else {
    $29 = ((($this)) + 4|0);
    HEAP32[$29>>2] = $25;
   }
   $32 = (($24) + ($25)|0);
   HEAP8[$32>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pn = $14;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;
 }
 $__p$0 = (($$pn) + ($__sz$0)|0);
 HEAP8[$__p$0>>0] = $__c;
 $22 = ((($__p$0)) + 1|0);
 HEAP8[$22>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this,$__pos,$__s,$__n) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__pos>>>0);
 if ($8) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 if ($2) {
  $13 = 10;$17 = $0;
 } else {
  $9 = HEAP32[$this>>2]|0;
  $10 = $9 & -2;
  $phitmp$i = (($10) + -1)|0;
  $11 = $9&255;
  $13 = $phitmp$i;$17 = $11;
 }
 $12 = (($13) - ($7))|0;
 $14 = ($12>>>0)<($__n>>>0);
 if ($14) {
  $39 = (($7) + ($__n))|0;
  $40 = (($39) - ($13))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$13,$40,$7,$__pos,0,$__n,$__s);
 } else {
  $15 = ($__n|0)==(0);
  if (!($15)) {
   $16 = $17 & 1;
   $18 = ($16<<24>>24)==(0);
   if ($18) {
    $21 = ((($this)) + 1|0);
    $23 = $21;
   } else {
    $19 = ((($this)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $20;
   }
   $22 = ($7|0)==($__pos|0);
   if ($22) {
    $$pre = (($23) + ($__pos)|0);
    $$1 = $__s;$$pre$phiZ2D = $$pre;
   } else {
    $24 = (($7) - ($__pos))|0;
    $25 = (($23) + ($__pos)|0);
    $26 = ($25>>>0)<=($__s>>>0);
    $27 = (($23) + ($7)|0);
    $28 = ($27>>>0)>($__s>>>0);
    $or$cond = $26 & $28;
    $29 = (($__s) + ($__n)|0);
    $$0 = $or$cond ? $29 : $__s;
    $30 = (($25) + ($__n)|0);
    _memmove(($30|0),($25|0),($24|0))|0;
    $$1 = $$0;$$pre$phiZ2D = $25;
   }
   _memmove(($$pre$phiZ2D|0),($$1|0),($__n|0))|0;
   $31 = (($7) + ($__n))|0;
   $32 = HEAP8[$this>>0]|0;
   $33 = $32 & 1;
   $34 = ($33<<24>>24)==(0);
   if ($34) {
    $36 = $31 << 1;
    $37 = $36&255;
    HEAP8[$this>>0] = $37;
   } else {
    $35 = ((($this)) + 4|0);
    HEAP32[$35>>2] = $31;
   }
   $38 = (($23) + ($31)|0);
   HEAP8[$38>>0] = 0;
  }
 }
 return ($this|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($this,$__pos,$__s) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this,$__pos,$__s,$0)|0);
 return ($1|0);
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this,$__pos1,$__n1,$__s,$__n2) {
 $this = $this|0;
 $__pos1 = $__pos1|0;
 $__n1 = $__n1|0;
 $__s = $__s|0;
 $__n2 = $__n2|0;
 var $$ = 0, $$$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $7 = $6;
 } else {
  $3 = ((($this)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $7 = $4;
 }
 $8 = ($7>>>0)<($__pos1>>>0);
 $9 = ($__n2|0)==(-1);
 $or$cond = $9 | $8;
 if ($or$cond) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
  // unreachable;
 }
 $10 = (($7) - ($__pos1))|0;
 $11 = ($10>>>0)<($__n1>>>0);
 $12 = $11 ? $10 : $__n1;
 if ($2) {
  $15 = ((($this)) + 1|0);
  $17 = $15;
 } else {
  $13 = ((($this)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $17 = $14;
 }
 $16 = (($17) + ($__pos1)|0);
 $18 = ($12>>>0)>($__n2>>>0);
 $19 = $18 ? $__n2 : $12;
 $20 = (_memcmp($16,$__s,$19)|0);
 $21 = ($20|0)==(0);
 if ($21) {
  $22 = ($12>>>0)<($__n2>>>0);
  $$ = $18&1;
  $$$ = $22 ? -1 : $$;
  return ($$$|0);
 } else {
  return ($20|0);
 }
 return (0)|0;
}
function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($__s)|0);
 __THREW__ = 0;
 $1 = (invoke_iiiiii(684,($this|0),0,-1,($__s|0),($0|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $4 = ___cxa_find_matching_catch_3(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($this,$__s,$__sz,$__reserve) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 $__reserve = $__reserve|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__reserve>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__reserve>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__reserve) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = ((($this)) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = ((($this)) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 (_wmemcpy($__p$0,$__s,$__sz)|0);
 $12 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = ((($this)) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = ((($this)) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = ((($this)) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 (_wmemset($__p$0,$__c,$__n)|0);
 $12 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$12>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $__p$0$ph = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = ((($this)) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = ((($this)) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = ((($this)) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = $__last;
 $17 = (($16) - ($0))|0;
 $18 = $17 >>> 2;
 $$0 = $__first;$__p$0 = $__p$0$ph;
 while(1) {
  $19 = ($$0|0)==($__last|0);
  if ($19) {
   break;
  }
  $20 = HEAP32[$$0>>2]|0;
  HEAP32[$__p$0>>2] = $20;
  $21 = ((($$0)) + 4|0);
  $22 = ((($__p$0)) + 4|0);
  $$0 = $21;$__p$0 = $22;
 }
 $scevgep = (($__p$0$ph) + ($18<<2)|0);
 HEAP32[$scevgep>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $6 = 1;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $6 = $phitmp$i;$9 = $5;
 }
 $7 = ($6>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 do {
  if ($7) {
   if ($10) {
    $24 = $9&255;
    $25 = $24 >>> 1;
    $27 = $25;
   } else {
    $22 = ((($this)) + 4|0);
    $23 = HEAP32[$22>>2]|0;
    $27 = $23;
   }
   $26 = (($__n) - ($6))|0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$6,$26,$27,0,$27,$__n,$__s);
  } else {
   if ($10) {
    $13 = ((($this)) + 4|0);
    $14 = $13;
   } else {
    $11 = ((($this)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $14 = $12;
   }
   (_wmemmove($14,$__s,$__n)|0);
   $15 = (($14) + ($__n<<2)|0);
   HEAP32[$15>>2] = 0;
   $16 = HEAP8[$this>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)==(0);
   if ($18) {
    $20 = $__n << 1;
    $21 = $20&255;
    HEAP8[$this>>0] = $21;
    break;
   } else {
    $19 = ((($this)) + 4|0);
    HEAP32[$19>>2] = $__n;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741806 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = ($__n_add|0)==(0);
 if (!($22)) {
  $23 = (($19) + ($__n_copy<<2)|0);
  (_wmemcpy($23,$__p_new_stuff,$__n_add)|0);
 }
 $24 = (($__old_sz) - ($__n_del))|0;
 $25 = ($24|0)==($__n_copy|0);
 if (!($25)) {
  $26 = (($24) - ($__n_copy))|0;
  $27 = (($19) + ($__n_copy<<2)|0);
  $28 = (($27) + ($__n_add<<2)|0);
  $29 = (($21) + ($__n_copy<<2)|0);
  $30 = (($29) + ($__n_del<<2)|0);
  (_wmemcpy($28,$30,$26)|0);
 }
 $31 = ($__old_cap|0)==(1);
 if (!($31)) {
  __ZdlPv($21);
 }
 $32 = ((($this)) + 8|0);
 HEAP32[$32>>2] = $19;
 $33 = $18 | 1;
 HEAP32[$this>>2] = $33;
 $34 = (($24) + ($__n_add))|0;
 $35 = ((($this)) + 4|0);
 HEAP32[$35>>2] = $34;
 $36 = (($19) + ($34<<2)|0);
 HEAP32[$36>>2] = 0;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this,$__res_arg) {
 $this = $this|0;
 $__res_arg = $__res_arg|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 var $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__res_arg>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $22 = 1;$8 = $1;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i = (($5) + -1)|0;
  $6 = $4&255;
  $22 = $phitmp$i;$8 = $6;
 }
 $7 = $8 & 1;
 $9 = ($7<<24>>24)==(0);
 if ($9) {
  $12 = $8&255;
  $13 = $12 >>> 1;
  $14 = $13;
 } else {
  $10 = ((($this)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;
 }
 $15 = ($14>>>0)>($__res_arg>>>0);
 $16 = $15 ? $14 : $__res_arg;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $20 = 1;
 } else {
  $18 = (($16) + 4)|0;
  $19 = $18 & -4;
  $phitmp$i2 = (($19) + -1)|0;
  $20 = $phitmp$i2;
 }
 $21 = ($20|0)==($22|0);
 L14: do {
  if (!($21)) {
   $23 = ($20|0)==(1);
   do {
    if ($23) {
     $24 = ((($this)) + 4|0);
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__new_data$1 = $24;$__now_long$0$off0 = 0;$__p$0 = $26;$__was_long$0$off0 = 1;
    } else {
     $27 = ($20>>>0)>($22>>>0);
     $28 = $20 << 2;
     $29 = (($28) + 4)|0;
     if ($27) {
      $30 = (__Znwj($29)|0);
      $$sink = $30;
     } else {
      __THREW__ = 0;
      $31 = (invoke_ii(548,($29|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       $34 = ___cxa_find_matching_catch_3(0|0)|0;
       $35 = tempRet0;
       (___cxa_begin_catch(($34|0))|0);
       ___cxa_end_catch();
       break L14;
      } else {
       $$sink = $31;
      }
     }
     $36 = $8 & 1;
     $37 = ($36<<24>>24)==(0);
     if ($37) {
      $40 = ((($this)) + 4|0);
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $40;$__was_long$0$off0 = 0;
      break;
     } else {
      $38 = ((($this)) + 8|0);
      $39 = HEAP32[$38>>2]|0;
      $__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $39;$__was_long$0$off0 = 1;
      break;
     }
    }
   } while(0);
   $41 = $8 & 1;
   $42 = ($41<<24>>24)==(0);
   if ($42) {
    $45 = $8&255;
    $46 = $45 >>> 1;
    $48 = $46;
   } else {
    $43 = ((($this)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $48 = $44;
   }
   $47 = (($48) + 1)|0;
   (_wmemcpy($__new_data$1,$__p$0,$47)|0);
   if ($__was_long$0$off0) {
    __ZdlPv($__p$0);
   }
   if ($__now_long$0$off0) {
    $49 = (($20) + 1)|0;
    $50 = $49 | 1;
    HEAP32[$this>>2] = $50;
    $51 = ((($this)) + 4|0);
    HEAP32[$51>>2] = $14;
    $52 = ((($this)) + 8|0);
    HEAP32[$52>>2] = $__new_data$1;
    break;
   } else {
    $53 = $14 << 1;
    $54 = $53&255;
    HEAP8[$this>>0] = $54;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen($__s)|0);
 $1 = (__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this,$__s,$0)|0);
 return ($1|0);
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = ((($this)) + 4|0);
  $21 = $7;
 } else {
  $5 = ((($this)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $21 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  $14 = (($12) + 4)|0;
  $15 = $14 & -4;
  $16 = $13 ? 2 : $15;
  $18 = $16;
 } else {
  $18 = 1073741807;
 }
 $17 = $18 << 2;
 $19 = (__Znwj($17)|0);
 $20 = ($__n_copy|0)==(0);
 if (!($20)) {
  (_wmemcpy($19,$21,$__n_copy)|0);
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $25 = (($19) + ($__n_copy<<2)|0);
  $26 = (($25) + ($__n_add<<2)|0);
  $27 = (($21) + ($__n_copy<<2)|0);
  $28 = (($27) + ($__n_del<<2)|0);
  (_wmemcpy($26,$28,$24)|0);
 }
 $29 = ($__old_cap|0)==(1);
 if (!($29)) {
  __ZdlPv($21);
 }
 $30 = ((($this)) + 8|0);
 HEAP32[$30>>2] = $19;
 $31 = $18 | 1;
 HEAP32[$this>>2] = $31;
 return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = ((($this)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = ((($this)) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $$pn = $14;
 }
 else if ((label|0) == 8) {
  $18 = ((($this)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = ((($this)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;
 }
 $__p$0 = (($$pn) + ($__sz$0<<2)|0);
 HEAP32[$__p$0>>2] = $__c;
 $22 = ((($__p$0)) + 4|0);
 HEAP32[$22>>2] = 0;
 return;
}
function __ZNSt3__19to_stringEi($agg$result,$val) {
 $agg$result = $agg$result|0;
 $val = $val|0;
 var $$ = 0, $$lcssa = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i1 = 0, $available$0$i = 0, $available$0$ph$i = 0, $available$2$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i2 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = sp + 4|0;
 $__i$0$i$i$i = 0;
 while(1) {
  $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
  if ($exitcond$i$i$i) {
   break;
  }
  $1 = (($0) + ($__i$0$i$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i$i) + 1)|0;
  $__i$0$i$i$i = $2;
 }
 $3 = HEAP8[$0>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$0>>2]|0;
  $7 = $6 & -2;
  $phitmp$i$i = (($7) + -1)|0;
  $8 = $phitmp$i$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($0|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  ___resumeException($11|0);
  // unreachable;
 }
 $13 = HEAP8[$0>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 $16 = $13&255;
 $17 = $16 >>> 1;
 $18 = ((($0)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $available$0$ph$i = $15 ? $17 : $19;
 $20 = ((($0)) + 1|0);
 $21 = ((($0)) + 8|0);
 $23 = $13;$available$0$i = $available$0$ph$i;
 while(1) {
  $22 = $23 & 1;
  $24 = ($22<<24>>24)==(0);
  $25 = HEAP32[$21>>2]|0;
  $$ = $24 ? $20 : $25;
  $26 = (($available$0$i) + 1)|0;
  HEAP32[$vararg_buffer>>2] = $val;
  $27 = (_snprintf($$,$26,16497,$vararg_buffer)|0);
  $28 = ($27|0)>(-1);
  if ($28) {
   $29 = ($27>>>0)>($available$0$i>>>0);
   if ($29) {
    $available$2$i = $27;
   } else {
    $$lcssa = $27;
    label = 14;
    break;
   }
  } else {
   $30 = $available$0$i << 1;
   $31 = $30 | 1;
   $available$2$i = $31;
  }
  __THREW__ = 0;
  invoke_viii(685,($0|0),($available$2$i|0),0);
  $32 = __THREW__; __THREW__ = 0;
  $33 = $32&1;
  if ($33) {
   label = 19;
   break;
  }
  $$pre$i = HEAP8[$0>>0]|0;
  $23 = $$pre$i;$available$0$i = $available$2$i;
 }
 do {
  if ((label|0) == 14) {
   __THREW__ = 0;
   invoke_viii(685,($0|0),($$lcssa|0),0);
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    $40 = ___cxa_find_matching_catch_2()|0;
    $41 = tempRet0;
    $lpad$phi$index = $40;$lpad$phi$index2 = $41;
    break;
   }
   ;HEAP32[$agg$result>>2]=HEAP32[$0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$0+8>>2]|0;
   $__i$0$i$i$i1 = 0;
   while(1) {
    $exitcond$i$i$i2 = ($__i$0$i$i$i1|0)==(3);
    if ($exitcond$i$i$i2) {
     break;
    }
    $36 = (($0) + ($__i$0$i$i$i1<<2)|0);
    HEAP32[$36>>2] = 0;
    $37 = (($__i$0$i$i$i1) + 1)|0;
    $__i$0$i$i$i1 = $37;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   STACKTOP = sp;return;
  }
  else if ((label|0) == 19) {
   $38 = ___cxa_find_matching_catch_2()|0;
   $39 = tempRet0;
   $lpad$phi$index = $38;$lpad$phi$index2 = $39;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__19to_stringEj($agg$result,$val) {
 $agg$result = $agg$result|0;
 $val = $val|0;
 var $$ = 0, $$lcssa = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i1 = 0, $available$0$i = 0, $available$0$ph$i = 0, $available$2$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i2 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = sp + 4|0;
 $__i$0$i$i$i = 0;
 while(1) {
  $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
  if ($exitcond$i$i$i) {
   break;
  }
  $1 = (($0) + ($__i$0$i$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i$i) + 1)|0;
  $__i$0$i$i$i = $2;
 }
 $3 = HEAP8[$0>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$0>>2]|0;
  $7 = $6 & -2;
  $phitmp$i$i = (($7) + -1)|0;
  $8 = $phitmp$i$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($0|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  ___resumeException($11|0);
  // unreachable;
 }
 $13 = HEAP8[$0>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 $16 = $13&255;
 $17 = $16 >>> 1;
 $18 = ((($0)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $available$0$ph$i = $15 ? $17 : $19;
 $20 = ((($0)) + 1|0);
 $21 = ((($0)) + 8|0);
 $23 = $13;$available$0$i = $available$0$ph$i;
 while(1) {
  $22 = $23 & 1;
  $24 = ($22<<24>>24)==(0);
  $25 = HEAP32[$21>>2]|0;
  $$ = $24 ? $20 : $25;
  $26 = (($available$0$i) + 1)|0;
  HEAP32[$vararg_buffer>>2] = $val;
  $27 = (_snprintf($$,$26,16500,$vararg_buffer)|0);
  $28 = ($27|0)>(-1);
  if ($28) {
   $29 = ($27>>>0)>($available$0$i>>>0);
   if ($29) {
    $available$2$i = $27;
   } else {
    $$lcssa = $27;
    label = 14;
    break;
   }
  } else {
   $30 = $available$0$i << 1;
   $31 = $30 | 1;
   $available$2$i = $31;
  }
  __THREW__ = 0;
  invoke_viii(685,($0|0),($available$2$i|0),0);
  $32 = __THREW__; __THREW__ = 0;
  $33 = $32&1;
  if ($33) {
   label = 19;
   break;
  }
  $$pre$i = HEAP8[$0>>0]|0;
  $23 = $$pre$i;$available$0$i = $available$2$i;
 }
 do {
  if ((label|0) == 14) {
   __THREW__ = 0;
   invoke_viii(685,($0|0),($$lcssa|0),0);
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    $40 = ___cxa_find_matching_catch_2()|0;
    $41 = tempRet0;
    $lpad$phi$index = $40;$lpad$phi$index2 = $41;
    break;
   }
   ;HEAP32[$agg$result>>2]=HEAP32[$0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$0+8>>2]|0;
   $__i$0$i$i$i1 = 0;
   while(1) {
    $exitcond$i$i$i2 = ($__i$0$i$i$i1|0)==(3);
    if ($exitcond$i$i$i2) {
     break;
    }
    $36 = (($0) + ($__i$0$i$i$i1<<2)|0);
    HEAP32[$36>>2] = 0;
    $37 = (($__i$0$i$i$i1) + 1)|0;
    $__i$0$i$i$i1 = $37;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   STACKTOP = sp;return;
  }
  else if ((label|0) == 19) {
   $38 = ___cxa_find_matching_catch_2()|0;
   $39 = tempRet0;
   $lpad$phi$index = $38;$lpad$phi$index2 = $39;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__19to_stringEd($agg$result,$val) {
 $agg$result = $agg$result|0;
 $val = +$val;
 var $$ = 0, $$lcssa = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i1 = 0, $available$0$i = 0, $available$0$ph$i = 0, $available$2$i = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i2 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = sp + 8|0;
 $__i$0$i$i$i = 0;
 while(1) {
  $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
  if ($exitcond$i$i$i) {
   break;
  }
  $1 = (($0) + ($__i$0$i$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i$i) + 1)|0;
  $__i$0$i$i$i = $2;
 }
 $3 = HEAP8[$0>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = 10;
 } else {
  $6 = HEAP32[$0>>2]|0;
  $7 = $6 & -2;
  $phitmp$i$i = (($7) + -1)|0;
  $8 = $phitmp$i$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($0|0),($8|0),0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  ___resumeException($11|0);
  // unreachable;
 }
 $13 = HEAP8[$0>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 $16 = $13&255;
 $17 = $16 >>> 1;
 $18 = ((($0)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $available$0$ph$i = $15 ? $17 : $19;
 $20 = ((($0)) + 1|0);
 $21 = ((($0)) + 8|0);
 $23 = $13;$available$0$i = $available$0$ph$i;
 while(1) {
  $22 = $23 & 1;
  $24 = ($22<<24>>24)==(0);
  $25 = HEAP32[$21>>2]|0;
  $$ = $24 ? $20 : $25;
  $26 = (($available$0$i) + 1)|0;
  HEAPF64[$vararg_buffer>>3] = $val;
  $27 = (_snprintf($$,$26,16503,$vararg_buffer)|0);
  $28 = ($27|0)>(-1);
  if ($28) {
   $29 = ($27>>>0)>($available$0$i>>>0);
   if ($29) {
    $available$2$i = $27;
   } else {
    $$lcssa = $27;
    label = 14;
    break;
   }
  } else {
   $30 = $available$0$i << 1;
   $31 = $30 | 1;
   $available$2$i = $31;
  }
  __THREW__ = 0;
  invoke_viii(685,($0|0),($available$2$i|0),0);
  $32 = __THREW__; __THREW__ = 0;
  $33 = $32&1;
  if ($33) {
   label = 19;
   break;
  }
  $$pre$i = HEAP8[$0>>0]|0;
  $23 = $$pre$i;$available$0$i = $available$2$i;
 }
 do {
  if ((label|0) == 14) {
   __THREW__ = 0;
   invoke_viii(685,($0|0),($$lcssa|0),0);
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    $40 = ___cxa_find_matching_catch_2()|0;
    $41 = tempRet0;
    $lpad$phi$index = $40;$lpad$phi$index2 = $41;
    break;
   }
   ;HEAP32[$agg$result>>2]=HEAP32[$0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$0+8>>2]|0;
   $__i$0$i$i$i1 = 0;
   while(1) {
    $exitcond$i$i$i2 = ($__i$0$i$i$i1|0)==(3);
    if ($exitcond$i$i$i2) {
     break;
    }
    $36 = (($0) + ($__i$0$i$i$i1<<2)|0);
    HEAP32[$36>>2] = 0;
    $37 = (($__i$0$i$i$i1) + 1)|0;
    $__i$0$i$i$i1 = $37;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   STACKTOP = sp;return;
  }
  else if ((label|0) == 19) {
   $38 = ___cxa_find_matching_catch_2()|0;
   $39 = tempRet0;
   $lpad$phi$index = $38;$lpad$phi$index2 = $39;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7444);
 __THREW__ = 0;
 invoke_vii(686,($this|0),0);
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 if ($1) {
  $11 = ___cxa_find_matching_catch_3(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  $2 = ((($this)) + 28|0);
  __ZNSt3__16localeD2Ev($2);
  $3 = ((($this)) + 32|0);
  $4 = HEAP32[$3>>2]|0;
  _free($4);
  $5 = ((($this)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  _free($6);
  $7 = ((($this)) + 48|0);
  $8 = HEAP32[$7>>2]|0;
  _free($8);
  $9 = ((($this)) + 60|0);
  $10 = HEAP32[$9>>2]|0;
  _free($10);
  return;
 }
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 32|0);
 $3 = ((($this)) + 36|0);
 $i$0 = $1;
 while(1) {
  $4 = ($i$0|0)==(0);
  if ($4) {
   break;
  }
  $5 = (($i$0) + -1)|0;
  $6 = HEAP32[$2>>2]|0;
  $7 = (($6) + ($5<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$3>>2]|0;
  $10 = (($9) + ($5<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viii[$8 & 1023]($ev,$this,$11);
  $i$0 = $5;
 }
 return;
}
function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7460);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7460);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = ((($3)) + 1|0);
   HEAP32[$0>>2] = $6;
   $7 = HEAP8[$3>>0]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$0;
    break;
   }
   $13 = $11&255;
   $storemerge = $13;
  }
  HEAP8[$$0>>0] = $storemerge;
  $14 = (($__i$0) + 1)|0;
  $15 = ((($$0)) + 1|0);
  $$0 = $15;$__i$0 = $14;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP8[$6>>0]|0;
  $9 = $8&255;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP8[$$0>>0]|0;
   $7 = ((($3)) + 1|0);
   HEAP32[$0>>2] = $7;
   HEAP8[$3>>0] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP8[$$0>>0]|0;
   $12 = $11&255;
   $13 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$12)|0);
   $14 = ($13|0)==(-1);
   if ($14) {
    $__i$0$lcssa = $__i$0;
    break;
   }
  }
  $15 = ((($$0)) + 1|0);
  $16 = (($__i$0) + 1)|0;
  $$0 = $15;$__i$0 = $16;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7524);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7524);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($this|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($agg$result)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($agg$result)) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = ((($this)) + 16|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = ((($3)) + 4|0);
   HEAP32[$0>>2] = $6;
   $7 = HEAP32[$3>>2]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 1023]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$0;
    break;
   } else {
    $storemerge = $11;
   }
  }
  HEAP32[$$0>>2] = $storemerge;
  $13 = (($__i$0) + 1)|0;
  $14 = ((($$0)) + 4|0);
  $$0 = $14;$__i$0 = $13;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 1023]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
 } else {
  $5 = ((($this)) + 12|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($6)) + 4|0);
  HEAP32[$5>>2] = $7;
  $8 = HEAP32[$6>>2]|0;
  $$0 = $8;
 }
 return ($$0|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0 = 0, $__i$0$lcssa = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 $1 = ((($this)) + 28|0);
 $$0 = $__s;$__i$0 = 0;
 while(1) {
  $2 = ($__i$0|0)<($__n|0);
  if (!($2)) {
   $__i$0$lcssa = $__i$0;
   break;
  }
  $3 = HEAP32[$0>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP32[$$0>>2]|0;
   $7 = ((($3)) + 4|0);
   HEAP32[$0>>2] = $7;
   HEAP32[$3>>2] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = ((($8)) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP32[$$0>>2]|0;
   $12 = (FUNCTION_TABLE_iii[$10 & 1023]($this,$11)|0);
   $13 = ($12|0)==(-1);
   if ($13) {
    $__i$0$lcssa = $__i$0;
    break;
   }
  }
  $14 = ((($$0)) + 4|0);
  $15 = (($__i$0) + 1)|0;
  $$0 = $14;$__i$0 = $15;
 }
 return ($__i$0$lcssa|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $4 = ((($3)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($4);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $4 = ((($3)) + 8|0);
 __ZNSt3__18ios_baseD2Ev($4);
 return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $4 = ((($3)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($4);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($3);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $4 = ((($3)) + 4|0);
 __ZNSt3__18ios_baseD2Ev($4);
 return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($3);
 return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16950|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev);
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,16959,35);
 }
 return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $$state = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 $4 = $3&1;
 $$state = $4 | $state;
 $5 = ((($this)) + 16|0);
 HEAP32[$5>>2] = $$state;
 $6 = $3&1;
 $7 = $6 | $state;
 $8 = ((($this)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 (__ZNSt3__117iostream_categoryEv()|0);
 HEAP32[$0>>2] = 1;
 $13 = ((($0)) + 4|0);
 HEAP32[$13>>2] = (22396);
 __THREW__ = 0;
 invoke_viii(687,($12|0),(16995|0),($0|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  ___cxa_free_exception(($12|0));
  ___resumeException($16|0);
  // unreachable;
 } else {
  ___cxa_throw(($12|0),(896|0),(258|0));
  // unreachable;
 }
}
function __ZNSt3__117iostream_categoryEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20112]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((20112|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   HEAP32[5599] = (7768);
   (___cxa_atexit((261|0),(22396|0),(___dso_handle|0))|0);
   ___cxa_guard_release((20112|0));
  }
 }
 return (22396|0);
}
function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this,$msg,$ec) {
 $this = $this|0;
 $msg = $msg|0;
 $ec = $ec|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmpcast$byval_copy = sp + 8|0;
 $0 = sp;
 $1 = $ec;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = $0;
 $8 = $7;
 HEAP32[$8>>2] = $3;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $6;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$0>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$0+4>>2]|0;
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$tmpcast$byval_copy,$msg);
 HEAP32[$this>>2] = (7748);
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base4initEPv($this,$sb) {
 $this = $this|0;
 $sb = $sb|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $not$ = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 24|0);
 HEAP32[$0>>2] = $sb;
 $not$ = ($sb|0)==(0|0);
 $1 = $not$&1;
 $2 = ((($this)) + 16|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($this)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($this)) + 4|0);
 HEAP32[$4>>2] = 4098;
 $5 = ((($this)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($this)) + 8|0);
 HEAP32[$6>>2] = 6;
 $7 = ((($this)) + 32|0);
 $8 = ((($this)) + 28|0);
 dest=$7; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev($8);
 return;
}
function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = ((($this)) + 28|0);
 __ZNSt3__16localeC2ERKS0_($0,$1);
 $2 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($2|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7460);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (7524);
 $0 = ((($this)) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = ((($this)) + 8|0);
 ;HEAP32[$1>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($this,$__is,$__noskipws) {
 $this = $this|0;
 $__is = $__is|0;
 $__noskipws = $__noskipws|0;
 var $$0$i$i = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__i$sroa$0$113 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 HEAP8[$this>>0] = 0;
 $1 = HEAP32[$__is>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($__is) + ($3)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($4)) + 72|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9)|0);
  }
  do {
   if (!($__noskipws)) {
    $11 = HEAP32[$__is>>2]|0;
    $12 = ((($11)) + -12|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (($__is) + ($13)|0);
    $15 = ((($14)) + 4|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = $16 & 4096;
    $18 = ($17|0)==(0);
    if (!($18)) {
     $19 = (__ZNKSt3__18ios_base6getlocEv($14)|0);
     HEAP32[$0>>2] = $19;
     __THREW__ = 0;
     $20 = (invoke_iii(608,($0|0),(22416|0))|0);
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if ($22) {
      $64 = ___cxa_find_matching_catch_2()|0;
      $65 = tempRet0;
      __ZNSt3__16localeD2Ev($0);
      ___resumeException($64|0);
      // unreachable;
     }
     __ZNSt3__16localeD2Ev($0);
     $23 = HEAP32[$__is>>2]|0;
     $24 = ((($23)) + -12|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = (($__is) + ($25)|0);
     $27 = ((($26)) + 24|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ((($20)) + 8|0);
     $30 = $28;
     $31 = ($28|0)==(0);
     $32 = ((($30)) + 12|0);
     $33 = ((($30)) + 16|0);
     $34 = $28;
     $35 = $28;
     $36 = ((($35)) + 12|0);
     $37 = ((($35)) + 16|0);
     $38 = $28;
     $39 = $28;
     while(1) {
      if ($31) {
       $$pre$phiZ2D = 0;$__i$sroa$0$113 = 0;
       break;
      }
      $40 = HEAP32[$32>>2]|0;
      $41 = HEAP32[$33>>2]|0;
      $42 = ($40|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$34>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       $46 = (FUNCTION_TABLE_ii[$45 & 1023]($30)|0);
       $47 = ($46|0)==(-1);
       if ($47) {
        $$pre$phiZ2D = 0;$__i$sroa$0$113 = 0;
        break;
       }
      }
      $48 = HEAP32[$36>>2]|0;
      $49 = HEAP32[$37>>2]|0;
      $50 = ($48|0)==($49|0);
      if ($50) {
       $51 = HEAP32[$38>>2]|0;
       $52 = ((($51)) + 36|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = (FUNCTION_TABLE_ii[$53 & 1023]($35)|0);
       $$0$i$i = $54;
      } else {
       $55 = HEAP8[$48>>0]|0;
       $56 = $55&255;
       $$0$i$i = $56;
      }
      $57 = $$0$i$i&255;
      $isascii1$i = ($57<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $$pre$phiZ2D = $35;$__i$sroa$0$113 = $28;
       break;
      }
      $sext = $$0$i$i << 24;
      $58 = $sext >> 24;
      $59 = HEAP32[$29>>2]|0;
      $60 = (($59) + ($58<<1)|0);
      $61 = HEAP16[$60>>1]|0;
      $62 = $61 & 8192;
      $63 = ($62<<16>>16)==(0);
      if ($63) {
       $$pre$phiZ2D = $35;$__i$sroa$0$113 = $28;
       break;
      }
      $66 = HEAP32[$36>>2]|0;
      $67 = HEAP32[$37>>2]|0;
      $68 = ($66|0)==($67|0);
      if ($68) {
       $69 = HEAP32[$39>>2]|0;
       $70 = ((($69)) + 40|0);
       $71 = HEAP32[$70>>2]|0;
       (FUNCTION_TABLE_ii[$71 & 1023]($35)|0);
       continue;
      } else {
       $72 = ((($66)) + 1|0);
       HEAP32[$36>>2] = $72;
       continue;
      }
     }
     $73 = ($__i$sroa$0$113|0)==(0);
     if (!($73)) {
      $74 = ((($$pre$phiZ2D)) + 12|0);
      $75 = HEAP32[$74>>2]|0;
      $76 = ((($$pre$phiZ2D)) + 16|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = ($75|0)==($77|0);
      if (!($78)) {
       break;
      }
      $79 = $__i$sroa$0$113;
      $80 = HEAP32[$79>>2]|0;
      $81 = ((($80)) + 36|0);
      $82 = HEAP32[$81>>2]|0;
      $83 = (FUNCTION_TABLE_ii[$82 & 1023]($$pre$phiZ2D)|0);
      $84 = ($83|0)==(-1);
      if (!($84)) {
       break;
      }
     }
     $85 = HEAP32[$__is>>2]|0;
     $86 = ((($85)) + -12|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = (($__is) + ($87)|0);
     $89 = ((($88)) + 16|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = $90 | 6;
     __ZNSt3__18ios_base5clearEj($88,$91);
    }
   }
  } while(0);
  $92 = HEAP32[$__is>>2]|0;
  $93 = ((($92)) + -12|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (($__is) + ($94)|0);
  $96 = ((($95)) + 16|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ($97|0)==(0);
  $99 = $98&1;
  HEAP8[$this>>0] = $99;
 } else {
  $100 = $6 | 4;
  __ZNSt3__18ios_base5clearEj($4,$100);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $4 = ((($3)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 L1: do {
  if (!($6)) {
   __THREW__ = 0;
   invoke_vii(606,($__s|0),($this|0));
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   L3: do {
    if ($8) {
     $33 = ___cxa_find_matching_catch_3(0|0)|0;
     $34 = tempRet0;
     $$0 = $33;
    } else {
     $9 = HEAP8[$__s>>0]|0;
     $10 = ($9<<24>>24)==(0);
     do {
      if (!($10)) {
       $11 = HEAP32[$this>>2]|0;
       $12 = ((($11)) + -12|0);
       $13 = HEAP32[$12>>2]|0;
       $14 = (($this) + ($13)|0);
       $15 = ((($14)) + 24|0);
       $16 = HEAP32[$15>>2]|0;
       $17 = HEAP32[$16>>2]|0;
       $18 = ((($17)) + 24|0);
       $19 = HEAP32[$18>>2]|0;
       __THREW__ = 0;
       $20 = (invoke_ii($19|0,($16|0))|0);
       $21 = __THREW__; __THREW__ = 0;
       $22 = $21&1;
       if (!($22)) {
        $23 = ($20|0)==(-1);
        if (!($23)) {
         break;
        }
        $24 = HEAP32[$this>>2]|0;
        $25 = ((($24)) + -12|0);
        $26 = HEAP32[$25>>2]|0;
        $27 = (($this) + ($26)|0);
        $28 = ((($27)) + 16|0);
        $29 = HEAP32[$28>>2]|0;
        $30 = $29 | 1;
        __THREW__ = 0;
        invoke_vii(610,($27|0),($30|0));
        $31 = __THREW__; __THREW__ = 0;
        $32 = $31&1;
        if (!($32)) {
         break;
        }
       }
       $35 = ___cxa_find_matching_catch_3(0|0)|0;
       $36 = tempRet0;
       __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
       $$0 = $35;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $37 = HEAP32[$this>>2]|0;
   $38 = ((($37)) + -12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (($this) + ($39)|0);
   __THREW__ = 0;
   invoke_vi(611,($40|0));
   $41 = __THREW__; __THREW__ = 0;
   $42 = $41&1;
   if (!($42)) {
    ___cxa_end_catch();
    break;
   }
   $43 = ___cxa_find_matching_catch_2()|0;
   $44 = tempRet0;
   __THREW__ = 0;
   invoke_v(593);
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   if ($46) {
    $47 = ___cxa_find_matching_catch_3(0|0)|0;
    $48 = tempRet0;
    ___clang_call_terminate($47);
    // unreachable;
   } else {
    ___resumeException($43|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($__os) + ($3)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($4)) + 72|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   (__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 $6 = ((($5)) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($5)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = ((($5)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = $13 & 8192;
    $15 = ($14|0)==(0);
    if (!($15)) {
     $16 = (__ZSt18uncaught_exceptionv()|0);
     if (!($16)) {
      $17 = HEAP32[$0>>2]|0;
      $18 = HEAP32[$17>>2]|0;
      $19 = ((($18)) + -12|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (($17) + ($20)|0);
      $22 = ((($21)) + 24|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = HEAP32[$23>>2]|0;
      $25 = ((($24)) + 24|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      $27 = (invoke_ii($26|0,($23|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if (!($29)) {
       $30 = ($27|0)==(-1);
       if (!($30)) {
        break;
       }
       $31 = HEAP32[$0>>2]|0;
       $32 = HEAP32[$31>>2]|0;
       $33 = ((($32)) + -12|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($31) + ($34)|0);
       $36 = ((($35)) + 16|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = $37 | 1;
       __THREW__ = 0;
       invoke_vii(610,($35|0),($38|0));
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if (!($40)) {
        break;
       }
      }
      $41 = ___cxa_find_matching_catch_3(0|0)|0;
      $42 = tempRet0;
      (___cxa_begin_catch(($41|0))|0);
      __THREW__ = 0;
      invoke_v(593);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       $45 = ___cxa_find_matching_catch_3(0|0)|0;
       $46 = tempRet0;
       ___clang_call_terminate($45);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 $3 = ((($this)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 } else {
  ___cxa_rethrow();
  // unreachable;
 }
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE7getlineEPcic($this,$__s,$__n,$__dlm) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 $__dlm = $__dlm|0;
 var $$0 = 0, $$0$i8 = 0, $$0$lcssa35 = 0, $$036 = 0, $$__err$2 = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $__err$2$ph = 0, $__sen = 0, $lpad$phi$index = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sen = sp;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 __THREW__ = 0;
 invoke_viii(688,($__sen|0),($this|0),1);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 do {
  if ($2) {
   label = 9;
  } else {
   $3 = HEAP8[$__sen>>0]|0;
   $4 = ($3<<24>>24)==(0);
   if (!($4)) {
    $5 = (($__n) + -1)|0;
    $$0 = $__s;
    while(1) {
     $6 = HEAP32[$this>>2]|0;
     $7 = ((($6)) + -12|0);
     $8 = HEAP32[$7>>2]|0;
     $9 = (($this) + ($8)|0);
     $10 = ((($9)) + 24|0);
     $11 = HEAP32[$10>>2]|0;
     $12 = ((($11)) + 12|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ((($11)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($13|0)==($15|0);
     if ($16) {
      $17 = HEAP32[$11>>2]|0;
      $18 = ((($17)) + 36|0);
      $19 = HEAP32[$18>>2]|0;
      __THREW__ = 0;
      $20 = (invoke_ii($19|0,($11|0))|0);
      $21 = __THREW__; __THREW__ = 0;
      $22 = $21&1;
      if ($22) {
       label = 8;
       break;
      }
      $25 = ($20|0)==(-1);
      if ($25) {
       $$036 = $$0;$__err$2$ph = 2;
       break;
      } else {
       $$0$i8 = $20;
      }
     } else {
      $23 = HEAP8[$13>>0]|0;
      $24 = $23&255;
      $$0$i8 = $24;
     }
     $36 = $$0$i8&255;
     $37 = ($36<<24>>24)==($__dlm<<24>>24);
     if ($37) {
      $$0$lcssa35 = $$0;
      label = 14;
      break;
     }
     $57 = HEAP32[$0>>2]|0;
     $58 = ($57|0)<($5|0);
     if (!($58)) {
      $$036 = $$0;$__err$2$ph = 4;
      break;
     }
     $59 = ((($$0)) + 1|0);
     HEAP8[$$0>>0] = $36;
     $60 = HEAP32[$this>>2]|0;
     $61 = ((($60)) + -12|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = (($this) + ($62)|0);
     $64 = ((($63)) + 24|0);
     $65 = HEAP32[$64>>2]|0;
     $66 = ((($65)) + 12|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($65)) + 16|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($67|0)==($69|0);
     if ($70) {
      $71 = HEAP32[$65>>2]|0;
      $72 = ((($71)) + 40|0);
      $73 = HEAP32[$72>>2]|0;
      __THREW__ = 0;
      (invoke_ii($73|0,($65|0))|0);
      $74 = __THREW__; __THREW__ = 0;
      $75 = $74&1;
      if ($75) {
       label = 8;
       break;
      }
     } else {
      $76 = ((($67)) + 1|0);
      HEAP32[$66>>2] = $76;
     }
     $77 = HEAP32[$0>>2]|0;
     $78 = (($77) + 1)|0;
     HEAP32[$0>>2] = $78;
     $$0 = $59;
    }
    if ((label|0) == 8) {
     $26 = ___cxa_find_matching_catch_3(0|0)|0;
     $27 = tempRet0;
     $$pre$phi24Z2D = $this;$$pre$phiZ2D = $this;$lpad$phi$index = $26;
     label = 10;
     break;
    }
    if ((label|0) == 14) {
     $38 = HEAP32[$this>>2]|0;
     $39 = ((($38)) + -12|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = (($this) + ($40)|0);
     $42 = ((($41)) + 24|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ((($43)) + 12|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ((($43)) + 16|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = ($45|0)==($47|0);
     if ($48) {
      $49 = HEAP32[$43>>2]|0;
      $50 = ((($49)) + 40|0);
      $51 = HEAP32[$50>>2]|0;
      __THREW__ = 0;
      (invoke_ii($51|0,($43|0))|0);
      $52 = __THREW__; __THREW__ = 0;
      $53 = $52&1;
      if ($53) {
       label = 9;
       break;
      }
     } else {
      $54 = ((($45)) + 1|0);
      HEAP32[$44>>2] = $54;
     }
     $55 = HEAP32[$0>>2]|0;
     $56 = (($55) + 1)|0;
     HEAP32[$0>>2] = $56;
     $$036 = $$0$lcssa35;$__err$2$ph = 0;
    }
    $79 = ($__n|0)>(0);
    if ($79) {
     HEAP8[$$036>>0] = 0;
    }
    $80 = HEAP32[$0>>2]|0;
    $81 = ($80|0)==(0);
    $82 = $__err$2$ph | 4;
    $$__err$2 = $81 ? $82 : $__err$2$ph;
    $83 = HEAP32[$this>>2]|0;
    $84 = ((($83)) + -12|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = (($this) + ($85)|0);
    $87 = ((($86)) + 16|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = $88 | $$__err$2;
    __THREW__ = 0;
    invoke_vii(610,($86|0),($89|0));
    $90 = __THREW__; __THREW__ = 0;
    $91 = $90&1;
    if ($91) {
     label = 9;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 9) {
  $28 = ___cxa_find_matching_catch_3(0|0)|0;
  $29 = tempRet0;
  $$pre$phi24Z2D = $this;$$pre$phiZ2D = $this;$lpad$phi$index = $28;
  label = 10;
 }
 do {
  if ((label|0) == 10) {
   (___cxa_begin_catch(($lpad$phi$index|0))|0);
   $30 = HEAP32[$$pre$phiZ2D>>2]|0;
   $31 = ((($30)) + -12|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (($$pre$phi24Z2D) + ($32)|0);
   __THREW__ = 0;
   invoke_vi(611,($33|0));
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if (!($35)) {
    ___cxa_end_catch();
    break;
   }
   $92 = ___cxa_find_matching_catch_2()|0;
   $93 = tempRet0;
   __THREW__ = 0;
   invoke_v(593);
   $94 = __THREW__; __THREW__ = 0;
   $95 = $94&1;
   if ($95) {
    $96 = ___cxa_find_matching_catch_3(0|0)|0;
    $97 = tempRet0;
    ___clang_call_terminate($96);
    // unreachable;
   } else {
    ___resumeException($92|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $4 = ((($3)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 L1: do {
  if (!($6)) {
   __THREW__ = 0;
   invoke_vii(689,($__s|0),($this|0));
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   L3: do {
    if ($8) {
     $33 = ___cxa_find_matching_catch_3(0|0)|0;
     $34 = tempRet0;
     $$0 = $33;
    } else {
     $9 = HEAP8[$__s>>0]|0;
     $10 = ($9<<24>>24)==(0);
     do {
      if (!($10)) {
       $11 = HEAP32[$this>>2]|0;
       $12 = ((($11)) + -12|0);
       $13 = HEAP32[$12>>2]|0;
       $14 = (($this) + ($13)|0);
       $15 = ((($14)) + 24|0);
       $16 = HEAP32[$15>>2]|0;
       $17 = HEAP32[$16>>2]|0;
       $18 = ((($17)) + 24|0);
       $19 = HEAP32[$18>>2]|0;
       __THREW__ = 0;
       $20 = (invoke_ii($19|0,($16|0))|0);
       $21 = __THREW__; __THREW__ = 0;
       $22 = $21&1;
       if (!($22)) {
        $23 = ($20|0)==(-1);
        if (!($23)) {
         break;
        }
        $24 = HEAP32[$this>>2]|0;
        $25 = ((($24)) + -12|0);
        $26 = HEAP32[$25>>2]|0;
        $27 = (($this) + ($26)|0);
        $28 = ((($27)) + 16|0);
        $29 = HEAP32[$28>>2]|0;
        $30 = $29 | 1;
        __THREW__ = 0;
        invoke_vii(610,($27|0),($30|0));
        $31 = __THREW__; __THREW__ = 0;
        $32 = $31&1;
        if (!($32)) {
         break;
        }
       }
       $35 = ___cxa_find_matching_catch_3(0|0)|0;
       $36 = tempRet0;
       __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
       $$0 = $35;
       break L3;
      }
     } while(0);
     __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
     break L1;
    }
   } while(0);
   (___cxa_begin_catch(($$0|0))|0);
   $37 = HEAP32[$this>>2]|0;
   $38 = ((($37)) + -12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (($this) + ($39)|0);
   __THREW__ = 0;
   invoke_vi(611,($40|0));
   $41 = __THREW__; __THREW__ = 0;
   $42 = $41&1;
   if (!($42)) {
    ___cxa_end_catch();
    break;
   }
   $43 = ___cxa_find_matching_catch_2()|0;
   $44 = tempRet0;
   __THREW__ = 0;
   invoke_v(593);
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   if ($46) {
    $47 = ___cxa_find_matching_catch_3(0|0)|0;
    $48 = tempRet0;
    ___clang_call_terminate($47);
    // unreachable;
   } else {
    ___resumeException($43|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this,$__os) {
 $this = $this|0;
 $__os = $__os|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$this>>0] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = $__os;
 $1 = HEAP32[$__os>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($__os) + ($3)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($4)) + 72|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   (__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($9)|0);
  }
  HEAP8[$this>>0] = 1;
 }
 return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($1) + ($4)|0);
 $6 = ((($5)) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if (!($8)) {
   $9 = ((($5)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = ((($5)) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = $13 & 8192;
    $15 = ($14|0)==(0);
    if (!($15)) {
     $16 = (__ZSt18uncaught_exceptionv()|0);
     if (!($16)) {
      $17 = HEAP32[$0>>2]|0;
      $18 = HEAP32[$17>>2]|0;
      $19 = ((($18)) + -12|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (($17) + ($20)|0);
      $22 = ((($21)) + 24|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = HEAP32[$23>>2]|0;
      $25 = ((($24)) + 24|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      $27 = (invoke_ii($26|0,($23|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if (!($29)) {
       $30 = ($27|0)==(-1);
       if (!($30)) {
        break;
       }
       $31 = HEAP32[$0>>2]|0;
       $32 = HEAP32[$31>>2]|0;
       $33 = ((($32)) + -12|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($31) + ($34)|0);
       $36 = ((($35)) + 16|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = $37 | 1;
       __THREW__ = 0;
       invoke_vii(610,($35|0),($38|0));
       $39 = __THREW__; __THREW__ = 0;
       $40 = $39&1;
       if (!($40)) {
        break;
       }
      }
      $41 = ___cxa_find_matching_catch_3(0|0)|0;
      $42 = tempRet0;
      (___cxa_begin_catch(($41|0))|0);
      __THREW__ = 0;
      invoke_v(593);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       $45 = ___cxa_find_matching_catch_3(0|0)|0;
       $46 = tempRet0;
       ___clang_call_terminate($45);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__s = sp;
 __THREW__ = 0;
 invoke_vii(606,($__s|0),($this|0));
 $0 = __THREW__; __THREW__ = 0;
 $1 = $0&1;
 L1: do {
  if ($1) {
   $36 = ___cxa_find_matching_catch_3(0|0)|0;
   $37 = tempRet0;
   $$0 = $36;$$pre$phi3Z2D = $this;$$pre$phiZ2D = $this;
   label = 11;
  } else {
   $2 = HEAP8[$__s>>0]|0;
   $3 = ($2<<24>>24)==(0);
   do {
    if (!($3)) {
     $4 = HEAP32[$this>>2]|0;
     $5 = ((($4)) + -12|0);
     $6 = HEAP32[$5>>2]|0;
     $7 = (($this) + ($6)|0);
     $8 = ((($7)) + 24|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = $9;
     $11 = ($9|0)==(0);
     if ($11) {
      label = 8;
     } else {
      $12 = ((($10)) + 24|0);
      $13 = HEAP32[$12>>2]|0;
      $14 = ((($10)) + 28|0);
      $15 = HEAP32[$14>>2]|0;
      $16 = ($13|0)==($15|0);
      if (!($16)) {
       $17 = ((($13)) + 1|0);
       HEAP32[$12>>2] = $17;
       HEAP8[$13>>0] = $__c;
       break;
      }
      $18 = $9;
      $19 = HEAP32[$18>>2]|0;
      $20 = ((($19)) + 52|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = $__c&255;
      __THREW__ = 0;
      $23 = (invoke_iii($21|0,($10|0),($22|0))|0);
      $24 = __THREW__; __THREW__ = 0;
      $25 = $24&1;
      if (!($25)) {
       $26 = ($23|0)==(-1);
       if ($26) {
        label = 8;
       } else {
        break;
       }
      }
     }
     if ((label|0) == 8) {
      $27 = HEAP32[$this>>2]|0;
      $28 = ((($27)) + -12|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = (($this) + ($29)|0);
      $31 = ((($30)) + 16|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = $32 | 1;
      __THREW__ = 0;
      invoke_vii(610,($30|0),($33|0));
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if (!($35)) {
       break;
      }
     }
     $38 = ___cxa_find_matching_catch_3(0|0)|0;
     $39 = tempRet0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
     $$0 = $38;$$pre$phi3Z2D = $this;$$pre$phiZ2D = $this;
     label = 11;
     break L1;
    }
   } while(0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  }
 } while(0);
 do {
  if ((label|0) == 11) {
   (___cxa_begin_catch(($$0|0))|0);
   $40 = HEAP32[$$pre$phiZ2D>>2]|0;
   $41 = ((($40)) + -12|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = (($$pre$phi3Z2D) + ($42)|0);
   __THREW__ = 0;
   invoke_vi(611,($43|0));
   $44 = __THREW__; __THREW__ = 0;
   $45 = $44&1;
   if (!($45)) {
    ___cxa_end_catch();
    break;
   }
   $46 = ___cxa_find_matching_catch_2()|0;
   $47 = tempRet0;
   __THREW__ = 0;
   invoke_v(593);
   $48 = __THREW__; __THREW__ = 0;
   $49 = $48&1;
   if ($49) {
    $50 = ___cxa_find_matching_catch_3(0|0)|0;
    $51 = tempRet0;
    ___clang_call_terminate($50);
    // unreachable;
   } else {
    ___resumeException($46|0);
    // unreachable;
   }
  }
 } while(0);
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if (!($0)) {
  $1 = HEAP32[$this>>2]|0;
  $2 = ((($1)) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  FUNCTION_TABLE_vi[$3 & 1023]($this);
 }
 return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0 = -1;
   break;
  }
  $2 = HEAP8[$$02>>0]|0;
  $3 = HEAP8[$$01>>0]|0;
  $4 = ($2<<24>>24)<($3<<24>>24);
  if ($4) {
   $$0 = -1;
   break;
  }
  $5 = ($3<<24>>24)<($2<<24>>24);
  if ($5) {
   $$0 = 1;
   break;
  }
  $6 = ((($$02)) + 1|0);
  $7 = ((($$01)) + 1|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP8[$__p$0>>0]|0;
  $3 = $2 << 24 >> 24;
  $4 = (($3) + ($1))|0;
  $5 = $4 & -268435456;
  $6 = $5 >>> 24;
  $7 = $6 | $5;
  $8 = $7 ^ $4;
  $9 = ((($__p$0)) + 1|0);
  $__h$0 = $8;$__p$0 = $9;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$02$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$01 = $__lo2;$$02 = $__lo1;
 while(1) {
  $0 = ($$01|0)==($__hi2|0);
  if ($0) {
   $$02$lcssa = $$02;
   label = 7;
   break;
  }
  $1 = ($$02|0)==($__hi1|0);
  if ($1) {
   $$0 = -1;
   break;
  }
  $2 = HEAP32[$$02>>2]|0;
  $3 = HEAP32[$$01>>2]|0;
  $4 = ($2|0)<($3|0);
  if ($4) {
   $$0 = -1;
   break;
  }
  $5 = ($3|0)<($2|0);
  if ($5) {
   $$0 = 1;
   break;
  }
  $6 = ((($$02)) + 4|0);
  $7 = ((($$01)) + 4|0);
  $$01 = $7;$$02 = $6;
 }
 if ((label|0) == 7) {
  $8 = ($$02$lcssa|0)!=($__hi1|0);
  $9 = $8&1;
  $$0 = $9;
 }
 return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__h$0 = 0, $__h$0$lcssa = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__h$0 = 0;$__p$0 = $__lo;
 while(1) {
  $0 = ($__p$0|0)==($__hi|0);
  if ($0) {
   $__h$0$lcssa = $__h$0;
   break;
  }
  $1 = $__h$0 << 4;
  $2 = HEAP32[$__p$0>>2]|0;
  $3 = (($2) + ($1))|0;
  $4 = $3 & -268435456;
  $5 = $4 >>> 24;
  $6 = $5 | $4;
  $7 = $6 ^ $3;
  $8 = ((($__p$0)) + 4|0);
  $__h$0 = $7;$__p$0 = $8;
 }
 return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 60|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 1023]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   switch ($15|0) {
   case 0:  {
    HEAP8[$__v>>0] = 0;
    break;
   }
   case 1:  {
    HEAP8[$__v>>0] = 1;
    break;
   }
   default: {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   }
   $$sroa$01$0 = $14;
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   __THREW__ = 0;
   $17 = (invoke_iii(608,($2|0),(22416|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $44 = ___cxa_find_matching_catch_2()|0;
     $45 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $$02 = $44;$$03 = $45;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $20 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
     HEAP32[$3>>2] = $20;
     __THREW__ = 0;
     $21 = (invoke_iii(608,($3|0),(22428|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $46 = ___cxa_find_matching_catch_2()|0;
      $47 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
      $$02 = $46;$$03 = $47;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     $24 = HEAP32[$21>>2]|0;
     $25 = ((($24)) + 24|0);
     $26 = HEAP32[$25>>2]|0;
     __THREW__ = 0;
     invoke_vii($26|0,($__names|0),($21|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $$0 = $__names;
     } else {
      $29 = ((($__names)) + 12|0);
      $30 = HEAP32[$21>>2]|0;
      $31 = ((($30)) + 28|0);
      $32 = HEAP32[$31>>2]|0;
      __THREW__ = 0;
      invoke_vii($32|0,($29|0),($21|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       $$0 = $29;
      } else {
       $35 = HEAP32[$__e>>2]|0;
       HEAP32[$4>>2] = $35;
       $36 = ((($__names)) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
       $37 = (invoke_iiiiiiii(690,($__b|0),($$byval_copy2|0),($__names|0),($36|0),($17|0),($__err|0),1)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        $54 = ___cxa_find_matching_catch_2()|0;
        $55 = tempRet0;
        $56 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$02 = $54;$$03 = $55;
        break;
       } else {
        $40 = ($37|0)==($__names|0);
        $41 = $40&1;
        HEAP8[$__v>>0] = $41;
        $42 = HEAP32[$__b>>2]|0;
        $43 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
        $$sroa$01$0 = $42;
        break L1;
       }
      }
     }
     $48 = ___cxa_find_matching_catch_2()|0;
     $49 = tempRet0;
     $50 = ($__names|0)==($$0|0);
     if ($50) {
      $$02 = $48;$$03 = $49;
     } else {
      $52 = $$0;
      while(1) {
       $51 = ((($52)) + -12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
       $53 = ($51|0)==($__names|0);
       if ($53) {
        $$02 = $48;$$03 = $49;
        break;
       } else {
        $52 = $51;
       }
      }
     }
    }
   } while(0);
   ___resumeException($$02|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNKSt3__16locale9use_facetERNS0_2idE($this,$x) {
 $this = $this|0;
 $x = $x|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv($x)|0);
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($0,$1)|0);
 return ($2|0);
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__p$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p$i = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 if (!($1)) {
  HEAP32[$__p$i>>2] = $this;
  $2 = ((($__p$i)) + 4|0);
  HEAP32[$2>>2] = (691);
  $3 = ((($__p$i)) + 8|0);
  HEAP32[$3>>2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this,$__p$i,692);
 }
 $4 = ((($this)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[5606]|0;HEAP32[5606] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = ((($this)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp|0;
 var $$elt$i$i$i$i = 0, $$elt1$i$i$i$i = 0, $$unpack$i$i$i$i = 0, $$unpack2$i$i$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$elt$i$i$i$i = ((($__vp)) + 4|0);
 $$unpack$i$i$i$i = HEAP32[$$elt$i$i$i$i>>2]|0;
 $$elt1$i$i$i$i = ((($__vp)) + 8|0);
 $$unpack2$i$i$i$i = HEAP32[$$elt1$i$i$i$i>>2]|0;
 $0 = HEAP32[$__vp>>2]|0;
 $1 = $$unpack2$i$i$i$i >> 1;
 $2 = (($0) + ($1)|0);
 $3 = $$unpack2$i$i$i$i & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $8 = $$unpack$i$i$i$i;
  $9 = $8;
 } else {
  $5 = HEAP32[$2>>2]|0;
  $6 = (($5) + ($$unpack$i$i$i$i)|0);
  $7 = HEAP32[$6>>2]|0;
  $9 = $7;
 }
 FUNCTION_TABLE_vi[$9 & 1023]($2);
 return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNKSt3__16locale5__imp9has_facetEl($this,$id)|0);
 if ($0) {
  $2 = ((($this)) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($id<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  return ($5|0);
 } else {
  $1 = (___cxa_allocate_exception(4)|0);
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw(($1|0),(2240|0),(534|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNKSt3__16locale5__imp9has_facetEl($this,$id) {
 $this = $this|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 $5 = $4 >> 2;
 $6 = ($5>>>0)>($id>>>0);
 if ($6) {
  $7 = $3;
  $8 = (($7) + ($id<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)!=(0|0);
  $11 = $10;
 } else {
  $11 = 0;
 }
 return ($11|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0 = 0, $$0$i$i = 0, $$041 = 0, $$lcssa = 0, $$lcssa99 = 0, $$pre$i$i$i = 0, $$pre$i$i$i7 = 0, $$pre$i2$i$i11 = 0, $$pre$i2$i$i11$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0 = 0, $__consume$2$off0 = 0, $__indx$0 = 0;
 var $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3 = 0, $__n_does_match$5 = 0, $__n_does_match$6 = 0, $__n_does_match$7 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3 = 0, $__n_might_match$5 = 0, $__st$0 = 0, $__st$1 = 0;
 var $__st$2 = 0, $__st$3 = 0, $__stat_hold$sroa$0$0 = 0, $__stat_hold$sroa$0$0$ph$ph = 0, $__stat_hold$sroa$0$1 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 do {
  if ($4) {
   $5 = (_malloc($3)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __THREW__ = 0;
    invoke_v(693);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $__stat_hold$sroa$0$0$ph$ph = 0;
     label = 6;
     break;
    }
   }
   $17 = $5;
   $__stat_hold$sroa$0$1 = $17;$__status$0 = $5;
   label = 11;
  } else {
   $__stat_hold$sroa$0$1 = 0;$__status$0 = $__statbuf;
   label = 11;
  }
 } while(0);
 L6: do {
  if ((label|0) == 11) {
   $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
   while(1) {
    $18 = ($__ky$0|0)==($__ke|0);
    if ($18) {
     $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
     break;
    }
    $19 = HEAP8[$__ky$0>>0]|0;
    $20 = $19 & 1;
    $21 = ($20<<24>>24)==(0);
    if ($21) {
     $24 = $19&255;
     $25 = $24 >>> 1;
     $26 = $25;
    } else {
     $22 = ((($__ky$0)) + 4|0);
     $23 = HEAP32[$22>>2]|0;
     $26 = $23;
    }
    $27 = ($26|0)==(0);
    if ($27) {
     HEAP8[$__st$0>>0] = 2;
     $28 = (($__n_might_match$0) + -1)|0;
     $29 = (($__n_does_match$0) + 1)|0;
     $__n_does_match$1 = $29;$__n_might_match$1 = $28;
    } else {
     HEAP8[$__st$0>>0] = 1;
     $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
    }
    $30 = ((($__ky$0)) + 12|0);
    $31 = ((($__st$0)) + 1|0);
    $__ky$0 = $30;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $31;
   }
   $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
   L20: while(1) {
    $32 = HEAP32[$__b>>2]|0;
    $33 = ($32|0)==(0|0);
    do {
     if ($33) {
      $46 = 0;
     } else {
      $34 = ((($32)) + 12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ((($32)) + 16|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($35|0)==($37|0);
      if ($38) {
       $39 = HEAP32[$32>>2]|0;
       $40 = ((($39)) + 36|0);
       $41 = HEAP32[$40>>2]|0;
       __THREW__ = 0;
       $42 = (invoke_ii($41|0,($32|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if ($44) {
        label = 5;
        break L20;
       }
       $45 = ($42|0)==(-1);
       if ($45) {
        HEAP32[$__b>>2] = 0;
        $46 = 0;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $46 = $$pre$i$i$i;
        break;
       }
      } else {
       $46 = $32;
      }
     }
    } while(0);
    $47 = ($46|0)==(0|0);
    $48 = HEAP32[$__e>>2]|0;
    $49 = ($48|0)==(0|0);
    if ($49) {
     $$pre$i2$i$i11 = 0;
    } else {
     $50 = ((($48)) + 12|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ((($48)) + 16|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ($51|0)==($53|0);
     if ($54) {
      $55 = HEAP32[$48>>2]|0;
      $56 = ((($55)) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      __THREW__ = 0;
      $58 = (invoke_ii($57|0,($48|0))|0);
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       label = 5;
       break;
      }
      $61 = ($58|0)==(-1);
      if ($61) {
       HEAP32[$__e>>2] = 0;
       $$pre$i2$i$i11 = 0;
      } else {
       $$pre$i2$i$i11 = $48;
      }
     } else {
      $$pre$i2$i$i11 = $48;
     }
    }
    $62 = ($$pre$i2$i$i11|0)==(0|0);
    $tmp$i$i = $47 ^ $62;
    $63 = ($__n_might_match$2|0)!=(0);
    $64 = $63 & $tmp$i$i;
    $65 = HEAP32[$__b>>2]|0;
    if (!($64)) {
     $$lcssa = $62;$$lcssa99 = $65;$$pre$i2$i$i11$lcssa = $$pre$i2$i$i11;
     label = 33;
     break;
    }
    $93 = ((($65)) + 12|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ((($65)) + 16|0);
    $96 = HEAP32[$95>>2]|0;
    $97 = ($94|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$65>>2]|0;
     $99 = ((($98)) + 36|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     $101 = (invoke_ii($100|0,($65|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 5;
      break;
     } else {
      $$0$i$i = $101;
     }
    } else {
     $104 = HEAP8[$94>>0]|0;
     $105 = $104&255;
     $$0$i$i = $105;
    }
    $106 = $$0$i$i&255;
    if ($__case_sensitive) {
     $__c$0 = $106;
    } else {
     $107 = HEAP32[$__ct>>2]|0;
     $108 = ((($107)) + 12|0);
     $109 = HEAP32[$108>>2]|0;
     __THREW__ = 0;
     $110 = (invoke_iii($109|0,($__ct|0),($106|0))|0);
     $111 = __THREW__; __THREW__ = 0;
     $112 = $111&1;
     if ($112) {
      label = 5;
      break;
     } else {
      $__c$0 = $110;
     }
    }
    $113 = (($__indx$0) + 1)|0;
    $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
    while(1) {
     $114 = ($__ky1$0|0)==($__ke|0);
     if ($114) {
      break;
     }
     $115 = HEAP8[$__st$1>>0]|0;
     $116 = ($115<<24>>24)==(1);
     do {
      if ($116) {
       $117 = HEAP8[$__ky1$0>>0]|0;
       $118 = $117 & 1;
       $119 = ($118<<24>>24)==(0);
       if ($119) {
        $122 = ((($__ky1$0)) + 1|0);
        $124 = $122;
       } else {
        $120 = ((($__ky1$0)) + 8|0);
        $121 = HEAP32[$120>>2]|0;
        $124 = $121;
       }
       $123 = (($124) + ($__indx$0)|0);
       $125 = HEAP8[$123>>0]|0;
       if ($__case_sensitive) {
        $__kc$0 = $125;
       } else {
        $126 = HEAP32[$__ct>>2]|0;
        $127 = ((($126)) + 12|0);
        $128 = HEAP32[$127>>2]|0;
        __THREW__ = 0;
        $129 = (invoke_iii($128|0,($__ct|0),($125|0))|0);
        $130 = __THREW__; __THREW__ = 0;
        $131 = $130&1;
        if ($131) {
         label = 4;
         break L20;
        } else {
         $__kc$0 = $129;
        }
       }
       $132 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
       if (!($132)) {
        HEAP8[$__st$1>>0] = 0;
        $144 = (($__n_might_match$3) + -1)|0;
        $__consume$2$off0 = $__consume$0$off0;$__n_does_match$5 = $__n_does_match$3;$__n_might_match$5 = $144;
        break;
       }
       $133 = HEAP8[$__ky1$0>>0]|0;
       $134 = $133 & 1;
       $135 = ($134<<24>>24)==(0);
       if ($135) {
        $138 = $133&255;
        $139 = $138 >>> 1;
        $140 = $139;
       } else {
        $136 = ((($__ky1$0)) + 4|0);
        $137 = HEAP32[$136>>2]|0;
        $140 = $137;
       }
       $141 = ($140|0)==($113|0);
       if ($141) {
        HEAP8[$__st$1>>0] = 2;
        $142 = (($__n_might_match$3) + -1)|0;
        $143 = (($__n_does_match$3) + 1)|0;
        $__consume$2$off0 = 1;$__n_does_match$5 = $143;$__n_might_match$5 = $142;
       } else {
        $__consume$2$off0 = 1;$__n_does_match$5 = $__n_does_match$3;$__n_might_match$5 = $__n_might_match$3;
       }
      } else {
       $__consume$2$off0 = $__consume$0$off0;$__n_does_match$5 = $__n_does_match$3;$__n_might_match$5 = $__n_might_match$3;
      }
     } while(0);
     $145 = ((($__ky1$0)) + 12|0);
     $146 = ((($__st$1)) + 1|0);
     $__consume$0$off0 = $__consume$2$off0;$__ky1$0 = $145;$__n_does_match$3 = $__n_does_match$5;$__n_might_match$3 = $__n_might_match$5;$__st$1 = $146;
    }
    if (!($__consume$0$off0)) {
     $__indx$0 = $113;$__n_does_match$2 = $__n_does_match$3;$__n_might_match$2 = $__n_might_match$3;
     continue;
    }
    $147 = HEAP32[$__b>>2]|0;
    $148 = ((($147)) + 12|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ((($147)) + 16|0);
    $151 = HEAP32[$150>>2]|0;
    $152 = ($149|0)==($151|0);
    if ($152) {
     $153 = HEAP32[$147>>2]|0;
     $154 = ((($153)) + 40|0);
     $155 = HEAP32[$154>>2]|0;
     __THREW__ = 0;
     (invoke_ii($155|0,($147|0))|0);
     $156 = __THREW__; __THREW__ = 0;
     $157 = $156&1;
     if ($157) {
      label = 5;
      break;
     }
    } else {
     $158 = ((($149)) + 1|0);
     HEAP32[$148>>2] = $158;
    }
    $159 = (($__n_does_match$3) + ($__n_might_match$3))|0;
    $160 = ($159>>>0)>(1);
    if ($160) {
     $__ky2$0 = $__kb;$__n_does_match$6 = $__n_does_match$3;$__st$2 = $__status$0;
    } else {
     $__indx$0 = $113;$__n_does_match$2 = $__n_does_match$3;$__n_might_match$2 = $__n_might_match$3;
     continue;
    }
    while(1) {
     $161 = ($__ky2$0|0)==($__ke|0);
     if ($161) {
      $__indx$0 = $113;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3;
      continue L20;
     }
     $162 = HEAP8[$__st$2>>0]|0;
     $163 = ($162<<24>>24)==(2);
     if ($163) {
      $164 = HEAP8[$__ky2$0>>0]|0;
      $165 = $164 & 1;
      $166 = ($165<<24>>24)==(0);
      if ($166) {
       $169 = $164&255;
       $170 = $169 >>> 1;
       $171 = $170;
      } else {
       $167 = ((($__ky2$0)) + 4|0);
       $168 = HEAP32[$167>>2]|0;
       $171 = $168;
      }
      $172 = ($171|0)==($113|0);
      if ($172) {
       $__n_does_match$7 = $__n_does_match$6;
      } else {
       HEAP8[$__st$2>>0] = 0;
       $173 = (($__n_does_match$6) + -1)|0;
       $__n_does_match$7 = $173;
      }
     } else {
      $__n_does_match$7 = $__n_does_match$6;
     }
     $174 = ((($__ky2$0)) + 12|0);
     $175 = ((($__st$2)) + 1|0);
     $__ky2$0 = $174;$__n_does_match$6 = $__n_does_match$7;$__st$2 = $175;
    }
   }
   if ((label|0) == 4) {
    $9 = ___cxa_find_matching_catch_2()|0;
    $10 = tempRet0;
    $__stat_hold$sroa$0$0 = $__stat_hold$sroa$0$1;$lpad$phi$index = $9;$lpad$phi$index3 = $10;
    break;
   }
   else if ((label|0) == 5) {
    $11 = ___cxa_find_matching_catch_2()|0;
    $12 = tempRet0;
    $__stat_hold$sroa$0$0 = $__stat_hold$sroa$0$1;$lpad$phi$index = $11;$lpad$phi$index3 = $12;
    break;
   }
   else if ((label|0) == 33) {
    $66 = ($$lcssa99|0)==(0|0);
    do {
     if ($66) {
      $79 = 0;
     } else {
      $67 = ((($$lcssa99)) + 12|0);
      $68 = HEAP32[$67>>2]|0;
      $69 = ((($$lcssa99)) + 16|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = ($68|0)==($70|0);
      if ($71) {
       $72 = HEAP32[$$lcssa99>>2]|0;
       $73 = ((($72)) + 36|0);
       $74 = HEAP32[$73>>2]|0;
       __THREW__ = 0;
       $75 = (invoke_ii($74|0,($$lcssa99|0))|0);
       $76 = __THREW__; __THREW__ = 0;
       $77 = $76&1;
       if ($77) {
        $__stat_hold$sroa$0$0$ph$ph = $__stat_hold$sroa$0$1;
        label = 6;
        break L6;
       }
       $78 = ($75|0)==(-1);
       if ($78) {
        HEAP32[$__b>>2] = 0;
        $79 = 0;
        break;
       } else {
        $$pre$i$i$i7 = HEAP32[$__b>>2]|0;
        $79 = $$pre$i$i$i7;
        break;
       }
      } else {
       $79 = $$lcssa99;
      }
     }
    } while(0);
    $80 = ($79|0)==(0|0);
    do {
     if ($$lcssa) {
      label = 79;
     } else {
      $81 = ((($$pre$i2$i$i11$lcssa)) + 12|0);
      $82 = HEAP32[$81>>2]|0;
      $83 = ((($$pre$i2$i$i11$lcssa)) + 16|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = ($82|0)==($84|0);
      if ($85) {
       $86 = HEAP32[$$pre$i2$i$i11$lcssa>>2]|0;
       $87 = ((($86)) + 36|0);
       $88 = HEAP32[$87>>2]|0;
       __THREW__ = 0;
       $89 = (invoke_ii($88|0,($$pre$i2$i$i11$lcssa|0))|0);
       $90 = __THREW__; __THREW__ = 0;
       $91 = $90&1;
       if ($91) {
        $__stat_hold$sroa$0$0$ph$ph = $__stat_hold$sroa$0$1;
        label = 6;
        break L6;
       }
       $92 = ($89|0)==(-1);
       if ($92) {
        HEAP32[$__e>>2] = 0;
        label = 79;
        break;
       }
      }
      if ($80) {
       $$0 = $__kb;$__st$3 = $__status$0;
      } else {
       label = 80;
      }
     }
    } while(0);
    if ((label|0) == 79) {
     if ($80) {
      label = 80;
     } else {
      $$0 = $__kb;$__st$3 = $__status$0;
     }
    }
    if ((label|0) == 80) {
     $176 = HEAP32[$__err>>2]|0;
     $177 = $176 | 2;
     HEAP32[$__err>>2] = $177;
     $$0 = $__kb;$__st$3 = $__status$0;
    }
    while(1) {
     $178 = ($$0|0)==($__ke|0);
     if ($178) {
      label = 84;
      break;
     }
     $179 = HEAP8[$__st$3>>0]|0;
     $180 = ($179<<24>>24)==(2);
     if ($180) {
      $$041 = $$0;
      break;
     }
     $181 = ((($$0)) + 12|0);
     $182 = ((($__st$3)) + 1|0);
     $$0 = $181;$__st$3 = $182;
    }
    if ((label|0) == 84) {
     $183 = HEAP32[$__err>>2]|0;
     $184 = $183 | 4;
     HEAP32[$__err>>2] = $184;
     $$041 = $__ke;
    }
    $185 = ($__stat_hold$sroa$0$1|0)==(0);
    if (!($185)) {
     $186 = $__stat_hold$sroa$0$1;
     _free($186);
    }
    STACKTOP = sp;return ($$041|0);
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $__stat_hold$sroa$0$0 = $__stat_hold$sroa$0$0$ph$ph;$lpad$phi$index = $13;$lpad$phi$index3 = $14;
 }
 $15 = ($__stat_hold$sroa$0$0|0)==(0);
 if (!($15)) {
  $16 = $__stat_hold$sroa$0$0;
  _free($16);
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 32;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i4|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;
    } else {
     $23 = ((($$pre$i$i$i4)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i4)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i4>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i4|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 31;
       break;
      }
      $34 = ($31|0)==(-1);
      if ($34) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $35 = ($$pre$i$i$i|0)==(0|0);
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 23;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if (!($42)) {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_ii($45|0,($36|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 31;
       break L15;
      }
      $49 = ($46|0)==(-1);
      if ($49) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($35) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $50 = HEAP32[$__a_end>>2]|0;
    $51 = HEAP8[$__buf>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)==(0);
    $54 = HEAP32[$20>>2]|0;
    $55 = $51&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $56 : $54;
    $58 = (($__a$0) + ($57)|0);
    $59 = ($50|0)==($58|0);
    if ($59) {
     $60 = $57 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($60|0),0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      label = 31;
      break;
     }
     $63 = HEAP8[$__buf>>0]|0;
     $64 = $63 & 1;
     $65 = ($64<<24>>24)==(0);
     if ($65) {
      $68 = 10;
     } else {
      $66 = HEAP32[$__buf>>2]|0;
      $67 = $66 & -2;
      $phitmp$i19 = (($67) + -1)|0;
      $68 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($68|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if ($70) {
      label = 31;
      break;
     }
     $71 = HEAP8[$__buf>>0]|0;
     $72 = $71 & 1;
     $73 = ($72<<24>>24)==(0);
     $74 = HEAP32[$16>>2]|0;
     $75 = $73 ? $18 : $74;
     $76 = (($75) + ($57)|0);
     HEAP32[$__a_end>>2] = $76;
     $__a$1 = $75;
    } else {
     $__a$1 = $__a$0;
    }
    $81 = ((($$pre$i$i$i)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($$pre$i$i$i)) + 16|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($82|0)==($84|0);
    if ($85) {
     $86 = HEAP32[$$pre$i$i$i>>2]|0;
     $87 = ((($86)) + 36|0);
     $88 = HEAP32[$87>>2]|0;
     __THREW__ = 0;
     $89 = (invoke_ii($88|0,($$pre$i$i$i|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 31;
      break;
     } else {
      $$0$i$i = $89;
     }
    } else {
     $92 = HEAP8[$82>>0]|0;
     $93 = $92&255;
     $$0$i$i = $93;
    }
    $94 = $$0$i$i&255;
    $95 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($94,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $96 = ($95|0)==(0);
    if (!($96)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $97 = HEAP32[$81>>2]|0;
    $98 = HEAP32[$83>>2]|0;
    $99 = ($97|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$$pre$i$i$i>>2]|0;
     $101 = ((($100)) + 40|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     (invoke_ii($102|0,($$pre$i$i$i|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 31;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $105 = ((($97)) + 1|0);
     HEAP32[$81>>2] = $105;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 31) {
    $77 = ___cxa_find_matching_catch_2()|0;
    $78 = tempRet0;
    $lpad$phi$index = $77;$lpad$phi$index2 = $78;
    break;
   }
   $106 = HEAP8[$__grouping>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($__grouping)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = $106&255;
   $112 = $111 >>> 1;
   $113 = $108 ? $112 : $110;
   $114 = ($113|0)==(0);
   if (!($114)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_iiiii(694,($__a$2|0),($122|0),($__err|0),($$0$i|0))|0);
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 32;
   } else {
    HEAP32[$__v>>2] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 32;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 56;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 32;
        break L13;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 56;
        break;
       }
      }
      if (!($141)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 56) {
     if ($141) {
      label = 57;
     }
    }
    if ((label|0) == 57) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ___cxa_find_matching_catch_2()|0;
  $80 = tempRet0;
  $lpad$phi$index = $79;$lpad$phi$index2 = $80;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(608,($__loc|0),(22416|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(17188|0),((17214)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(608,($__loc|0),(22428|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP8[$__thousands_sep>>0] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     invoke_vii($20|0,($agg$result|0),($9|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0$i = 0, $$0$lcssa$i = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = ((($__atoms)) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$1 = 0;
  } else {
   label = 5;
  }
 } while(0);
 L6: do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$1 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$1 = 0;
    break;
   }
   $27 = ((($__atoms)) + 26|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP8[$$0$i>>0]|0;
    $30 = ($29<<24>>24)==($__ct<<24>>24);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = ((($$0$i)) + 1|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = ($34|0)>(23);
   if ($35) {
    $$1 = -1;
   } else {
    switch ($__base|0) {
    case 10: case 8:  {
     $36 = ($34|0)<($__base|0);
     if (!($36)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
    case 16:  {
     $37 = ($34|0)<(22);
     if (!($37)) {
      if ($1) {
       $$1 = -1;
       break L6;
      }
      $38 = $0;
      $39 = $__a;
      $40 = (($38) - ($39))|0;
      $41 = ($40|0)<(3);
      if (!($41)) {
       $$1 = -1;
       break L6;
      }
      $42 = ((($0)) + -1|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)==(48);
      if (!($44)) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$__dc>>2] = 0;
      $45 = (17188 + ($34)|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $47;
      HEAP8[$0>>0] = $46;
      $$1 = 0;
      break L6;
     }
     break;
    }
    default: {
    }
    }
    $48 = (17188 + ($34)|0);
    $49 = HEAP8[$48>>0]|0;
    $50 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $50;
    HEAP8[$0>>0] = $49;
    $51 = HEAP32[$__dc>>2]|0;
    $52 = (($51) + 1)|0;
    HEAP32[$__dc>>2] = $52;
    $$1 = 0;
   }
  }
 } while(0);
 return ($$1|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$1 = 0;
 } else {
  $1 = (___errno_location()|0);
  $2 = HEAP32[$1>>2]|0;
  HEAP32[$1>>2] = 0;
  $3 = (__ZNSt3__16__clocEv()|0);
  $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
  $5 = tempRet0;
  $6 = HEAP32[$1>>2]|0;
  $7 = ($6|0)==(0);
  if ($7) {
   HEAP32[$1>>2] = $2;
  }
  $8 = HEAP32[$__p2>>2]|0;
  $9 = ($8|0)==($__a_end|0);
  L7: do {
   if ($9) {
    $10 = ($6|0)==(34);
    do {
     if ($10) {
      HEAP32[$__err>>2] = 4;
      $21 = ($5|0)>(0);
      $22 = ($4>>>0)>(0);
      $23 = ($5|0)==(0);
      $24 = $23 & $22;
      $25 = $21 | $24;
      if ($25) {
       $$0 = 2147483647;
       break L7;
      }
     } else {
      $11 = ($5|0)<(-1);
      $12 = ($4>>>0)<(2147483648);
      $13 = ($5|0)==(-1);
      $14 = $13 & $12;
      $15 = $11 | $14;
      if ($15) {
       HEAP32[$__err>>2] = 4;
       break;
      }
      $16 = ($5|0)>(0);
      $17 = ($4>>>0)>(2147483647);
      $18 = ($5|0)==(0);
      $19 = $18 & $17;
      $20 = $16 | $19;
      if ($20) {
       HEAP32[$__err>>2] = 4;
       $$0 = 2147483647;
       break L7;
      } else {
       $$0 = $4;
       break L7;
      }
     }
    } while(0);
    $$0 = -2147483648;
   } else {
    HEAP32[$__err>>2] = 4;
    $$0 = 0;
   }
  } while(0);
  $$1 = $$0;
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20120]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20120|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_iiii(695,2147483647,(17221|0),(0|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if ($6) {
     $8 = ___cxa_find_matching_catch_2()|0;
     $9 = tempRet0;
     ___cxa_guard_abort((20120|0));
     ___resumeException($8|0);
     // unreachable;
    } else {
     HEAP32[5609] = $4;
     ___cxa_guard_release((20120|0));
     break;
    }
   }
  }
 } while(0);
 $7 = HEAP32[5609]|0;
 return ($7|0);
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$0$i$i = 0, $$01$i$i = 0, $$__ig$0 = 0, $$not = 0, $$pre = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$0 = 0, $__r$0 = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 $3 = ((($__grouping)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $0&255;
 $6 = $5 >>> 1;
 $7 = $2 ? $6 : $4;
 $8 = ($7|0)==(0);
 do {
  if (!($8)) {
   $9 = ($__g|0)==($__g_end|0);
   if ($9) {
    $16 = $0;$24 = $4;
   } else {
    $$0$i$i = $__g_end;$$01$i$i = $__g;
    while(1) {
     $10 = ((($$0$i$i)) + -4|0);
     $11 = ($$01$i$i>>>0)<($10>>>0);
     if (!($11)) {
      break;
     }
     $12 = HEAP32[$$01$i$i>>2]|0;
     $13 = HEAP32[$10>>2]|0;
     HEAP32[$$01$i$i>>2] = $13;
     HEAP32[$10>>2] = $12;
     $14 = ((($$01$i$i)) + 4|0);
     $$0$i$i = $10;$$01$i$i = $14;
    }
    $$pre = HEAP8[$__grouping>>0]|0;
    $$pre11 = HEAP32[$3>>2]|0;
    $16 = $$pre;$24 = $$pre11;
   }
   $15 = $16 & 1;
   $17 = ($15<<24>>24)==(0);
   $18 = ((($__grouping)) + 8|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($__grouping)) + 1|0);
   $21 = $17 ? $20 : $19;
   $22 = $16&255;
   $23 = $22 >>> 1;
   $25 = $17 ? $23 : $24;
   $26 = (($21) + ($25)|0);
   $27 = ((($__g_end)) + -4|0);
   $28 = $26;
   $__ig$0 = $21;$__r$0 = $__g;
   while(1) {
    $29 = ($__r$0>>>0)<($27>>>0);
    $30 = HEAP8[$__ig$0>>0]|0;
    $$not = ($30<<24>>24)<(1);
    $31 = ($30<<24>>24)==(127);
    $or$cond2 = $$not | $31;
    if (!($29)) {
     break;
    }
    if (!($or$cond2)) {
     $32 = $30 << 24 >> 24;
     $33 = HEAP32[$__r$0>>2]|0;
     $34 = ($32|0)==($33|0);
     if (!($34)) {
      label = 10;
      break;
     }
    }
    $35 = $__ig$0;
    $36 = (($28) - ($35))|0;
    $37 = ($36|0)>(1);
    $38 = ((($__ig$0)) + 1|0);
    $$__ig$0 = $37 ? $38 : $__ig$0;
    $39 = ((($__r$0)) + 4|0);
    $__ig$0 = $$__ig$0;$__r$0 = $39;
   }
   if ((label|0) == 10) {
    HEAP32[$__err>>2] = 4;
    break;
   }
   if (!($or$cond2)) {
    $40 = $30 << 24 >> 24;
    $41 = HEAP32[$27>>2]|0;
    $42 = (($41) + -1)|0;
    $43 = ($42>>>0)<($40>>>0);
    if (!($43)) {
     HEAP32[$__err>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0;
 var $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 32;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i4|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;
    } else {
     $23 = ((($$pre$i$i$i4)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i4)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i4>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i4|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 31;
       break;
      }
      $34 = ($31|0)==(-1);
      if ($34) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $35 = ($$pre$i$i$i|0)==(0|0);
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 23;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if (!($42)) {
       if ($35) {
        $163 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_ii($45|0,($36|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 31;
       break L15;
      }
      $49 = ($46|0)==(-1);
      if ($49) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($35) {
        $163 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($35) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $50 = HEAP32[$__a_end>>2]|0;
    $51 = HEAP8[$__buf>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)==(0);
    $54 = HEAP32[$20>>2]|0;
    $55 = $51&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $56 : $54;
    $58 = (($__a$0) + ($57)|0);
    $59 = ($50|0)==($58|0);
    if ($59) {
     $60 = $57 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($60|0),0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      label = 31;
      break;
     }
     $63 = HEAP8[$__buf>>0]|0;
     $64 = $63 & 1;
     $65 = ($64<<24>>24)==(0);
     if ($65) {
      $68 = 10;
     } else {
      $66 = HEAP32[$__buf>>2]|0;
      $67 = $66 & -2;
      $phitmp$i19 = (($67) + -1)|0;
      $68 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($68|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if ($70) {
      label = 31;
      break;
     }
     $71 = HEAP8[$__buf>>0]|0;
     $72 = $71 & 1;
     $73 = ($72<<24>>24)==(0);
     $74 = HEAP32[$16>>2]|0;
     $75 = $73 ? $18 : $74;
     $76 = (($75) + ($57)|0);
     HEAP32[$__a_end>>2] = $76;
     $__a$1 = $75;
    } else {
     $__a$1 = $__a$0;
    }
    $81 = ((($$pre$i$i$i)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($$pre$i$i$i)) + 16|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($82|0)==($84|0);
    if ($85) {
     $86 = HEAP32[$$pre$i$i$i>>2]|0;
     $87 = ((($86)) + 36|0);
     $88 = HEAP32[$87>>2]|0;
     __THREW__ = 0;
     $89 = (invoke_ii($88|0,($$pre$i$i$i|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 31;
      break;
     } else {
      $$0$i$i = $89;
     }
    } else {
     $92 = HEAP8[$82>>0]|0;
     $93 = $92&255;
     $$0$i$i = $93;
    }
    $94 = $$0$i$i&255;
    $95 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($94,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $96 = ($95|0)==(0);
    if (!($96)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $97 = HEAP32[$81>>2]|0;
    $98 = HEAP32[$83>>2]|0;
    $99 = ($97|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$$pre$i$i$i>>2]|0;
     $101 = ((($100)) + 40|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     (invoke_ii($102|0,($$pre$i$i$i|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 31;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $105 = ((($97)) + 1|0);
     HEAP32[$81>>2] = $105;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 31) {
    $77 = ___cxa_find_matching_catch_2()|0;
    $78 = tempRet0;
    $lpad$phi$index = $77;$lpad$phi$index2 = $78;
    break;
   }
   $106 = HEAP8[$__grouping>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($__grouping)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = $106&255;
   $112 = $111 >>> 1;
   $113 = $108 ? $112 : $110;
   $114 = ($113|0)==(0);
   if (!($114)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_iiiii(696,($__a$2|0),($122|0),($__err|0),($$0$i|0))|0);
   $124 = tempRet0;
   $125 = __THREW__; __THREW__ = 0;
   $126 = $125&1;
   if ($126) {
    label = 32;
   } else {
    $127 = $__v;
    $128 = $127;
    HEAP32[$128>>2] = $123;
    $129 = (($127) + 4)|0;
    $130 = $129;
    HEAP32[$130>>2] = $124;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($132) {
     $145 = 0;
    } else {
     $133 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $139 = ((($138)) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$pre$i$i$i$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 32;
       break;
      }
      $144 = ($141|0)==(-1);
      if ($144) {
       HEAP32[$__b>>2] = 0;
       $145 = 0;
      } else {
       $145 = $$pre$i$i$i$lcssa;
      }
     } else {
      $145 = $$pre$i$i$i$lcssa;
     }
    }
    $146 = ($145|0)==(0|0);
    $147 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($147) {
      label = 56;
     } else {
      $148 = ((($$pre$i2$i$i)) + 12|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ((($$pre$i2$i$i)) + 16|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = ($149|0)==($151|0);
      if ($152) {
       $153 = HEAP32[$$pre$i2$i$i>>2]|0;
       $154 = ((($153)) + 36|0);
       $155 = HEAP32[$154>>2]|0;
       __THREW__ = 0;
       $156 = (invoke_ii($155|0,($$pre$i2$i$i|0))|0);
       $157 = __THREW__; __THREW__ = 0;
       $158 = $157&1;
       if ($158) {
        label = 32;
        break L13;
       }
       $159 = ($156|0)==(-1);
       if ($159) {
        HEAP32[$__e>>2] = 0;
        label = 56;
        break;
       }
      }
      if (!($146)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 56) {
     if ($146) {
      label = 57;
     }
    }
    if ((label|0) == 57) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    $162 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($162|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ___cxa_find_matching_catch_2()|0;
  $80 = tempRet0;
  $lpad$phi$index = $79;$lpad$phi$index2 = $80;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $18 = 0;$19 = 0;
 } else {
  $1 = (___errno_location()|0);
  $2 = HEAP32[$1>>2]|0;
  HEAP32[$1>>2] = 0;
  $3 = (__ZNSt3__16__clocEv()|0);
  $4 = (_strtoll_l($__a,$__p2,$__base,$3)|0);
  $5 = tempRet0;
  $6 = HEAP32[$1>>2]|0;
  $7 = ($6|0)==(0);
  if ($7) {
   HEAP32[$1>>2] = $2;
  }
  $8 = HEAP32[$__p2>>2]|0;
  $9 = ($8|0)==($__a_end|0);
  if ($9) {
   $10 = ($6|0)==(34);
   if ($10) {
    HEAP32[$__err>>2] = 4;
    $11 = ($5|0)>(0);
    $12 = ($4>>>0)>(0);
    $13 = ($5|0)==(0);
    $14 = $13 & $12;
    $15 = $11 | $14;
    $16 = $15 ? -1 : 0;
    $17 = $15 ? 2147483647 : -2147483648;
    $20 = $16;$21 = $17;
   } else {
    $20 = $4;$21 = $5;
   }
  } else {
   HEAP32[$__err>>2] = 4;
   $20 = 0;$21 = 0;
  }
  $18 = $21;$19 = $20;
 }
 tempRet0 = ($18);
 STACKTOP = sp;return ($19|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 32;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i4|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;
    } else {
     $23 = ((($$pre$i$i$i4)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i4)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i4>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i4|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 31;
       break;
      }
      $34 = ($31|0)==(-1);
      if ($34) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $35 = ($$pre$i$i$i|0)==(0|0);
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 23;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if (!($42)) {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_ii($45|0,($36|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 31;
       break L15;
      }
      $49 = ($46|0)==(-1);
      if ($49) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($35) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $50 = HEAP32[$__a_end>>2]|0;
    $51 = HEAP8[$__buf>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)==(0);
    $54 = HEAP32[$20>>2]|0;
    $55 = $51&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $56 : $54;
    $58 = (($__a$0) + ($57)|0);
    $59 = ($50|0)==($58|0);
    if ($59) {
     $60 = $57 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($60|0),0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      label = 31;
      break;
     }
     $63 = HEAP8[$__buf>>0]|0;
     $64 = $63 & 1;
     $65 = ($64<<24>>24)==(0);
     if ($65) {
      $68 = 10;
     } else {
      $66 = HEAP32[$__buf>>2]|0;
      $67 = $66 & -2;
      $phitmp$i19 = (($67) + -1)|0;
      $68 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($68|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if ($70) {
      label = 31;
      break;
     }
     $71 = HEAP8[$__buf>>0]|0;
     $72 = $71 & 1;
     $73 = ($72<<24>>24)==(0);
     $74 = HEAP32[$16>>2]|0;
     $75 = $73 ? $18 : $74;
     $76 = (($75) + ($57)|0);
     HEAP32[$__a_end>>2] = $76;
     $__a$1 = $75;
    } else {
     $__a$1 = $__a$0;
    }
    $81 = ((($$pre$i$i$i)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($$pre$i$i$i)) + 16|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($82|0)==($84|0);
    if ($85) {
     $86 = HEAP32[$$pre$i$i$i>>2]|0;
     $87 = ((($86)) + 36|0);
     $88 = HEAP32[$87>>2]|0;
     __THREW__ = 0;
     $89 = (invoke_ii($88|0,($$pre$i$i$i|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 31;
      break;
     } else {
      $$0$i$i = $89;
     }
    } else {
     $92 = HEAP8[$82>>0]|0;
     $93 = $92&255;
     $$0$i$i = $93;
    }
    $94 = $$0$i$i&255;
    $95 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($94,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $96 = ($95|0)==(0);
    if (!($96)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $97 = HEAP32[$81>>2]|0;
    $98 = HEAP32[$83>>2]|0;
    $99 = ($97|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$$pre$i$i$i>>2]|0;
     $101 = ((($100)) + 40|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     (invoke_ii($102|0,($$pre$i$i$i|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 31;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $105 = ((($97)) + 1|0);
     HEAP32[$81>>2] = $105;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 31) {
    $77 = ___cxa_find_matching_catch_2()|0;
    $78 = tempRet0;
    $lpad$phi$index = $77;$lpad$phi$index2 = $78;
    break;
   }
   $106 = HEAP8[$__grouping>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($__grouping)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = $106&255;
   $112 = $111 >>> 1;
   $113 = $108 ? $112 : $110;
   $114 = ($113|0)==(0);
   if (!($114)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_iiiii(697,($__a$2|0),($122|0),($__err|0),($$0$i|0))|0);
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 32;
   } else {
    HEAP16[$__v>>1] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 32;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 56;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 32;
        break L13;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 56;
        break;
       }
      }
      if (!($141)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 56) {
     if ($141) {
      label = 57;
     }
    }
    if ((label|0) == 57) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ___cxa_find_matching_catch_2()|0;
  $80 = tempRet0;
  $lpad$phi$index = $79;$lpad$phi$index2 = $80;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$1 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$1 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   do {
    if ($11) {
     $12 = ($8|0)==(34);
     $13 = ($7>>>0)>(0);
     $14 = ($6>>>0)>(65535);
     $15 = ($7|0)==(0);
     $16 = $15 & $14;
     $17 = $13 | $16;
     $or$cond = $17 | $12;
     if ($or$cond) {
      HEAP32[$__err>>2] = 4;
      $$0 = -1;
      break;
     } else {
      $18 = $6&65535;
      $$0 = $18;
      break;
     }
    } else {
     HEAP32[$__err>>2] = 4;
     $$0 = 0;
    }
   } while(0);
   $$1 = $$0;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 32;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i4|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;
    } else {
     $23 = ((($$pre$i$i$i4)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i4)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i4>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i4|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 31;
       break;
      }
      $34 = ($31|0)==(-1);
      if ($34) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $35 = ($$pre$i$i$i|0)==(0|0);
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 23;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if (!($42)) {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_ii($45|0,($36|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 31;
       break L15;
      }
      $49 = ($46|0)==(-1);
      if ($49) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($35) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $50 = HEAP32[$__a_end>>2]|0;
    $51 = HEAP8[$__buf>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)==(0);
    $54 = HEAP32[$20>>2]|0;
    $55 = $51&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $56 : $54;
    $58 = (($__a$0) + ($57)|0);
    $59 = ($50|0)==($58|0);
    if ($59) {
     $60 = $57 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($60|0),0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      label = 31;
      break;
     }
     $63 = HEAP8[$__buf>>0]|0;
     $64 = $63 & 1;
     $65 = ($64<<24>>24)==(0);
     if ($65) {
      $68 = 10;
     } else {
      $66 = HEAP32[$__buf>>2]|0;
      $67 = $66 & -2;
      $phitmp$i19 = (($67) + -1)|0;
      $68 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($68|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if ($70) {
      label = 31;
      break;
     }
     $71 = HEAP8[$__buf>>0]|0;
     $72 = $71 & 1;
     $73 = ($72<<24>>24)==(0);
     $74 = HEAP32[$16>>2]|0;
     $75 = $73 ? $18 : $74;
     $76 = (($75) + ($57)|0);
     HEAP32[$__a_end>>2] = $76;
     $__a$1 = $75;
    } else {
     $__a$1 = $__a$0;
    }
    $81 = ((($$pre$i$i$i)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($$pre$i$i$i)) + 16|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($82|0)==($84|0);
    if ($85) {
     $86 = HEAP32[$$pre$i$i$i>>2]|0;
     $87 = ((($86)) + 36|0);
     $88 = HEAP32[$87>>2]|0;
     __THREW__ = 0;
     $89 = (invoke_ii($88|0,($$pre$i$i$i|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 31;
      break;
     } else {
      $$0$i$i = $89;
     }
    } else {
     $92 = HEAP8[$82>>0]|0;
     $93 = $92&255;
     $$0$i$i = $93;
    }
    $94 = $$0$i$i&255;
    $95 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($94,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $96 = ($95|0)==(0);
    if (!($96)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $97 = HEAP32[$81>>2]|0;
    $98 = HEAP32[$83>>2]|0;
    $99 = ($97|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$$pre$i$i$i>>2]|0;
     $101 = ((($100)) + 40|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     (invoke_ii($102|0,($$pre$i$i$i|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 31;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $105 = ((($97)) + 1|0);
     HEAP32[$81>>2] = $105;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 31) {
    $77 = ___cxa_find_matching_catch_2()|0;
    $78 = tempRet0;
    $lpad$phi$index = $77;$lpad$phi$index2 = $78;
    break;
   }
   $106 = HEAP8[$__grouping>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($__grouping)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = $106&255;
   $112 = $111 >>> 1;
   $113 = $108 ? $112 : $110;
   $114 = ($113|0)==(0);
   if (!($114)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_iiiii(698,($__a$2|0),($122|0),($__err|0),($$0$i|0))|0);
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 32;
   } else {
    HEAP32[$__v>>2] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 32;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 56;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 32;
        break L13;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 56;
        break;
       }
      }
      if (!($141)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 56) {
     if ($141) {
      label = 57;
     }
    }
    if ((label|0) == 57) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ___cxa_find_matching_catch_2()|0;
  $80 = tempRet0;
  $lpad$phi$index = $79;$lpad$phi$index2 = $80;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$1 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$1 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   do {
    if ($11) {
     $12 = ($8|0)==(34);
     $13 = ($7>>>0)>(0);
     $14 = ($6>>>0)>(4294967295);
     $15 = ($7|0)==(0);
     $16 = $15 & $14;
     $17 = $13 | $16;
     $or$cond = $17 | $12;
     if ($or$cond) {
      HEAP32[$__err>>2] = 4;
      $$0 = -1;
      break;
     } else {
      $$0 = $6;
      break;
     }
    } else {
     HEAP32[$__err>>2] = 4;
     $$0 = 0;
    }
   } while(0);
   $$1 = $$0;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0;
 var $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 32;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i4|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;
    } else {
     $23 = ((($$pre$i$i$i4)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i4)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i4>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i4|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 31;
       break;
      }
      $34 = ($31|0)==(-1);
      if ($34) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $35 = ($$pre$i$i$i|0)==(0|0);
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 23;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if (!($42)) {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_ii($45|0,($36|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 31;
       break L15;
      }
      $49 = ($46|0)==(-1);
      if ($49) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($35) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($35) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $50 = HEAP32[$__a_end>>2]|0;
    $51 = HEAP8[$__buf>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)==(0);
    $54 = HEAP32[$20>>2]|0;
    $55 = $51&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $56 : $54;
    $58 = (($__a$0) + ($57)|0);
    $59 = ($50|0)==($58|0);
    if ($59) {
     $60 = $57 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($60|0),0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      label = 31;
      break;
     }
     $63 = HEAP8[$__buf>>0]|0;
     $64 = $63 & 1;
     $65 = ($64<<24>>24)==(0);
     if ($65) {
      $68 = 10;
     } else {
      $66 = HEAP32[$__buf>>2]|0;
      $67 = $66 & -2;
      $phitmp$i19 = (($67) + -1)|0;
      $68 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($68|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if ($70) {
      label = 31;
      break;
     }
     $71 = HEAP8[$__buf>>0]|0;
     $72 = $71 & 1;
     $73 = ($72<<24>>24)==(0);
     $74 = HEAP32[$16>>2]|0;
     $75 = $73 ? $18 : $74;
     $76 = (($75) + ($57)|0);
     HEAP32[$__a_end>>2] = $76;
     $__a$1 = $75;
    } else {
     $__a$1 = $__a$0;
    }
    $81 = ((($$pre$i$i$i)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($$pre$i$i$i)) + 16|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($82|0)==($84|0);
    if ($85) {
     $86 = HEAP32[$$pre$i$i$i>>2]|0;
     $87 = ((($86)) + 36|0);
     $88 = HEAP32[$87>>2]|0;
     __THREW__ = 0;
     $89 = (invoke_ii($88|0,($$pre$i$i$i|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 31;
      break;
     } else {
      $$0$i$i = $89;
     }
    } else {
     $92 = HEAP8[$82>>0]|0;
     $93 = $92&255;
     $$0$i$i = $93;
    }
    $94 = $$0$i$i&255;
    $95 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($94,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $96 = ($95|0)==(0);
    if (!($96)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $97 = HEAP32[$81>>2]|0;
    $98 = HEAP32[$83>>2]|0;
    $99 = ($97|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$$pre$i$i$i>>2]|0;
     $101 = ((($100)) + 40|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     (invoke_ii($102|0,($$pre$i$i$i|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 31;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $105 = ((($97)) + 1|0);
     HEAP32[$81>>2] = $105;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 31) {
    $77 = ___cxa_find_matching_catch_2()|0;
    $78 = tempRet0;
    $lpad$phi$index = $77;$lpad$phi$index2 = $78;
    break;
   }
   $106 = HEAP8[$__grouping>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($__grouping)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = $106&255;
   $112 = $111 >>> 1;
   $113 = $108 ? $112 : $110;
   $114 = ($113|0)==(0);
   if (!($114)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_iiiii(699,($__a$2|0),($122|0),($__err|0),($$0$i|0))|0);
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 32;
   } else {
    HEAP32[$__v>>2] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 32;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 56;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 32;
        break L13;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 56;
        break;
       }
      }
      if (!($141)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 56) {
     if ($141) {
      label = 57;
     }
    }
    if ((label|0) == 57) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ___cxa_find_matching_catch_2()|0;
  $80 = tempRet0;
  $lpad$phi$index = $79;$lpad$phi$index2 = $80;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p2 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$1 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $$1 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   do {
    if ($11) {
     $12 = ($8|0)==(34);
     $13 = ($7>>>0)>(0);
     $14 = ($6>>>0)>(4294967295);
     $15 = ($7|0)==(0);
     $16 = $15 & $14;
     $17 = $13 | $16;
     $or$cond = $17 | $12;
     if ($or$cond) {
      HEAP32[$__err>>2] = 4;
      $$0 = -1;
      break;
     } else {
      $$0 = $6;
      break;
     }
    } else {
     HEAP32[$__err>>2] = 4;
     $$0 = 0;
    }
   } while(0);
   $$1 = $$0;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0;
 var $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i19 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 198|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 32;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i4 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i4|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;
    } else {
     $23 = ((($$pre$i$i$i4)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i4)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i4>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i4|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 31;
       break;
      }
      $34 = ($31|0)==(-1);
      if ($34) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i4;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i4;
     }
    }
    $35 = ($$pre$i$i$i|0)==(0|0);
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 23;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if (!($42)) {
       if ($35) {
        $163 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
      $43 = HEAP32[$36>>2]|0;
      $44 = ((($43)) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_ii($45|0,($36|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 31;
       break L15;
      }
      $49 = ($46|0)==(-1);
      if ($49) {
       HEAP32[$__e>>2] = 0;
       label = 23;
       break;
      } else {
       if ($35) {
        $163 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 23) {
     label = 0;
     if ($35) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $50 = HEAP32[$__a_end>>2]|0;
    $51 = HEAP8[$__buf>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)==(0);
    $54 = HEAP32[$20>>2]|0;
    $55 = $51&255;
    $56 = $55 >>> 1;
    $57 = $53 ? $56 : $54;
    $58 = (($__a$0) + ($57)|0);
    $59 = ($50|0)==($58|0);
    if ($59) {
     $60 = $57 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($60|0),0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      label = 31;
      break;
     }
     $63 = HEAP8[$__buf>>0]|0;
     $64 = $63 & 1;
     $65 = ($64<<24>>24)==(0);
     if ($65) {
      $68 = 10;
     } else {
      $66 = HEAP32[$__buf>>2]|0;
      $67 = $66 & -2;
      $phitmp$i19 = (($67) + -1)|0;
      $68 = $phitmp$i19;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($68|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if ($70) {
      label = 31;
      break;
     }
     $71 = HEAP8[$__buf>>0]|0;
     $72 = $71 & 1;
     $73 = ($72<<24>>24)==(0);
     $74 = HEAP32[$16>>2]|0;
     $75 = $73 ? $18 : $74;
     $76 = (($75) + ($57)|0);
     HEAP32[$__a_end>>2] = $76;
     $__a$1 = $75;
    } else {
     $__a$1 = $__a$0;
    }
    $81 = ((($$pre$i$i$i)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($$pre$i$i$i)) + 16|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($82|0)==($84|0);
    if ($85) {
     $86 = HEAP32[$$pre$i$i$i>>2]|0;
     $87 = ((($86)) + 36|0);
     $88 = HEAP32[$87>>2]|0;
     __THREW__ = 0;
     $89 = (invoke_ii($88|0,($$pre$i$i$i|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      label = 31;
      break;
     } else {
      $$0$i$i = $89;
     }
    } else {
     $92 = HEAP8[$82>>0]|0;
     $93 = $92&255;
     $$0$i$i = $93;
    }
    $94 = $$0$i$i&255;
    $95 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($94,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $96 = ($95|0)==(0);
    if (!($96)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $97 = HEAP32[$81>>2]|0;
    $98 = HEAP32[$83>>2]|0;
    $99 = ($97|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$$pre$i$i$i>>2]|0;
     $101 = ((($100)) + 40|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     (invoke_ii($102|0,($$pre$i$i$i|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 31;
      break;
     } else {
      $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $105 = ((($97)) + 1|0);
     HEAP32[$81>>2] = $105;
     $$pre$i$i$i4 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 31) {
    $77 = ___cxa_find_matching_catch_2()|0;
    $78 = tempRet0;
    $lpad$phi$index = $77;$lpad$phi$index2 = $78;
    break;
   }
   $106 = HEAP8[$__grouping>>0]|0;
   $107 = $106 & 1;
   $108 = ($107<<24>>24)==(0);
   $109 = ((($__grouping)) + 4|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = $106&255;
   $112 = $111 >>> 1;
   $113 = $108 ? $112 : $110;
   $114 = ($113|0)==(0);
   if (!($114)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (invoke_iiiii(700,($__a$2|0),($122|0),($__err|0),($$0$i|0))|0);
   $124 = tempRet0;
   $125 = __THREW__; __THREW__ = 0;
   $126 = $125&1;
   if ($126) {
    label = 32;
   } else {
    $127 = $__v;
    $128 = $127;
    HEAP32[$128>>2] = $123;
    $129 = (($127) + 4)|0;
    $130 = $129;
    HEAP32[$130>>2] = $124;
    $131 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$131,$__err);
    $132 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($132) {
     $145 = 0;
    } else {
     $133 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ($134|0)==($136|0);
     if ($137) {
      $138 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $139 = ((($138)) + 36|0);
      $140 = HEAP32[$139>>2]|0;
      __THREW__ = 0;
      $141 = (invoke_ii($140|0,($$pre$i$i$i$lcssa|0))|0);
      $142 = __THREW__; __THREW__ = 0;
      $143 = $142&1;
      if ($143) {
       label = 32;
       break;
      }
      $144 = ($141|0)==(-1);
      if ($144) {
       HEAP32[$__b>>2] = 0;
       $145 = 0;
      } else {
       $145 = $$pre$i$i$i$lcssa;
      }
     } else {
      $145 = $$pre$i$i$i$lcssa;
     }
    }
    $146 = ($145|0)==(0|0);
    $147 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($147) {
      label = 56;
     } else {
      $148 = ((($$pre$i2$i$i)) + 12|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ((($$pre$i2$i$i)) + 16|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = ($149|0)==($151|0);
      if ($152) {
       $153 = HEAP32[$$pre$i2$i$i>>2]|0;
       $154 = ((($153)) + 36|0);
       $155 = HEAP32[$154>>2]|0;
       __THREW__ = 0;
       $156 = (invoke_ii($155|0,($$pre$i2$i$i|0))|0);
       $157 = __THREW__; __THREW__ = 0;
       $158 = $157&1;
       if ($158) {
        label = 32;
        break L13;
       }
       $159 = ($156|0)==(-1);
       if ($159) {
        HEAP32[$__e>>2] = 0;
        label = 56;
        break;
       }
      }
      if (!($146)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 56) {
     if ($146) {
      label = 57;
     }
    }
    if ((label|0) == 57) {
     $160 = HEAP32[$__err>>2]|0;
     $161 = $160 | 2;
     HEAP32[$__err>>2] = $161;
    }
    $162 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($162|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ___cxa_find_matching_catch_2()|0;
  $80 = tempRet0;
  $lpad$phi$index = $79;$lpad$phi$index2 = $80;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $13 = 0;$14 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $13 = 0;$14 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   $5 = (__ZNSt3__16__clocEv()|0);
   $6 = (_strtoull_l($__a,$__p2,$__base,$5)|0);
   $7 = tempRet0;
   $8 = HEAP32[$3>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    HEAP32[$3>>2] = $4;
   }
   $10 = HEAP32[$__p2>>2]|0;
   $11 = ($10|0)==($__a_end|0);
   if ($11) {
    $12 = ($8|0)==(34);
    if ($12) {
     HEAP32[$__err>>2] = 4;
     $15 = -1;$16 = -1;
    } else {
     $15 = $6;$16 = $7;
    }
   } else {
    HEAP32[$__err>>2] = 4;
    $15 = 0;$16 = 0;
   }
   $13 = $16;$14 = $15;
  }
 } while(0);
 tempRet0 = ($13);
 STACKTOP = sp;return ($14|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0;
 var $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 28;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L10: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 27;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 19;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 27;
       break L10;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 19;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
     }
    } while(0);
    if ((label|0) == 19) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 27;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 27;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 27;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 27;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 27) {
    $75 = ___cxa_find_matching_catch_2()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(701,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 28;
   } else {
    HEAPF32[$__v>>2] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 28;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 52;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 28;
        break L8;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 52;
        break;
       }
      }
      if (!($141)) {
       label = 53;
      }
     }
    } while(0);
    if ((label|0) == 52) {
     if ($141) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 28) {
  $77 = ___cxa_find_matching_catch_2()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(608,($__loc|0),(22416|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(17188|0),((17220)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(608,($__loc|0),(22428|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP8[$__decimal_point>>0] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     $21 = (invoke_ii($20|0,($9|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      HEAP8[$__thousands_sep>>0] = $21;
      $24 = HEAP32[$9>>2]|0;
      $25 = ((($24)) + 20|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      invoke_vii($26|0,($agg$result|0),($9|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch_2()|0;
 $30 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0$i = 0, $$0$lcssa$i = 0, $$2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 L1: do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$2 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$2 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$2 = 0;
     } else {
      $$2 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$2 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$2 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$2 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 32|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP8[$$0$i>>0]|0;
    $43 = ($42<<24>>24)==($__ct<<24>>24);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = ((($$0$i)) + 1|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = ($47|0)>(31);
   if ($48) {
    $$2 = -1;
   } else {
    $49 = (17188 + ($47)|0);
    $50 = HEAP8[$49>>0]|0;
    switch ($47|0) {
    case 24: case 25:  {
     $51 = HEAP32[$__a_end>>2]|0;
     $52 = ($51|0)==($__a|0);
     if (!($52)) {
      $53 = ((($51)) + -1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = $54&255;
      $56 = $55 & 95;
      $57 = HEAP8[$__exp>>0]|0;
      $58 = $57&255;
      $59 = $58 & 127;
      $60 = ($56|0)==($59|0);
      if (!($60)) {
       $$2 = -1;
       break L1;
      }
     }
     $61 = ((($51)) + 1|0);
     HEAP32[$__a_end>>2] = $61;
     HEAP8[$51>>0] = $50;
     $$2 = 0;
     break L1;
     break;
    }
    case 23: case 22:  {
     HEAP8[$__exp>>0] = 80;
     $62 = HEAP32[$__a_end>>2]|0;
     $63 = ((($62)) + 1|0);
     HEAP32[$__a_end>>2] = $63;
     HEAP8[$62>>0] = $50;
     $$2 = 0;
     break L1;
     break;
    }
    default: {
     $64 = $50&255;
     $65 = $64 & 95;
     $66 = HEAP8[$__exp>>0]|0;
     $67 = $66 << 24 >> 24;
     $68 = ($65|0)==($67|0);
     if ($68) {
      $69 = $65 | 128;
      $70 = $69&255;
      HEAP8[$__exp>>0] = $70;
      $71 = HEAP8[$__in_units>>0]|0;
      $72 = ($71<<24>>24)==(0);
      if (!($72)) {
       HEAP8[$__in_units>>0] = 0;
       $73 = HEAP8[$__grouping>>0]|0;
       $74 = $73 & 1;
       $75 = ($74<<24>>24)==(0);
       $76 = ((($__grouping)) + 4|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = $73&255;
       $79 = $78 >>> 1;
       $80 = $75 ? $79 : $77;
       $81 = ($80|0)==(0);
       if (!($81)) {
        $82 = HEAP32[$__g_end>>2]|0;
        $83 = $82;
        $84 = $__g;
        $85 = (($83) - ($84))|0;
        $86 = ($85|0)<(160);
        if ($86) {
         $87 = HEAP32[$__dc>>2]|0;
         $88 = ((($82)) + 4|0);
         HEAP32[$__g_end>>2] = $88;
         HEAP32[$82>>2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$__a_end>>2] = $90;
     HEAP8[$89>>0] = $50;
     $91 = ($47|0)>(21);
     if ($91) {
      $$2 = 0;
      break L1;
     }
     $92 = HEAP32[$__dc>>2]|0;
     $93 = (($92) + 1)|0;
     HEAP32[$__dc>>2] = $93;
     $$2 = 0;
     break L1;
    }
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $$1 = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$1 = 0.0;
 } else {
  $1 = (___errno_location()|0);
  $2 = HEAP32[$1>>2]|0;
  HEAP32[$1>>2] = 0;
  $3 = (__ZNSt3__16__clocEv()|0);
  $4 = (+_strtold_l($__a,$__p2,$3));
  $5 = HEAP32[$1>>2]|0;
  $6 = ($5|0)==(0);
  if ($6) {
   HEAP32[$1>>2] = $2;
  }
  $7 = HEAP32[$__p2>>2]|0;
  $8 = ($7|0)==($__a_end|0);
  if ($8) {
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
   }
   $10 = $4;
   $$0 = $10;
  } else {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return (+$$1);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0;
 var $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 28;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L10: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 27;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 19;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 27;
       break L10;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 19;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
     }
    } while(0);
    if ((label|0) == 19) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 27;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 27;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 27;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 27;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 27) {
    $75 = ___cxa_find_matching_catch_2()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(702,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 28;
   } else {
    HEAPF64[$__v>>3] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 28;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 52;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 28;
        break L8;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 52;
        break;
       }
      }
      if (!($141)) {
       label = 53;
      }
     }
    } while(0);
    if ((label|0) == 52) {
     if ($141) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 28) {
  $77 = ___cxa_find_matching_catch_2()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $$1 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$1 = 0.0;
 } else {
  $1 = (___errno_location()|0);
  $2 = HEAP32[$1>>2]|0;
  HEAP32[$1>>2] = 0;
  $3 = (__ZNSt3__16__clocEv()|0);
  $4 = (+_strtold_l($__a,$__p2,$3));
  $5 = HEAP32[$1>>2]|0;
  $6 = ($5|0)==(0);
  if ($6) {
   HEAP32[$1>>2] = $2;
  }
  $7 = HEAP32[$__p2>>2]|0;
  $8 = ($7|0)==($__a_end|0);
  if ($8) {
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  } else {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return (+$$1);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0;
 var $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__decimal_point = sp + 199|0;
 $__thousands_sep = sp + 198|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 197|0;
 $__exp = sp + 196|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 28;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP8[$__decimal_point>>0]|0;
   $19 = HEAP8[$__thousands_sep>>0]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $16;
   L10: while(1) {
    $20 = ($$pre$i$i$i5|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;
    } else {
     $21 = ((($$pre$i$i$i5)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i5)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i5>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i5|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 27;
       break;
      }
      $32 = ($29|0)==(-1);
      if ($32) {
       HEAP32[$__b>>2] = 0;
       $$pre$i$i$i = 0;
      } else {
       $$pre$i$i$i = $$pre$i$i$i5;
      }
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;
     }
    }
    $33 = ($$pre$i$i$i|0)==(0|0);
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 19;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if (!($40)) {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
      $41 = HEAP32[$34>>2]|0;
      $42 = ((($41)) + 36|0);
      $43 = HEAP32[$42>>2]|0;
      __THREW__ = 0;
      $44 = (invoke_ii($43|0,($34|0))|0);
      $45 = __THREW__; __THREW__ = 0;
      $46 = $45&1;
      if ($46) {
       label = 27;
       break L10;
      }
      $47 = ($44|0)==(-1);
      if ($47) {
       HEAP32[$__e>>2] = 0;
       label = 19;
       break;
      } else {
       if ($33) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
     }
    } while(0);
    if ((label|0) == 19) {
     label = 0;
     if ($33) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $48 = HEAP32[$__a_end>>2]|0;
    $49 = HEAP8[$__buf>>0]|0;
    $50 = $49 & 1;
    $51 = ($50<<24>>24)==(0);
    $52 = HEAP32[$17>>2]|0;
    $53 = $49&255;
    $54 = $53 >>> 1;
    $55 = $51 ? $54 : $52;
    $56 = (($__a$0) + ($55)|0);
    $57 = ($48|0)==($56|0);
    if ($57) {
     $58 = $55 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($58|0),0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 27;
      break;
     }
     $61 = HEAP8[$__buf>>0]|0;
     $62 = $61 & 1;
     $63 = ($62<<24>>24)==(0);
     if ($63) {
      $66 = 10;
     } else {
      $64 = HEAP32[$__buf>>2]|0;
      $65 = $64 & -2;
      $phitmp$i20 = (($65) + -1)|0;
      $66 = $phitmp$i20;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($66|0),0);
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 27;
      break;
     }
     $69 = HEAP8[$__buf>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     $72 = HEAP32[$13>>2]|0;
     $73 = $71 ? $15 : $72;
     $74 = (($73) + ($55)|0);
     HEAP32[$__a_end>>2] = $74;
     $__a$1 = $73;
    } else {
     $__a$1 = $__a$0;
    }
    $79 = ((($$pre$i$i$i)) + 12|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = ((($$pre$i$i$i)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($80|0)==($82|0);
    if ($83) {
     $84 = HEAP32[$$pre$i$i$i>>2]|0;
     $85 = ((($84)) + 36|0);
     $86 = HEAP32[$85>>2]|0;
     __THREW__ = 0;
     $87 = (invoke_ii($86|0,($$pre$i$i$i|0))|0);
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      label = 27;
      break;
     } else {
      $$0$i$i = $87;
     }
    } else {
     $90 = HEAP8[$80>>0]|0;
     $91 = $90&255;
     $$0$i$i = $91;
    }
    $92 = $$0$i$i&255;
    $93 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $94 = ($93|0)==(0);
    if (!($94)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $95 = HEAP32[$79>>2]|0;
    $96 = HEAP32[$81>>2]|0;
    $97 = ($95|0)==($96|0);
    if ($97) {
     $98 = HEAP32[$$pre$i$i$i>>2]|0;
     $99 = ((($98)) + 40|0);
     $100 = HEAP32[$99>>2]|0;
     __THREW__ = 0;
     (invoke_ii($100|0,($$pre$i$i$i|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      label = 27;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $103 = ((($95)) + 1|0);
     HEAP32[$79>>2] = $103;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 27) {
    $75 = ___cxa_find_matching_catch_2()|0;
    $76 = tempRet0;
    $lpad$phi$index = $75;$lpad$phi$index2 = $76;
    break;
   }
   $104 = HEAP8[$__grouping>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   $107 = ((($__grouping)) + 4|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $104&255;
   $110 = $109 >>> 1;
   $111 = $106 ? $110 : $108;
   $112 = ($111|0)==(0);
   $113 = HEAP8[$__in_units>>0]|0;
   $114 = ($113<<24>>24)==(0);
   $or$cond = $114 | $112;
   if (!($or$cond)) {
    $115 = HEAP32[$__g_end>>2]|0;
    $116 = $115;
    $117 = $__g;
    $118 = (($116) - ($117))|0;
    $119 = ($118|0)<(160);
    if ($119) {
     $120 = HEAP32[$__dc>>2]|0;
     $121 = ((($115)) + 4|0);
     HEAP32[$__g_end>>2] = $121;
     HEAP32[$115>>2] = $120;
    }
   }
   $122 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $123 = (+invoke_diii(703,($__a$2|0),($122|0),($__err|0)));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 28;
   } else {
    HEAPF64[$__v>>3] = $123;
    $126 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$126,$__err);
    $127 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($127) {
     $140 = 0;
    } else {
     $128 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $134 = ((($133)) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      __THREW__ = 0;
      $136 = (invoke_ii($135|0,($$pre$i$i$i$lcssa|0))|0);
      $137 = __THREW__; __THREW__ = 0;
      $138 = $137&1;
      if ($138) {
       label = 28;
       break;
      }
      $139 = ($136|0)==(-1);
      if ($139) {
       HEAP32[$__b>>2] = 0;
       $140 = 0;
      } else {
       $140 = $$pre$i$i$i$lcssa;
      }
     } else {
      $140 = $$pre$i$i$i$lcssa;
     }
    }
    $141 = ($140|0)==(0|0);
    $142 = ($$pre$i2$i$i|0)==(0|0);
    do {
     if ($142) {
      label = 52;
     } else {
      $143 = ((($$pre$i2$i$i)) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$pre$i2$i$i)) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i>>2]|0;
       $149 = ((($148)) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       __THREW__ = 0;
       $151 = (invoke_ii($150|0,($$pre$i2$i$i|0))|0);
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 28;
        break L8;
       }
       $154 = ($151|0)==(-1);
       if ($154) {
        HEAP32[$__e>>2] = 0;
        label = 52;
        break;
       }
      }
      if (!($141)) {
       label = 53;
      }
     }
    } while(0);
    if ((label|0) == 52) {
     if ($141) {
      label = 53;
     }
    }
    if ((label|0) == 53) {
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
    }
    $157 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($157|0);
   }
  }
 } while(0);
 if ((label|0) == 28) {
  $77 = ___cxa_find_matching_catch_2()|0;
  $78 = tempRet0;
  $lpad$phi$index = $77;$lpad$phi$index2 = $78;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $$1 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$1 = 0.0;
 } else {
  $1 = (___errno_location()|0);
  $2 = HEAP32[$1>>2]|0;
  HEAP32[$1>>2] = 0;
  $3 = (__ZNSt3__16__clocEv()|0);
  $4 = (+_strtold_l($__a,$__p2,$3));
  $5 = HEAP32[$1>>2]|0;
  $6 = ($5|0)==(0);
  if ($6) {
   HEAP32[$1>>2] = $2;
  }
  $7 = HEAP32[$__p2>>2]|0;
  $8 = ($7|0)==($__a_end|0);
  if ($8) {
   $9 = ($5|0)==(34);
   if ($9) {
    HEAP32[$__err>>2] = 4;
    $$0 = $4;
   } else {
    $$0 = $4;
   }
  } else {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return (+$$1);
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0;
 var $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i26 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 $3 = (invoke_ii(607,($__iob|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 do {
  if ($5) {
   $87 = ___cxa_find_matching_catch_2()|0;
   $88 = tempRet0;
   $$0 = $87;$$01 = $88;
  } else {
   HEAP32[$0>>2] = $3;
   __THREW__ = 0;
   $6 = (invoke_iii(608,($0|0),(22416|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if (!($8)) {
    $9 = HEAP32[$6>>2]|0;
    $10 = ((($9)) + 32|0);
    $11 = HEAP32[$10>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($11|0,($6|0),(17188|0),((17214)|0),($__atoms|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L18: do {
      if ($23) {
       label = 36;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       $27 = ((($__buf)) + 8|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($__buf)) + 1|0);
       $30 = $26 ? $29 : $28;
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = ((($__buf)) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i10 = $$pre;$__a$0 = $30;
       L20: while(1) {
        $32 = ($$pre$i$i$i10|0)==(0|0);
        if ($32) {
         $$pre$i$i$i = 0;
        } else {
         $33 = ((($$pre$i$i$i10)) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = ((($$pre$i$i$i10)) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i10>>2]|0;
          $39 = ((($38)) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i10|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 35;
           break;
          }
          $44 = ($41|0)==(-1);
          if ($44) {
           HEAP32[$__b>>2] = 0;
           $$pre$i$i$i = 0;
          } else {
           $$pre$i$i$i = $$pre$i$i$i10;
          }
         } else {
          $$pre$i$i$i = $$pre$i$i$i10;
         }
        }
        $45 = ($$pre$i$i$i|0)==(0|0);
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 25;
         } else {
          $48 = ((($46)) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($46)) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if (!($52)) {
           if ($45) {
            $168 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $46;$__a$2 = $__a$0;
            break L20;
           }
          }
          $53 = HEAP32[$46>>2]|0;
          $54 = ((($53)) + 36|0);
          $55 = HEAP32[$54>>2]|0;
          __THREW__ = 0;
          $56 = (invoke_ii($55|0,($46|0))|0);
          $57 = __THREW__; __THREW__ = 0;
          $58 = $57&1;
          if ($58) {
           label = 35;
           break L20;
          }
          $59 = ($56|0)==(-1);
          if ($59) {
           HEAP32[$__e>>2] = 0;
           label = 25;
           break;
          } else {
           if ($45) {
            $168 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $46;$__a$2 = $__a$0;
            break L20;
           }
          }
         }
        } while(0);
        if ((label|0) == 25) {
         label = 0;
         if ($45) {
          $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $168 = 0;
         }
        }
        $60 = HEAP32[$__a_end>>2]|0;
        $61 = HEAP8[$__buf>>0]|0;
        $62 = $61 & 1;
        $63 = ($62<<24>>24)==(0);
        $64 = HEAP32[$31>>2]|0;
        $65 = $61&255;
        $66 = $65 >>> 1;
        $67 = $63 ? $66 : $64;
        $68 = (($__a$0) + ($67)|0);
        $69 = ($60|0)==($68|0);
        if ($69) {
         $70 = $67 << 1;
         __THREW__ = 0;
         invoke_viii(685,($__buf|0),($70|0),0);
         $71 = __THREW__; __THREW__ = 0;
         $72 = $71&1;
         if ($72) {
          label = 35;
          break;
         }
         $73 = HEAP8[$__buf>>0]|0;
         $74 = $73 & 1;
         $75 = ($74<<24>>24)==(0);
         if ($75) {
          $78 = 10;
         } else {
          $76 = HEAP32[$__buf>>2]|0;
          $77 = $76 & -2;
          $phitmp$i26 = (($77) + -1)|0;
          $78 = $phitmp$i26;
         }
         __THREW__ = 0;
         invoke_viii(685,($__buf|0),($78|0),0);
         $79 = __THREW__; __THREW__ = 0;
         $80 = $79&1;
         if ($80) {
          label = 35;
          break;
         }
         $81 = HEAP8[$__buf>>0]|0;
         $82 = $81 & 1;
         $83 = ($82<<24>>24)==(0);
         $84 = HEAP32[$27>>2]|0;
         $85 = $83 ? $29 : $84;
         $86 = (($85) + ($67)|0);
         HEAP32[$__a_end>>2] = $86;
         $__a$1 = $85;
        } else {
         $__a$1 = $__a$0;
        }
        $95 = ((($$pre$i$i$i)) + 12|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = ((($$pre$i$i$i)) + 16|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = ($96|0)==($98|0);
        if ($99) {
         $100 = HEAP32[$$pre$i$i$i>>2]|0;
         $101 = ((($100)) + 36|0);
         $102 = HEAP32[$101>>2]|0;
         __THREW__ = 0;
         $103 = (invoke_ii($102|0,($$pre$i$i$i|0))|0);
         $104 = __THREW__; __THREW__ = 0;
         $105 = $104&1;
         if ($105) {
          label = 35;
          break;
         } else {
          $$0$i$i = $103;
         }
        } else {
         $106 = HEAP8[$96>>0]|0;
         $107 = $106&255;
         $$0$i$i = $107;
        }
        $108 = $$0$i$i&255;
        $109 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($108,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $110 = ($109|0)==(0);
        if (!($110)) {
         $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i2$i$i = $168;$__a$2 = $__a$1;
         break;
        }
        $111 = HEAP32[$95>>2]|0;
        $112 = HEAP32[$97>>2]|0;
        $113 = ($111|0)==($112|0);
        if ($113) {
         $114 = HEAP32[$$pre$i$i$i>>2]|0;
         $115 = ((($114)) + 40|0);
         $116 = HEAP32[$115>>2]|0;
         __THREW__ = 0;
         (invoke_ii($116|0,($$pre$i$i$i|0))|0);
         $117 = __THREW__; __THREW__ = 0;
         $118 = $117&1;
         if ($118) {
          label = 35;
          break;
         } else {
          $$pre$i$i$i10 = $$pre$i$i$i;$__a$0 = $__a$1;
          continue;
         }
        } else {
         $119 = ((($111)) + 1|0);
         HEAP32[$95>>2] = $119;
         $$pre$i$i$i10 = $$pre$i$i$i;$__a$0 = $__a$1;
         continue;
        }
       }
       if ((label|0) == 35) {
        $91 = ___cxa_find_matching_catch_2()|0;
        $92 = tempRet0;
        $lpad$phi$index = $91;$lpad$phi$index2 = $92;
        break;
       }
       $120 = HEAP32[$__a_end>>2]|0;
       $121 = $__a$2;
       $122 = (($120) - ($121))|0;
       __THREW__ = 0;
       invoke_viii(685,($__buf|0),($122|0),0);
       $123 = __THREW__; __THREW__ = 0;
       $124 = $123&1;
       if ($124) {
        label = 36;
       } else {
        $125 = HEAP8[$__buf>>0]|0;
        $126 = HEAP32[$27>>2]|0;
        __THREW__ = 0;
        $127 = (invoke_i(704)|0);
        $128 = __THREW__; __THREW__ = 0;
        $129 = $128&1;
        if ($129) {
         label = 36;
        } else {
         $130 = $125 & 1;
         $131 = ($130<<24>>24)==(0);
         $132 = $131 ? $29 : $126;
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $133 = (invoke_iiiii(705,($132|0),($127|0),(17223|0),($vararg_buffer|0))|0);
         $134 = __THREW__; __THREW__ = 0;
         $135 = $134&1;
         if ($135) {
          label = 36;
         } else {
          $136 = ($133|0)==(1);
          if (!($136)) {
           HEAP32[$__err>>2] = 4;
          }
          $137 = ($$pre$i$i$i$lcssa|0)==(0|0);
          if ($137) {
           $150 = 0;
          } else {
           $138 = ((($$pre$i$i$i$lcssa)) + 12|0);
           $139 = HEAP32[$138>>2]|0;
           $140 = ((($$pre$i$i$i$lcssa)) + 16|0);
           $141 = HEAP32[$140>>2]|0;
           $142 = ($139|0)==($141|0);
           if ($142) {
            $143 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
            $144 = ((($143)) + 36|0);
            $145 = HEAP32[$144>>2]|0;
            __THREW__ = 0;
            $146 = (invoke_ii($145|0,($$pre$i$i$i$lcssa|0))|0);
            $147 = __THREW__; __THREW__ = 0;
            $148 = $147&1;
            if ($148) {
             label = 36;
             break;
            }
            $149 = ($146|0)==(-1);
            if ($149) {
             HEAP32[$__b>>2] = 0;
             $150 = 0;
            } else {
             $150 = $$pre$i$i$i$lcssa;
            }
           } else {
            $150 = $$pre$i$i$i$lcssa;
           }
          }
          $151 = ($150|0)==(0|0);
          $152 = ($$pre$i2$i$i|0)==(0|0);
          do {
           if ($152) {
            label = 61;
           } else {
            $153 = ((($$pre$i2$i$i)) + 12|0);
            $154 = HEAP32[$153>>2]|0;
            $155 = ((($$pre$i2$i$i)) + 16|0);
            $156 = HEAP32[$155>>2]|0;
            $157 = ($154|0)==($156|0);
            if ($157) {
             $158 = HEAP32[$$pre$i2$i$i>>2]|0;
             $159 = ((($158)) + 36|0);
             $160 = HEAP32[$159>>2]|0;
             __THREW__ = 0;
             $161 = (invoke_ii($160|0,($$pre$i2$i$i|0))|0);
             $162 = __THREW__; __THREW__ = 0;
             $163 = $162&1;
             if ($163) {
              label = 36;
              break L18;
             }
             $164 = ($161|0)==(-1);
             if ($164) {
              HEAP32[$__e>>2] = 0;
              label = 61;
              break;
             }
            }
            if (!($151)) {
             label = 62;
            }
           }
          } while(0);
          if ((label|0) == 61) {
           if ($151) {
            label = 62;
           }
          }
          if ((label|0) == 62) {
           $165 = HEAP32[$__err>>2]|0;
           $166 = $165 | 2;
           HEAP32[$__err>>2] = $166;
          }
          $167 = HEAP32[$__b>>2]|0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return ($167|0);
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 36) {
      $93 = ___cxa_find_matching_catch_2()|0;
      $94 = tempRet0;
      $lpad$phi$index = $93;$lpad$phi$index2 = $94;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $89 = ___cxa_find_matching_catch_2()|0;
   $90 = tempRet0;
   (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
   $$0 = $89;$$01 = $90;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale($__l)|0);
 $1 = (_vsscanf($__s,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(706,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch_3(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy2 = sp + 60|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 52|0;
 $__lv = sp + 48|0;
 $0 = sp + 44|0;
 $1 = sp + 40|0;
 $2 = sp + 36|0;
 $3 = sp + 32|0;
 $__names = sp + 8|0;
 $4 = sp;
 $5 = ((($__iob)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 L1: do {
  if ($8) {
   HEAP32[$__lv>>2] = -1;
   $9 = HEAP32[$this>>2]|0;
   $10 = ((($9)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$__b>>2]|0;
   HEAP32[$0>>2] = $12;
   $13 = HEAP32[$__e>>2]|0;
   HEAP32[$1>>2] = $13;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
   $14 = (FUNCTION_TABLE_iiiiiii[$11 & 1023]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv)|0);
   HEAP32[$__b>>2] = $14;
   $15 = HEAP32[$__lv>>2]|0;
   switch ($15|0) {
   case 0:  {
    HEAP8[$__v>>0] = 0;
    break;
   }
   case 1:  {
    HEAP8[$__v>>0] = 1;
    break;
   }
   default: {
    HEAP8[$__v>>0] = 1;
    HEAP32[$__err>>2] = 4;
   }
   }
   $$sroa$01$0 = $14;
  } else {
   $16 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$2>>2] = $16;
   __THREW__ = 0;
   $17 = (invoke_iii(608,($2|0),(22448|0))|0);
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   do {
    if ($19) {
     $44 = ___cxa_find_matching_catch_2()|0;
     $45 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $$02 = $44;$$03 = $45;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
     $20 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
     HEAP32[$3>>2] = $20;
     __THREW__ = 0;
     $21 = (invoke_iii(608,($3|0),(22456|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      $46 = ___cxa_find_matching_catch_2()|0;
      $47 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
      $$02 = $46;$$03 = $47;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($20)|0);
     $24 = HEAP32[$21>>2]|0;
     $25 = ((($24)) + 24|0);
     $26 = HEAP32[$25>>2]|0;
     __THREW__ = 0;
     invoke_vii($26|0,($__names|0),($21|0));
     $27 = __THREW__; __THREW__ = 0;
     $28 = $27&1;
     if ($28) {
      $$0 = $__names;
     } else {
      $29 = ((($__names)) + 12|0);
      $30 = HEAP32[$21>>2]|0;
      $31 = ((($30)) + 28|0);
      $32 = HEAP32[$31>>2]|0;
      __THREW__ = 0;
      invoke_vii($32|0,($29|0),($21|0));
      $33 = __THREW__; __THREW__ = 0;
      $34 = $33&1;
      if ($34) {
       $$0 = $29;
      } else {
       $35 = HEAP32[$__e>>2]|0;
       HEAP32[$4>>2] = $35;
       $36 = ((($__names)) + 24|0);
       __THREW__ = 0;
       ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
       $37 = (invoke_iiiiiiii(707,($__b|0),($$byval_copy2|0),($__names|0),($36|0),($17|0),($__err|0),1)|0);
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if ($39) {
        $54 = ___cxa_find_matching_catch_2()|0;
        $55 = tempRet0;
        $56 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($56);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$02 = $54;$$03 = $55;
        break;
       } else {
        $40 = ($37|0)==($__names|0);
        $41 = $40&1;
        HEAP8[$__v>>0] = $41;
        $42 = HEAP32[$__b>>2]|0;
        $43 = ((($__names)) + 12|0);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($43);
        __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
        $$sroa$01$0 = $42;
        break L1;
       }
      }
     }
     $48 = ___cxa_find_matching_catch_2()|0;
     $49 = tempRet0;
     $50 = ($__names|0)==($$0|0);
     if ($50) {
      $$02 = $48;$$03 = $49;
     } else {
      $52 = $$0;
      while(1) {
       $51 = ((($52)) + -12|0);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($51);
       $53 = ($51|0)==($__names|0);
       if ($53) {
        $$02 = $48;$$03 = $49;
        break;
       } else {
        $52 = $51;
       }
      }
     }
    }
   } while(0);
   ___resumeException($$02|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$01$0|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i6 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i12 = 0, $$045 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i8 = 0, $$pre$i3$i$i14 = 0, $$pre$i3$i$i14$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__c$0 = 0, $__consume$0$off0 = 0, $__consume$2$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0 = 0, $__ky1$0 = 0, $__ky2$0 = 0, $__n_does_match$0 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3 = 0, $__n_does_match$5 = 0, $__n_does_match$6 = 0, $__n_does_match$7 = 0, $__n_might_match$0 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0;
 var $__n_might_match$3 = 0, $__n_might_match$5 = 0, $__st$0 = 0, $__st$1 = 0, $__st$2 = 0, $__st$3 = 0, $__stat_hold$sroa$0$0 = 0, $__stat_hold$sroa$0$0$ph$ph = 0, $__stat_hold$sroa$0$1 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i9 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 do {
  if ($4) {
   $5 = (_malloc($3)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __THREW__ = 0;
    invoke_v(693);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $__stat_hold$sroa$0$0$ph$ph = 0;
     label = 6;
     break;
    }
   }
   $17 = $5;
   $__stat_hold$sroa$0$1 = $17;$__status$0 = $5;
   label = 11;
  } else {
   $__stat_hold$sroa$0$1 = 0;$__status$0 = $__statbuf;
   label = 11;
  }
 } while(0);
 L6: do {
  if ((label|0) == 11) {
   $__ky$0 = $__kb;$__n_does_match$0 = 0;$__n_might_match$0 = $3;$__st$0 = $__status$0;
   while(1) {
    $18 = ($__ky$0|0)==($__ke|0);
    if ($18) {
     $__n_does_match$0$lcssa = $__n_does_match$0;$__n_might_match$0$lcssa = $__n_might_match$0;
     break;
    }
    $19 = HEAP8[$__ky$0>>0]|0;
    $20 = $19 & 1;
    $21 = ($20<<24>>24)==(0);
    if ($21) {
     $24 = $19&255;
     $25 = $24 >>> 1;
     $26 = $25;
    } else {
     $22 = ((($__ky$0)) + 4|0);
     $23 = HEAP32[$22>>2]|0;
     $26 = $23;
    }
    $27 = ($26|0)==(0);
    if ($27) {
     HEAP8[$__st$0>>0] = 2;
     $28 = (($__n_might_match$0) + -1)|0;
     $29 = (($__n_does_match$0) + 1)|0;
     $__n_does_match$1 = $29;$__n_might_match$1 = $28;
    } else {
     HEAP8[$__st$0>>0] = 1;
     $__n_does_match$1 = $__n_does_match$0;$__n_might_match$1 = $__n_might_match$0;
    }
    $30 = ((($__ky$0)) + 12|0);
    $31 = ((($__st$0)) + 1|0);
    $__ky$0 = $30;$__n_does_match$0 = $__n_does_match$1;$__n_might_match$0 = $__n_might_match$1;$__st$0 = $31;
   }
   $__indx$0 = 0;$__n_does_match$2 = $__n_does_match$0$lcssa;$__n_might_match$2 = $__n_might_match$0$lcssa;
   L20: while(1) {
    $32 = HEAP32[$__b>>2]|0;
    $33 = ($32|0)==(0|0);
    do {
     if ($33) {
      $63 = 1;
     } else {
      $34 = ((($32)) + 12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ((($32)) + 16|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($35|0)==($37|0);
      if ($38) {
       $39 = HEAP32[$32>>2]|0;
       $40 = ((($39)) + 36|0);
       $41 = HEAP32[$40>>2]|0;
       __THREW__ = 0;
       $42 = (invoke_ii($41|0,($32|0))|0);
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if ($44) {
        label = 5;
        break L20;
       } else {
        $$0$i$i$i$i = $42;
       }
      } else {
       $45 = HEAP32[$35>>2]|0;
       $$0$i$i$i$i = $45;
      }
      $46 = ($$0$i$i$i$i|0)==(-1);
      if ($46) {
       HEAP32[$__b>>2] = 0;
       $63 = 1;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
       $63 = $phitmp$i$i$i;
       break;
      }
     }
    } while(0);
    $47 = HEAP32[$__e>>2]|0;
    $48 = ($47|0)==(0|0);
    if ($48) {
     $$pre$i3$i$i14 = 0;$62 = 1;
    } else {
     $49 = ((($47)) + 12|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = ((($47)) + 16|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($50|0)==($52|0);
     if ($53) {
      $54 = HEAP32[$47>>2]|0;
      $55 = ((($54)) + 36|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_ii($56|0,($47|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break;
      } else {
       $$0$i$i1$i$i = $57;
      }
     } else {
      $60 = HEAP32[$50>>2]|0;
      $$0$i$i1$i$i = $60;
     }
     $61 = ($$0$i$i1$i$i|0)==(-1);
     if ($61) {
      HEAP32[$__e>>2] = 0;
      $$pre$i3$i$i14 = 0;$62 = 1;
     } else {
      $$pre$i3$i$i14 = $47;$62 = 0;
     }
    }
    $tmp$i$i = $63 ^ $62;
    $64 = ($__n_might_match$2|0)!=(0);
    $65 = $64 & $tmp$i$i;
    $66 = HEAP32[$__b>>2]|0;
    if (!($65)) {
     $$lcssa = $66;$$pre$i3$i$i14$lcssa = $$pre$i3$i$i14;
     label = 35;
     break;
    }
    $95 = ((($66)) + 12|0);
    $96 = HEAP32[$95>>2]|0;
    $97 = ((($66)) + 16|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = ($96|0)==($98|0);
    if ($99) {
     $100 = HEAP32[$66>>2]|0;
     $101 = ((($100)) + 36|0);
     $102 = HEAP32[$101>>2]|0;
     __THREW__ = 0;
     $103 = (invoke_ii($102|0,($66|0))|0);
     $104 = __THREW__; __THREW__ = 0;
     $105 = $104&1;
     if ($105) {
      label = 5;
      break;
     } else {
      $$0$i$i = $103;
     }
    } else {
     $106 = HEAP32[$96>>2]|0;
     $$0$i$i = $106;
    }
    if ($__case_sensitive) {
     $__c$0 = $$0$i$i;
    } else {
     $107 = HEAP32[$__ct>>2]|0;
     $108 = ((($107)) + 28|0);
     $109 = HEAP32[$108>>2]|0;
     __THREW__ = 0;
     $110 = (invoke_iii($109|0,($__ct|0),($$0$i$i|0))|0);
     $111 = __THREW__; __THREW__ = 0;
     $112 = $111&1;
     if ($112) {
      label = 5;
      break;
     } else {
      $__c$0 = $110;
     }
    }
    $113 = (($__indx$0) + 1)|0;
    $__consume$0$off0 = 0;$__ky1$0 = $__kb;$__n_does_match$3 = $__n_does_match$2;$__n_might_match$3 = $__n_might_match$2;$__st$1 = $__status$0;
    while(1) {
     $114 = ($__ky1$0|0)==($__ke|0);
     if ($114) {
      break;
     }
     $115 = HEAP8[$__st$1>>0]|0;
     $116 = ($115<<24>>24)==(1);
     do {
      if ($116) {
       $117 = HEAP8[$__ky1$0>>0]|0;
       $118 = $117 & 1;
       $119 = ($118<<24>>24)==(0);
       if ($119) {
        $122 = ((($__ky1$0)) + 4|0);
        $124 = $122;
       } else {
        $120 = ((($__ky1$0)) + 8|0);
        $121 = HEAP32[$120>>2]|0;
        $124 = $121;
       }
       $123 = (($124) + ($__indx$0<<2)|0);
       $125 = HEAP32[$123>>2]|0;
       if ($__case_sensitive) {
        $__kc$0 = $125;
       } else {
        $126 = HEAP32[$__ct>>2]|0;
        $127 = ((($126)) + 28|0);
        $128 = HEAP32[$127>>2]|0;
        __THREW__ = 0;
        $129 = (invoke_iii($128|0,($__ct|0),($125|0))|0);
        $130 = __THREW__; __THREW__ = 0;
        $131 = $130&1;
        if ($131) {
         label = 4;
         break L20;
        } else {
         $__kc$0 = $129;
        }
       }
       $132 = ($__c$0|0)==($__kc$0|0);
       if (!($132)) {
        HEAP8[$__st$1>>0] = 0;
        $144 = (($__n_might_match$3) + -1)|0;
        $__consume$2$off0 = $__consume$0$off0;$__n_does_match$5 = $__n_does_match$3;$__n_might_match$5 = $144;
        break;
       }
       $133 = HEAP8[$__ky1$0>>0]|0;
       $134 = $133 & 1;
       $135 = ($134<<24>>24)==(0);
       if ($135) {
        $138 = $133&255;
        $139 = $138 >>> 1;
        $140 = $139;
       } else {
        $136 = ((($__ky1$0)) + 4|0);
        $137 = HEAP32[$136>>2]|0;
        $140 = $137;
       }
       $141 = ($140|0)==($113|0);
       if ($141) {
        HEAP8[$__st$1>>0] = 2;
        $142 = (($__n_might_match$3) + -1)|0;
        $143 = (($__n_does_match$3) + 1)|0;
        $__consume$2$off0 = 1;$__n_does_match$5 = $143;$__n_might_match$5 = $142;
       } else {
        $__consume$2$off0 = 1;$__n_does_match$5 = $__n_does_match$3;$__n_might_match$5 = $__n_might_match$3;
       }
      } else {
       $__consume$2$off0 = $__consume$0$off0;$__n_does_match$5 = $__n_does_match$3;$__n_might_match$5 = $__n_might_match$3;
      }
     } while(0);
     $145 = ((($__ky1$0)) + 12|0);
     $146 = ((($__st$1)) + 1|0);
     $__consume$0$off0 = $__consume$2$off0;$__ky1$0 = $145;$__n_does_match$3 = $__n_does_match$5;$__n_might_match$3 = $__n_might_match$5;$__st$1 = $146;
    }
    if (!($__consume$0$off0)) {
     $__indx$0 = $113;$__n_does_match$2 = $__n_does_match$3;$__n_might_match$2 = $__n_might_match$3;
     continue;
    }
    $147 = HEAP32[$__b>>2]|0;
    $148 = ((($147)) + 12|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ((($147)) + 16|0);
    $151 = HEAP32[$150>>2]|0;
    $152 = ($149|0)==($151|0);
    if ($152) {
     $153 = HEAP32[$147>>2]|0;
     $154 = ((($153)) + 40|0);
     $155 = HEAP32[$154>>2]|0;
     __THREW__ = 0;
     (invoke_ii($155|0,($147|0))|0);
     $156 = __THREW__; __THREW__ = 0;
     $157 = $156&1;
     if ($157) {
      label = 5;
      break;
     }
    } else {
     $158 = ((($149)) + 4|0);
     HEAP32[$148>>2] = $158;
    }
    $159 = (($__n_does_match$3) + ($__n_might_match$3))|0;
    $160 = ($159>>>0)>(1);
    if ($160) {
     $__ky2$0 = $__kb;$__n_does_match$6 = $__n_does_match$3;$__st$2 = $__status$0;
    } else {
     $__indx$0 = $113;$__n_does_match$2 = $__n_does_match$3;$__n_might_match$2 = $__n_might_match$3;
     continue;
    }
    while(1) {
     $161 = ($__ky2$0|0)==($__ke|0);
     if ($161) {
      $__indx$0 = $113;$__n_does_match$2 = $__n_does_match$6;$__n_might_match$2 = $__n_might_match$3;
      continue L20;
     }
     $162 = HEAP8[$__st$2>>0]|0;
     $163 = ($162<<24>>24)==(2);
     if ($163) {
      $164 = HEAP8[$__ky2$0>>0]|0;
      $165 = $164 & 1;
      $166 = ($165<<24>>24)==(0);
      if ($166) {
       $169 = $164&255;
       $170 = $169 >>> 1;
       $171 = $170;
      } else {
       $167 = ((($__ky2$0)) + 4|0);
       $168 = HEAP32[$167>>2]|0;
       $171 = $168;
      }
      $172 = ($171|0)==($113|0);
      if ($172) {
       $__n_does_match$7 = $__n_does_match$6;
      } else {
       HEAP8[$__st$2>>0] = 0;
       $173 = (($__n_does_match$6) + -1)|0;
       $__n_does_match$7 = $173;
      }
     } else {
      $__n_does_match$7 = $__n_does_match$6;
     }
     $174 = ((($__ky2$0)) + 12|0);
     $175 = ((($__st$2)) + 1|0);
     $__ky2$0 = $174;$__n_does_match$6 = $__n_does_match$7;$__st$2 = $175;
    }
   }
   if ((label|0) == 4) {
    $9 = ___cxa_find_matching_catch_2()|0;
    $10 = tempRet0;
    $__stat_hold$sroa$0$0 = $__stat_hold$sroa$0$1;$lpad$phi$index = $9;$lpad$phi$index3 = $10;
    break;
   }
   else if ((label|0) == 5) {
    $11 = ___cxa_find_matching_catch_2()|0;
    $12 = tempRet0;
    $__stat_hold$sroa$0$0 = $__stat_hold$sroa$0$1;$lpad$phi$index = $11;$lpad$phi$index3 = $12;
    break;
   }
   else if ((label|0) == 35) {
    $67 = ($$lcssa|0)==(0|0);
    do {
     if ($67) {
      $187 = 1;
     } else {
      $68 = ((($$lcssa)) + 12|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ((($$lcssa)) + 16|0);
      $71 = HEAP32[$70>>2]|0;
      $72 = ($69|0)==($71|0);
      if ($72) {
       $73 = HEAP32[$$lcssa>>2]|0;
       $74 = ((($73)) + 36|0);
       $75 = HEAP32[$74>>2]|0;
       __THREW__ = 0;
       $76 = (invoke_ii($75|0,($$lcssa|0))|0);
       $77 = __THREW__; __THREW__ = 0;
       $78 = $77&1;
       if ($78) {
        $__stat_hold$sroa$0$0$ph$ph = $__stat_hold$sroa$0$1;
        label = 6;
        break L6;
       } else {
        $$0$i$i$i$i6 = $76;
       }
      } else {
       $79 = HEAP32[$69>>2]|0;
       $$0$i$i$i$i6 = $79;
      }
      $80 = ($$0$i$i$i$i6|0)==(-1);
      if ($80) {
       HEAP32[$__b>>2] = 0;
       $187 = 1;
       break;
      } else {
       $$pre$i$i$i8 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i9 = ($$pre$i$i$i8|0)==(0|0);
       $187 = $phitmp$i$i$i9;
       break;
      }
     }
    } while(0);
    $81 = ($$pre$i3$i$i14$lcssa|0)==(0|0);
    do {
     if ($81) {
      label = 82;
     } else {
      $82 = ((($$pre$i3$i$i14$lcssa)) + 12|0);
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($$pre$i3$i$i14$lcssa)) + 16|0);
      $85 = HEAP32[$84>>2]|0;
      $86 = ($83|0)==($85|0);
      if ($86) {
       $87 = HEAP32[$$pre$i3$i$i14$lcssa>>2]|0;
       $88 = ((($87)) + 36|0);
       $89 = HEAP32[$88>>2]|0;
       __THREW__ = 0;
       $90 = (invoke_ii($89|0,($$pre$i3$i$i14$lcssa|0))|0);
       $91 = __THREW__; __THREW__ = 0;
       $92 = $91&1;
       if ($92) {
        $__stat_hold$sroa$0$0$ph$ph = $__stat_hold$sroa$0$1;
        label = 6;
        break L6;
       } else {
        $$0$i$i1$i$i12 = $90;
       }
      } else {
       $93 = HEAP32[$83>>2]|0;
       $$0$i$i1$i$i12 = $93;
      }
      $94 = ($$0$i$i1$i$i12|0)==(-1);
      if ($94) {
       HEAP32[$__e>>2] = 0;
       label = 82;
       break;
      } else {
       if ($187) {
        $$0 = $__kb;$__st$3 = $__status$0;
        break;
       } else {
        label = 84;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 82) {
     if ($187) {
      label = 84;
     } else {
      $$0 = $__kb;$__st$3 = $__status$0;
     }
    }
    if ((label|0) == 84) {
     $176 = HEAP32[$__err>>2]|0;
     $177 = $176 | 2;
     HEAP32[$__err>>2] = $177;
     $$0 = $__kb;$__st$3 = $__status$0;
    }
    while(1) {
     $178 = ($$0|0)==($__ke|0);
     if ($178) {
      label = 88;
      break;
     }
     $179 = HEAP8[$__st$3>>0]|0;
     $180 = ($179<<24>>24)==(2);
     if ($180) {
      $$045 = $$0;
      break;
     }
     $181 = ((($$0)) + 12|0);
     $182 = ((($__st$3)) + 1|0);
     $$0 = $181;$__st$3 = $182;
    }
    if ((label|0) == 88) {
     $183 = HEAP32[$__err>>2]|0;
     $184 = $183 | 4;
     HEAP32[$__err>>2] = $184;
     $$045 = $__ke;
    }
    $185 = ($__stat_hold$sroa$0$1|0)==(0);
    if (!($185)) {
     $186 = $__stat_hold$sroa$0$1;
     _free($186);
    }
    STACKTOP = sp;return ($$045|0);
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $13 = ___cxa_find_matching_catch_2()|0;
  $14 = tempRet0;
  $__stat_hold$sroa$0$0 = $__stat_hold$sroa$0$0$ph$ph;$lpad$phi$index = $13;$lpad$phi$index3 = $14;
 }
 $15 = ($__stat_hold$sroa$0$0|0)==(0);
 if (!($15)) {
  $16 = $__stat_hold$sroa$0$0;
  _free($16);
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0;
 var $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 33;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i5|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $23 = ((($$pre$i$i$i5)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i5)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i5>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i5|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 32;
       break;
      } else {
       $$0$i$i$i$i3 = $31;
      }
     } else {
      $34 = HEAP32[$24>>2]|0;
      $$0$i$i$i$i3 = $34;
     }
     $35 = ($$0$i$i$i$i3|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$157 = 0;
     }
    }
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 24;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 32;
        break L15;
       } else {
        $$0$i$i1$i$i9 = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i1$i$i9 = $49;
      }
      $50 = ($$0$i$i1$i$i9|0)==(-1);
      if ($50) {
       HEAP32[$__e>>2] = 0;
       label = 24;
       break;
      } else {
       if ($157) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $51 = HEAP32[$__a_end>>2]|0;
    $52 = HEAP8[$__buf>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    $55 = HEAP32[$20>>2]|0;
    $56 = $52&255;
    $57 = $56 >>> 1;
    $58 = $54 ? $57 : $55;
    $59 = (($__a$0) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     $61 = $58 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($61|0),0);
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 32;
      break;
     }
     $64 = HEAP8[$__buf>>0]|0;
     $65 = $64 & 1;
     $66 = ($65<<24>>24)==(0);
     if ($66) {
      $69 = 10;
     } else {
      $67 = HEAP32[$__buf>>2]|0;
      $68 = $67 & -2;
      $phitmp$i23 = (($68) + -1)|0;
      $69 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($69|0),0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      label = 32;
      break;
     }
     $72 = HEAP8[$__buf>>0]|0;
     $73 = $72 & 1;
     $74 = ($73<<24>>24)==(0);
     $75 = HEAP32[$16>>2]|0;
     $76 = $74 ? $18 : $75;
     $77 = (($76) + ($58)|0);
     HEAP32[$__a_end>>2] = $77;
     $__a$1 = $76;
    } else {
     $__a$1 = $__a$0;
    }
    $82 = ((($$pre$i$i$i)) + 12|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ((($$pre$i$i$i)) + 16|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($83|0)==($85|0);
    if ($86) {
     $87 = HEAP32[$$pre$i$i$i>>2]|0;
     $88 = ((($87)) + 36|0);
     $89 = HEAP32[$88>>2]|0;
     __THREW__ = 0;
     $90 = (invoke_ii($89|0,($$pre$i$i$i|0))|0);
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 32;
      break;
     } else {
      $$0$i$i = $90;
     }
    } else {
     $93 = HEAP32[$83>>2]|0;
     $$0$i$i = $93;
    }
    $94 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $95 = ($94|0)==(0);
    if (!($95)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $96 = HEAP32[$82>>2]|0;
    $97 = HEAP32[$84>>2]|0;
    $98 = ($96|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$$pre$i$i$i>>2]|0;
     $100 = ((($99)) + 40|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     (invoke_ii($101|0,($$pre$i$i$i|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 32;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $104 = ((($96)) + 4|0);
     HEAP32[$82>>2] = $104;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 32) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $lpad$phi$index = $78;$lpad$phi$index2 = $79;
    break;
   }
   $105 = HEAP8[$__grouping>>0]|0;
   $106 = $105 & 1;
   $107 = ($106<<24>>24)==(0);
   $108 = ((($__grouping)) + 4|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $105&255;
   $111 = $110 >>> 1;
   $112 = $107 ? $111 : $109;
   $113 = ($112|0)==(0);
   if (!($113)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (invoke_iiiii(694,($__a$2|0),($121|0),($__err|0),($$0$i|0))|0);
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 33;
   } else {
    HEAP32[$__v>>2] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 33;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 58;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 33;
        break L13;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 58;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 60;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 58) {
     if ($159) {
      label = 60;
     }
    }
    if ((label|0) == 60) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 33) {
  $80 = ___cxa_find_matching_catch_2()|0;
  $81 = tempRet0;
  $lpad$phi$index = $80;$lpad$phi$index2 = $81;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(608,($__loc|0),(22448|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 48|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(17188|0),((17214)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(608,($__loc|0),(22456|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 16|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP32[$__thousands_sep>>2] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     invoke_vii($20|0,($agg$result|0),($9|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if (!($22)) {
      (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($23|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0$i = 0, $$0$lcssa$i = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = ((($__atoms)) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = ((($__atoms)) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     label = 5;
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = ((($__a)) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$1 = 0;
  } else {
   label = 5;
  }
 } while(0);
 L6: do {
  if ((label|0) == 5) {
   $10 = HEAP8[$__grouping>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__grouping)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $10&255;
   $16 = $15 >>> 1;
   $17 = $12 ? $16 : $14;
   $18 = ($17|0)!=(0);
   $19 = ($__ct|0)==($__thousands_sep|0);
   $or$cond = $19 & $18;
   if ($or$cond) {
    $20 = HEAP32[$__g_end>>2]|0;
    $21 = $20;
    $22 = $__g;
    $23 = (($21) - ($22))|0;
    $24 = ($23|0)<(160);
    if (!($24)) {
     $$1 = 0;
     break;
    }
    $25 = HEAP32[$__dc>>2]|0;
    $26 = ((($20)) + 4|0);
    HEAP32[$__g_end>>2] = $26;
    HEAP32[$20>>2] = $25;
    HEAP32[$__dc>>2] = 0;
    $$1 = 0;
    break;
   }
   $27 = ((($__atoms)) + 104|0);
   $$0$i = $__atoms;
   while(1) {
    $28 = ($$0$i|0)==($27|0);
    if ($28) {
     $$0$lcssa$i = $27;
     break;
    }
    $29 = HEAP32[$$0$i>>2]|0;
    $30 = ($29|0)==($__ct|0);
    if ($30) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $31 = ((($$0$i)) + 4|0);
    $$0$i = $31;
   }
   $32 = $$0$lcssa$i;
   $33 = $__atoms;
   $34 = (($32) - ($33))|0;
   $35 = $34 >> 2;
   $36 = ($34|0)>(92);
   if ($36) {
    $$1 = -1;
   } else {
    switch ($__base|0) {
    case 10: case 8:  {
     $37 = ($35|0)<($__base|0);
     if (!($37)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
    case 16:  {
     $38 = ($34|0)<(88);
     if (!($38)) {
      if ($1) {
       $$1 = -1;
       break L6;
      }
      $39 = $0;
      $40 = $__a;
      $41 = (($39) - ($40))|0;
      $42 = ($41|0)<(3);
      if (!($42)) {
       $$1 = -1;
       break L6;
      }
      $43 = ((($0)) + -1|0);
      $44 = HEAP8[$43>>0]|0;
      $45 = ($44<<24>>24)==(48);
      if (!($45)) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$__dc>>2] = 0;
      $46 = (17188 + ($35)|0);
      $47 = HEAP8[$46>>0]|0;
      $48 = ((($0)) + 1|0);
      HEAP32[$__a_end>>2] = $48;
      HEAP8[$0>>0] = $47;
      $$1 = 0;
      break L6;
     }
     break;
    }
    default: {
    }
    }
    $49 = (17188 + ($35)|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = ((($0)) + 1|0);
    HEAP32[$__a_end>>2] = $51;
    HEAP8[$0>>0] = $50;
    $52 = HEAP32[$__dc>>2]|0;
    $53 = (($52) + 1)|0;
    HEAP32[$__dc>>2] = $53;
    $$1 = 0;
   }
  }
 } while(0);
 return ($$1|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0;
 var $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 33;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i5|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;$162 = 1;
    } else {
     $23 = ((($$pre$i$i$i5)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i5)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i5>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i5|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 32;
       break;
      } else {
       $$0$i$i$i$i3 = $31;
      }
     } else {
      $34 = HEAP32[$24>>2]|0;
      $$0$i$i$i$i3 = $34;
     }
     $35 = ($$0$i$i$i$i3|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$162 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$162 = 0;
     }
    }
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 24;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 32;
        break L15;
       } else {
        $$0$i$i1$i$i9 = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i1$i$i9 = $49;
      }
      $50 = ($$0$i$i1$i$i9|0)==(-1);
      if ($50) {
       HEAP32[$__e>>2] = 0;
       label = 24;
       break;
      } else {
       if ($162) {
        $163 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     if ($162) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $51 = HEAP32[$__a_end>>2]|0;
    $52 = HEAP8[$__buf>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    $55 = HEAP32[$20>>2]|0;
    $56 = $52&255;
    $57 = $56 >>> 1;
    $58 = $54 ? $57 : $55;
    $59 = (($__a$0) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     $61 = $58 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($61|0),0);
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 32;
      break;
     }
     $64 = HEAP8[$__buf>>0]|0;
     $65 = $64 & 1;
     $66 = ($65<<24>>24)==(0);
     if ($66) {
      $69 = 10;
     } else {
      $67 = HEAP32[$__buf>>2]|0;
      $68 = $67 & -2;
      $phitmp$i23 = (($68) + -1)|0;
      $69 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($69|0),0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      label = 32;
      break;
     }
     $72 = HEAP8[$__buf>>0]|0;
     $73 = $72 & 1;
     $74 = ($73<<24>>24)==(0);
     $75 = HEAP32[$16>>2]|0;
     $76 = $74 ? $18 : $75;
     $77 = (($76) + ($58)|0);
     HEAP32[$__a_end>>2] = $77;
     $__a$1 = $76;
    } else {
     $__a$1 = $__a$0;
    }
    $82 = ((($$pre$i$i$i)) + 12|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ((($$pre$i$i$i)) + 16|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($83|0)==($85|0);
    if ($86) {
     $87 = HEAP32[$$pre$i$i$i>>2]|0;
     $88 = ((($87)) + 36|0);
     $89 = HEAP32[$88>>2]|0;
     __THREW__ = 0;
     $90 = (invoke_ii($89|0,($$pre$i$i$i|0))|0);
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 32;
      break;
     } else {
      $$0$i$i = $90;
     }
    } else {
     $93 = HEAP32[$83>>2]|0;
     $$0$i$i = $93;
    }
    $94 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $95 = ($94|0)==(0);
    if (!($95)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $96 = HEAP32[$82>>2]|0;
    $97 = HEAP32[$84>>2]|0;
    $98 = ($96|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$$pre$i$i$i>>2]|0;
     $100 = ((($99)) + 40|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     (invoke_ii($101|0,($$pre$i$i$i|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 32;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $104 = ((($96)) + 4|0);
     HEAP32[$82>>2] = $104;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 32) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $lpad$phi$index = $78;$lpad$phi$index2 = $79;
    break;
   }
   $105 = HEAP8[$__grouping>>0]|0;
   $106 = $105 & 1;
   $107 = ($106<<24>>24)==(0);
   $108 = ((($__grouping)) + 4|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $105&255;
   $111 = $110 >>> 1;
   $112 = $107 ? $111 : $109;
   $113 = ($112|0)==(0);
   if (!($113)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (invoke_iiiii(696,($__a$2|0),($121|0),($__err|0),($$0$i|0))|0);
   $123 = tempRet0;
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 33;
   } else {
    $126 = $__v;
    $127 = $126;
    HEAP32[$127>>2] = $122;
    $128 = (($126) + 4)|0;
    $129 = $128;
    HEAP32[$129>>2] = $123;
    $130 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$130,$__err);
    $131 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($131) {
     $164 = 1;
    } else {
     $132 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($133|0)==($135|0);
     if ($136) {
      $137 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $138 = ((($137)) + 36|0);
      $139 = HEAP32[$138>>2]|0;
      __THREW__ = 0;
      $140 = (invoke_ii($139|0,($$pre$i$i$i$lcssa|0))|0);
      $141 = __THREW__; __THREW__ = 0;
      $142 = $141&1;
      if ($142) {
       label = 33;
       break;
      } else {
       $$0$i$i$i$i = $140;
      }
     } else {
      $143 = HEAP32[$133>>2]|0;
      $$0$i$i$i$i = $143;
     }
     $144 = ($$0$i$i$i$i|0)==(-1);
     if ($144) {
      HEAP32[$__b>>2] = 0;
      $164 = 1;
     } else {
      $164 = 0;
     }
    }
    $145 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($145) {
      label = 58;
     } else {
      $146 = ((($$pre$i3$i$i)) + 12|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ((($$pre$i3$i$i)) + 16|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ($147|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$$pre$i3$i$i>>2]|0;
       $152 = ((($151)) + 36|0);
       $153 = HEAP32[$152>>2]|0;
       __THREW__ = 0;
       $154 = (invoke_ii($153|0,($$pre$i3$i$i|0))|0);
       $155 = __THREW__; __THREW__ = 0;
       $156 = $155&1;
       if ($156) {
        label = 33;
        break L13;
       } else {
        $$0$i$i1$i$i = $154;
       }
      } else {
       $157 = HEAP32[$147>>2]|0;
       $$0$i$i1$i$i = $157;
      }
      $158 = ($$0$i$i1$i$i|0)==(-1);
      if ($158) {
       HEAP32[$__e>>2] = 0;
       label = 58;
       break;
      } else {
       if ($164) {
        break;
       } else {
        label = 60;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 58) {
     if ($164) {
      label = 60;
     }
    }
    if ((label|0) == 60) {
     $159 = HEAP32[$__err>>2]|0;
     $160 = $159 | 2;
     HEAP32[$__err>>2] = $160;
    }
    $161 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($161|0);
   }
  }
 } while(0);
 if ((label|0) == 33) {
  $80 = ___cxa_find_matching_catch_2()|0;
  $81 = tempRet0;
  $lpad$phi$index = $80;$lpad$phi$index2 = $81;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0;
 var $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 33;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i5|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $23 = ((($$pre$i$i$i5)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i5)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i5>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i5|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 32;
       break;
      } else {
       $$0$i$i$i$i3 = $31;
      }
     } else {
      $34 = HEAP32[$24>>2]|0;
      $$0$i$i$i$i3 = $34;
     }
     $35 = ($$0$i$i$i$i3|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$157 = 0;
     }
    }
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 24;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 32;
        break L15;
       } else {
        $$0$i$i1$i$i9 = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i1$i$i9 = $49;
      }
      $50 = ($$0$i$i1$i$i9|0)==(-1);
      if ($50) {
       HEAP32[$__e>>2] = 0;
       label = 24;
       break;
      } else {
       if ($157) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $51 = HEAP32[$__a_end>>2]|0;
    $52 = HEAP8[$__buf>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    $55 = HEAP32[$20>>2]|0;
    $56 = $52&255;
    $57 = $56 >>> 1;
    $58 = $54 ? $57 : $55;
    $59 = (($__a$0) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     $61 = $58 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($61|0),0);
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 32;
      break;
     }
     $64 = HEAP8[$__buf>>0]|0;
     $65 = $64 & 1;
     $66 = ($65<<24>>24)==(0);
     if ($66) {
      $69 = 10;
     } else {
      $67 = HEAP32[$__buf>>2]|0;
      $68 = $67 & -2;
      $phitmp$i23 = (($68) + -1)|0;
      $69 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($69|0),0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      label = 32;
      break;
     }
     $72 = HEAP8[$__buf>>0]|0;
     $73 = $72 & 1;
     $74 = ($73<<24>>24)==(0);
     $75 = HEAP32[$16>>2]|0;
     $76 = $74 ? $18 : $75;
     $77 = (($76) + ($58)|0);
     HEAP32[$__a_end>>2] = $77;
     $__a$1 = $76;
    } else {
     $__a$1 = $__a$0;
    }
    $82 = ((($$pre$i$i$i)) + 12|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ((($$pre$i$i$i)) + 16|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($83|0)==($85|0);
    if ($86) {
     $87 = HEAP32[$$pre$i$i$i>>2]|0;
     $88 = ((($87)) + 36|0);
     $89 = HEAP32[$88>>2]|0;
     __THREW__ = 0;
     $90 = (invoke_ii($89|0,($$pre$i$i$i|0))|0);
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 32;
      break;
     } else {
      $$0$i$i = $90;
     }
    } else {
     $93 = HEAP32[$83>>2]|0;
     $$0$i$i = $93;
    }
    $94 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $95 = ($94|0)==(0);
    if (!($95)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $96 = HEAP32[$82>>2]|0;
    $97 = HEAP32[$84>>2]|0;
    $98 = ($96|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$$pre$i$i$i>>2]|0;
     $100 = ((($99)) + 40|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     (invoke_ii($101|0,($$pre$i$i$i|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 32;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $104 = ((($96)) + 4|0);
     HEAP32[$82>>2] = $104;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 32) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $lpad$phi$index = $78;$lpad$phi$index2 = $79;
    break;
   }
   $105 = HEAP8[$__grouping>>0]|0;
   $106 = $105 & 1;
   $107 = ($106<<24>>24)==(0);
   $108 = ((($__grouping)) + 4|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $105&255;
   $111 = $110 >>> 1;
   $112 = $107 ? $111 : $109;
   $113 = ($112|0)==(0);
   if (!($113)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (invoke_iiiii(697,($__a$2|0),($121|0),($__err|0),($$0$i|0))|0);
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 33;
   } else {
    HEAP16[$__v>>1] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 33;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 58;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 33;
        break L13;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 58;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 60;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 58) {
     if ($159) {
      label = 60;
     }
    }
    if ((label|0) == 60) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 33) {
  $80 = ___cxa_find_matching_catch_2()|0;
  $81 = tempRet0;
  $lpad$phi$index = $80;$lpad$phi$index2 = $81;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0;
 var $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 33;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i5|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $23 = ((($$pre$i$i$i5)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i5)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i5>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i5|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 32;
       break;
      } else {
       $$0$i$i$i$i3 = $31;
      }
     } else {
      $34 = HEAP32[$24>>2]|0;
      $$0$i$i$i$i3 = $34;
     }
     $35 = ($$0$i$i$i$i3|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$157 = 0;
     }
    }
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 24;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 32;
        break L15;
       } else {
        $$0$i$i1$i$i9 = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i1$i$i9 = $49;
      }
      $50 = ($$0$i$i1$i$i9|0)==(-1);
      if ($50) {
       HEAP32[$__e>>2] = 0;
       label = 24;
       break;
      } else {
       if ($157) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $51 = HEAP32[$__a_end>>2]|0;
    $52 = HEAP8[$__buf>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    $55 = HEAP32[$20>>2]|0;
    $56 = $52&255;
    $57 = $56 >>> 1;
    $58 = $54 ? $57 : $55;
    $59 = (($__a$0) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     $61 = $58 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($61|0),0);
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 32;
      break;
     }
     $64 = HEAP8[$__buf>>0]|0;
     $65 = $64 & 1;
     $66 = ($65<<24>>24)==(0);
     if ($66) {
      $69 = 10;
     } else {
      $67 = HEAP32[$__buf>>2]|0;
      $68 = $67 & -2;
      $phitmp$i23 = (($68) + -1)|0;
      $69 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($69|0),0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      label = 32;
      break;
     }
     $72 = HEAP8[$__buf>>0]|0;
     $73 = $72 & 1;
     $74 = ($73<<24>>24)==(0);
     $75 = HEAP32[$16>>2]|0;
     $76 = $74 ? $18 : $75;
     $77 = (($76) + ($58)|0);
     HEAP32[$__a_end>>2] = $77;
     $__a$1 = $76;
    } else {
     $__a$1 = $__a$0;
    }
    $82 = ((($$pre$i$i$i)) + 12|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ((($$pre$i$i$i)) + 16|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($83|0)==($85|0);
    if ($86) {
     $87 = HEAP32[$$pre$i$i$i>>2]|0;
     $88 = ((($87)) + 36|0);
     $89 = HEAP32[$88>>2]|0;
     __THREW__ = 0;
     $90 = (invoke_ii($89|0,($$pre$i$i$i|0))|0);
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 32;
      break;
     } else {
      $$0$i$i = $90;
     }
    } else {
     $93 = HEAP32[$83>>2]|0;
     $$0$i$i = $93;
    }
    $94 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $95 = ($94|0)==(0);
    if (!($95)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $96 = HEAP32[$82>>2]|0;
    $97 = HEAP32[$84>>2]|0;
    $98 = ($96|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$$pre$i$i$i>>2]|0;
     $100 = ((($99)) + 40|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     (invoke_ii($101|0,($$pre$i$i$i|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 32;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $104 = ((($96)) + 4|0);
     HEAP32[$82>>2] = $104;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 32) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $lpad$phi$index = $78;$lpad$phi$index2 = $79;
    break;
   }
   $105 = HEAP8[$__grouping>>0]|0;
   $106 = $105 & 1;
   $107 = ($106<<24>>24)==(0);
   $108 = ((($__grouping)) + 4|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $105&255;
   $111 = $110 >>> 1;
   $112 = $107 ? $111 : $109;
   $113 = ($112|0)==(0);
   if (!($113)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (invoke_iiiii(698,($__a$2|0),($121|0),($__err|0),($$0$i|0))|0);
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 33;
   } else {
    HEAP32[$__v>>2] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 33;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 58;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 33;
        break L13;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 58;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 60;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 58) {
     if ($159) {
      label = 60;
     }
    }
    if ((label|0) == 60) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 33) {
  $80 = ___cxa_find_matching_catch_2()|0;
  $81 = tempRet0;
  $lpad$phi$index = $80;$lpad$phi$index2 = $81;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0;
 var $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 33;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i5|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $23 = ((($$pre$i$i$i5)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i5)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i5>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i5|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 32;
       break;
      } else {
       $$0$i$i$i$i3 = $31;
      }
     } else {
      $34 = HEAP32[$24>>2]|0;
      $$0$i$i$i$i3 = $34;
     }
     $35 = ($$0$i$i$i$i3|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$157 = 0;
     }
    }
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 24;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 32;
        break L15;
       } else {
        $$0$i$i1$i$i9 = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i1$i$i9 = $49;
      }
      $50 = ($$0$i$i1$i$i9|0)==(-1);
      if ($50) {
       HEAP32[$__e>>2] = 0;
       label = 24;
       break;
      } else {
       if ($157) {
        $158 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $51 = HEAP32[$__a_end>>2]|0;
    $52 = HEAP8[$__buf>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    $55 = HEAP32[$20>>2]|0;
    $56 = $52&255;
    $57 = $56 >>> 1;
    $58 = $54 ? $57 : $55;
    $59 = (($__a$0) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     $61 = $58 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($61|0),0);
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 32;
      break;
     }
     $64 = HEAP8[$__buf>>0]|0;
     $65 = $64 & 1;
     $66 = ($65<<24>>24)==(0);
     if ($66) {
      $69 = 10;
     } else {
      $67 = HEAP32[$__buf>>2]|0;
      $68 = $67 & -2;
      $phitmp$i23 = (($68) + -1)|0;
      $69 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($69|0),0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      label = 32;
      break;
     }
     $72 = HEAP8[$__buf>>0]|0;
     $73 = $72 & 1;
     $74 = ($73<<24>>24)==(0);
     $75 = HEAP32[$16>>2]|0;
     $76 = $74 ? $18 : $75;
     $77 = (($76) + ($58)|0);
     HEAP32[$__a_end>>2] = $77;
     $__a$1 = $76;
    } else {
     $__a$1 = $__a$0;
    }
    $82 = ((($$pre$i$i$i)) + 12|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ((($$pre$i$i$i)) + 16|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($83|0)==($85|0);
    if ($86) {
     $87 = HEAP32[$$pre$i$i$i>>2]|0;
     $88 = ((($87)) + 36|0);
     $89 = HEAP32[$88>>2]|0;
     __THREW__ = 0;
     $90 = (invoke_ii($89|0,($$pre$i$i$i|0))|0);
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 32;
      break;
     } else {
      $$0$i$i = $90;
     }
    } else {
     $93 = HEAP32[$83>>2]|0;
     $$0$i$i = $93;
    }
    $94 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $95 = ($94|0)==(0);
    if (!($95)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $96 = HEAP32[$82>>2]|0;
    $97 = HEAP32[$84>>2]|0;
    $98 = ($96|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$$pre$i$i$i>>2]|0;
     $100 = ((($99)) + 40|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     (invoke_ii($101|0,($$pre$i$i$i|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 32;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $104 = ((($96)) + 4|0);
     HEAP32[$82>>2] = $104;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 32) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $lpad$phi$index = $78;$lpad$phi$index2 = $79;
    break;
   }
   $105 = HEAP8[$__grouping>>0]|0;
   $106 = $105 & 1;
   $107 = ($106<<24>>24)==(0);
   $108 = ((($__grouping)) + 4|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $105&255;
   $111 = $110 >>> 1;
   $112 = $107 ? $111 : $109;
   $113 = ($112|0)==(0);
   if (!($113)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (invoke_iiiii(699,($__a$2|0),($121|0),($__err|0),($$0$i|0))|0);
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 33;
   } else {
    HEAP32[$__v>>2] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 33;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 58;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 33;
        break L13;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 58;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 60;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 58) {
     if ($159) {
      label = 60;
     }
    }
    if ((label|0) == 60) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 33) {
  $80 = ___cxa_find_matching_catch_2()|0;
  $81 = tempRet0;
  $lpad$phi$index = $80;$lpad$phi$index2 = $81;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0;
 var $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 74;
 switch ($2|0) {
 case 64:  {
  $$0$i = 8;
  break;
 }
 case 8:  {
  $$0$i = 16;
  break;
 }
 case 0:  {
  $$0$i = 0;
  break;
 }
 default: {
  $$0$i = 10;
 }
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping,$__iob,$__atoms,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $3 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$3>>2] = 0;
  $4 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $4;
 }
 $5 = HEAP8[$__buf>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = 10;
 } else {
  $8 = HEAP32[$__buf>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($10|0),0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 L13: do {
  if ($12) {
   label = 33;
  } else {
   $13 = HEAP8[$__buf>>0]|0;
   $14 = $13 & 1;
   $15 = ($14<<24>>24)==(0);
   $16 = ((($__buf)) + 8|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($__buf)) + 1|0);
   $19 = $15 ? $18 : $17;
   HEAP32[$__a_end>>2] = $19;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   $20 = ((($__buf)) + 4|0);
   $21 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i5 = $$pre;$__a$0 = $19;
   L15: while(1) {
    $22 = ($$pre$i$i$i5|0)==(0|0);
    if ($22) {
     $$pre$i$i$i = 0;$162 = 1;
    } else {
     $23 = ((($$pre$i$i$i5)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($$pre$i$i$i5)) + 16|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($24|0)==($26|0);
     if ($27) {
      $28 = HEAP32[$$pre$i$i$i5>>2]|0;
      $29 = ((($28)) + 36|0);
      $30 = HEAP32[$29>>2]|0;
      __THREW__ = 0;
      $31 = (invoke_ii($30|0,($$pre$i$i$i5|0))|0);
      $32 = __THREW__; __THREW__ = 0;
      $33 = $32&1;
      if ($33) {
       label = 32;
       break;
      } else {
       $$0$i$i$i$i3 = $31;
      }
     } else {
      $34 = HEAP32[$24>>2]|0;
      $$0$i$i$i$i3 = $34;
     }
     $35 = ($$0$i$i$i$i3|0)==(-1);
     if ($35) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$162 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i5;$162 = 0;
     }
    }
    $36 = HEAP32[$__e>>2]|0;
    $37 = ($36|0)==(0|0);
    do {
     if ($37) {
      label = 24;
     } else {
      $38 = ((($36)) + 12|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ((($36)) + 16|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($39|0)==($41|0);
      if ($42) {
       $43 = HEAP32[$36>>2]|0;
       $44 = ((($43)) + 36|0);
       $45 = HEAP32[$44>>2]|0;
       __THREW__ = 0;
       $46 = (invoke_ii($45|0,($36|0))|0);
       $47 = __THREW__; __THREW__ = 0;
       $48 = $47&1;
       if ($48) {
        label = 32;
        break L15;
       } else {
        $$0$i$i1$i$i9 = $46;
       }
      } else {
       $49 = HEAP32[$39>>2]|0;
       $$0$i$i1$i$i9 = $49;
      }
      $50 = ($$0$i$i1$i$i9|0)==(-1);
      if ($50) {
       HEAP32[$__e>>2] = 0;
       label = 24;
       break;
      } else {
       if ($162) {
        $163 = $36;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $36;$__a$2 = $__a$0;
        break L15;
       }
      }
     }
    } while(0);
    if ((label|0) == 24) {
     label = 0;
     if ($162) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $163 = 0;
     }
    }
    $51 = HEAP32[$__a_end>>2]|0;
    $52 = HEAP8[$__buf>>0]|0;
    $53 = $52 & 1;
    $54 = ($53<<24>>24)==(0);
    $55 = HEAP32[$20>>2]|0;
    $56 = $52&255;
    $57 = $56 >>> 1;
    $58 = $54 ? $57 : $55;
    $59 = (($__a$0) + ($58)|0);
    $60 = ($51|0)==($59|0);
    if ($60) {
     $61 = $58 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($61|0),0);
     $62 = __THREW__; __THREW__ = 0;
     $63 = $62&1;
     if ($63) {
      label = 32;
      break;
     }
     $64 = HEAP8[$__buf>>0]|0;
     $65 = $64 & 1;
     $66 = ($65<<24>>24)==(0);
     if ($66) {
      $69 = 10;
     } else {
      $67 = HEAP32[$__buf>>2]|0;
      $68 = $67 & -2;
      $phitmp$i23 = (($68) + -1)|0;
      $69 = $phitmp$i23;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($69|0),0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      label = 32;
      break;
     }
     $72 = HEAP8[$__buf>>0]|0;
     $73 = $72 & 1;
     $74 = ($73<<24>>24)==(0);
     $75 = HEAP32[$16>>2]|0;
     $76 = $74 ? $18 : $75;
     $77 = (($76) + ($58)|0);
     HEAP32[$__a_end>>2] = $77;
     $__a$1 = $76;
    } else {
     $__a$1 = $__a$0;
    }
    $82 = ((($$pre$i$i$i)) + 12|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ((($$pre$i$i$i)) + 16|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($83|0)==($85|0);
    if ($86) {
     $87 = HEAP32[$$pre$i$i$i>>2]|0;
     $88 = ((($87)) + 36|0);
     $89 = HEAP32[$88>>2]|0;
     __THREW__ = 0;
     $90 = (invoke_ii($89|0,($$pre$i$i$i|0))|0);
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 32;
      break;
     } else {
      $$0$i$i = $90;
     }
    } else {
     $93 = HEAP32[$83>>2]|0;
     $$0$i$i = $93;
    }
    $94 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,$$0$i,$__a$1,$__a_end,$__dc,$21,$__grouping,$__g,$__g_end,$__atoms)|0);
    $95 = ($94|0)==(0);
    if (!($95)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $163;$__a$2 = $__a$1;
     break;
    }
    $96 = HEAP32[$82>>2]|0;
    $97 = HEAP32[$84>>2]|0;
    $98 = ($96|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$$pre$i$i$i>>2]|0;
     $100 = ((($99)) + 40|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     (invoke_ii($101|0,($$pre$i$i$i|0))|0);
     $102 = __THREW__; __THREW__ = 0;
     $103 = $102&1;
     if ($103) {
      label = 32;
      break;
     } else {
      $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $104 = ((($96)) + 4|0);
     HEAP32[$82>>2] = $104;
     $$pre$i$i$i5 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 32) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $lpad$phi$index = $78;$lpad$phi$index2 = $79;
    break;
   }
   $105 = HEAP8[$__grouping>>0]|0;
   $106 = $105 & 1;
   $107 = ($106<<24>>24)==(0);
   $108 = ((($__grouping)) + 4|0);
   $109 = HEAP32[$108>>2]|0;
   $110 = $105&255;
   $111 = $110 >>> 1;
   $112 = $107 ? $111 : $109;
   $113 = ($112|0)==(0);
   if (!($113)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (invoke_iiiii(700,($__a$2|0),($121|0),($__err|0),($$0$i|0))|0);
   $123 = tempRet0;
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    label = 33;
   } else {
    $126 = $__v;
    $127 = $126;
    HEAP32[$127>>2] = $122;
    $128 = (($126) + 4)|0;
    $129 = $128;
    HEAP32[$129>>2] = $123;
    $130 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$130,$__err);
    $131 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($131) {
     $164 = 1;
    } else {
     $132 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($133|0)==($135|0);
     if ($136) {
      $137 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $138 = ((($137)) + 36|0);
      $139 = HEAP32[$138>>2]|0;
      __THREW__ = 0;
      $140 = (invoke_ii($139|0,($$pre$i$i$i$lcssa|0))|0);
      $141 = __THREW__; __THREW__ = 0;
      $142 = $141&1;
      if ($142) {
       label = 33;
       break;
      } else {
       $$0$i$i$i$i = $140;
      }
     } else {
      $143 = HEAP32[$133>>2]|0;
      $$0$i$i$i$i = $143;
     }
     $144 = ($$0$i$i$i$i|0)==(-1);
     if ($144) {
      HEAP32[$__b>>2] = 0;
      $164 = 1;
     } else {
      $164 = 0;
     }
    }
    $145 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($145) {
      label = 58;
     } else {
      $146 = ((($$pre$i3$i$i)) + 12|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ((($$pre$i3$i$i)) + 16|0);
      $149 = HEAP32[$148>>2]|0;
      $150 = ($147|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$$pre$i3$i$i>>2]|0;
       $152 = ((($151)) + 36|0);
       $153 = HEAP32[$152>>2]|0;
       __THREW__ = 0;
       $154 = (invoke_ii($153|0,($$pre$i3$i$i|0))|0);
       $155 = __THREW__; __THREW__ = 0;
       $156 = $155&1;
       if ($156) {
        label = 33;
        break L13;
       } else {
        $$0$i$i1$i$i = $154;
       }
      } else {
       $157 = HEAP32[$147>>2]|0;
       $$0$i$i1$i$i = $157;
      }
      $158 = ($$0$i$i1$i$i|0)==(-1);
      if ($158) {
       HEAP32[$__e>>2] = 0;
       label = 58;
       break;
      } else {
       if ($164) {
        break;
       } else {
        label = 60;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 58) {
     if ($164) {
      label = 60;
     }
    }
    if ((label|0) == 60) {
     $159 = HEAP32[$__err>>2]|0;
     $160 = $159 | 2;
     HEAP32[$__err>>2] = $160;
    }
    $161 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($161|0);
   }
  }
 } while(0);
 if ((label|0) == 33) {
  $80 = ___cxa_find_matching_catch_2()|0;
  $81 = tempRet0;
  $lpad$phi$index = $80;$lpad$phi$index2 = $81;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 29;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L10: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 28;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 20;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 28;
        break L10;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 20;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
     }
    } while(0);
    if ((label|0) == 20) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 28;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 28;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 28;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 28;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 28) {
    $76 = ___cxa_find_matching_catch_2()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(701,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 29;
   } else {
    HEAPF32[$__v>>2] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 29;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 54;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 29;
        break L8;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 54;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 56;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 54) {
     if ($159) {
      label = 56;
     }
    }
    if ((label|0) == 56) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 29) {
  $78 = ___cxa_find_matching_catch_2()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__loc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__loc = sp;
 $0 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $0;
 __THREW__ = 0;
 $1 = (invoke_iii(608,($__loc|0),(22448|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if (!($3)) {
  $4 = HEAP32[$1>>2]|0;
  $5 = ((($4)) + 48|0);
  $6 = HEAP32[$5>>2]|0;
  __THREW__ = 0;
  (invoke_iiiii($6|0,($1|0),(17188|0),((17220)|0),($__atoms|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if (!($8)) {
   __THREW__ = 0;
   $9 = (invoke_iii(608,($__loc|0),(22456|0))|0);
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if (!($11)) {
    $12 = HEAP32[$9>>2]|0;
    $13 = ((($12)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    __THREW__ = 0;
    $15 = (invoke_ii($14|0,($9|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     HEAP32[$__decimal_point>>2] = $15;
     $18 = HEAP32[$9>>2]|0;
     $19 = ((($18)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     $21 = (invoke_ii($20|0,($9|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      HEAP32[$__thousands_sep>>2] = $21;
      $24 = HEAP32[$9>>2]|0;
      $25 = ((($24)) + 20|0);
      $26 = HEAP32[$25>>2]|0;
      __THREW__ = 0;
      invoke_vii($26|0,($agg$result|0),($9|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch_2()|0;
 $30 = tempRet0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 ___resumeException($29|0);
 // unreachable;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0$i = 0, $$0$lcssa$i = 0, $$2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 L1: do {
  if ($0) {
   $1 = HEAP8[$__in_units>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if ($2) {
    $$2 = -1;
   } else {
    HEAP8[$__in_units>>0] = 0;
    $3 = HEAP32[$__a_end>>2]|0;
    $4 = ((($3)) + 1|0);
    HEAP32[$__a_end>>2] = $4;
    HEAP8[$3>>0] = 46;
    $5 = HEAP8[$__grouping>>0]|0;
    $6 = $5 & 1;
    $7 = ($6<<24>>24)==(0);
    $8 = ((($__grouping)) + 4|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = $5&255;
    $11 = $10 >>> 1;
    $12 = $7 ? $11 : $9;
    $13 = ($12|0)==(0);
    if ($13) {
     $$2 = 0;
    } else {
     $14 = HEAP32[$__g_end>>2]|0;
     $15 = $14;
     $16 = $__g;
     $17 = (($15) - ($16))|0;
     $18 = ($17|0)<(160);
     if ($18) {
      $19 = HEAP32[$__dc>>2]|0;
      $20 = ((($14)) + 4|0);
      HEAP32[$__g_end>>2] = $20;
      HEAP32[$14>>2] = $19;
      $$2 = 0;
     } else {
      $$2 = 0;
     }
    }
   }
  } else {
   $21 = ($__ct|0)==($__thousands_sep|0);
   if ($21) {
    $22 = HEAP8[$__grouping>>0]|0;
    $23 = $22 & 1;
    $24 = ($23<<24>>24)==(0);
    $25 = ((($__grouping)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $22&255;
    $28 = $27 >>> 1;
    $29 = $24 ? $28 : $26;
    $30 = ($29|0)==(0);
    if (!($30)) {
     $31 = HEAP8[$__in_units>>0]|0;
     $32 = ($31<<24>>24)==(0);
     if ($32) {
      $$2 = -1;
      break;
     }
     $33 = HEAP32[$__g_end>>2]|0;
     $34 = $33;
     $35 = $__g;
     $36 = (($34) - ($35))|0;
     $37 = ($36|0)<(160);
     if (!($37)) {
      $$2 = 0;
      break;
     }
     $38 = HEAP32[$__dc>>2]|0;
     $39 = ((($33)) + 4|0);
     HEAP32[$__g_end>>2] = $39;
     HEAP32[$33>>2] = $38;
     HEAP32[$__dc>>2] = 0;
     $$2 = 0;
     break;
    }
   }
   $40 = ((($__atoms)) + 128|0);
   $$0$i = $__atoms;
   while(1) {
    $41 = ($$0$i|0)==($40|0);
    if ($41) {
     $$0$lcssa$i = $40;
     break;
    }
    $42 = HEAP32[$$0$i>>2]|0;
    $43 = ($42|0)==($__ct|0);
    if ($43) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $44 = ((($$0$i)) + 4|0);
    $$0$i = $44;
   }
   $45 = $$0$lcssa$i;
   $46 = $__atoms;
   $47 = (($45) - ($46))|0;
   $48 = $47 >> 2;
   $49 = ($47|0)>(124);
   if ($49) {
    $$2 = -1;
   } else {
    $50 = (17188 + ($48)|0);
    $51 = HEAP8[$50>>0]|0;
    switch ($48|0) {
    case 24: case 25:  {
     $52 = HEAP32[$__a_end>>2]|0;
     $53 = ($52|0)==($__a|0);
     if (!($53)) {
      $54 = ((($52)) + -1|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55&255;
      $57 = $56 & 95;
      $58 = HEAP8[$__exp>>0]|0;
      $59 = $58&255;
      $60 = $59 & 127;
      $61 = ($57|0)==($60|0);
      if (!($61)) {
       $$2 = -1;
       break L1;
      }
     }
     $62 = ((($52)) + 1|0);
     HEAP32[$__a_end>>2] = $62;
     HEAP8[$52>>0] = $51;
     $$2 = 0;
     break L1;
     break;
    }
    case 23: case 22:  {
     HEAP8[$__exp>>0] = 80;
     break;
    }
    default: {
     $63 = $51&255;
     $64 = $63 & 95;
     $65 = HEAP8[$__exp>>0]|0;
     $66 = $65 << 24 >> 24;
     $67 = ($64|0)==($66|0);
     if ($67) {
      $68 = $64 | 128;
      $69 = $68&255;
      HEAP8[$__exp>>0] = $69;
      $70 = HEAP8[$__in_units>>0]|0;
      $71 = ($70<<24>>24)==(0);
      if (!($71)) {
       HEAP8[$__in_units>>0] = 0;
       $72 = HEAP8[$__grouping>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__grouping)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = ($79|0)==(0);
       if (!($80)) {
        $81 = HEAP32[$__g_end>>2]|0;
        $82 = $81;
        $83 = $__g;
        $84 = (($82) - ($83))|0;
        $85 = ($84|0)<(160);
        if ($85) {
         $86 = HEAP32[$__dc>>2]|0;
         $87 = ((($81)) + 4|0);
         HEAP32[$__g_end>>2] = $87;
         HEAP32[$81>>2] = $86;
        }
       }
      }
     }
    }
    }
    $88 = HEAP32[$__a_end>>2]|0;
    $89 = ((($88)) + 1|0);
    HEAP32[$__a_end>>2] = $89;
    HEAP8[$88>>0] = $51;
    $90 = ($47|0)>(84);
    if ($90) {
     $$2 = 0;
    } else {
     $91 = HEAP32[$__dc>>2]|0;
     $92 = (($91) + 1)|0;
     HEAP32[$__dc>>2] = $92;
     $$2 = 0;
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 29;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L10: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 28;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 20;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 28;
        break L10;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 20;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
     }
    } while(0);
    if ((label|0) == 20) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 28;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 28;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 28;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 28;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 28) {
    $76 = ___cxa_find_matching_catch_2()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(702,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 29;
   } else {
    HEAPF64[$__v>>3] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 29;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 54;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 29;
        break L8;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 54;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 56;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 54) {
     if ($159) {
      label = 56;
     }
    }
    if ((label|0) == 56) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 29) {
  $78 = ___cxa_find_matching_catch_2()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__v)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0;
 var $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__in_units = 0, $__thousands_sep = 0, $exitcond$i$i = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__atoms = sp + 208|0;
 $__decimal_point = sp + 200|0;
 $__thousands_sep = sp + 196|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 4|0;
 $__dc = sp;
 $__in_units = sp + 337|0;
 $__exp = sp + 336|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping,$__iob,$__atoms,$__decimal_point,$__thousands_sep);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__buf) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__buf>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = 10;
 } else {
  $5 = HEAP32[$__buf>>2]|0;
  $6 = $5 & -2;
  $phitmp$i = (($6) + -1)|0;
  $7 = $phitmp$i;
 }
 __THREW__ = 0;
 invoke_viii(685,($__buf|0),($7|0),0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 L8: do {
  if ($9) {
   label = 29;
  } else {
   $10 = HEAP8[$__buf>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)==(0);
   $13 = ((($__buf)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($__buf)) + 1|0);
   $16 = $12 ? $15 : $14;
   HEAP32[$__a_end>>2] = $16;
   HEAP32[$__g_end>>2] = $__g;
   HEAP32[$__dc>>2] = 0;
   HEAP8[$__in_units>>0] = 1;
   HEAP8[$__exp>>0] = 69;
   $17 = ((($__buf)) + 4|0);
   $18 = HEAP32[$__decimal_point>>2]|0;
   $19 = HEAP32[$__thousands_sep>>2]|0;
   $$pre = HEAP32[$__b>>2]|0;
   $$pre$i$i$i6 = $$pre;$__a$0 = $16;
   L10: while(1) {
    $20 = ($$pre$i$i$i6|0)==(0|0);
    if ($20) {
     $$pre$i$i$i = 0;$157 = 1;
    } else {
     $21 = ((($$pre$i$i$i6)) + 12|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($$pre$i$i$i6)) + 16|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22|0)==($24|0);
     if ($25) {
      $26 = HEAP32[$$pre$i$i$i6>>2]|0;
      $27 = ((($26)) + 36|0);
      $28 = HEAP32[$27>>2]|0;
      __THREW__ = 0;
      $29 = (invoke_ii($28|0,($$pre$i$i$i6|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       label = 28;
       break;
      } else {
       $$0$i$i$i$i4 = $29;
      }
     } else {
      $32 = HEAP32[$22>>2]|0;
      $$0$i$i$i$i4 = $32;
     }
     $33 = ($$0$i$i$i$i4|0)==(-1);
     if ($33) {
      HEAP32[$__b>>2] = 0;
      $$pre$i$i$i = 0;$157 = 1;
     } else {
      $$pre$i$i$i = $$pre$i$i$i6;$157 = 0;
     }
    }
    $34 = HEAP32[$__e>>2]|0;
    $35 = ($34|0)==(0|0);
    do {
     if ($35) {
      label = 20;
     } else {
      $36 = ((($34)) + 12|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ((($34)) + 16|0);
      $39 = HEAP32[$38>>2]|0;
      $40 = ($37|0)==($39|0);
      if ($40) {
       $41 = HEAP32[$34>>2]|0;
       $42 = ((($41)) + 36|0);
       $43 = HEAP32[$42>>2]|0;
       __THREW__ = 0;
       $44 = (invoke_ii($43|0,($34|0))|0);
       $45 = __THREW__; __THREW__ = 0;
       $46 = $45&1;
       if ($46) {
        label = 28;
        break L10;
       } else {
        $$0$i$i1$i$i10 = $44;
       }
      } else {
       $47 = HEAP32[$37>>2]|0;
       $$0$i$i1$i$i10 = $47;
      }
      $48 = ($$0$i$i1$i$i10|0)==(-1);
      if ($48) {
       HEAP32[$__e>>2] = 0;
       label = 20;
       break;
      } else {
       if ($157) {
        $158 = $34;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $34;$__a$2 = $__a$0;
        break L10;
       }
      }
     }
    } while(0);
    if ((label|0) == 20) {
     label = 0;
     if ($157) {
      $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
      break;
     } else {
      $158 = 0;
     }
    }
    $49 = HEAP32[$__a_end>>2]|0;
    $50 = HEAP8[$__buf>>0]|0;
    $51 = $50 & 1;
    $52 = ($51<<24>>24)==(0);
    $53 = HEAP32[$17>>2]|0;
    $54 = $50&255;
    $55 = $54 >>> 1;
    $56 = $52 ? $55 : $53;
    $57 = (($__a$0) + ($56)|0);
    $58 = ($49|0)==($57|0);
    if ($58) {
     $59 = $56 << 1;
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($59|0),0);
     $60 = __THREW__; __THREW__ = 0;
     $61 = $60&1;
     if ($61) {
      label = 28;
      break;
     }
     $62 = HEAP8[$__buf>>0]|0;
     $63 = $62 & 1;
     $64 = ($63<<24>>24)==(0);
     if ($64) {
      $67 = 10;
     } else {
      $65 = HEAP32[$__buf>>2]|0;
      $66 = $65 & -2;
      $phitmp$i24 = (($66) + -1)|0;
      $67 = $phitmp$i24;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($67|0),0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 28;
      break;
     }
     $70 = HEAP8[$__buf>>0]|0;
     $71 = $70 & 1;
     $72 = ($71<<24>>24)==(0);
     $73 = HEAP32[$13>>2]|0;
     $74 = $72 ? $15 : $73;
     $75 = (($74) + ($56)|0);
     HEAP32[$__a_end>>2] = $75;
     $__a$1 = $74;
    } else {
     $__a$1 = $__a$0;
    }
    $80 = ((($$pre$i$i$i)) + 12|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = ((($$pre$i$i$i)) + 16|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81|0)==($83|0);
    if ($84) {
     $85 = HEAP32[$$pre$i$i$i>>2]|0;
     $86 = ((($85)) + 36|0);
     $87 = HEAP32[$86>>2]|0;
     __THREW__ = 0;
     $88 = (invoke_ii($87|0,($$pre$i$i$i|0))|0);
     $89 = __THREW__; __THREW__ = 0;
     $90 = $89&1;
     if ($90) {
      label = 28;
      break;
     } else {
      $$0$i$i = $88;
     }
    } else {
     $91 = HEAP32[$81>>2]|0;
     $$0$i$i = $91;
    }
    $92 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i,$__in_units,$__exp,$__a$1,$__a_end,$18,$19,$__grouping,$__g,$__g_end,$__dc,$__atoms)|0);
    $93 = ($92|0)==(0);
    if (!($93)) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $158;$__a$2 = $__a$1;
     break;
    }
    $94 = HEAP32[$80>>2]|0;
    $95 = HEAP32[$82>>2]|0;
    $96 = ($94|0)==($95|0);
    if ($96) {
     $97 = HEAP32[$$pre$i$i$i>>2]|0;
     $98 = ((($97)) + 40|0);
     $99 = HEAP32[$98>>2]|0;
     __THREW__ = 0;
     (invoke_ii($99|0,($$pre$i$i$i|0))|0);
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if ($101) {
      label = 28;
      break;
     } else {
      $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
      continue;
     }
    } else {
     $102 = ((($94)) + 4|0);
     HEAP32[$80>>2] = $102;
     $$pre$i$i$i6 = $$pre$i$i$i;$__a$0 = $__a$1;
     continue;
    }
   }
   if ((label|0) == 28) {
    $76 = ___cxa_find_matching_catch_2()|0;
    $77 = tempRet0;
    $lpad$phi$index = $76;$lpad$phi$index2 = $77;
    break;
   }
   $103 = HEAP8[$__grouping>>0]|0;
   $104 = $103 & 1;
   $105 = ($104<<24>>24)==(0);
   $106 = ((($__grouping)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = $103&255;
   $109 = $108 >>> 1;
   $110 = $105 ? $109 : $107;
   $111 = ($110|0)==(0);
   $112 = HEAP8[$__in_units>>0]|0;
   $113 = ($112<<24>>24)==(0);
   $or$cond = $113 | $111;
   if (!($or$cond)) {
    $114 = HEAP32[$__g_end>>2]|0;
    $115 = $114;
    $116 = $__g;
    $117 = (($115) - ($116))|0;
    $118 = ($117|0)<(160);
    if ($118) {
     $119 = HEAP32[$__dc>>2]|0;
     $120 = ((($114)) + 4|0);
     HEAP32[$__g_end>>2] = $120;
     HEAP32[$114>>2] = $119;
    }
   }
   $121 = HEAP32[$__a_end>>2]|0;
   __THREW__ = 0;
   $122 = (+invoke_diii(703,($__a$2|0),($121|0),($__err|0)));
   $123 = __THREW__; __THREW__ = 0;
   $124 = $123&1;
   if ($124) {
    label = 29;
   } else {
    HEAPF64[$__v>>3] = $122;
    $125 = HEAP32[$__g_end>>2]|0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$125,$__err);
    $126 = ($$pre$i$i$i$lcssa|0)==(0|0);
    if ($126) {
     $159 = 1;
    } else {
     $127 = ((($$pre$i$i$i$lcssa)) + 12|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($$pre$i$i$i$lcssa)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($128|0)==($130|0);
     if ($131) {
      $132 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      __THREW__ = 0;
      $135 = (invoke_ii($134|0,($$pre$i$i$i$lcssa|0))|0);
      $136 = __THREW__; __THREW__ = 0;
      $137 = $136&1;
      if ($137) {
       label = 29;
       break;
      } else {
       $$0$i$i$i$i = $135;
      }
     } else {
      $138 = HEAP32[$128>>2]|0;
      $$0$i$i$i$i = $138;
     }
     $139 = ($$0$i$i$i$i|0)==(-1);
     if ($139) {
      HEAP32[$__b>>2] = 0;
      $159 = 1;
     } else {
      $159 = 0;
     }
    }
    $140 = ($$pre$i3$i$i|0)==(0|0);
    do {
     if ($140) {
      label = 54;
     } else {
      $141 = ((($$pre$i3$i$i)) + 12|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($$pre$i3$i$i)) + 16|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ($142|0)==($144|0);
      if ($145) {
       $146 = HEAP32[$$pre$i3$i$i>>2]|0;
       $147 = ((($146)) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       __THREW__ = 0;
       $149 = (invoke_ii($148|0,($$pre$i3$i$i|0))|0);
       $150 = __THREW__; __THREW__ = 0;
       $151 = $150&1;
       if ($151) {
        label = 29;
        break L8;
       } else {
        $$0$i$i1$i$i = $149;
       }
      } else {
       $152 = HEAP32[$142>>2]|0;
       $$0$i$i1$i$i = $152;
      }
      $153 = ($$0$i$i1$i$i|0)==(-1);
      if ($153) {
       HEAP32[$__e>>2] = 0;
       label = 54;
       break;
      } else {
       if ($159) {
        break;
       } else {
        label = 56;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 54) {
     if ($159) {
      label = 56;
     }
    }
    if ((label|0) == 56) {
     $154 = HEAP32[$__err>>2]|0;
     $155 = $154 | 2;
     HEAP32[$__err>>2] = $155;
    }
    $156 = HEAP32[$__b>>2]|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return ($156|0);
   }
  }
 } while(0);
 if ((label|0) == 29) {
  $78 = ___cxa_find_matching_catch_2()|0;
  $79 = tempRet0;
  $lpad$phi$index = $78;$lpad$phi$index2 = $79;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this,$__b,$__e,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__i$0$i$i = 0, $__i$0$i$i5 = 0, $exitcond$i$i = 0, $exitcond$i$i6 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $phitmp$i = 0, $phitmp$i30 = 0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $__atoms = sp + 208|0;
 $__grouping = sp + 196|0;
 $0 = sp + 192|0;
 $__buf = sp + 180|0;
 $__a_end = sp + 176|0;
 $__g = sp + 16|0;
 $__g_end = sp + 8|0;
 $__dc = sp + 4|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($__grouping) + ($__i$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $2;
 }
 __THREW__ = 0;
 $3 = (invoke_ii(607,($__iob|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 do {
  if ($5) {
   $88 = ___cxa_find_matching_catch_2()|0;
   $89 = tempRet0;
   $$0 = $88;$$01 = $89;
  } else {
   HEAP32[$0>>2] = $3;
   __THREW__ = 0;
   $6 = (invoke_iii(608,($0|0),(22448|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if (!($8)) {
    $9 = HEAP32[$6>>2]|0;
    $10 = ((($9)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($11|0,($6|0),(17188|0),((17214)|0),($__atoms|0))|0);
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if (!($13)) {
     (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
     $__i$0$i$i5 = 0;
     while(1) {
      $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
      if ($exitcond$i$i6) {
       break;
      }
      $14 = (($__buf) + ($__i$0$i$i5<<2)|0);
      HEAP32[$14>>2] = 0;
      $15 = (($__i$0$i$i5) + 1)|0;
      $__i$0$i$i5 = $15;
     }
     $16 = HEAP8[$__buf>>0]|0;
     $17 = $16 & 1;
     $18 = ($17<<24>>24)==(0);
     if ($18) {
      $21 = 10;
     } else {
      $19 = HEAP32[$__buf>>2]|0;
      $20 = $19 & -2;
      $phitmp$i = (($20) + -1)|0;
      $21 = $phitmp$i;
     }
     __THREW__ = 0;
     invoke_viii(685,($__buf|0),($21|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     L18: do {
      if ($23) {
       label = 37;
      } else {
       $24 = HEAP8[$__buf>>0]|0;
       $25 = $24 & 1;
       $26 = ($25<<24>>24)==(0);
       $27 = ((($__buf)) + 8|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($__buf)) + 1|0);
       $30 = $26 ? $29 : $28;
       HEAP32[$__a_end>>2] = $30;
       HEAP32[$__g_end>>2] = $__g;
       HEAP32[$__dc>>2] = 0;
       $31 = ((($__buf)) + 4|0);
       $$pre = HEAP32[$__b>>2]|0;
       $$pre$i$i$i11 = $$pre;$__a$0 = $30;
       L20: while(1) {
        $32 = ($$pre$i$i$i11|0)==(0|0);
        if ($32) {
         $$pre$i$i$i = 0;$167 = 1;
        } else {
         $33 = ((($$pre$i$i$i11)) + 12|0);
         $34 = HEAP32[$33>>2]|0;
         $35 = ((($$pre$i$i$i11)) + 16|0);
         $36 = HEAP32[$35>>2]|0;
         $37 = ($34|0)==($36|0);
         if ($37) {
          $38 = HEAP32[$$pre$i$i$i11>>2]|0;
          $39 = ((($38)) + 36|0);
          $40 = HEAP32[$39>>2]|0;
          __THREW__ = 0;
          $41 = (invoke_ii($40|0,($$pre$i$i$i11|0))|0);
          $42 = __THREW__; __THREW__ = 0;
          $43 = $42&1;
          if ($43) {
           label = 36;
           break;
          } else {
           $$0$i$i$i$i9 = $41;
          }
         } else {
          $44 = HEAP32[$34>>2]|0;
          $$0$i$i$i$i9 = $44;
         }
         $45 = ($$0$i$i$i$i9|0)==(-1);
         if ($45) {
          HEAP32[$__b>>2] = 0;
          $$pre$i$i$i = 0;$167 = 1;
         } else {
          $$pre$i$i$i = $$pre$i$i$i11;$167 = 0;
         }
        }
        $46 = HEAP32[$__e>>2]|0;
        $47 = ($46|0)==(0|0);
        do {
         if ($47) {
          label = 26;
         } else {
          $48 = ((($46)) + 12|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($46)) + 16|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = ($49|0)==($51|0);
          if ($52) {
           $53 = HEAP32[$46>>2]|0;
           $54 = ((($53)) + 36|0);
           $55 = HEAP32[$54>>2]|0;
           __THREW__ = 0;
           $56 = (invoke_ii($55|0,($46|0))|0);
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 36;
            break L20;
           } else {
            $$0$i$i1$i$i15 = $56;
           }
          } else {
           $59 = HEAP32[$49>>2]|0;
           $$0$i$i1$i$i15 = $59;
          }
          $60 = ($$0$i$i1$i$i15|0)==(-1);
          if ($60) {
           HEAP32[$__e>>2] = 0;
           label = 26;
           break;
          } else {
           if ($167) {
            $168 = $46;
            break;
           } else {
            $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $46;$__a$2 = $__a$0;
            break L20;
           }
          }
         }
        } while(0);
        if ((label|0) == 26) {
         label = 0;
         if ($167) {
          $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = 0;$__a$2 = $__a$0;
          break;
         } else {
          $168 = 0;
         }
        }
        $61 = HEAP32[$__a_end>>2]|0;
        $62 = HEAP8[$__buf>>0]|0;
        $63 = $62 & 1;
        $64 = ($63<<24>>24)==(0);
        $65 = HEAP32[$31>>2]|0;
        $66 = $62&255;
        $67 = $66 >>> 1;
        $68 = $64 ? $67 : $65;
        $69 = (($__a$0) + ($68)|0);
        $70 = ($61|0)==($69|0);
        if ($70) {
         $71 = $68 << 1;
         __THREW__ = 0;
         invoke_viii(685,($__buf|0),($71|0),0);
         $72 = __THREW__; __THREW__ = 0;
         $73 = $72&1;
         if ($73) {
          label = 36;
          break;
         }
         $74 = HEAP8[$__buf>>0]|0;
         $75 = $74 & 1;
         $76 = ($75<<24>>24)==(0);
         if ($76) {
          $79 = 10;
         } else {
          $77 = HEAP32[$__buf>>2]|0;
          $78 = $77 & -2;
          $phitmp$i30 = (($78) + -1)|0;
          $79 = $phitmp$i30;
         }
         __THREW__ = 0;
         invoke_viii(685,($__buf|0),($79|0),0);
         $80 = __THREW__; __THREW__ = 0;
         $81 = $80&1;
         if ($81) {
          label = 36;
          break;
         }
         $82 = HEAP8[$__buf>>0]|0;
         $83 = $82 & 1;
         $84 = ($83<<24>>24)==(0);
         $85 = HEAP32[$27>>2]|0;
         $86 = $84 ? $29 : $85;
         $87 = (($86) + ($68)|0);
         HEAP32[$__a_end>>2] = $87;
         $__a$1 = $86;
        } else {
         $__a$1 = $__a$0;
        }
        $96 = ((($$pre$i$i$i)) + 12|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = ((($$pre$i$i$i)) + 16|0);
        $99 = HEAP32[$98>>2]|0;
        $100 = ($97|0)==($99|0);
        if ($100) {
         $101 = HEAP32[$$pre$i$i$i>>2]|0;
         $102 = ((($101)) + 36|0);
         $103 = HEAP32[$102>>2]|0;
         __THREW__ = 0;
         $104 = (invoke_ii($103|0,($$pre$i$i$i|0))|0);
         $105 = __THREW__; __THREW__ = 0;
         $106 = $105&1;
         if ($106) {
          label = 36;
          break;
         } else {
          $$0$i$i = $104;
         }
        } else {
         $107 = HEAP32[$97>>2]|0;
         $$0$i$i = $107;
        }
        $108 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
        $109 = ($108|0)==(0);
        if (!($109)) {
         $$pre$i$i$i$lcssa = $$pre$i$i$i;$$pre$i3$i$i = $168;$__a$2 = $__a$1;
         break;
        }
        $110 = HEAP32[$96>>2]|0;
        $111 = HEAP32[$98>>2]|0;
        $112 = ($110|0)==($111|0);
        if ($112) {
         $113 = HEAP32[$$pre$i$i$i>>2]|0;
         $114 = ((($113)) + 40|0);
         $115 = HEAP32[$114>>2]|0;
         __THREW__ = 0;
         (invoke_ii($115|0,($$pre$i$i$i|0))|0);
         $116 = __THREW__; __THREW__ = 0;
         $117 = $116&1;
         if ($117) {
          label = 36;
          break;
         } else {
          $$pre$i$i$i11 = $$pre$i$i$i;$__a$0 = $__a$1;
          continue;
         }
        } else {
         $118 = ((($110)) + 4|0);
         HEAP32[$96>>2] = $118;
         $$pre$i$i$i11 = $$pre$i$i$i;$__a$0 = $__a$1;
         continue;
        }
       }
       if ((label|0) == 36) {
        $92 = ___cxa_find_matching_catch_2()|0;
        $93 = tempRet0;
        $lpad$phi$index = $92;$lpad$phi$index2 = $93;
        break;
       }
       $119 = HEAP32[$__a_end>>2]|0;
       $120 = $__a$2;
       $121 = (($119) - ($120))|0;
       __THREW__ = 0;
       invoke_viii(685,($__buf|0),($121|0),0);
       $122 = __THREW__; __THREW__ = 0;
       $123 = $122&1;
       if ($123) {
        label = 37;
       } else {
        $124 = HEAP8[$__buf>>0]|0;
        $125 = HEAP32[$27>>2]|0;
        __THREW__ = 0;
        $126 = (invoke_i(704)|0);
        $127 = __THREW__; __THREW__ = 0;
        $128 = $127&1;
        if ($128) {
         label = 37;
        } else {
         $129 = $124 & 1;
         $130 = ($129<<24>>24)==(0);
         $131 = $130 ? $29 : $125;
         __THREW__ = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $132 = (invoke_iiiii(705,($131|0),($126|0),(17223|0),($vararg_buffer|0))|0);
         $133 = __THREW__; __THREW__ = 0;
         $134 = $133&1;
         if ($134) {
          label = 37;
         } else {
          $135 = ($132|0)==(1);
          if (!($135)) {
           HEAP32[$__err>>2] = 4;
          }
          $136 = ($$pre$i$i$i$lcssa|0)==(0|0);
          if ($136) {
           $169 = 1;
          } else {
           $137 = ((($$pre$i$i$i$lcssa)) + 12|0);
           $138 = HEAP32[$137>>2]|0;
           $139 = ((($$pre$i$i$i$lcssa)) + 16|0);
           $140 = HEAP32[$139>>2]|0;
           $141 = ($138|0)==($140|0);
           if ($141) {
            $142 = HEAP32[$$pre$i$i$i$lcssa>>2]|0;
            $143 = ((($142)) + 36|0);
            $144 = HEAP32[$143>>2]|0;
            __THREW__ = 0;
            $145 = (invoke_ii($144|0,($$pre$i$i$i$lcssa|0))|0);
            $146 = __THREW__; __THREW__ = 0;
            $147 = $146&1;
            if ($147) {
             label = 37;
             break;
            } else {
             $$0$i$i$i$i = $145;
            }
           } else {
            $148 = HEAP32[$138>>2]|0;
            $$0$i$i$i$i = $148;
           }
           $149 = ($$0$i$i$i$i|0)==(-1);
           if ($149) {
            HEAP32[$__b>>2] = 0;
            $169 = 1;
           } else {
            $169 = 0;
           }
          }
          $150 = ($$pre$i3$i$i|0)==(0|0);
          do {
           if ($150) {
            label = 63;
           } else {
            $151 = ((($$pre$i3$i$i)) + 12|0);
            $152 = HEAP32[$151>>2]|0;
            $153 = ((($$pre$i3$i$i)) + 16|0);
            $154 = HEAP32[$153>>2]|0;
            $155 = ($152|0)==($154|0);
            if ($155) {
             $156 = HEAP32[$$pre$i3$i$i>>2]|0;
             $157 = ((($156)) + 36|0);
             $158 = HEAP32[$157>>2]|0;
             __THREW__ = 0;
             $159 = (invoke_ii($158|0,($$pre$i3$i$i|0))|0);
             $160 = __THREW__; __THREW__ = 0;
             $161 = $160&1;
             if ($161) {
              label = 37;
              break L18;
             } else {
              $$0$i$i1$i$i = $159;
             }
            } else {
             $162 = HEAP32[$152>>2]|0;
             $$0$i$i1$i$i = $162;
            }
            $163 = ($$0$i$i1$i$i|0)==(-1);
            if ($163) {
             HEAP32[$__e>>2] = 0;
             label = 63;
             break;
            } else {
             if ($169) {
              break;
             } else {
              label = 65;
              break;
             }
            }
           }
          } while(0);
          if ((label|0) == 63) {
           if ($169) {
            label = 65;
           }
          }
          if ((label|0) == 65) {
           $164 = HEAP32[$__err>>2]|0;
           $165 = $164 | 2;
           HEAP32[$__err>>2] = $165;
          }
          $166 = HEAP32[$__b>>2]|0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
          STACKTOP = sp;return ($166|0);
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 37) {
      $94 = ___cxa_find_matching_catch_2()|0;
      $95 = tempRet0;
      $lpad$phi$index = $94;$lpad$phi$index2 = $95;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
     $$0 = $lpad$phi$index;$$01 = $lpad$phi$index2;
     break;
    }
   }
   $90 = ___cxa_find_matching_catch_2()|0;
   $91 = tempRet0;
   (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
   $$0 = $90;$$01 = $91;
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$pre = 0, $$pre3 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$sroa$0$0 = 0, $__i$sroa$0$0$ph = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $11 = (FUNCTION_TABLE_iiiiii[$8 & 1023]($this,$$byval_copy,$__iob,$__fl,$10)|0);
   $$sroa$0$0 = $11;
  } else {
   $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$1>>2] = $12;
   __THREW__ = 0;
   $13 = (invoke_iii(608,($1|0),(22428|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   do {
    if ($15) {
     $40 = ___cxa_find_matching_catch_2()|0;
     $41 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $$0 = $41;$$01 = $40;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $16 = HEAP32[$13>>2]|0;
     if ($__v) {
      $17 = ((($16)) + 24|0);
      $18 = HEAP32[$17>>2]|0;
      FUNCTION_TABLE_vii[$18 & 1023]($__nm,$13);
     } else {
      $19 = ((($16)) + 28|0);
      $20 = HEAP32[$19>>2]|0;
      FUNCTION_TABLE_vii[$20 & 1023]($__nm,$13);
     }
     $21 = HEAP8[$__nm>>0]|0;
     $22 = $21 & 1;
     $23 = ($22<<24>>24)==(0);
     $24 = ((($__nm)) + 1|0);
     $25 = ((($__nm)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__i$sroa$0$0$ph = $23 ? $24 : $26;
     $27 = ((($__nm)) + 4|0);
     $29 = $21;$34 = $26;$__i$sroa$0$0 = $__i$sroa$0$0$ph;
     L11: while(1) {
      $28 = $29 & 1;
      $30 = ($28<<24>>24)==(0);
      $31 = HEAP32[$27>>2]|0;
      $32 = $29&255;
      $33 = $32 >>> 1;
      $35 = $30 ? $24 : $34;
      $36 = $30 ? $33 : $31;
      $37 = (($35) + ($36)|0);
      $38 = ($__i$sroa$0$0|0)==($37|0);
      if ($38) {
       label = 9;
       break;
      }
      $42 = HEAP8[$__i$sroa$0$0>>0]|0;
      $43 = HEAP32[$__s>>2]|0;
      $44 = ($43|0)==(0|0);
      do {
       if (!($44)) {
        $45 = ((($43)) + 24|0);
        $46 = HEAP32[$45>>2]|0;
        $47 = ((($43)) + 28|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = ($46|0)==($48|0);
        if (!($49)) {
         $50 = ((($46)) + 1|0);
         HEAP32[$45>>2] = $50;
         HEAP8[$46>>0] = $42;
         break;
        }
        $51 = HEAP32[$43>>2]|0;
        $52 = ((($51)) + 52|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = $42&255;
        __THREW__ = 0;
        $55 = (invoke_iii($53|0,($43|0),($54|0))|0);
        $56 = __THREW__; __THREW__ = 0;
        $57 = $56&1;
        if ($57) {
         label = 18;
         break L11;
        }
        $58 = ($55|0)==(-1);
        if ($58) {
         HEAP32[$__s>>2] = 0;
        }
       }
      } while(0);
      $59 = ((($__i$sroa$0$0)) + 1|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $$pre3 = HEAP32[$25>>2]|0;
      $29 = $$pre;$34 = $$pre3;$__i$sroa$0$0 = $59;
     }
     if ((label|0) == 9) {
      $39 = HEAP32[$__s>>2]|0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      $$sroa$0$0 = $39;
      break L1;
     }
     else if ((label|0) == 18) {
      $60 = ___cxa_find_matching_catch_2()|0;
      $61 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
      $$0 = $61;$$01 = $60;
      break;
     }
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[17431>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[17431+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[17431+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[17431+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[17431+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[17431+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,17437,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(708,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$1$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$01 = $__len;$$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$01 = $__len;$$1 = $5;
 }
 while(1) {
  $6 = HEAP8[$$01>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $$1$lcssa = $$1;
   break;
  }
  $8 = ((($$01)) + 1|0);
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = $6;
  $$01 = $8;$$1 = $9;
 }
 $10 = $__flags & 74;
 L10: do {
  switch ($10|0) {
  case 64:  {
   HEAP8[$$1$lcssa>>0] = 111;
   break;
  }
  case 8:  {
   $11 = $__flags & 16384;
   $12 = ($11|0)==(0);
   if ($12) {
    HEAP8[$$1$lcssa>>0] = 120;
    break L10;
   } else {
    HEAP8[$$1$lcssa>>0] = 88;
    break L10;
   }
   break;
  }
  default: {
   if ($__signd) {
    HEAP8[$$1$lcssa>>0] = 100;
    break L10;
   } else {
    HEAP8[$$1$lcssa>>0] = 117;
    break L10;
   }
  }
  }
 } while(0);
 return;
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale($__l)|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if (!($2)) {
  __THREW__ = 0;
  (invoke_ii(706,($0|0))|0);
  $3 = __THREW__; __THREW__ = 0;
  $4 = $3&1;
  if ($4) {
   $5 = ___cxa_find_matching_catch_3(0|0)|0;
   $6 = tempRet0;
   ___clang_call_terminate($5);
   // unreachable;
  }
 }
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb,$__ne,$__iob) {
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__iob = $__iob|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__iob)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 176;
 L1: do {
  switch ($2|0) {
  case 16:  {
   $3 = HEAP8[$__nb>>0]|0;
   switch ($3<<24>>24) {
   case 43: case 45:  {
    $4 = ((($__nb)) + 1|0);
    $$0 = $4;
    break L1;
    break;
   }
   default: {
   }
   }
   $5 = $__ne;
   $6 = $__nb;
   $7 = (($5) - ($6))|0;
   $8 = ($7|0)>(1);
   $9 = ($3<<24>>24)==(48);
   $or$cond = $8 & $9;
   if ($or$cond) {
    $10 = ((($__nb)) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    switch ($11<<24>>24) {
    case 88: case 120:  {
     break;
    }
    default: {
     label = 7;
     break L1;
    }
    }
    $12 = ((($__nb)) + 2|0);
    $$0 = $12;
   } else {
    label = 7;
   }
   break;
  }
  case 32:  {
   $$0 = $__ne;
   break;
  }
  default: {
   label = 7;
  }
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $__nb;
 }
 return ($$0|0);
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$0$i$i = 0, $$0$i$i6 = 0, $$01$i$i = 0, $$01$i$i5 = 0, $$__dg$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0;
 var $__nf$1 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22416)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22428)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 L1: do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 32|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 5;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21)|0);
    HEAP32[$__oe>>2] = $22;
    $$pre$phiZ2D = $20;$126 = $22;
    label = 30;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   switch ($27<<24>>24) {
   case 43: case 45:  {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 28|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 5;
     break L1;
    }
    $34 = ((($__nb)) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = ((($35)) + 1|0);
    HEAP32[$__oe>>2] = $36;
    HEAP8[$35>>0] = $31;
    $__nf$0 = $34;
    break;
   }
   default: {
    $__nf$0 = $__nb;
   }
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   L9: do {
    if ($40) {
     $41 = HEAP8[$__nf$0>>0]|0;
     $42 = ($41<<24>>24)==(48);
     if ($42) {
      $43 = ((($__nf$0)) + 1|0);
      $44 = HEAP8[$43>>0]|0;
      switch ($44<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       $__nf$1 = $__nf$0;
       break L9;
      }
      }
      $45 = HEAP32[$0>>2]|0;
      $46 = ((($45)) + 28|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 5;
       break L1;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = ((($51)) + 1|0);
      HEAP32[$__oe>>2] = $52;
      HEAP8[$51>>0] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 28|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break L1;
      }
      $60 = ((($__nf$0)) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = ((($61)) + 1|0);
      HEAP32[$__oe>>2] = $62;
      HEAP8[$61>>0] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } while(0);
   $63 = ($__nf$1|0)==($__ne|0);
   L16: do {
    if (!($63)) {
     $$0$i$i = $__ne;$$01$i$i = $__nf$1;
     while(1) {
      $64 = ((($$0$i$i)) + -1|0);
      $65 = ($$01$i$i>>>0)<($64>>>0);
      if (!($65)) {
       break L16;
      }
      $66 = HEAP8[$$01$i$i>>0]|0;
      $67 = HEAP8[$64>>0]|0;
      HEAP8[$$01$i$i>>0] = $67;
      HEAP8[$64>>0] = $66;
      $68 = ((($$01$i$i)) + 1|0);
      $$0$i$i = $64;$$01$i$i = $68;
     }
    }
   } while(0);
   $69 = HEAP32[$1>>2]|0;
   $70 = ((($69)) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 5;
   } else {
    $75 = ((($__grouping)) + 8|0);
    $76 = ((($__grouping)) + 1|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $77 = ($__p$0>>>0)<($__ne>>>0);
     if (!($77)) {
      break;
     }
     $89 = HEAP8[$__grouping>>0]|0;
     $90 = $89 & 1;
     $91 = ($90<<24>>24)==(0);
     $92 = HEAP32[$75>>2]|0;
     $93 = $91 ? $76 : $92;
     $94 = (($93) + ($__dg$0)|0);
     $95 = HEAP8[$94>>0]|0;
     $96 = ($95<<24>>24)!=(0);
     $97 = $95 << 24 >> 24;
     $98 = ($__dc$0|0)==($97|0);
     $or$cond = $96 & $98;
     if ($or$cond) {
      $99 = HEAP32[$__oe>>2]|0;
      $100 = ((($99)) + 1|0);
      HEAP32[$__oe>>2] = $100;
      HEAP8[$99>>0] = $72;
      $101 = HEAP8[$__grouping>>0]|0;
      $102 = $101 & 1;
      $103 = ($102<<24>>24)==(0);
      $104 = HEAP32[$8>>2]|0;
      $105 = $101&255;
      $106 = $105 >>> 1;
      $107 = $103 ? $106 : $104;
      $108 = (($107) + -1)|0;
      $109 = ($__dg$0>>>0)<($108>>>0);
      $110 = $109&1;
      $$__dg$0 = (($110) + ($__dg$0))|0;
      $__dc$1 = 0;$__dg$1 = $$__dg$0;
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $111 = HEAP8[$__p$0>>0]|0;
     $112 = HEAP32[$0>>2]|0;
     $113 = ((($112)) + 28|0);
     $114 = HEAP32[$113>>2]|0;
     __THREW__ = 0;
     $115 = (invoke_iii($114|0,($0|0),($111|0))|0);
     $116 = __THREW__; __THREW__ = 0;
     $117 = $116&1;
     if ($117) {
      label = 4;
      break;
     }
     $118 = HEAP32[$__oe>>2]|0;
     $119 = ((($118)) + 1|0);
     HEAP32[$__oe>>2] = $119;
     HEAP8[$118>>0] = $115;
     $120 = (($__dc$1) + 1)|0;
     $121 = ((($__p$0)) + 1|0);
     $__dc$0 = $120;$__dg$0 = $__dg$1;$__p$0 = $121;
    }
    if ((label|0) == 4) {
     $23 = ___cxa_find_matching_catch_2()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $78 = $__nf$1;
    $79 = $__nb;
    $80 = (($78) - ($79))|0;
    $81 = (($__ob) + ($80)|0);
    $82 = HEAP32[$__oe>>2]|0;
    $83 = ($81|0)==($82|0);
    if ($83) {
     $$pre$phiZ2D = $79;$126 = $81;
     label = 30;
    } else {
     $$0$i$i6 = $82;$$01$i$i5 = $81;
     while(1) {
      $84 = ((($$0$i$i6)) + -1|0);
      $85 = ($$01$i$i5>>>0)<($84>>>0);
      if (!($85)) {
       break;
      }
      $86 = HEAP8[$$01$i$i5>>0]|0;
      $87 = HEAP8[$84>>0]|0;
      HEAP8[$$01$i$i5>>0] = $87;
      HEAP8[$84>>0] = $86;
      $88 = ((($$01$i$i5)) + 1|0);
      $$0$i$i6 = $84;$$01$i$i5 = $88;
     }
     $$pre = HEAP32[$__oe>>2]|0;
     $$pre$phiZ2D = $79;$126 = $$pre;
     label = 30;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $25 = ___cxa_find_matching_catch_2()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 30) {
  $122 = ($__np|0)==($__ne|0);
  $123 = $__np;
  $124 = (($123) - ($$pre$phiZ2D))|0;
  $125 = (($__ob) + ($124)|0);
  $storemerge = $122 ? $126 : $125;
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 78|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,17439,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(708,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 48|0;
 $__o = sp + 24|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[17431>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[17431+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[17431+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[17431+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[17431+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[17431+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,17437,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(708,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 79|0;
 $__o = sp + 36|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,17439,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(708,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$117 = 0, $$1316 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre10$pre = 0, $$pre1012 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nbh$sroa$0$0 = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__obh$sroa$0$0 = 0, $__obh$sroa$0$1 = 0, $__obh$sroa$0$2 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0;
 var $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 84|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 146|0;
 $__nb = sp + 80|0;
 $__o = sp + 88|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 68|0;
 $1 = sp + 64|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,26417,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 do {
  if ($15) {
   if ($9) {
    __THREW__ = 0;
    $16 = (invoke_i(704)|0);
    $17 = __THREW__; __THREW__ = 0;
    $18 = $17&1;
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(709,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $26 = (invoke_i(704)|0);
    $27 = __THREW__; __THREW__ = 0;
    $28 = $27&1;
    if (!($28)) {
     $29 = ((($__iob)) + 8|0);
     $30 = HEAP32[$29>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $30;
     $vararg_ptr12 = ((($vararg_buffer9)) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $31 = (invoke_iiiii(709,($__nb|0),($26|0),($__fmt|0),($vararg_buffer9|0))|0);
     $32 = __THREW__; __THREW__ = 0;
     $33 = $32&1;
     if (!($33)) {
      $__nc$1 = $31;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $34 = HEAP32[$__nb>>2]|0;
    $35 = ($34|0)==(0|0);
    if (!($35)) {
     $36 = $34;
     $$pre1012 = $34;$__nbh$sroa$0$0 = $36;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
    __THREW__ = 0;
    invoke_v(693);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $39 = $$pre;
     $$pre1012 = $39;$__nbh$sroa$0$0 = $$pre;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
   }
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $$117 = $24;$$1316 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $$pre1012 = $$pre9;$__nbh$sroa$0$0 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $40 = (($$pre1012) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($$pre1012,$40,$__iob)|0);
  $42 = ($$pre1012|0)==($__nar|0);
  do {
   if ($42) {
    $54 = $__nar;$__ob$0 = $__o;$__obh$sroa$0$1 = 0;
    label = 22;
   } else {
    $43 = $__nc$2 << 1;
    $44 = (_malloc($43)|0);
    $45 = ($44|0)==(0|0);
    if ($45) {
     __THREW__ = 0;
     invoke_v(693);
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $__obh$sroa$0$0 = 0;
      label = 20;
      break;
     }
     $$pre10$pre = HEAP32[$__nb>>2]|0;
     $$pre10 = $$pre10$pre;
    } else {
     $$pre10 = $$pre1012;
    }
    $50 = $44;
    $54 = $$pre10;$__ob$0 = $44;$__obh$sroa$0$1 = $50;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $51 = (invoke_ii(607,($__iob|0))|0);
    $52 = __THREW__; __THREW__ = 0;
    $53 = $52&1;
    if ($53) {
     $__obh$sroa$0$0 = $__obh$sroa$0$1;
     label = 20;
    } else {
     HEAP32[$0>>2] = $51;
     __THREW__ = 0;
     invoke_viiiiiii(710,($54|0),($41|0),($40|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $55 = __THREW__; __THREW__ = 0;
     $56 = $55&1;
     if ($56) {
      $67 = ___cxa_find_matching_catch_2()|0;
      $68 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($51)|0);
      $$0 = $67;$$02 = $68;$__obh$sroa$0$2 = $__obh$sroa$0$1;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($51)|0);
     $57 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $57;
     $58 = HEAP32[$__op>>2]|0;
     $59 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $60 = (invoke_iiiiiii(609,($$byval_copy|0),($__ob$0|0),($58|0),($59|0),($__iob|0),($__fl|0))|0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      $__obh$sroa$0$0 = $__obh$sroa$0$1;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $60;
      $63 = ($__obh$sroa$0$1|0)==(0);
      if (!($63)) {
       $64 = $__obh$sroa$0$1;
       _free($64);
      }
      $65 = ($__nbh$sroa$0$0|0)==(0);
      if (!($65)) {
       $66 = $__nbh$sroa$0$0;
       _free($66);
      }
      STACKTOP = sp;return ($60|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $48 = ___cxa_find_matching_catch_2()|0;
   $49 = tempRet0;
   $$0 = $48;$$02 = $49;$__obh$sroa$0$2 = $__obh$sroa$0$0;
  }
  $69 = ($__obh$sroa$0$2|0)==(0);
  if (!($69)) {
   $70 = $__obh$sroa$0$2;
   _free($70);
  }
  $71 = ($__nbh$sroa$0$0|0)==(0);
  if ($71) {
   $$117 = $$0;$$1316 = $$02;
  } else {
   $72 = $__nbh$sroa$0$0;
   _free($72);
   $$117 = $$0;$$1316 = $$02;
  }
 }
 ___resumeException($$117|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$2$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = ((($__fmtp)) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = ((($$1)) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $$01 = $__len;$$2 = $$2$ph;
 while(1) {
  $11 = HEAP8[$$01>>0]|0;
  $12 = ($11<<24>>24)==(0);
  if ($12) {
   $$2$lcssa = $$2;
   break;
  }
  $13 = ((($$01)) + 1|0);
  $14 = ((($$2)) + 1|0);
  HEAP8[$$2>>0] = $11;
  $$01 = $13;$$2 = $14;
 }
 L14: do {
  switch ($6|0) {
  case 4:  {
   $15 = $7 & 1;
   $16 = ($15|0)==(0);
   if ($16) {
    HEAP8[$$2$lcssa>>0] = 102;
    break L14;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break L14;
   }
   break;
  }
  case 256:  {
   $17 = $7 & 1;
   $18 = ($17|0)==(0);
   if ($18) {
    HEAP8[$$2$lcssa>>0] = 101;
    break L14;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break L14;
   }
   break;
  }
  default: {
   $19 = $7 & 1;
   $20 = ($19|0)!=(0);
   if ($8) {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 65;
     break L14;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break L14;
    }
   } else {
    if ($20) {
     HEAP8[$$2$lcssa>>0] = 71;
     break L14;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break L14;
    }
   }
  }
  }
 } while(0);
 return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale($__l)|0);
 __THREW__ = 0;
 $1 = (invoke_iiii(711,($__s|0),($__format|0),($__va|0))|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  $11 = ($0|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(706,($0|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $14 = ___cxa_find_matching_catch_3(0|0)|0;
    $15 = tempRet0;
    ___clang_call_terminate($14);
    // unreachable;
   }
  }
  ___resumeException($9|0);
  // unreachable;
 } else {
  $4 = ($0|0)==(0|0);
  if (!($4)) {
   __THREW__ = 0;
   (invoke_ii(706,($0|0))|0);
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $7 = ___cxa_find_matching_catch_3(0|0)|0;
    $8 = tempRet0;
    ___clang_call_terminate($7);
    // unreachable;
   }
  }
  STACKTOP = sp;return ($1|0);
 }
 return (0)|0;
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$0$i$i = 0, $$0$i$i6 = 0, $$01$i$i = 0, $$01$i$i5 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0;
 var $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa46 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$1 = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22416)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22428)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 switch ($5<<24>>24) {
 case 43: case 45:  {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = ((($__nb)) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = ((($13)) + 1|0);
   HEAP32[$__oe>>2] = $14;
   HEAP8[$13>>0] = $9;
   $__nf$0 = $12;
   label = 10;
  }
  break;
 }
 default: {
  $__nf$0 = $__nb;
  label = 10;
 }
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   L6: do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = ((($__nf$0)) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      switch ($32<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       $__ns$1 = $__nf$0;
       label = 21;
       break L6;
      }
      }
      $33 = HEAP32[$0>>2]|0;
      $34 = ((($33)) + 28|0);
      $35 = HEAP32[$34>>2]|0;
      __THREW__ = 0;
      $36 = (invoke_iii($35|0,($0|0),48)|0);
      $37 = __THREW__; __THREW__ = 0;
      $38 = $37&1;
      if ($38) {
       label = 8;
       break L4;
      }
      $39 = HEAP32[$__oe>>2]|0;
      $40 = ((($39)) + 1|0);
      HEAP32[$__oe>>2] = $40;
      HEAP8[$39>>0] = $36;
      $41 = ((($__nf$0)) + 2|0);
      $42 = HEAP8[$31>>0]|0;
      $43 = HEAP32[$0>>2]|0;
      $44 = ((($43)) + 28|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 8;
       break L4;
      }
      $49 = HEAP32[$__oe>>2]|0;
      $50 = ((($49)) + 1|0);
      HEAP32[$__oe>>2] = $50;
      HEAP8[$49>>0] = $46;
      $__ns$0 = $41;
      while(1) {
       $51 = ($__ns$0>>>0)<($__ne>>>0);
       if (!($51)) {
        $__nf$1 = $41;$__ns$2 = $__ns$0;
        break L6;
       }
       $52 = HEAP8[$__ns$0>>0]|0;
       __THREW__ = 0;
       $53 = (invoke_i(704)|0);
       $54 = __THREW__; __THREW__ = 0;
       $55 = $54&1;
       if ($55) {
        break;
       }
       $56 = $52 << 24 >> 24;
       __THREW__ = 0;
       $57 = (invoke_iii(712,($56|0),($53|0))|0);
       $58 = __THREW__; __THREW__ = 0;
       $59 = $58&1;
       if ($59) {
        break;
       }
       $60 = ($57|0)==(0);
       if ($60) {
        $__nf$1 = $41;$__ns$2 = $__ns$0;
        break L6;
       }
       $61 = ((($__ns$0)) + 1|0);
       $__ns$0 = $61;
      }
      $21 = ___cxa_find_matching_catch_2()|0;
      $22 = tempRet0;
      $lpad$phi$index = $21;$lpad$phi$index5 = $22;
      break L4;
     } else {
      $__ns$1 = $__nf$0;
      label = 21;
     }
    } else {
     $__ns$1 = $__nf$0;
     label = 21;
    }
   } while(0);
   L19: do {
    if ((label|0) == 21) {
     while(1) {
      label = 0;
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__nf$1 = $__nf$0;$__ns$2 = $__ns$1;
       break L19;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(704)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(713,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__nf$1 = $__nf$0;$__ns$2 = $__ns$1;
       break L19;
      }
      $72 = ((($__ns$1)) + 1|0);
      $__ns$1 = $72;
      label = 21;
     }
     $19 = ___cxa_find_matching_catch_2()|0;
     $20 = tempRet0;
     $lpad$phi$index = $19;$lpad$phi$index5 = $20;
     break L4;
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   $76 = ((($__grouping)) + 4|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = $73&255;
   $79 = $78 >>> 1;
   $80 = $75 ? $79 : $77;
   $81 = ($80|0)==(0);
   L28: do {
    if ($81) {
     $82 = HEAP32[$__oe>>2]|0;
     $83 = HEAP32[$0>>2]|0;
     $84 = ((($83)) + 32|0);
     $85 = HEAP32[$84>>2]|0;
     __THREW__ = 0;
     (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
     $86 = __THREW__; __THREW__ = 0;
     $87 = $86&1;
     if ($87) {
      label = 8;
      break L4;
     }
     $88 = $__ns$2;
     $89 = $__nf$1;
     $90 = (($88) - ($89))|0;
     $91 = HEAP32[$__oe>>2]|0;
     $92 = (($91) + ($90)|0);
     HEAP32[$__oe>>2] = $92;
     $$pre$phiZ2D = $0;
    } else {
     $93 = ($__nf$1|0)==($__ns$2|0);
     L32: do {
      if (!($93)) {
       $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
       while(1) {
        $94 = ((($$0$i$i)) + -1|0);
        $95 = ($$01$i$i>>>0)<($94>>>0);
        if (!($95)) {
         break L32;
        }
        $96 = HEAP8[$$01$i$i>>0]|0;
        $97 = HEAP8[$94>>0]|0;
        HEAP8[$$01$i$i>>0] = $97;
        HEAP8[$94>>0] = $96;
        $98 = ((($$01$i$i)) + 1|0);
        $$0$i$i = $94;$$01$i$i = $98;
       }
      }
     } while(0);
     $99 = HEAP32[$1>>2]|0;
     $100 = ((($99)) + 16|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     $102 = (invoke_ii($101|0,($1|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 8;
      break L4;
     }
     $105 = ((($__grouping)) + 8|0);
     $106 = ((($__grouping)) + 1|0);
     $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
     while(1) {
      $107 = ($__p$0>>>0)<($__ns$2>>>0);
      if (!($107)) {
       break;
      }
      $119 = HEAP8[$__grouping>>0]|0;
      $120 = $119 & 1;
      $121 = ($120<<24>>24)==(0);
      $122 = HEAP32[$105>>2]|0;
      $123 = $121 ? $106 : $122;
      $124 = (($123) + ($__dg$0)|0);
      $125 = HEAP8[$124>>0]|0;
      $126 = ($125<<24>>24)>(0);
      $127 = $125 << 24 >> 24;
      $128 = ($__dc$0|0)==($127|0);
      $or$cond = $126 & $128;
      if ($or$cond) {
       $129 = HEAP32[$__oe>>2]|0;
       $130 = ((($129)) + 1|0);
       HEAP32[$__oe>>2] = $130;
       HEAP8[$129>>0] = $102;
       $131 = HEAP8[$__grouping>>0]|0;
       $132 = $131 & 1;
       $133 = ($132<<24>>24)==(0);
       $134 = HEAP32[$76>>2]|0;
       $135 = $131&255;
       $136 = $135 >>> 1;
       $137 = $133 ? $136 : $134;
       $138 = (($137) + -1)|0;
       $139 = ($__dg$0>>>0)<($138>>>0);
       $140 = $139&1;
       $$__dg$0 = (($140) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
      $141 = HEAP8[$__p$0>>0]|0;
      $142 = HEAP32[$0>>2]|0;
      $143 = ((($142)) + 28|0);
      $144 = HEAP32[$143>>2]|0;
      __THREW__ = 0;
      $145 = (invoke_iii($144|0,($0|0),($141|0))|0);
      $146 = __THREW__; __THREW__ = 0;
      $147 = $146&1;
      if ($147) {
       label = 5;
       break;
      }
      $148 = HEAP32[$__oe>>2]|0;
      $149 = ((($148)) + 1|0);
      HEAP32[$__oe>>2] = $149;
      HEAP8[$148>>0] = $145;
      $150 = (($__dc$1) + 1)|0;
      $151 = ((($__p$0)) + 1|0);
      $__dc$0 = $150;$__dg$0 = $__dg$1;$__p$0 = $151;
     }
     if ((label|0) == 5) {
      $17 = ___cxa_find_matching_catch_2()|0;
      $18 = tempRet0;
      $lpad$phi$index = $17;$lpad$phi$index5 = $18;
      break L4;
     }
     $108 = $__nf$1;
     $109 = $__nb;
     $110 = (($108) - ($109))|0;
     $111 = (($__ob) + ($110)|0);
     $112 = HEAP32[$__oe>>2]|0;
     $113 = ($111|0)==($112|0);
     if ($113) {
      $$pre$phiZ2D = $0;
     } else {
      $$0$i$i6 = $112;$$01$i$i5 = $111;
      while(1) {
       $114 = ((($$0$i$i6)) + -1|0);
       $115 = ($$01$i$i5>>>0)<($114>>>0);
       if (!($115)) {
        $$pre$phiZ2D = $0;
        break L28;
       }
       $116 = HEAP8[$$01$i$i5>>0]|0;
       $117 = HEAP8[$114>>0]|0;
       HEAP8[$$01$i$i5>>0] = $117;
       HEAP8[$114>>0] = $116;
       $118 = ((($$01$i$i5)) + 1|0);
       $$0$i$i6 = $114;$$01$i$i5 = $118;
      }
     }
    }
   } while(0);
   $__nf$2 = $__ns$2;
   while(1) {
    $152 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($152)) {
     $__nf$3 = $__nf$2;
     break;
    }
    $153 = HEAP8[$__nf$2>>0]|0;
    $154 = ($153<<24>>24)==(46);
    if ($154) {
     $__nf$2$lcssa46 = $__nf$2;
     label = 45;
     break;
    }
    $164 = HEAP32[$$pre$phiZ2D>>2]|0;
    $165 = ((($164)) + 28|0);
    $166 = HEAP32[$165>>2]|0;
    __THREW__ = 0;
    $167 = (invoke_iii($166|0,($0|0),($153|0))|0);
    $168 = __THREW__; __THREW__ = 0;
    $169 = $168&1;
    if ($169) {
     label = 4;
     break;
    }
    $170 = HEAP32[$__oe>>2]|0;
    $171 = ((($170)) + 1|0);
    HEAP32[$__oe>>2] = $171;
    HEAP8[$170>>0] = $167;
    $172 = ((($__nf$2)) + 1|0);
    $__nf$2 = $172;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch_2()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   if ((label|0) == 45) {
    $155 = HEAP32[$1>>2]|0;
    $156 = ((($155)) + 12|0);
    $157 = HEAP32[$156>>2]|0;
    __THREW__ = 0;
    $158 = (invoke_ii($157|0,($1|0))|0);
    $159 = __THREW__; __THREW__ = 0;
    $160 = $159&1;
    if ($160) {
     label = 8;
     break;
    }
    $161 = HEAP32[$__oe>>2]|0;
    $162 = ((($161)) + 1|0);
    HEAP32[$__oe>>2] = $162;
    HEAP8[$161>>0] = $158;
    $163 = ((($__nf$2$lcssa46)) + 1|0);
    $__nf$3 = $163;
   }
   $173 = HEAP32[$__oe>>2]|0;
   $174 = HEAP32[$0>>2]|0;
   $175 = ((($174)) + 32|0);
   $176 = HEAP32[$175>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($176|0,($0|0),($__nf$3|0),($__ne|0),($173|0))|0);
   $177 = __THREW__; __THREW__ = 0;
   $178 = $177&1;
   if ($178) {
    label = 8;
   } else {
    $179 = $__nf$3;
    $180 = (($25) - ($179))|0;
    $181 = HEAP32[$__oe>>2]|0;
    $182 = (($181) + ($180)|0);
    HEAP32[$__oe>>2] = $182;
    $183 = ($__np|0)==($__ne|0);
    $184 = $__np;
    $185 = $__nb;
    $186 = (($184) - ($185))|0;
    $187 = (($__ob) + ($186)|0);
    $storemerge = $183 ? $182 : $187;
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch_2()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$117 = 0, $$1316 = 0, $$byval_copy = 0, $$pre = 0, $$pre10 = 0, $$pre10$pre = 0, $$pre1012 = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nbh$sroa$0$0 = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__obh$sroa$0$0 = 0, $__obh$sroa$0$1 = 0, $__obh$sroa$0$2 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 138|0;
 $__nb = sp + 72|0;
 $__o = sp + 80|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,17442,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 do {
  if ($15) {
   if ($9) {
    __THREW__ = 0;
    $16 = (invoke_i(704)|0);
    $17 = __THREW__; __THREW__ = 0;
    $18 = $17&1;
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(709,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $26 = (invoke_i(704)|0);
    $27 = __THREW__; __THREW__ = 0;
    $28 = $27&1;
    if (!($28)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $29 = (invoke_iiiii(709,($__nb|0),($26|0),($__fmt|0),($vararg_buffer9|0))|0);
     $30 = __THREW__; __THREW__ = 0;
     $31 = $30&1;
     if (!($31)) {
      $__nc$1 = $29;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $32 = HEAP32[$__nb>>2]|0;
    $33 = ($32|0)==(0|0);
    if (!($33)) {
     $34 = $32;
     $$pre1012 = $32;$__nbh$sroa$0$0 = $34;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
    __THREW__ = 0;
    invoke_v(693);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $37 = $$pre;
     $$pre1012 = $37;$__nbh$sroa$0$0 = $$pre;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
   }
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $$117 = $24;$$1316 = $25;
  } else {
   $$pre9 = HEAP32[$__nb>>2]|0;
   $$pre1012 = $$pre9;$__nbh$sroa$0$0 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $38 = (($$pre1012) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($$pre1012,$38,$__iob)|0);
  $40 = ($$pre1012|0)==($__nar|0);
  do {
   if ($40) {
    $52 = $__nar;$__ob$0 = $__o;$__obh$sroa$0$1 = 0;
    label = 22;
   } else {
    $41 = $__nc$2 << 1;
    $42 = (_malloc($41)|0);
    $43 = ($42|0)==(0|0);
    if ($43) {
     __THREW__ = 0;
     invoke_v(693);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $__obh$sroa$0$0 = 0;
      label = 20;
      break;
     }
     $$pre10$pre = HEAP32[$__nb>>2]|0;
     $$pre10 = $$pre10$pre;
    } else {
     $$pre10 = $$pre1012;
    }
    $48 = $42;
    $52 = $$pre10;$__ob$0 = $42;$__obh$sroa$0$1 = $48;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $49 = (invoke_ii(607,($__iob|0))|0);
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $__obh$sroa$0$0 = $__obh$sroa$0$1;
     label = 20;
    } else {
     HEAP32[$0>>2] = $49;
     __THREW__ = 0;
     invoke_viiiiiii(710,($52|0),($39|0),($38|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $65 = ___cxa_find_matching_catch_2()|0;
      $66 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
      $$0 = $65;$$02 = $66;$__obh$sroa$0$2 = $__obh$sroa$0$1;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
     $55 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $55;
     $56 = HEAP32[$__op>>2]|0;
     $57 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $58 = (invoke_iiiiiii(609,($$byval_copy|0),($__ob$0|0),($56|0),($57|0),($__iob|0),($__fl|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $__obh$sroa$0$0 = $__obh$sroa$0$1;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $58;
      $61 = ($__obh$sroa$0$1|0)==(0);
      if (!($61)) {
       $62 = $__obh$sroa$0$1;
       _free($62);
      }
      $63 = ($__nbh$sroa$0$0|0)==(0);
      if (!($63)) {
       $64 = $__nbh$sroa$0$0;
       _free($64);
      }
      STACKTOP = sp;return ($58|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $46 = ___cxa_find_matching_catch_2()|0;
   $47 = tempRet0;
   $$0 = $46;$$02 = $47;$__obh$sroa$0$2 = $__obh$sroa$0$0;
  }
  $67 = ($__obh$sroa$0$2|0)==(0);
  if (!($67)) {
   $68 = $__obh$sroa$0$2;
   _free($68);
  }
  $69 = ($__nbh$sroa$0$0|0)==(0);
  if ($69) {
   $$117 = $$0;$$1316 = $$02;
  } else {
   $70 = $__nbh$sroa$0$0;
   _free($70);
   $$117 = $$0;$$1316 = $$02;
  }
 }
 ___resumeException($$117|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 12|0;
 $vararg_buffer = sp;
 $__fmt = sp + 76|0;
 $__nar = sp + 56|0;
 $__o = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[17444>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[17444+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[17444+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[17444+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[17444+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[17444+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 __THREW__ = 0;
 $7 = (invoke_iii(608,($0|0),(22416|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch_2()|0;
  $22 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  ___resumeException($21|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  $10 = HEAP32[$7>>2]|0;
  $11 = ((($10)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 1023]($7,$__nar,$4,$__o)|0);
  $13 = (($__o) + ($3)|0);
  $14 = ($5|0)==($4|0);
  $15 = $__nar;
  $16 = $5;
  $17 = (($16) - ($15))|0;
  $18 = (($__o) + ($17)|0);
  $__op$0 = $14 ? $13 : $18;
  $19 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $19;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $20 = (__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$13,$__iob,$__fl)|0);
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$pre = 0, $$pre3 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$sroa$0$0 = 0, $__i$sroa$0$0$ph = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 20|0;
 $0 = sp + 16|0;
 $1 = sp + 12|0;
 $__nm = sp;
 $2 = ((($__iob)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$this>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$__s>>2]|0;
   HEAP32[$0>>2] = $9;
   $10 = $__v&1;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $11 = (FUNCTION_TABLE_iiiiii[$8 & 1023]($this,$$byval_copy,$__iob,$__fl,$10)|0);
   $$sroa$0$0 = $11;
  } else {
   $12 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
   HEAP32[$1>>2] = $12;
   __THREW__ = 0;
   $13 = (invoke_iii(608,($1|0),(22456|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   do {
    if ($15) {
     $39 = ___cxa_find_matching_catch_2()|0;
     $40 = tempRet0;
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $$0 = $40;$$01 = $39;
    } else {
     (__ZNSt3__114__shared_count16__release_sharedEv($12)|0);
     $16 = HEAP32[$13>>2]|0;
     if ($__v) {
      $17 = ((($16)) + 24|0);
      $18 = HEAP32[$17>>2]|0;
      FUNCTION_TABLE_vii[$18 & 1023]($__nm,$13);
     } else {
      $19 = ((($16)) + 28|0);
      $20 = HEAP32[$19>>2]|0;
      FUNCTION_TABLE_vii[$20 & 1023]($__nm,$13);
     }
     $21 = HEAP8[$__nm>>0]|0;
     $22 = $21 & 1;
     $23 = ($22<<24>>24)==(0);
     $24 = ((($__nm)) + 4|0);
     $25 = ((($__nm)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $__i$sroa$0$0$ph = $23 ? $24 : $26;
     $28 = $21;$33 = $26;$__i$sroa$0$0 = $__i$sroa$0$0$ph;
     while(1) {
      $27 = $28 & 1;
      $29 = ($27<<24>>24)==(0);
      $30 = HEAP32[$24>>2]|0;
      $31 = $28&255;
      $32 = $31 >>> 1;
      $34 = $29 ? $24 : $33;
      $35 = $29 ? $32 : $30;
      $36 = (($34) + ($35<<2)|0);
      $37 = ($__i$sroa$0$0|0)==($36|0);
      if ($37) {
       label = 9;
       break;
      }
      $41 = HEAP32[$__i$sroa$0$0>>2]|0;
      $42 = HEAP32[$__s>>2]|0;
      $43 = ($42|0)==(0|0);
      if (!($43)) {
       $44 = ((($42)) + 24|0);
       $45 = HEAP32[$44>>2]|0;
       $46 = ((($42)) + 28|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($45|0)==($47|0);
       if ($48) {
        $49 = HEAP32[$42>>2]|0;
        $50 = ((($49)) + 52|0);
        $51 = HEAP32[$50>>2]|0;
        __THREW__ = 0;
        $52 = (invoke_iii($51|0,($42|0),($41|0))|0);
        $53 = __THREW__; __THREW__ = 0;
        $54 = $53&1;
        if ($54) {
         label = 18;
         break;
        } else {
         $$0$i$i = $52;
        }
       } else {
        $55 = ((($45)) + 4|0);
        HEAP32[$44>>2] = $55;
        HEAP32[$45>>2] = $41;
        $$0$i$i = $41;
       }
       $56 = ($$0$i$i|0)==(-1);
       if ($56) {
        HEAP32[$__s>>2] = 0;
       }
      }
      $57 = ((($__i$sroa$0$0)) + 4|0);
      $$pre = HEAP8[$__nm>>0]|0;
      $$pre3 = HEAP32[$25>>2]|0;
      $28 = $$pre;$33 = $$pre3;$__i$sroa$0$0 = $57;
     }
     if ((label|0) == 9) {
      $38 = HEAP32[$__s>>2]|0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      $$sroa$0$0 = $38;
      break L1;
     }
     else if ((label|0) == 18) {
      $58 = ___cxa_find_matching_catch_2()|0;
      $59 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
      $$0 = $59;$$01 = $58;
      break;
     }
    }
   } while(0);
   ___resumeException($$01|0);
   // unreachable;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[17431>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[17431+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[17431+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[17431+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[17431+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[17431+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,17437,1,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(714,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$0$i$i = 0, $$0$i$i6 = 0, $$01$i$i = 0, $$01$i$i5 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0;
 var $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22448)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22456)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 $5 = HEAP8[$__grouping>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__grouping)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5&255;
 $11 = $10 >>> 1;
 $12 = $7 ? $11 : $9;
 $13 = ($12|0)==(0);
 L1: do {
  if ($13) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 48|0);
   $16 = HEAP32[$15>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($16|0,($0|0),($__nb|0),($__ne|0),($__ob|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 5;
   } else {
    $19 = $__ne;
    $20 = $__nb;
    $21 = (($19) - ($20))|0;
    $22 = (($__ob) + ($21<<2)|0);
    HEAP32[$__oe>>2] = $22;
    $$pre$phiZ2D = $20;$126 = $22;
    label = 29;
   }
  } else {
   HEAP32[$__oe>>2] = $__ob;
   $27 = HEAP8[$__nb>>0]|0;
   switch ($27<<24>>24) {
   case 43: case 45:  {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 44|0);
    $30 = HEAP32[$29>>2]|0;
    __THREW__ = 0;
    $31 = (invoke_iii($30|0,($0|0),($27|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 5;
     break L1;
    }
    $34 = ((($__nb)) + 1|0);
    $35 = HEAP32[$__oe>>2]|0;
    $36 = ((($35)) + 4|0);
    HEAP32[$__oe>>2] = $36;
    HEAP32[$35>>2] = $31;
    $__nf$0 = $34;
    break;
   }
   default: {
    $__nf$0 = $__nb;
   }
   }
   $37 = $__ne;
   $38 = $__nf$0;
   $39 = (($37) - ($38))|0;
   $40 = ($39|0)>(1);
   L9: do {
    if ($40) {
     $41 = HEAP8[$__nf$0>>0]|0;
     $42 = ($41<<24>>24)==(48);
     if ($42) {
      $43 = ((($__nf$0)) + 1|0);
      $44 = HEAP8[$43>>0]|0;
      switch ($44<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       $__nf$1 = $__nf$0;
       break L9;
      }
      }
      $45 = HEAP32[$0>>2]|0;
      $46 = ((($45)) + 44|0);
      $47 = HEAP32[$46>>2]|0;
      __THREW__ = 0;
      $48 = (invoke_iii($47|0,($0|0),48)|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       label = 5;
       break L1;
      }
      $51 = HEAP32[$__oe>>2]|0;
      $52 = ((($51)) + 4|0);
      HEAP32[$__oe>>2] = $52;
      HEAP32[$51>>2] = $48;
      $53 = HEAP8[$43>>0]|0;
      $54 = HEAP32[$0>>2]|0;
      $55 = ((($54)) + 44|0);
      $56 = HEAP32[$55>>2]|0;
      __THREW__ = 0;
      $57 = (invoke_iii($56|0,($0|0),($53|0))|0);
      $58 = __THREW__; __THREW__ = 0;
      $59 = $58&1;
      if ($59) {
       label = 5;
       break L1;
      }
      $60 = ((($__nf$0)) + 2|0);
      $61 = HEAP32[$__oe>>2]|0;
      $62 = ((($61)) + 4|0);
      HEAP32[$__oe>>2] = $62;
      HEAP32[$61>>2] = $57;
      $__nf$1 = $60;
     } else {
      $__nf$1 = $__nf$0;
     }
    } else {
     $__nf$1 = $__nf$0;
    }
   } while(0);
   $63 = ($__nf$1|0)==($__ne|0);
   L16: do {
    if (!($63)) {
     $$0$i$i = $__ne;$$01$i$i = $__nf$1;
     while(1) {
      $64 = ((($$0$i$i)) + -1|0);
      $65 = ($$01$i$i>>>0)<($64>>>0);
      if (!($65)) {
       break L16;
      }
      $66 = HEAP8[$$01$i$i>>0]|0;
      $67 = HEAP8[$64>>0]|0;
      HEAP8[$$01$i$i>>0] = $67;
      HEAP8[$64>>0] = $66;
      $68 = ((($$01$i$i)) + 1|0);
      $$0$i$i = $64;$$01$i$i = $68;
     }
    }
   } while(0);
   $69 = HEAP32[$1>>2]|0;
   $70 = ((($69)) + 16|0);
   $71 = HEAP32[$70>>2]|0;
   __THREW__ = 0;
   $72 = (invoke_ii($71|0,($1|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    label = 5;
   } else {
    $75 = ((($__grouping)) + 8|0);
    $76 = ((($__grouping)) + 1|0);
    $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
    while(1) {
     $77 = ($__p$0>>>0)<($__ne>>>0);
     if (!($77)) {
      break;
     }
     $89 = HEAP8[$__grouping>>0]|0;
     $90 = $89 & 1;
     $91 = ($90<<24>>24)==(0);
     $92 = HEAP32[$75>>2]|0;
     $93 = $91 ? $76 : $92;
     $94 = (($93) + ($__dg$0)|0);
     $95 = HEAP8[$94>>0]|0;
     $96 = ($95<<24>>24)!=(0);
     $97 = $95 << 24 >> 24;
     $98 = ($__dc$0|0)==($97|0);
     $or$cond = $96 & $98;
     if ($or$cond) {
      $99 = HEAP32[$__oe>>2]|0;
      $100 = ((($99)) + 4|0);
      HEAP32[$__oe>>2] = $100;
      HEAP32[$99>>2] = $72;
      $101 = HEAP8[$__grouping>>0]|0;
      $102 = $101 & 1;
      $103 = ($102<<24>>24)==(0);
      $104 = HEAP32[$8>>2]|0;
      $105 = $101&255;
      $106 = $105 >>> 1;
      $107 = $103 ? $106 : $104;
      $108 = (($107) + -1)|0;
      $109 = ($__dg$0>>>0)<($108>>>0);
      $110 = $109&1;
      $$__dg$0 = (($110) + ($__dg$0))|0;
      $__dc$1 = 0;$__dg$1 = $$__dg$0;
     } else {
      $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
     }
     $111 = HEAP8[$__p$0>>0]|0;
     $112 = HEAP32[$0>>2]|0;
     $113 = ((($112)) + 44|0);
     $114 = HEAP32[$113>>2]|0;
     __THREW__ = 0;
     $115 = (invoke_iii($114|0,($0|0),($111|0))|0);
     $116 = __THREW__; __THREW__ = 0;
     $117 = $116&1;
     if ($117) {
      label = 4;
      break;
     }
     $118 = HEAP32[$__oe>>2]|0;
     $119 = ((($118)) + 4|0);
     HEAP32[$__oe>>2] = $119;
     HEAP32[$118>>2] = $115;
     $120 = (($__dc$1) + 1)|0;
     $121 = ((($__p$0)) + 1|0);
     $__dc$0 = $120;$__dg$0 = $__dg$1;$__p$0 = $121;
    }
    if ((label|0) == 4) {
     $23 = ___cxa_find_matching_catch_2()|0;
     $24 = tempRet0;
     $lpad$phi$index = $23;$lpad$phi$index2 = $24;
     break;
    }
    $78 = $__nf$1;
    $79 = $__nb;
    $80 = (($78) - ($79))|0;
    $81 = (($__ob) + ($80<<2)|0);
    $82 = HEAP32[$__oe>>2]|0;
    $83 = ($81|0)==($82|0);
    if ($83) {
     $$pre$phiZ2D = $79;$126 = $81;
     label = 29;
    } else {
     $$0$i$i6 = $82;$$01$i$i5 = $81;
     while(1) {
      $84 = ((($$0$i$i6)) + -4|0);
      $85 = ($$01$i$i5>>>0)<($84>>>0);
      if (!($85)) {
       $$pre$phiZ2D = $79;$126 = $82;
       label = 29;
       break L1;
      }
      $86 = HEAP32[$$01$i$i5>>2]|0;
      $87 = HEAP32[$84>>2]|0;
      HEAP32[$$01$i$i5>>2] = $87;
      HEAP32[$84>>2] = $86;
      $88 = ((($$01$i$i5)) + 4|0);
      $$0$i$i6 = $84;$$01$i$i5 = $88;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $25 = ___cxa_find_matching_catch_2()|0;
  $26 = tempRet0;
  $lpad$phi$index = $25;$lpad$phi$index2 = $26;
 }
 else if ((label|0) == 29) {
  $122 = ($__np|0)==($__ne|0);
  $123 = $__np;
  $124 = (($123) - ($$pre$phiZ2D))|0;
  $125 = (($__ob) + ($124<<2)|0);
  $storemerge = $122 ? $126 : $125;
  HEAP32[$__op>>2] = $storemerge;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s,$__ob,$__op,$__oe,$__iob,$__fl) {
 $__s = $__s|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$sroa$0$2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__sp = sp;
 $0 = HEAP32[$__s>>2]|0;
 $1 = ($0|0)==(0|0);
 L1: do {
  if ($1) {
   $$sroa$0$2 = 0;
  } else {
   $2 = $__oe;
   $3 = $__ob;
   $4 = (($2) - ($3))|0;
   $5 = $4 >> 2;
   $6 = ((($__iob)) + 12|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)>($5|0);
   $9 = (($7) - ($5))|0;
   $__ns$0 = $8 ? $9 : 0;
   $10 = $__op;
   $11 = (($10) - ($3))|0;
   $12 = $11 >> 2;
   $13 = ($11|0)>(0);
   if ($13) {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($0,$__ob,$12)|0);
    $18 = ($17|0)==($12|0);
    if (!($18)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$2 = 0;
     break;
    }
   }
   $19 = ($__ns$0|0)>(0);
   do {
    if ($19) {
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
     $20 = HEAP8[$__sp>>0]|0;
     $21 = $20 & 1;
     $22 = ($21<<24>>24)==(0);
     $23 = ((($__sp)) + 8|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ((($__sp)) + 4|0);
     $26 = $22 ? $25 : $24;
     $27 = HEAP32[$0>>2]|0;
     $28 = ((($27)) + 48|0);
     $29 = HEAP32[$28>>2]|0;
     __THREW__ = 0;
     $30 = (invoke_iiii($29|0,($0|0),($26|0),($__ns$0|0))|0);
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $34 = ___cxa_find_matching_catch_2()|0;
      $35 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      ___resumeException($34|0);
      // unreachable;
     }
     $33 = ($30|0)==($__ns$0|0);
     if ($33) {
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      break;
     } else {
      HEAP32[$__s>>2] = 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
      $$sroa$0$2 = 0;
      break L1;
     }
    }
   } while(0);
   $36 = (($2) - ($10))|0;
   $37 = $36 >> 2;
   $38 = ($36|0)>(0);
   if ($38) {
    $39 = HEAP32[$0>>2]|0;
    $40 = ((($39)) + 48|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($0,$__op,$37)|0);
    $43 = ($42|0)==($37|0);
    if (!($43)) {
     HEAP32[$__s>>2] = 0;
     $$sroa$0$2 = 0;
     break;
    }
   }
   HEAP32[$6>>2] = 0;
   $$sroa$0$2 = $0;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$2|0);
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 200|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,17439,1,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(714,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 104|0;
 $vararg_buffer = sp;
 $__fmt = sp + 120|0;
 $__nar = sp + 108|0;
 $__o = sp + 20|0;
 $__op = sp + 16|0;
 $__oe = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[17431>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[17431+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[17431+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[17431+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[17431+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[17431+5>>0]|0;
 $2 = ((($__fmt)) + 1|0);
 $3 = ((($__iob)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($2,17437,0,$4);
 $5 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $6 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$5,$__fmt,$vararg_buffer)|0);
 $7 = (($__nar) + ($6)|0);
 $8 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$7,$__iob)|0);
 $9 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(714,($__nar|0),($8|0),($7|0),($__o|0),($__op|0),($__oe|0),($0|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  ___resumeException($16|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($9)|0);
  $12 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $12;
  $13 = HEAP32[$__op>>2]|0;
  $14 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $15 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$13,$14,$__iob,$__fl)|0);
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this,$__s,$__iob,$__fl,$0,$1) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 204|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 208|0;
 $__o = sp + 32|0;
 $__op = sp + 28|0;
 $__oe = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = $__fmt;
 $5 = $4;
 HEAP32[$5>>2] = 37;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($__fmt)) + 1|0);
 $9 = ((($__iob)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($8,17439,0,$10);
 $11 = (__ZNSt3__16__clocEv()|0);
 $12 = $vararg_buffer;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$11,$__fmt,$vararg_buffer)|0);
 $17 = (($__nar) + ($16)|0);
 $18 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$17,$__iob)|0);
 $19 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$2>>2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(714,($__nar|0),($18|0),($17|0),($__o|0),($__op|0),($__oe|0),($2|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  ___resumeException($26|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($19)|0);
  $22 = HEAP32[$__s>>2]|0;
  HEAP32[$3>>2] = $22;
  $23 = HEAP32[$__op>>2]|0;
  $24 = HEAP32[$__oe>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;
  $25 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$23,$24,$__iob,$__fl)|0);
  STACKTOP = sp;return ($25|0);
 }
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$115 = 0, $$1314 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $$pre8$pre = 0, $$pre810 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nbh$sroa$0$0 = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__obh$sroa$0$0 = 0, $__obh$sroa$0$1 = 0, $__obh$sroa$0$2 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0;
 var $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 312|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 316|0;
 $__nb = sp + 308|0;
 $__o = sp + 80|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 68|0;
 $1 = sp + 64|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,26417,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 do {
  if ($15) {
   if ($9) {
    __THREW__ = 0;
    $16 = (invoke_i(704)|0);
    $17 = __THREW__; __THREW__ = 0;
    $18 = $17&1;
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(709,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $26 = (invoke_i(704)|0);
    $27 = __THREW__; __THREW__ = 0;
    $28 = $27&1;
    if (!($28)) {
     $29 = ((($__iob)) + 8|0);
     $30 = HEAP32[$29>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer9>>2] = $30;
     $vararg_ptr12 = ((($vararg_buffer9)) + 8|0);
     HEAPF64[$vararg_ptr12>>3] = $__v;
     $31 = (invoke_iiiii(709,($__nb|0),($26|0),($__fmt|0),($vararg_buffer9|0))|0);
     $32 = __THREW__; __THREW__ = 0;
     $33 = $32&1;
     if (!($33)) {
      $__nc$1 = $31;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $34 = HEAP32[$__nb>>2]|0;
    $35 = ($34|0)==(0|0);
    if (!($35)) {
     $36 = $34;
     $$pre810 = $34;$__nbh$sroa$0$0 = $36;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
    __THREW__ = 0;
    invoke_v(693);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $39 = $$pre;
     $$pre810 = $39;$__nbh$sroa$0$0 = $$pre;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
   }
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $$115 = $24;$$1314 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $$pre810 = $$pre7;$__nbh$sroa$0$0 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $40 = (($$pre810) + ($__nc$2)|0);
  $41 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($$pre810,$40,$__iob)|0);
  $42 = ($$pre810|0)==($__nar|0);
  do {
   if ($42) {
    $54 = $__nar;$__ob$0 = $__o;$__obh$sroa$0$1 = 0;
    label = 22;
   } else {
    $43 = $__nc$2 << 3;
    $44 = (_malloc($43)|0);
    $45 = ($44|0)==(0|0);
    if ($45) {
     __THREW__ = 0;
     invoke_v(693);
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $__obh$sroa$0$0 = 0;
      label = 20;
      break;
     }
     $$pre8$pre = HEAP32[$__nb>>2]|0;
     $$pre8 = $$pre8$pre;
    } else {
     $$pre8 = $$pre810;
    }
    $50 = $44;
    $54 = $$pre8;$__ob$0 = $44;$__obh$sroa$0$1 = $50;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $51 = (invoke_ii(607,($__iob|0))|0);
    $52 = __THREW__; __THREW__ = 0;
    $53 = $52&1;
    if ($53) {
     $__obh$sroa$0$0 = $__obh$sroa$0$1;
     label = 20;
    } else {
     HEAP32[$0>>2] = $51;
     __THREW__ = 0;
     invoke_viiiiiii(715,($54|0),($41|0),($40|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $55 = __THREW__; __THREW__ = 0;
     $56 = $55&1;
     if ($56) {
      $67 = ___cxa_find_matching_catch_2()|0;
      $68 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($51)|0);
      $$0 = $67;$$02 = $68;$__obh$sroa$0$2 = $__obh$sroa$0$1;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($51)|0);
     $57 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $57;
     $58 = HEAP32[$__op>>2]|0;
     $59 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $60 = (invoke_iiiiiii(716,($$byval_copy|0),($__ob$0|0),($58|0),($59|0),($__iob|0),($__fl|0))|0);
     $61 = __THREW__; __THREW__ = 0;
     $62 = $61&1;
     if ($62) {
      $__obh$sroa$0$0 = $__obh$sroa$0$1;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $60;
      $63 = ($__obh$sroa$0$1|0)==(0);
      if (!($63)) {
       $64 = $__obh$sroa$0$1;
       _free($64);
      }
      $65 = ($__nbh$sroa$0$0|0)==(0);
      if (!($65)) {
       $66 = $__nbh$sroa$0$0;
       _free($66);
      }
      STACKTOP = sp;return ($60|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $48 = ___cxa_find_matching_catch_2()|0;
   $49 = tempRet0;
   $$0 = $48;$$02 = $49;$__obh$sroa$0$2 = $__obh$sroa$0$0;
  }
  $69 = ($__obh$sroa$0$2|0)==(0);
  if (!($69)) {
   $70 = $__obh$sroa$0$2;
   _free($70);
  }
  $71 = ($__nbh$sroa$0$0|0)==(0);
  if ($71) {
   $$115 = $$0;$$1314 = $$02;
  } else {
   $72 = $__nbh$sroa$0$0;
   _free($72);
   $$115 = $$0;$$1314 = $$02;
  }
 }
 ___resumeException($$115|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$0$i$i = 0, $$0$i$i6 = 0, $$01$i$i = 0, $$01$i$i5 = 0, $$__dg$0 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dc$0 = 0, $__dc$1 = 0, $__dg$0 = 0, $__dg$1 = 0;
 var $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$2 = 0, $__nf$2$lcssa53 = 0, $__nf$3 = 0, $__ns$0 = 0, $__ns$1 = 0, $__ns$2 = 0, $__p$0 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__grouping = sp;
 $0 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22448)|0);
 $1 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,22456)|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($__grouping,$1);
 HEAP32[$__oe>>2] = $__ob;
 $5 = HEAP8[$__nb>>0]|0;
 switch ($5<<24>>24) {
 case 43: case 45:  {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 44|0);
  $8 = HEAP32[$7>>2]|0;
  __THREW__ = 0;
  $9 = (invoke_iii($8|0,($0|0),($5|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if ($11) {
   label = 8;
  } else {
   $12 = ((($__nb)) + 1|0);
   $13 = HEAP32[$__oe>>2]|0;
   $14 = ((($13)) + 4|0);
   HEAP32[$__oe>>2] = $14;
   HEAP32[$13>>2] = $9;
   $__nf$0 = $12;
   label = 10;
  }
  break;
 }
 default: {
  $__nf$0 = $__nb;
  label = 10;
 }
 }
 L4: do {
  if ((label|0) == 10) {
   $25 = $__ne;
   $26 = $__nf$0;
   $27 = (($25) - ($26))|0;
   $28 = ($27|0)>(1);
   L6: do {
    if ($28) {
     $29 = HEAP8[$__nf$0>>0]|0;
     $30 = ($29<<24>>24)==(48);
     if ($30) {
      $31 = ((($__nf$0)) + 1|0);
      $32 = HEAP8[$31>>0]|0;
      switch ($32<<24>>24) {
      case 88: case 120:  {
       break;
      }
      default: {
       $__ns$1 = $__nf$0;
       label = 21;
       break L6;
      }
      }
      $33 = HEAP32[$0>>2]|0;
      $34 = ((($33)) + 44|0);
      $35 = HEAP32[$34>>2]|0;
      __THREW__ = 0;
      $36 = (invoke_iii($35|0,($0|0),48)|0);
      $37 = __THREW__; __THREW__ = 0;
      $38 = $37&1;
      if ($38) {
       label = 8;
       break L4;
      }
      $39 = HEAP32[$__oe>>2]|0;
      $40 = ((($39)) + 4|0);
      HEAP32[$__oe>>2] = $40;
      HEAP32[$39>>2] = $36;
      $41 = ((($__nf$0)) + 2|0);
      $42 = HEAP8[$31>>0]|0;
      $43 = HEAP32[$0>>2]|0;
      $44 = ((($43)) + 44|0);
      $45 = HEAP32[$44>>2]|0;
      __THREW__ = 0;
      $46 = (invoke_iii($45|0,($0|0),($42|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       label = 8;
       break L4;
      }
      $49 = HEAP32[$__oe>>2]|0;
      $50 = ((($49)) + 4|0);
      HEAP32[$__oe>>2] = $50;
      HEAP32[$49>>2] = $46;
      $__ns$0 = $41;
      while(1) {
       $51 = ($__ns$0>>>0)<($__ne>>>0);
       if (!($51)) {
        $__nf$1 = $41;$__ns$2 = $__ns$0;
        break L6;
       }
       $52 = HEAP8[$__ns$0>>0]|0;
       __THREW__ = 0;
       $53 = (invoke_i(704)|0);
       $54 = __THREW__; __THREW__ = 0;
       $55 = $54&1;
       if ($55) {
        break;
       }
       $56 = $52 << 24 >> 24;
       __THREW__ = 0;
       $57 = (invoke_iii(712,($56|0),($53|0))|0);
       $58 = __THREW__; __THREW__ = 0;
       $59 = $58&1;
       if ($59) {
        break;
       }
       $60 = ($57|0)==(0);
       if ($60) {
        $__nf$1 = $41;$__ns$2 = $__ns$0;
        break L6;
       }
       $61 = ((($__ns$0)) + 1|0);
       $__ns$0 = $61;
      }
      $21 = ___cxa_find_matching_catch_2()|0;
      $22 = tempRet0;
      $lpad$phi$index = $21;$lpad$phi$index5 = $22;
      break L4;
     } else {
      $__ns$1 = $__nf$0;
      label = 21;
     }
    } else {
     $__ns$1 = $__nf$0;
     label = 21;
    }
   } while(0);
   L19: do {
    if ((label|0) == 21) {
     while(1) {
      label = 0;
      $62 = ($__ns$1>>>0)<($__ne>>>0);
      if (!($62)) {
       $__nf$1 = $__nf$0;$__ns$2 = $__ns$1;
       break L19;
      }
      $63 = HEAP8[$__ns$1>>0]|0;
      __THREW__ = 0;
      $64 = (invoke_i(704)|0);
      $65 = __THREW__; __THREW__ = 0;
      $66 = $65&1;
      if ($66) {
       break;
      }
      $67 = $63 << 24 >> 24;
      __THREW__ = 0;
      $68 = (invoke_iii(713,($67|0),($64|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       break;
      }
      $71 = ($68|0)==(0);
      if ($71) {
       $__nf$1 = $__nf$0;$__ns$2 = $__ns$1;
       break L19;
      }
      $72 = ((($__ns$1)) + 1|0);
      $__ns$1 = $72;
      label = 21;
     }
     $19 = ___cxa_find_matching_catch_2()|0;
     $20 = tempRet0;
     $lpad$phi$index = $19;$lpad$phi$index5 = $20;
     break L4;
    }
   } while(0);
   $73 = HEAP8[$__grouping>>0]|0;
   $74 = $73 & 1;
   $75 = ($74<<24>>24)==(0);
   $76 = ((($__grouping)) + 4|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = $73&255;
   $79 = $78 >>> 1;
   $80 = $75 ? $79 : $77;
   $81 = ($80|0)==(0);
   L28: do {
    if ($81) {
     $82 = HEAP32[$__oe>>2]|0;
     $83 = HEAP32[$0>>2]|0;
     $84 = ((($83)) + 48|0);
     $85 = HEAP32[$84>>2]|0;
     __THREW__ = 0;
     (invoke_iiiii($85|0,($0|0),($__nf$1|0),($__ns$2|0),($82|0))|0);
     $86 = __THREW__; __THREW__ = 0;
     $87 = $86&1;
     if ($87) {
      label = 8;
      break L4;
     }
     $88 = $__ns$2;
     $89 = $__nf$1;
     $90 = (($88) - ($89))|0;
     $91 = HEAP32[$__oe>>2]|0;
     $92 = (($91) + ($90<<2)|0);
     HEAP32[$__oe>>2] = $92;
     $$pre$phiZ2D = $0;$188 = $92;
    } else {
     $93 = ($__nf$1|0)==($__ns$2|0);
     L32: do {
      if (!($93)) {
       $$0$i$i = $__ns$2;$$01$i$i = $__nf$1;
       while(1) {
        $94 = ((($$0$i$i)) + -1|0);
        $95 = ($$01$i$i>>>0)<($94>>>0);
        if (!($95)) {
         break L32;
        }
        $96 = HEAP8[$$01$i$i>>0]|0;
        $97 = HEAP8[$94>>0]|0;
        HEAP8[$$01$i$i>>0] = $97;
        HEAP8[$94>>0] = $96;
        $98 = ((($$01$i$i)) + 1|0);
        $$0$i$i = $94;$$01$i$i = $98;
       }
      }
     } while(0);
     $99 = HEAP32[$1>>2]|0;
     $100 = ((($99)) + 16|0);
     $101 = HEAP32[$100>>2]|0;
     __THREW__ = 0;
     $102 = (invoke_ii($101|0,($1|0))|0);
     $103 = __THREW__; __THREW__ = 0;
     $104 = $103&1;
     if ($104) {
      label = 8;
      break L4;
     }
     $105 = ((($__grouping)) + 8|0);
     $106 = ((($__grouping)) + 1|0);
     $__dc$0 = 0;$__dg$0 = 0;$__p$0 = $__nf$1;
     while(1) {
      $107 = ($__p$0>>>0)<($__ns$2>>>0);
      if (!($107)) {
       break;
      }
      $119 = HEAP8[$__grouping>>0]|0;
      $120 = $119 & 1;
      $121 = ($120<<24>>24)==(0);
      $122 = HEAP32[$105>>2]|0;
      $123 = $121 ? $106 : $122;
      $124 = (($123) + ($__dg$0)|0);
      $125 = HEAP8[$124>>0]|0;
      $126 = ($125<<24>>24)>(0);
      $127 = $125 << 24 >> 24;
      $128 = ($__dc$0|0)==($127|0);
      $or$cond = $126 & $128;
      if ($or$cond) {
       $129 = HEAP32[$__oe>>2]|0;
       $130 = ((($129)) + 4|0);
       HEAP32[$__oe>>2] = $130;
       HEAP32[$129>>2] = $102;
       $131 = HEAP8[$__grouping>>0]|0;
       $132 = $131 & 1;
       $133 = ($132<<24>>24)==(0);
       $134 = HEAP32[$76>>2]|0;
       $135 = $131&255;
       $136 = $135 >>> 1;
       $137 = $133 ? $136 : $134;
       $138 = (($137) + -1)|0;
       $139 = ($__dg$0>>>0)<($138>>>0);
       $140 = $139&1;
       $$__dg$0 = (($140) + ($__dg$0))|0;
       $__dc$1 = 0;$__dg$1 = $$__dg$0;
      } else {
       $__dc$1 = $__dc$0;$__dg$1 = $__dg$0;
      }
      $141 = HEAP8[$__p$0>>0]|0;
      $142 = HEAP32[$0>>2]|0;
      $143 = ((($142)) + 44|0);
      $144 = HEAP32[$143>>2]|0;
      __THREW__ = 0;
      $145 = (invoke_iii($144|0,($0|0),($141|0))|0);
      $146 = __THREW__; __THREW__ = 0;
      $147 = $146&1;
      if ($147) {
       label = 5;
       break;
      }
      $148 = HEAP32[$__oe>>2]|0;
      $149 = ((($148)) + 4|0);
      HEAP32[$__oe>>2] = $149;
      HEAP32[$148>>2] = $145;
      $150 = (($__dc$1) + 1)|0;
      $151 = ((($__p$0)) + 1|0);
      $__dc$0 = $150;$__dg$0 = $__dg$1;$__p$0 = $151;
     }
     if ((label|0) == 5) {
      $17 = ___cxa_find_matching_catch_2()|0;
      $18 = tempRet0;
      $lpad$phi$index = $17;$lpad$phi$index5 = $18;
      break L4;
     }
     $108 = $__nf$1;
     $109 = $__nb;
     $110 = (($108) - ($109))|0;
     $111 = (($__ob) + ($110<<2)|0);
     $112 = HEAP32[$__oe>>2]|0;
     $113 = ($111|0)==($112|0);
     if ($113) {
      $$pre$phiZ2D = $0;$188 = $111;
     } else {
      $$0$i$i6 = $112;$$01$i$i5 = $111;
      while(1) {
       $114 = ((($$0$i$i6)) + -4|0);
       $115 = ($$01$i$i5>>>0)<($114>>>0);
       if (!($115)) {
        $$pre$phiZ2D = $0;$188 = $112;
        break L28;
       }
       $116 = HEAP32[$$01$i$i5>>2]|0;
       $117 = HEAP32[$114>>2]|0;
       HEAP32[$$01$i$i5>>2] = $117;
       HEAP32[$114>>2] = $116;
       $118 = ((($$01$i$i5)) + 4|0);
       $$0$i$i6 = $114;$$01$i$i5 = $118;
      }
     }
    }
   } while(0);
   $189 = $188;$__nf$2 = $__ns$2;
   while(1) {
    $152 = ($__nf$2>>>0)<($__ne>>>0);
    if (!($152)) {
     $176 = $189;$__nf$3 = $__nf$2;
     break;
    }
    $153 = HEAP8[$__nf$2>>0]|0;
    $154 = ($153<<24>>24)==(46);
    if ($154) {
     $__nf$2$lcssa53 = $__nf$2;
     label = 45;
     break;
    }
    $164 = HEAP32[$$pre$phiZ2D>>2]|0;
    $165 = ((($164)) + 44|0);
    $166 = HEAP32[$165>>2]|0;
    __THREW__ = 0;
    $167 = (invoke_iii($166|0,($0|0),($153|0))|0);
    $168 = __THREW__; __THREW__ = 0;
    $169 = $168&1;
    if ($169) {
     label = 4;
     break;
    }
    $170 = HEAP32[$__oe>>2]|0;
    $171 = ((($170)) + 4|0);
    HEAP32[$__oe>>2] = $171;
    HEAP32[$170>>2] = $167;
    $172 = ((($__nf$2)) + 1|0);
    $189 = $171;$__nf$2 = $172;
   }
   if ((label|0) == 4) {
    $15 = ___cxa_find_matching_catch_2()|0;
    $16 = tempRet0;
    $lpad$phi$index = $15;$lpad$phi$index5 = $16;
    break;
   }
   if ((label|0) == 45) {
    $155 = HEAP32[$1>>2]|0;
    $156 = ((($155)) + 12|0);
    $157 = HEAP32[$156>>2]|0;
    __THREW__ = 0;
    $158 = (invoke_ii($157|0,($1|0))|0);
    $159 = __THREW__; __THREW__ = 0;
    $160 = $159&1;
    if ($160) {
     label = 8;
     break;
    }
    $161 = HEAP32[$__oe>>2]|0;
    $162 = ((($161)) + 4|0);
    HEAP32[$__oe>>2] = $162;
    HEAP32[$161>>2] = $158;
    $163 = ((($__nf$2$lcssa53)) + 1|0);
    $176 = $162;$__nf$3 = $163;
   }
   $173 = HEAP32[$0>>2]|0;
   $174 = ((($173)) + 48|0);
   $175 = HEAP32[$174>>2]|0;
   __THREW__ = 0;
   (invoke_iiiii($175|0,($0|0),($__nf$3|0),($__ne|0),($176|0))|0);
   $177 = __THREW__; __THREW__ = 0;
   $178 = $177&1;
   if ($178) {
    label = 8;
   } else {
    $179 = $__nf$3;
    $180 = (($25) - ($179))|0;
    $181 = HEAP32[$__oe>>2]|0;
    $182 = (($181) + ($180<<2)|0);
    HEAP32[$__oe>>2] = $182;
    $183 = ($__np|0)==($__ne|0);
    $184 = $__np;
    $185 = $__nb;
    $186 = (($184) - ($185))|0;
    $187 = (($__ob) + ($186<<2)|0);
    $storemerge = $183 ? $182 : $187;
    HEAP32[$__op>>2] = $storemerge;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $23 = ___cxa_find_matching_catch_2()|0;
  $24 = tempRet0;
  $lpad$phi$index = $23;$lpad$phi$index5 = $24;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index|0);
 // unreachable;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$115 = 0, $$1314 = 0, $$byval_copy = 0, $$pre = 0, $$pre7 = 0, $$pre8 = 0, $$pre8$pre = 0, $$pre810 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0;
 var $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nbh$sroa$0$0 = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__obh$sroa$0$0 = 0, $__obh$sroa$0$1 = 0, $__obh$sroa$0$2 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 304|0;
 $vararg_buffer9 = sp + 48|0;
 $vararg_buffer5 = sp + 32|0;
 $vararg_buffer2 = sp + 24|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 308|0;
 $__nb = sp + 300|0;
 $__o = sp + 72|0;
 $__op = sp + 68|0;
 $__oe = sp + 64|0;
 $0 = sp + 60|0;
 $1 = sp + 56|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ((($__fmt)) + 1|0);
 $7 = ((($__iob)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,17442,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = ((($__iob)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $12;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $__v;
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $__v;
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer2)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 do {
  if ($15) {
   if ($9) {
    __THREW__ = 0;
    $16 = (invoke_i(704)|0);
    $17 = __THREW__; __THREW__ = 0;
    $18 = $17&1;
    if (!($18)) {
     $19 = ((($__iob)) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     __THREW__ = 0;
     HEAP32[$vararg_buffer5>>2] = $20;
     $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
     HEAPF64[$vararg_ptr8>>3] = $__v;
     $21 = (invoke_iiiii(709,($__nb|0),($16|0),($__fmt|0),($vararg_buffer5|0))|0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $__nc$1 = $21;
      label = 12;
     }
    }
   } else {
    __THREW__ = 0;
    $26 = (invoke_i(704)|0);
    $27 = __THREW__; __THREW__ = 0;
    $28 = $27&1;
    if (!($28)) {
     __THREW__ = 0;
     HEAPF64[$vararg_buffer9>>3] = $__v;
     $29 = (invoke_iiiii(709,($__nb|0),($26|0),($__fmt|0),($vararg_buffer9|0))|0);
     $30 = __THREW__; __THREW__ = 0;
     $31 = $30&1;
     if (!($31)) {
      $__nc$1 = $29;
      label = 12;
     }
    }
   }
   if ((label|0) == 12) {
    $32 = HEAP32[$__nb>>2]|0;
    $33 = ($32|0)==(0|0);
    if (!($33)) {
     $34 = $32;
     $$pre810 = $32;$__nbh$sroa$0$0 = $34;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
    __THREW__ = 0;
    invoke_v(693);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if (!($36)) {
     $$pre = HEAP32[$__nb>>2]|0;
     $37 = $$pre;
     $$pre810 = $37;$__nbh$sroa$0$0 = $$pre;$__nc$2 = $__nc$1;
     label = 16;
     break;
    }
   }
   $24 = ___cxa_find_matching_catch_2()|0;
   $25 = tempRet0;
   $$115 = $24;$$1314 = $25;
  } else {
   $$pre7 = HEAP32[$__nb>>2]|0;
   $$pre810 = $$pre7;$__nbh$sroa$0$0 = 0;$__nc$2 = $__nc$0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $38 = (($$pre810) + ($__nc$2)|0);
  $39 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($$pre810,$38,$__iob)|0);
  $40 = ($$pre810|0)==($__nar|0);
  do {
   if ($40) {
    $52 = $__nar;$__ob$0 = $__o;$__obh$sroa$0$1 = 0;
    label = 22;
   } else {
    $41 = $__nc$2 << 3;
    $42 = (_malloc($41)|0);
    $43 = ($42|0)==(0|0);
    if ($43) {
     __THREW__ = 0;
     invoke_v(693);
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     if ($45) {
      $__obh$sroa$0$0 = 0;
      label = 20;
      break;
     }
     $$pre8$pre = HEAP32[$__nb>>2]|0;
     $$pre8 = $$pre8$pre;
    } else {
     $$pre8 = $$pre810;
    }
    $48 = $42;
    $52 = $$pre8;$__ob$0 = $42;$__obh$sroa$0$1 = $48;
    label = 22;
   }
  } while(0);
  do {
   if ((label|0) == 22) {
    __THREW__ = 0;
    $49 = (invoke_ii(607,($__iob|0))|0);
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $__obh$sroa$0$0 = $__obh$sroa$0$1;
     label = 20;
    } else {
     HEAP32[$0>>2] = $49;
     __THREW__ = 0;
     invoke_viiiiiii(715,($52|0),($39|0),($38|0),($__ob$0|0),($__op|0),($__oe|0),($0|0));
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      $65 = ___cxa_find_matching_catch_2()|0;
      $66 = tempRet0;
      (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
      $$0 = $65;$$02 = $66;$__obh$sroa$0$2 = $__obh$sroa$0$1;
      break;
     }
     (__ZNSt3__114__shared_count16__release_sharedEv($49)|0);
     $55 = HEAP32[$__s>>2]|0;
     HEAP32[$1>>2] = $55;
     $56 = HEAP32[$__op>>2]|0;
     $57 = HEAP32[$__oe>>2]|0;
     __THREW__ = 0;
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
     $58 = (invoke_iiiiiii(716,($$byval_copy|0),($__ob$0|0),($56|0),($57|0),($__iob|0),($__fl|0))|0);
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      $__obh$sroa$0$0 = $__obh$sroa$0$1;
      label = 20;
     } else {
      HEAP32[$__s>>2] = $58;
      $61 = ($__obh$sroa$0$1|0)==(0);
      if (!($61)) {
       $62 = $__obh$sroa$0$1;
       _free($62);
      }
      $63 = ($__nbh$sroa$0$0|0)==(0);
      if (!($63)) {
       $64 = $__nbh$sroa$0$0;
       _free($64);
      }
      STACKTOP = sp;return ($58|0);
     }
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $46 = ___cxa_find_matching_catch_2()|0;
   $47 = tempRet0;
   $$0 = $46;$$02 = $47;$__obh$sroa$0$2 = $__obh$sroa$0$0;
  }
  $67 = ($__obh$sroa$0$2|0)==(0);
  if (!($67)) {
   $68 = $__obh$sroa$0$2;
   _free($68);
  }
  $69 = ($__nbh$sroa$0$0|0)==(0);
  if ($69) {
   $$115 = $$0;$$1314 = $$02;
  } else {
   $70 = $__nbh$sroa$0$0;
   _free($70);
   $$115 = $$0;$$1314 = $$02;
  }
 }
 ___resumeException($$115|0);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this,$__s,$__iob,$__fl,$__v) {
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__op$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 160|0;
 $vararg_buffer = sp;
 $__fmt = sp + 184|0;
 $__nar = sp + 164|0;
 $__o = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 ;HEAP8[$__fmt>>0]=HEAP8[17444>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[17444+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[17444+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[17444+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[17444+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[17444+5>>0]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $3 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$2,$__fmt,$vararg_buffer)|0);
 $4 = (($__nar) + ($3)|0);
 $5 = (__ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar,$4,$__iob)|0);
 $6 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $6;
 __THREW__ = 0;
 $7 = (invoke_iii(608,($0|0),(22448|0))|0);
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $21 = ___cxa_find_matching_catch_2()|0;
  $22 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  ___resumeException($21|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($6)|0);
  $10 = HEAP32[$7>>2]|0;
  $11 = ((($10)) + 48|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiiii[$12 & 1023]($7,$__nar,$4,$__o)|0);
  $13 = (($__o) + ($3<<2)|0);
  $14 = ($5|0)==($4|0);
  $15 = $__nar;
  $16 = $5;
  $17 = (($16) - ($15))|0;
  $18 = (($__o) + ($17<<2)|0);
  $__op$0 = $14 ? $13 : $18;
  $19 = HEAP32[$__s>>2]|0;
  HEAP32[$1>>2] = $19;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  $20 = (__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$__o,$__op$0,$13,$__iob,$__fl)|0);
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,17662,(17670))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i27 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$3 = 0, $$3$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa112 = 0, $$lcssa115 = 0, $$lcssa116 = 0, $$lcssa116$lcssa = 0, $$lcssa116$lcssa119 = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa121 = 0, $$lcssa123 = 0, $$lcssa126 = 0, $$lcssa127 = 0;
 var $$lcssa128 = 0, $$pre = 0, $$pre$i$i$i18 = 0, $$pre$i$i$i9 = 0, $$pre$i2$i$i22 = 0, $$pre$i2$i$i2240 = 0, $$pre$i2$i$i2241 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i25 = 0, $isascii1$i6 = 0, $or$cond = 0, $sext = 0, $tmp$i$i24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 __THREW__ = 0;
 $4 = (invoke_iii(608,($0|0),(22416|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $39 = ___cxa_find_matching_catch_2()|0;
  $40 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
  ___resumeException($39|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $7 = ((($4)) + 8|0);
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $8 = ($$0$ph|0)!=($__fmte|0);
  $9 = $$pre;
  while(1) {
   $10 = ($9|0)==(0);
   $or$cond = $8 & $10;
   $11 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$pre$i$i$i9 = $11;
    break L4;
   }
   $12 = ($11|0)==(0|0);
   $13 = $11;
   if ($12) {
    $189 = $13;$24 = 0;
   } else {
    $14 = ((($11)) + 12|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($11)) + 16|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($15|0)==($17|0);
    if ($18) {
     $19 = HEAP32[$11>>2]|0;
     $20 = ((($19)) + 36|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (FUNCTION_TABLE_ii[$21 & 1023]($11)|0);
     $23 = ($22|0)==(-1);
     if ($23) {
      HEAP32[$__b>>2] = 0;
      $189 = 0;$24 = 0;
     } else {
      $189 = $13;$24 = $11;
     }
    } else {
     $189 = $13;$24 = $11;
    }
   }
   $25 = ($24|0)==(0|0);
   $26 = HEAP32[$__e>>2]|0;
   $27 = ($26|0)==(0|0);
   $28 = $26;
   do {
    if ($27) {
     $190 = $28;
     label = 14;
    } else {
     $29 = ((($26)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ((($26)) + 16|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($30|0)==($32|0);
     if ($33) {
      $34 = HEAP32[$26>>2]|0;
      $35 = ((($34)) + 36|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (FUNCTION_TABLE_ii[$36 & 1023]($26)|0);
      $38 = ($37|0)==(-1);
      if ($38) {
       HEAP32[$__e>>2] = 0;
       $190 = 0;
       label = 14;
       break;
      }
     }
     if ($25) {
      $191 = $26;$192 = $28;
     } else {
      $$lcssa115 = $24;
      label = 15;
      break L4;
     }
    }
   } while(0);
   if ((label|0) == 14) {
    label = 0;
    if ($25) {
     $$lcssa115 = $24;
     label = 15;
     break L4;
    } else {
     $191 = 0;$192 = $190;
    }
   }
   $41 = HEAP8[$$0$ph>>0]|0;
   $42 = HEAP32[$4>>2]|0;
   $43 = ((($42)) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (FUNCTION_TABLE_iiii[$44 & 1023]($4,$41,0)|0);
   $46 = ($45<<24>>24)==(37);
   if ($46) {
    $$lcssa112 = $189;$$lcssa116 = $24;$$lcssa123 = $192;
    label = 18;
    break;
   }
   $67 = HEAP8[$$0$ph>>0]|0;
   $isascii1$i = ($67<<24>>24)>(-1);
   if ($isascii1$i) {
    $68 = $67 << 24 >> 24;
    $69 = HEAP32[$7>>2]|0;
    $70 = (($69) + ($68<<1)|0);
    $71 = HEAP16[$70>>1]|0;
    $72 = $71 & 8192;
    $73 = ($72<<16>>16)==(0);
    if (!($73)) {
     $$lcssa117 = $24;$$lcssa121 = $191;$$lcssa126 = $69;
     label = 27;
     break;
    }
   }
   $132 = ((($24)) + 12|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = ((($24)) + 16|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = ($133|0)==($135|0);
   if ($136) {
    $137 = HEAP32[$24>>2]|0;
    $138 = ((($137)) + 36|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (FUNCTION_TABLE_ii[$139 & 1023]($24)|0);
    $$0$i$i27 = $140;
   } else {
    $141 = HEAP8[$133>>0]|0;
    $142 = $141&255;
    $$0$i$i27 = $142;
   }
   $143 = $$0$i$i27&255;
   $144 = HEAP32[$4>>2]|0;
   $145 = ((($144)) + 12|0);
   $146 = HEAP32[$145>>2]|0;
   $147 = (FUNCTION_TABLE_iii[$146 & 1023]($4,$143)|0);
   $148 = HEAP8[$$0$ph>>0]|0;
   $149 = HEAP32[$4>>2]|0;
   $150 = ((($149)) + 12|0);
   $151 = HEAP32[$150>>2]|0;
   $152 = (FUNCTION_TABLE_iii[$151 & 1023]($4,$148)|0);
   $153 = ($147<<24>>24)==($152<<24>>24);
   if ($153) {
    $$lcssa118 = $24;$$lcssa127 = $132;$$lcssa128 = $134;
    label = 55;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $9 = 4;
  }
  L32: do {
   if ((label|0) == 18) {
    label = 0;
    $47 = ((($$0$ph)) + 1|0);
    $48 = ($47|0)==($__fmte|0);
    if ($48) {
     $$lcssa116$lcssa = $$lcssa116;
     label = 19;
     break L4;
    }
    $49 = HEAP8[$47>>0]|0;
    $50 = HEAP32[$4>>2]|0;
    $51 = ((($50)) + 36|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($4,$49,0)|0);
    switch ($53<<24>>24) {
    case 48: case 69:  {
     $54 = ((($$0$ph)) + 2|0);
     $55 = ($54|0)==($__fmte|0);
     if ($55) {
      $$lcssa116$lcssa119 = $$lcssa116;
      label = 24;
      break L4;
     }
     $56 = HEAP8[$54>>0]|0;
     $57 = HEAP32[$4>>2]|0;
     $58 = ((($57)) + 36|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($4,$56,0)|0);
     $66 = $47;$__cmd$0 = $60;$__opt$0 = $53;
     break;
    }
    default: {
     $66 = $$0$ph;$__cmd$0 = $53;$__opt$0 = 0;
    }
    }
    $61 = HEAP32[$this>>2]|0;
    $62 = ((($61)) + 36|0);
    $63 = HEAP32[$62>>2]|0;
    HEAP32[$1>>2] = $$lcssa112;
    HEAP32[$2>>2] = $$lcssa123;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
    $64 = (FUNCTION_TABLE_iiiiiiiii[$63 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
    HEAP32[$__b>>2] = $64;
    $65 = ((($66)) + 2|0);
    $$0$ph$be = $65;
   }
   else if ((label|0) == 27) {
    label = 0;
    $$0$pn = $$0$ph;
    while(1) {
     $$3 = ((($$0$pn)) + 1|0);
     $74 = ($$3|0)==($__fmte|0);
     if ($74) {
      $$3$lcssa = $__fmte;
      break;
     }
     $75 = HEAP8[$$3>>0]|0;
     $isascii1$i6 = ($75<<24>>24)>(-1);
     if (!($isascii1$i6)) {
      $$3$lcssa = $$3;
      break;
     }
     $76 = $75 << 24 >> 24;
     $77 = (($$lcssa126) + ($76<<1)|0);
     $78 = HEAP16[$77>>1]|0;
     $79 = $78 & 8192;
     $80 = ($79<<16>>16)==(0);
     if ($80) {
      $$3$lcssa = $$3;
      break;
     } else {
      $$0$pn = $$3;
     }
    }
    $$pre$i$i$i18 = $$lcssa117;$$pre$i2$i$i22 = $$lcssa121;$94 = $$lcssa121;
    while(1) {
     $81 = ($$pre$i$i$i18|0)==(0|0);
     if ($81) {
      $92 = 0;
     } else {
      $82 = ((($$pre$i$i$i18)) + 12|0);
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($$pre$i$i$i18)) + 16|0);
      $85 = HEAP32[$84>>2]|0;
      $86 = ($83|0)==($85|0);
      if ($86) {
       $87 = HEAP32[$$pre$i$i$i18>>2]|0;
       $88 = ((($87)) + 36|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = (FUNCTION_TABLE_ii[$89 & 1023]($$pre$i$i$i18)|0);
       $91 = ($90|0)==(-1);
       if ($91) {
        HEAP32[$__b>>2] = 0;
        $92 = 0;
       } else {
        $92 = $$pre$i$i$i18;
       }
      } else {
       $92 = $$pre$i$i$i18;
      }
     }
     $93 = ($92|0)==(0|0);
     $95 = ($94|0)==(0|0);
     do {
      if ($95) {
       $$pre$i2$i$i2241 = $$pre$i2$i$i22;
       label = 41;
      } else {
       $96 = ((($94)) + 12|0);
       $97 = HEAP32[$96>>2]|0;
       $98 = ((($94)) + 16|0);
       $99 = HEAP32[$98>>2]|0;
       $100 = ($97|0)==($99|0);
       if (!($100)) {
        if ($93) {
         $$pre$i2$i$i2240 = $$pre$i2$i$i22;$193 = $94;
         break;
        } else {
         $$0$ph$be = $$3$lcssa;
         break L32;
        }
       }
       $101 = HEAP32[$94>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 1023]($94)|0);
       $105 = ($104|0)==(-1);
       if ($105) {
        HEAP32[$__e>>2] = 0;
        $$pre$i2$i$i2241 = 0;
        label = 41;
        break;
       } else {
        $106 = ($$pre$i2$i$i22|0)==(0|0);
        $tmp$i$i24 = $93 ^ $106;
        if ($tmp$i$i24) {
         $$pre$i2$i$i2240 = $$pre$i2$i$i22;$193 = $$pre$i2$i$i22;
         break;
        } else {
         $$0$ph$be = $$3$lcssa;
         break L32;
        }
       }
      }
     } while(0);
     if ((label|0) == 41) {
      label = 0;
      if ($93) {
       $$0$ph$be = $$3$lcssa;
       break L32;
      } else {
       $$pre$i2$i$i2240 = $$pre$i2$i$i2241;$193 = 0;
      }
     }
     $107 = ((($92)) + 12|0);
     $108 = HEAP32[$107>>2]|0;
     $109 = ((($92)) + 16|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($108|0)==($110|0);
     if ($111) {
      $112 = HEAP32[$92>>2]|0;
      $113 = ((($112)) + 36|0);
      $114 = HEAP32[$113>>2]|0;
      $115 = (FUNCTION_TABLE_ii[$114 & 1023]($92)|0);
      $$0$i$i = $115;
     } else {
      $116 = HEAP8[$108>>0]|0;
      $117 = $116&255;
      $$0$i$i = $117;
     }
     $118 = $$0$i$i&255;
     $isascii1$i25 = ($118<<24>>24)>(-1);
     if (!($isascii1$i25)) {
      $$0$ph$be = $$3$lcssa;
      break L32;
     }
     $sext = $$0$i$i << 24;
     $119 = $sext >> 24;
     $120 = HEAP32[$7>>2]|0;
     $121 = (($120) + ($119<<1)|0);
     $122 = HEAP16[$121>>1]|0;
     $123 = $122 & 8192;
     $124 = ($123<<16>>16)==(0);
     if ($124) {
      $$0$ph$be = $$3$lcssa;
      break L32;
     }
     $125 = HEAP32[$107>>2]|0;
     $126 = HEAP32[$109>>2]|0;
     $127 = ($125|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$92>>2]|0;
      $129 = ((($128)) + 40|0);
      $130 = HEAP32[$129>>2]|0;
      (FUNCTION_TABLE_ii[$130 & 1023]($92)|0);
      $$pre$i$i$i18 = $92;$$pre$i2$i$i22 = $$pre$i2$i$i2240;$94 = $193;
      continue;
     } else {
      $131 = ((($125)) + 1|0);
      HEAP32[$107>>2] = $131;
      $$pre$i$i$i18 = $92;$$pre$i2$i$i22 = $$pre$i2$i$i2240;$94 = $193;
      continue;
     }
    }
   }
   else if ((label|0) == 55) {
    label = 0;
    $154 = HEAP32[$$lcssa127>>2]|0;
    $155 = HEAP32[$$lcssa128>>2]|0;
    $156 = ($154|0)==($155|0);
    if ($156) {
     $157 = HEAP32[$$lcssa118>>2]|0;
     $158 = ((($157)) + 40|0);
     $159 = HEAP32[$158>>2]|0;
     (FUNCTION_TABLE_ii[$159 & 1023]($$lcssa118)|0);
    } else {
     $160 = ((($154)) + 1|0);
     HEAP32[$$lcssa127>>2] = $160;
    }
    $161 = ((($$0$ph)) + 1|0);
    $$0$ph$be = $161;
   }
  } while(0);
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 15) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i9 = $$lcssa115;
 }
 else if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i9 = $$lcssa116$lcssa;
 }
 else if ((label|0) == 24) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i9 = $$lcssa116$lcssa119;
 }
 $162 = ($$pre$i$i$i9|0)==(0|0);
 if ($162) {
  $173 = 0;
 } else {
  $163 = ((($$pre$i$i$i9)) + 12|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = ((($$pre$i$i$i9)) + 16|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = ($164|0)==($166|0);
  if ($167) {
   $168 = HEAP32[$$pre$i$i$i9>>2]|0;
   $169 = ((($168)) + 36|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = (FUNCTION_TABLE_ii[$170 & 1023]($$pre$i$i$i9)|0);
   $172 = ($171|0)==(-1);
   if ($172) {
    HEAP32[$__b>>2] = 0;
    $173 = 0;
   } else {
    $173 = $$pre$i$i$i9;
   }
  } else {
   $173 = $$pre$i$i$i9;
  }
 }
 $174 = ($173|0)==(0|0);
 $175 = HEAP32[$__e>>2]|0;
 $176 = ($175|0)==(0|0);
 do {
  if ($176) {
   label = 70;
  } else {
   $177 = ((($175)) + 12|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = ((($175)) + 16|0);
   $180 = HEAP32[$179>>2]|0;
   $181 = ($178|0)==($180|0);
   if ($181) {
    $182 = HEAP32[$175>>2]|0;
    $183 = ((($182)) + 36|0);
    $184 = HEAP32[$183>>2]|0;
    $185 = (FUNCTION_TABLE_ii[$184 & 1023]($175)|0);
    $186 = ($185|0)==(-1);
    if ($186) {
     HEAP32[$__e>>2] = 0;
     label = 70;
     break;
    }
   }
   if (!($174)) {
    label = 71;
   }
  }
 } while(0);
 if ((label|0) == 70) {
  if ($174) {
   label = 71;
  }
 }
 if ((label|0) == 71) {
  $187 = HEAP32[$__err>>2]|0;
  $188 = $187 | 2;
  HEAP32[$__err>>2] = $188;
 }
 STACKTOP = sp;return ($173|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 1|0);
 $15 = $11 ? $14 : $13;
 $16 = ((($6)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $9&255;
 $19 = $18 >>> 1;
 $20 = $11 ? $19 : $17;
 $21 = (($15) + ($20)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $22 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$21)|0);
 STACKTOP = sp;return ($22|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(608,($0|0),(22416|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(608,($0|0),(22416|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(608,($0|0),(22416|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$2 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i16 = 0, $$pre$i$i$i3 = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $isascii1$i = 0, $isascii1$i12 = 0, $sext = 0, $sext24 = 0, $tmp$i$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $157 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $157 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$2 = 0;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $isascii1$i = ($40<<24>>24)>(-1);
   if ($isascii1$i) {
    $sext = $$0$i$i << 24;
    $41 = $sext >> 24;
    $42 = ((($__ct)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (($43) + ($41<<1)|0);
    $45 = HEAP16[$44>>1]|0;
    $46 = $45 & 2048;
    $47 = ($46<<16>>16)==(0);
    if (!($47)) {
     $50 = HEAP32[$__ct>>2]|0;
     $51 = ((($50)) + 36|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($__ct,$40,0)|0);
     $54 = $53 << 24 >> 24;
     $55 = HEAP32[$__b>>2]|0;
     $56 = ((($55)) + 12|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($55)) + 16|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = ($57|0)==($59|0);
     if ($60) {
      $61 = HEAP32[$55>>2]|0;
      $62 = ((($61)) + 40|0);
      $63 = HEAP32[$62>>2]|0;
      (FUNCTION_TABLE_ii[$63 & 1023]($55)|0);
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     } else {
      $64 = ((($57)) + 1|0);
      HEAP32[$56>>2] = $64;
      $$0$in = $__n;$$pre$i2$i$i7 = $157;$79 = $157;$__r$0$in = $54;
     }
     while(1) {
      $__r$0 = (($__r$0$in) + -48)|0;
      $$0 = (($$0$in) + -1)|0;
      $65 = HEAP32[$__b>>2]|0;
      $66 = ($65|0)==(0|0);
      do {
       if ($66) {
        $77 = 0;
       } else {
        $67 = ((($65)) + 12|0);
        $68 = HEAP32[$67>>2]|0;
        $69 = ((($65)) + 16|0);
        $70 = HEAP32[$69>>2]|0;
        $71 = ($68|0)==($70|0);
        if ($71) {
         $72 = HEAP32[$65>>2]|0;
         $73 = ((($72)) + 36|0);
         $74 = HEAP32[$73>>2]|0;
         $75 = (FUNCTION_TABLE_ii[$74 & 1023]($65)|0);
         $76 = ($75|0)==(-1);
         if ($76) {
          HEAP32[$__b>>2] = 0;
          $77 = 0;
          break;
         } else {
          $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
          $77 = $$pre$i$i$i3;
          break;
         }
        } else {
         $77 = $65;
        }
       }
      } while(0);
      $78 = ($77|0)==(0|0);
      $80 = ($79|0)==(0|0);
      if ($80) {
       $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = 0;
      } else {
       $81 = ((($79)) + 12|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($79)) + 16|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($82|0)==($84|0);
       if ($85) {
        $86 = HEAP32[$79>>2]|0;
        $87 = ((($86)) + 36|0);
        $88 = HEAP32[$87>>2]|0;
        $89 = (FUNCTION_TABLE_ii[$88 & 1023]($79)|0);
        $90 = ($89|0)==(-1);
        if ($90) {
         HEAP32[$__e>>2] = 0;
         $$pre$i2$i$i20 = 0;$91 = 0;
        } else {
         $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $$pre$i2$i$i7;
        }
       } else {
        $$pre$i2$i$i20 = $$pre$i2$i$i7;$91 = $79;
       }
      }
      $92 = ($91|0)==(0|0);
      $tmp$i$i9 = $78 ^ $92;
      $93 = ($$0$in|0)>(1);
      $94 = $93 & $tmp$i$i9;
      $95 = HEAP32[$__b>>2]|0;
      if (!($94)) {
       $$lcssa = $95;$$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;$__r$0$lcssa = $__r$0;
       break;
      }
      $96 = ((($95)) + 12|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ((($95)) + 16|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = ($97|0)==($99|0);
      if ($100) {
       $101 = HEAP32[$95>>2]|0;
       $102 = ((($101)) + 36|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (FUNCTION_TABLE_ii[$103 & 1023]($95)|0);
       $$0$i$i10 = $104;
      } else {
       $105 = HEAP8[$97>>0]|0;
       $106 = $105&255;
       $$0$i$i10 = $106;
      }
      $107 = $$0$i$i10&255;
      $isascii1$i12 = ($107<<24>>24)>(-1);
      if (!($isascii1$i12)) {
       $$2 = $__r$0;
       break L16;
      }
      $sext24 = $$0$i$i10 << 24;
      $108 = $sext24 >> 24;
      $109 = HEAP32[$42>>2]|0;
      $110 = (($109) + ($108<<1)|0);
      $111 = HEAP16[$110>>1]|0;
      $112 = $111 & 2048;
      $113 = ($112<<16>>16)==(0);
      if ($113) {
       $$2 = $__r$0;
       break L16;
      }
      $114 = ($__r$0*10)|0;
      $115 = HEAP32[$__ct>>2]|0;
      $116 = ((($115)) + 36|0);
      $117 = HEAP32[$116>>2]|0;
      $118 = (FUNCTION_TABLE_iiii[$117 & 1023]($__ct,$107,0)|0);
      $119 = $118 << 24 >> 24;
      $120 = (($119) + ($114))|0;
      $121 = HEAP32[$__b>>2]|0;
      $122 = ((($121)) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($121)) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if ($126) {
       $127 = HEAP32[$121>>2]|0;
       $128 = ((($127)) + 40|0);
       $129 = HEAP32[$128>>2]|0;
       (FUNCTION_TABLE_ii[$129 & 1023]($121)|0);
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      } else {
       $130 = ((($123)) + 1|0);
       HEAP32[$122>>2] = $130;
       $$0$in = $$0;$$pre$i2$i$i7 = $$pre$i2$i$i20;$79 = $91;$__r$0$in = $120;
       continue;
      }
     }
     $131 = ($$lcssa|0)==(0|0);
     do {
      if ($131) {
       $142 = 0;
      } else {
       $132 = ((($$lcssa)) + 12|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ((($$lcssa)) + 16|0);
       $135 = HEAP32[$134>>2]|0;
       $136 = ($133|0)==($135|0);
       if ($136) {
        $137 = HEAP32[$$lcssa>>2]|0;
        $138 = ((($137)) + 36|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (FUNCTION_TABLE_ii[$139 & 1023]($$lcssa)|0);
        $141 = ($140|0)==(-1);
        if ($141) {
         HEAP32[$__b>>2] = 0;
         $142 = 0;
         break;
        } else {
         $$pre$i$i$i16 = HEAP32[$__b>>2]|0;
         $142 = $$pre$i$i$i16;
         break;
        }
       } else {
        $142 = $$lcssa;
       }
      }
     } while(0);
     $143 = ($142|0)==(0|0);
     $144 = ($$pre$i2$i$i20$lcssa|0)==(0|0);
     do {
      if ($144) {
       label = 50;
      } else {
       $145 = ((($$pre$i2$i$i20$lcssa)) + 12|0);
       $146 = HEAP32[$145>>2]|0;
       $147 = ((($$pre$i2$i$i20$lcssa)) + 16|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($146|0)==($148|0);
       if ($149) {
        $150 = HEAP32[$$pre$i2$i$i20$lcssa>>2]|0;
        $151 = ((($150)) + 36|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = (FUNCTION_TABLE_ii[$152 & 1023]($$pre$i2$i$i20$lcssa)|0);
        $154 = ($153|0)==(-1);
        if ($154) {
         HEAP32[$__e>>2] = 0;
         label = 50;
         break;
        }
       }
       if ($143) {
        $$2 = $__r$0$lcssa;
        break L16;
       }
      }
     } while(0);
     if ((label|0) == 50) {
      if (!($143)) {
       $$2 = $__r$0$lcssa;
       break;
      }
     }
     $155 = HEAP32[$__err>>2]|0;
     $156 = $155 | 2;
     HEAP32[$__err>>2] = $156;
     $$2 = $__r$0$lcssa;
     break;
    }
   }
   $48 = HEAP32[$__err>>2]|0;
   $49 = $48 | 4;
   HEAP32[$__err>>2] = $49;
   $$2 = 0;
  }
 } while(0);
 return ($$2|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 __THREW__ = 0;
 $34 = (invoke_iii(608,($1|0),(22416|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $38 = ___cxa_find_matching_catch_2()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $37 = $__fmt << 24 >> 24;
 do {
  switch ($37|0) {
  case 65: case 97:  {
   $40 = ((($__tm)) + 24|0);
   $41 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $41;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$40,$__b,$$byval_copy,$__err,$34);
   label = 28;
   break;
  }
  case 104: case 66: case 98:  {
   $42 = ((($__tm)) + 16|0);
   $43 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $43;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$42,$__b,$$byval_copy1,$__err,$34);
   label = 28;
   break;
  }
  case 99:  {
   $44 = ((($this)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($44)|0);
   $49 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $49;
   $50 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $50;
   $51 = HEAP8[$48>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   $54 = ((($48)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($48)) + 1|0);
   $57 = $53 ? $56 : $55;
   $58 = ((($48)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = $51&255;
   $61 = $60 >>> 1;
   $62 = $53 ? $61 : $59;
   $63 = (($57) + ($62)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;
   $64 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$57,$63)|0);
   HEAP32[$__b>>2] = $64;
   label = 28;
   break;
  }
  case 101: case 100:  {
   $65 = ((($__tm)) + 12|0);
   $66 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $66;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$65,$__b,$$byval_copy4,$__err,$34);
   label = 28;
   break;
  }
  case 68:  {
   $67 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $67;
   $68 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $68;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;
   $69 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,17670,(17678))|0);
   HEAP32[$__b>>2] = $69;
   label = 28;
   break;
  }
  case 70:  {
   $70 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $70;
   $71 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $71;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$10>>2]|0;
   $72 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,17678,(17686))|0);
   HEAP32[$__b>>2] = $72;
   label = 28;
   break;
  }
  case 72:  {
   $73 = ((($__tm)) + 8|0);
   $74 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $74;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$73,$__b,$$byval_copy9,$__err,$34);
   label = 28;
   break;
  }
  case 73:  {
   $75 = ((($__tm)) + 8|0);
   $76 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $76;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$75,$__b,$$byval_copy10,$__err,$34);
   label = 28;
   break;
  }
  case 106:  {
   $77 = ((($__tm)) + 28|0);
   $78 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $78;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$77,$__b,$$byval_copy11,$__err,$34);
   label = 28;
   break;
  }
  case 109:  {
   $79 = ((($__tm)) + 16|0);
   $80 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $80;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$79,$__b,$$byval_copy12,$__err,$34);
   label = 28;
   break;
  }
  case 77:  {
   $81 = ((($__tm)) + 4|0);
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $82;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$81,$__b,$$byval_copy13,$__err,$34);
   label = 28;
   break;
  }
  case 116: case 110:  {
   $83 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $83;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy14,$__err,$34);
   label = 28;
   break;
  }
  case 112:  {
   $84 = ((($__tm)) + 8|0);
   $85 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $85;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$84,$__b,$$byval_copy15,$__err,$34);
   label = 28;
   break;
  }
  case 114:  {
   $86 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $86;
   $87 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $87;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$19>>2]|0;
   $88 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,17686,(17697))|0);
   HEAP32[$__b>>2] = $88;
   label = 28;
   break;
  }
  case 82:  {
   $89 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $89;
   $90 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $90;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$21>>2]|0;
   $91 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,17697,(17702))|0);
   HEAP32[$__b>>2] = $91;
   label = 28;
   break;
  }
  case 83:  {
   $92 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $92;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__tm,$__b,$$byval_copy20,$__err,$34);
   label = 28;
   break;
  }
  case 84:  {
   $93 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $93;
   $94 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $94;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$24>>2]|0;
   $95 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,17702,(17710))|0);
   HEAP32[$__b>>2] = $95;
   label = 28;
   break;
  }
  case 119:  {
   $96 = ((($__tm)) + 24|0);
   $97 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $97;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$96,$__b,$$byval_copy23,$__err,$34);
   label = 28;
   break;
  }
  case 120:  {
   $98 = HEAP32[$this>>2]|0;
   $99 = ((($98)) + 20|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $101;
   $102 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $102;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$27>>2]|0;
   $103 = (FUNCTION_TABLE_iiiiiii[$100 & 1023]($this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $103;
   break;
  }
  case 88:  {
   $104 = ((($this)) + 8|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($105)) + 24|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (FUNCTION_TABLE_ii[$107 & 1023]($104)|0);
   $109 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $109;
   $110 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $110;
   $111 = HEAP8[$108>>0]|0;
   $112 = $111 & 1;
   $113 = ($112<<24>>24)==(0);
   $114 = ((($108)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ((($108)) + 1|0);
   $117 = $113 ? $116 : $115;
   $118 = ((($108)) + 4|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = $111&255;
   $121 = $120 >>> 1;
   $122 = $113 ? $121 : $119;
   $123 = (($117) + ($122)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$29>>2]|0;
   $124 = (__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$117,$123)|0);
   HEAP32[$__b>>2] = $124;
   label = 28;
   break;
  }
  case 121:  {
   $125 = ((($__tm)) + 20|0);
   $126 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $126;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this,$125,$__b,$$byval_copy28,$__err,$34);
   label = 28;
   break;
  }
  case 89:  {
   $127 = ((($__tm)) + 20|0);
   $128 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $128;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$127,$__b,$$byval_copy29,$__err,$34);
   label = 28;
   break;
  }
  case 37:  {
   $129 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $129;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 28;
   break;
  }
  default: {
   $130 = HEAP32[$__err>>2]|0;
   $131 = $130 | 4;
   HEAP32[$__err>>2] = $131;
   label = 28;
  }
  }
 } while(0);
 if ((label|0) == 28) {
  $132 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $132;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $isascii1$i = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__ct)) + 8|0);
 L1: while(1) {
  $1 = HEAP32[$__b>>2]|0;
  $2 = ($1|0)==(0|0);
  do {
   if ($2) {
    $13 = 0;
   } else {
    $3 = ((($1)) + 12|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ((($1)) + 16|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($4|0)==($6|0);
    if ($7) {
     $8 = HEAP32[$1>>2]|0;
     $9 = ((($8)) + 36|0);
     $10 = HEAP32[$9>>2]|0;
     $11 = (FUNCTION_TABLE_ii[$10 & 1023]($1)|0);
     $12 = ($11|0)==(-1);
     if ($12) {
      HEAP32[$__b>>2] = 0;
      $13 = 0;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $13 = $$pre$i$i$i;
      break;
     }
    } else {
     $13 = $1;
    }
   }
  } while(0);
  $14 = ($13|0)==(0|0);
  $15 = HEAP32[$__e>>2]|0;
  $16 = ($15|0)==(0|0);
  do {
   if ($16) {
    label = 12;
   } else {
    $17 = ((($15)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($15)) + 16|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($18|0)==($20|0);
    if (!($21)) {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
    $22 = HEAP32[$15>>2]|0;
    $23 = ((($22)) + 36|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (FUNCTION_TABLE_ii[$24 & 1023]($15)|0);
    $26 = ($25|0)==(-1);
    if ($26) {
     HEAP32[$__e>>2] = 0;
     label = 12;
     break;
    } else {
     if ($14) {
      $83 = $15;
      break;
     } else {
      $$pre$i2$i$i6 = $15;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($14) {
    $$pre$i2$i$i6 = 0;
    break;
   } else {
    $83 = 0;
   }
  }
  $27 = HEAP32[$__b>>2]|0;
  $28 = ((($27)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $33 = HEAP32[$27>>2]|0;
   $34 = ((($33)) + 36|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (FUNCTION_TABLE_ii[$35 & 1023]($27)|0);
   $$0$i$i = $36;
  } else {
   $37 = HEAP8[$29>>0]|0;
   $38 = $37&255;
   $$0$i$i = $38;
  }
  $39 = $$0$i$i&255;
  $isascii1$i = ($39<<24>>24)>(-1);
  if (!($isascii1$i)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = HEAP32[$0>>2]|0;
  $42 = (($41) + ($40<<1)|0);
  $43 = HEAP16[$42>>1]|0;
  $44 = $43 & 8192;
  $45 = ($44<<16>>16)==(0);
  if ($45) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b>>2]|0;
  $47 = ((($46)) + 12|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($46)) + 16|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($48|0)==($50|0);
  if ($51) {
   $52 = HEAP32[$46>>2]|0;
   $53 = ((($52)) + 40|0);
   $54 = HEAP32[$53>>2]|0;
   (FUNCTION_TABLE_ii[$54 & 1023]($46)|0);
   continue;
  } else {
   $55 = ((($48)) + 1|0);
   HEAP32[$47>>2] = $55;
   continue;
  }
 }
 $56 = HEAP32[$__b>>2]|0;
 $57 = ($56|0)==(0|0);
 do {
  if ($57) {
   $68 = 0;
  } else {
   $58 = ((($56)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($56)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$56>>2]|0;
    $64 = ((($63)) + 36|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_ii[$65 & 1023]($56)|0);
    $67 = ($66|0)==(-1);
    if ($67) {
     HEAP32[$__b>>2] = 0;
     $68 = 0;
     break;
    } else {
     $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
     $68 = $$pre$i$i$i2;
     break;
    }
   } else {
    $68 = $56;
   }
  }
 } while(0);
 $69 = ($68|0)==(0|0);
 $70 = ($$pre$i2$i$i6|0)==(0|0);
 do {
  if ($70) {
   label = 32;
  } else {
   $71 = ((($$pre$i2$i$i6)) + 12|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($$pre$i2$i$i6)) + 16|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ($72|0)==($74|0);
   if ($75) {
    $76 = HEAP32[$$pre$i2$i$i6>>2]|0;
    $77 = ((($76)) + 36|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_ii[$78 & 1023]($$pre$i2$i$i6)|0);
    $80 = ($79|0)==(-1);
    if ($80) {
     HEAP32[$__e>>2] = 0;
     label = 32;
     break;
    }
   }
   if (!($69)) {
    label = 33;
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($69) {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $81 = HEAP32[$__err>>2]|0;
  $82 = $81 | 2;
  HEAP32[$__err>>2] = $82;
 }
 return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $$pre$i2$i$i611 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $12 = 0;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $12 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $12 = $$pre$i$i$i;
     break;
    }
   } else {
    $12 = $0;
   }
  }
 } while(0);
 $13 = ($12|0)==(0|0);
 $14 = HEAP32[$__e>>2]|0;
 $15 = ($14|0)==(0|0);
 do {
  if ($15) {
   label = 11;
  } else {
   $16 = ((($14)) + 12|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($14)) + 16|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$14>>2]|0;
    $22 = ((($21)) + 36|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_ii[$23 & 1023]($14)|0);
    $25 = ($24|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 11;
     break;
    }
   }
   if ($13) {
    $$pre$i2$i$i611 = $14;
    label = 13;
   } else {
    label = 12;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  if ($13) {
   label = 12;
  } else {
   $$pre$i2$i$i611 = 0;
   label = 13;
  }
 }
 L16: do {
  if ((label|0) == 12) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 13) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP8[$30>>0]|0;
    $39 = $38&255;
    $$0$i$i = $39;
   }
   $40 = $$0$i$i&255;
   $41 = HEAP32[$__ct>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($__ct,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if (!($45)) {
    $46 = HEAP32[$__err>>2]|0;
    $47 = $46 | 4;
    HEAP32[$__err>>2] = $47;
    break;
   }
   $48 = HEAP32[$__b>>2]|0;
   $49 = ((($48)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($48)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $55 = HEAP32[$48>>2]|0;
    $56 = ((($55)) + 40|0);
    $57 = HEAP32[$56>>2]|0;
    (FUNCTION_TABLE_ii[$57 & 1023]($48)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $58 = ($$pre|0)==(0|0);
    if ($58) {
     $70 = 0;
    } else {
     $60 = $$pre;
     label = 21;
    }
   } else {
    $54 = ((($50)) + 1|0);
    HEAP32[$49>>2] = $54;
    $60 = $48;
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     $59 = ((($60)) + 12|0);
     $61 = HEAP32[$59>>2]|0;
     $62 = ((($60)) + 16|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($61|0)==($63|0);
     if ($64) {
      $65 = HEAP32[$60>>2]|0;
      $66 = ((($65)) + 36|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (FUNCTION_TABLE_ii[$67 & 1023]($60)|0);
      $69 = ($68|0)==(-1);
      if ($69) {
       HEAP32[$__b>>2] = 0;
       $70 = 0;
       break;
      } else {
       $$pre$i$i$i2 = HEAP32[$__b>>2]|0;
       $70 = $$pre$i$i$i2;
       break;
      }
     } else {
      $70 = $60;
     }
    }
   } while(0);
   $71 = ($70|0)==(0|0);
   $72 = ($$pre$i2$i$i611|0)==(0|0);
   do {
    if ($72) {
     label = 30;
    } else {
     $73 = ((($$pre$i2$i$i611)) + 12|0);
     $74 = HEAP32[$73>>2]|0;
     $75 = ((($$pre$i2$i$i611)) + 16|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = ($74|0)==($76|0);
     if ($77) {
      $78 = HEAP32[$$pre$i2$i$i611>>2]|0;
      $79 = ((($78)) + 36|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_ii[$80 & 1023]($$pre$i2$i$i611)|0);
      $82 = ($81|0)==(-1);
      if ($82) {
       HEAP32[$__e>>2] = 0;
       label = 30;
       break;
      }
     }
     if ($71) {
      break L16;
     }
    }
   } while(0);
   if ((label|0) == 30) {
    if (!($71)) {
     break;
    }
   }
   $83 = HEAP32[$__err>>2]|0;
   $84 = $83 | 2;
   HEAP32[$__err>>2] = $84;
  }
 } while(0);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20128]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20128|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[20136]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((20136|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 22488;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = ((($9)) + 12|0);
       $12 = ($11|0)==((22656)|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      (___cxa_atexit((717|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20136|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(718,(22488|0),(17710|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(718,((22500)|0),(17717|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(718,((22512)|0),(17724|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(718,((22524)|0),(17732|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(718,((22536)|0),(17742|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(718,((22548)|0),(17751|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(718,((22560)|0),(17758|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(718,((22572)|0),(17767|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(718,((22584)|0),(17771|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(718,((22596)|0),(17775|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(718,((22608)|0),(17779|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(718,((22620)|0),(17783|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(718,((22632)|0),(17787|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(718,((22644)|0),(17791|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[5664] = 22488;
                  ___cxa_guard_release((20128|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch_2()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((20128|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[5664]|0;
 return ($41|0);
}
function ___cxx_global_array_dtor_492($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22644));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22632));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22620));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22608));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22596));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22584));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22572));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22560));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22548));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22536));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22524));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22512));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22500));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(22488);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20144]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20144|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[20152]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((20152|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 22660;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = ((($9)) + 12|0);
       $12 = ($11|0)==((22948)|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      (___cxa_atexit((719|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20152|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(718,(22660|0),(17795|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(718,((22672)|0),(17803|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(718,((22684)|0),(17812|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(718,((22696)|0),(17818|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(718,((22708)|0),(17824|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(718,((22720)|0),(17828|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(718,((22732)|0),(17833|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(718,((22744)|0),(17838|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(718,((22756)|0),(17845|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(718,((22768)|0),(17855|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(718,((22780)|0),(17863|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(718,((22792)|0),(17872|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(718,((22804)|0),(17881|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(718,((22816)|0),(17885|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(718,((22828)|0),(17889|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(718,((22840)|0),(17893|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22852)|0),(17824|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22864)|0),(17897|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22876)|0),(17901|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22888)|0),(17905|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22900)|0),(17909|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22912)|0),(17913|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22924)|0),(17917|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(718,((22936)|0),(17921|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[5737] = 22660;
                    ___cxa_guard_release((20144|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch_2()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((20144|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[5737]|0;
 return ($61|0);
}
function ___cxx_global_array_dtor_69($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22936));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22924));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22912));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22900));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22888));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22876));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22864));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22852));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22840));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22828));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22816));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22804));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22792));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22780));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22768));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22756));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22744));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22732));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22720));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22708));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22696));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22684));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22672));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(22660);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20160]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20160|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[20168]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((20168|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 22952;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = ((($9)) + 12|0);
       $12 = ($11|0)==((23240)|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      (___cxa_atexit((720|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20168|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(718,(22952|0),(17925|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(718,((22964)|0),(17928|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[5810] = 22952;
      ___cxa_guard_release((20160|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch_2()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((20160|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[5810]|0;
 return ($17|0);
}
function ___cxx_global_array_dtor_117($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23228));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23216));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23204));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23192));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23180));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23168));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23156));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23144));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23132));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23120));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23108));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23096));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23084));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23072));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23060));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23048));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23036));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23024));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23012));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((23000));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22988));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22976));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev((22964));
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(22952);
 return;
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20176]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20176|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(551,(23244|0),(17931|0),20);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch_2()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((20176|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((721|0),(23244|0),(___dso_handle|0))|0);
     ___cxa_guard_release((20176|0));
     break;
    }
   }
  }
 } while(0);
 return (23244|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20184]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20184|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(551,(23256|0),(17952|0),11);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch_2()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((20184|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((721|0),(23256|0),(___dso_handle|0))|0);
     ___cxa_guard_release((20184|0));
     break;
    }
   }
  }
 } while(0);
 return (23256|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20192]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20192|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(551,(23268|0),(17964|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch_2()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((20192|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((721|0),(23268|0),(___dso_handle|0))|0);
     ___cxa_guard_release((20192|0));
     break;
    }
   }
  }
 } while(0);
 return (23268|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20200]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20200|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    invoke_viii(551,(23280|0),(17973|0),8);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $6 = ___cxa_find_matching_catch_2()|0;
     $7 = tempRet0;
     ___cxa_guard_abort((20200|0));
     ___resumeException($6|0);
     // unreachable;
    } else {
     (___cxa_atexit((721|0),(23280|0),(___dso_handle|0))|0);
     ___cxa_guard_release((20200|0));
     break;
    }
   }
  }
 } while(0);
 return (23280|0);
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $3;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $4 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,8260,(8292))|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$__b,$__e,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i21 = 0, $$0$i$i$i$i6 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i12 = 0, $$0$i$i1$i$i27 = 0, $$0$i$i18 = 0, $$0$ph = 0, $$0$ph$be = 0, $$0$pn = 0, $$3 = 0, $$3$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa114 = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa118$lcssa = 0, $$lcssa118$lcssa121 = 0;
 var $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa123 = 0, $$lcssa125 = 0, $$lcssa128 = 0, $$lcssa129 = 0, $$ph = 0, $$pre = 0, $$pre$i$i$i23 = 0, $$pre$i$i$i8 = 0, $$pre$i3$i$i14 = 0, $$pre$i3$i$i1445 = 0, $$pre$i3$i$i1446 = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, $or$cond = 0, $phitmp$i4$i$i15 = 0, $tmp$i$i17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $3;
 __THREW__ = 0;
 $4 = (invoke_iii(608,($0|0),(22448|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $38 = ___cxa_find_matching_catch_2()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($3)|0);
 HEAP32[$__err>>2] = 0;
 $$0$ph = $__fmtb;$$pre = 0;
 L4: while(1) {
  $7 = ($$0$ph|0)!=($__fmte|0);
  $8 = $$pre;
  while(1) {
   $9 = ($8|0)==(0);
   $or$cond = $7 & $9;
   $10 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    $$pre$i$i$i23 = $10;
    break L4;
   }
   $11 = ($10|0)==(0|0);
   $12 = $10;
   if ($11) {
    $126 = 0;$182 = $12;$183 = 1;
   } else {
    $13 = ((($10)) + 12|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ((($10)) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14|0)==($16|0);
    if ($17) {
     $18 = HEAP32[$10>>2]|0;
     $19 = ((($18)) + 36|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = (FUNCTION_TABLE_ii[$20 & 1023]($10)|0);
     $$0$i$i$i$i = $21;
    } else {
     $22 = HEAP32[$14>>2]|0;
     $$0$i$i$i$i = $22;
    }
    $23 = ($$0$i$i$i$i|0)==(-1);
    if ($23) {
     HEAP32[$__b>>2] = 0;
     $126 = 0;$182 = 0;$183 = 1;
    } else {
     $126 = $10;$182 = $12;$183 = 0;
    }
   }
   $24 = HEAP32[$__e>>2]|0;
   $25 = ($24|0)==(0|0);
   $26 = $24;
   do {
    if ($25) {
     $$ph = $26;
     label = 17;
    } else {
     $27 = ((($24)) + 12|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ((($24)) + 16|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($28|0)==($30|0);
     if ($31) {
      $32 = HEAP32[$24>>2]|0;
      $33 = ((($32)) + 36|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (FUNCTION_TABLE_ii[$34 & 1023]($24)|0);
      $$0$i$i1$i$i = $35;
     } else {
      $36 = HEAP32[$28>>2]|0;
      $$0$i$i1$i$i = $36;
     }
     $37 = ($$0$i$i1$i$i|0)==(-1);
     if ($37) {
      HEAP32[$__e>>2] = 0;
      $$ph = 0;
      label = 17;
      break;
     } else {
      if ($183) {
       $184 = $24;$185 = $26;
       break;
      } else {
       $$lcssa117 = $126;
       label = 19;
       break L4;
      }
     }
    }
   } while(0);
   if ((label|0) == 17) {
    label = 0;
    if ($183) {
     $$lcssa117 = $126;
     label = 19;
     break L4;
    } else {
     $184 = 0;$185 = $$ph;
    }
   }
   $40 = HEAP32[$$0$ph>>2]|0;
   $41 = HEAP32[$4>>2]|0;
   $42 = ((($41)) + 52|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($4,$40,0)|0);
   $45 = ($44<<24>>24)==(37);
   if ($45) {
    $$lcssa114 = $182;$$lcssa118 = $126;$$lcssa125 = $185;
    label = 22;
    break;
   }
   $66 = HEAP32[$$0$ph>>2]|0;
   $67 = HEAP32[$4>>2]|0;
   $68 = ((($67)) + 12|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = (FUNCTION_TABLE_iiii[$69 & 1023]($4,8192,$66)|0);
   if ($70) {
    $$lcssa119 = $126;$$lcssa123 = $184;
    label = 30;
    break;
   }
   $125 = ((($126)) + 12|0);
   $127 = HEAP32[$125>>2]|0;
   $128 = ((($126)) + 16|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = ($127|0)==($129|0);
   if ($130) {
    $131 = HEAP32[$126>>2]|0;
    $132 = ((($131)) + 36|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = (FUNCTION_TABLE_ii[$133 & 1023]($126)|0);
    $$0$i$i18 = $134;
   } else {
    $135 = HEAP32[$127>>2]|0;
    $$0$i$i18 = $135;
   }
   $136 = HEAP32[$4>>2]|0;
   $137 = ((($136)) + 28|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = (FUNCTION_TABLE_iii[$138 & 1023]($4,$$0$i$i18)|0);
   $140 = HEAP32[$$0$ph>>2]|0;
   $141 = HEAP32[$4>>2]|0;
   $142 = ((($141)) + 28|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = (FUNCTION_TABLE_iii[$143 & 1023]($4,$140)|0);
   $145 = ($139|0)==($144|0);
   if ($145) {
    $$lcssa120 = $126;$$lcssa128 = $125;$$lcssa129 = $128;
    label = 59;
    break;
   }
   HEAP32[$__err>>2] = 4;
   $8 = 4;
  }
  L36: do {
   if ((label|0) == 22) {
    label = 0;
    $46 = ((($$0$ph)) + 4|0);
    $47 = ($46|0)==($__fmte|0);
    if ($47) {
     $$lcssa118$lcssa = $$lcssa118;
     label = 23;
     break L4;
    }
    $48 = HEAP32[$46>>2]|0;
    $49 = HEAP32[$4>>2]|0;
    $50 = ((($49)) + 52|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$48,0)|0);
    switch ($52<<24>>24) {
    case 48: case 69:  {
     $53 = ((($$0$ph)) + 8|0);
     $54 = ($53|0)==($__fmte|0);
     if ($54) {
      $$lcssa118$lcssa121 = $$lcssa118;
      label = 28;
      break L4;
     }
     $55 = HEAP32[$53>>2]|0;
     $56 = HEAP32[$4>>2]|0;
     $57 = ((($56)) + 52|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($4,$55,0)|0);
     $65 = $46;$__cmd$0 = $59;$__opt$0 = $52;
     break;
    }
    default: {
     $65 = $$0$ph;$__cmd$0 = $52;$__opt$0 = 0;
    }
    }
    $60 = HEAP32[$this>>2]|0;
    $61 = ((($60)) + 36|0);
    $62 = HEAP32[$61>>2]|0;
    HEAP32[$1>>2] = $$lcssa114;
    HEAP32[$2>>2] = $$lcssa125;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;
    $63 = (FUNCTION_TABLE_iiiiiiiii[$62 & 511]($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0)|0);
    HEAP32[$__b>>2] = $63;
    $64 = ((($65)) + 8|0);
    $$0$ph$be = $64;
   }
   else if ((label|0) == 30) {
    label = 0;
    $$0$pn = $$0$ph;
    while(1) {
     $$3 = ((($$0$pn)) + 4|0);
     $71 = ($$3|0)==($__fmte|0);
     if ($71) {
      $$3$lcssa = $__fmte;
      break;
     }
     $72 = HEAP32[$$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ((($73)) + 12|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iiii[$75 & 1023]($4,8192,$72)|0);
     if ($76) {
      $$0$pn = $$3;
     } else {
      $$3$lcssa = $$3;
      break;
     }
    }
    $$pre$i$i$i8 = $$lcssa119;$$pre$i3$i$i14 = $$lcssa123;$89 = $$lcssa123;
    while(1) {
     $77 = ($$pre$i$i$i8|0)==(0|0);
     if ($77) {
      $102 = 1;$104 = 0;
     } else {
      $78 = ((($$pre$i$i$i8)) + 12|0);
      $79 = HEAP32[$78>>2]|0;
      $80 = ((($$pre$i$i$i8)) + 16|0);
      $81 = HEAP32[$80>>2]|0;
      $82 = ($79|0)==($81|0);
      if ($82) {
       $83 = HEAP32[$$pre$i$i$i8>>2]|0;
       $84 = ((($83)) + 36|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = (FUNCTION_TABLE_ii[$85 & 1023]($$pre$i$i$i8)|0);
       $$0$i$i$i$i6 = $86;
      } else {
       $87 = HEAP32[$79>>2]|0;
       $$0$i$i$i$i6 = $87;
      }
      $88 = ($$0$i$i$i$i6|0)==(-1);
      if ($88) {
       HEAP32[$__b>>2] = 0;
       $102 = 1;$104 = 0;
      } else {
       $102 = 0;$104 = $$pre$i$i$i8;
      }
     }
     $90 = ($89|0)==(0|0);
     do {
      if ($90) {
       $$pre$i3$i$i1446 = $$pre$i3$i$i14;
       label = 46;
      } else {
       $91 = ((($89)) + 12|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = ((($89)) + 16|0);
       $94 = HEAP32[$93>>2]|0;
       $95 = ($92|0)==($94|0);
       if ($95) {
        $96 = HEAP32[$89>>2]|0;
        $97 = ((($96)) + 36|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = (FUNCTION_TABLE_ii[$98 & 1023]($89)|0);
        $$0$i$i1$i$i12 = $99;
       } else {
        $100 = HEAP32[$92>>2]|0;
        $$0$i$i1$i$i12 = $100;
       }
       $101 = ($$0$i$i1$i$i12|0)==(-1);
       if ($101) {
        HEAP32[$__e>>2] = 0;
        $$pre$i3$i$i1446 = 0;
        label = 46;
        break;
       } else {
        $phitmp$i4$i$i15 = ($$pre$i3$i$i14|0)==(0|0);
        $tmp$i$i17 = $102 ^ $phitmp$i4$i$i15;
        if ($tmp$i$i17) {
         $$pre$i3$i$i1445 = $$pre$i3$i$i14;$186 = $$pre$i3$i$i14;
         break;
        } else {
         $$0$ph$be = $$3$lcssa;
         break L36;
        }
       }
      }
     } while(0);
     if ((label|0) == 46) {
      label = 0;
      if ($102) {
       $$0$ph$be = $$3$lcssa;
       break L36;
      } else {
       $$pre$i3$i$i1445 = $$pre$i3$i$i1446;$186 = 0;
      }
     }
     $103 = ((($104)) + 12|0);
     $105 = HEAP32[$103>>2]|0;
     $106 = ((($104)) + 16|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($105|0)==($107|0);
     if ($108) {
      $109 = HEAP32[$104>>2]|0;
      $110 = ((($109)) + 36|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = (FUNCTION_TABLE_ii[$111 & 1023]($104)|0);
      $$0$i$i = $112;
     } else {
      $113 = HEAP32[$105>>2]|0;
      $$0$i$i = $113;
     }
     $114 = HEAP32[$4>>2]|0;
     $115 = ((($114)) + 12|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = (FUNCTION_TABLE_iiii[$116 & 1023]($4,8192,$$0$i$i)|0);
     if (!($117)) {
      $$0$ph$be = $$3$lcssa;
      break L36;
     }
     $118 = HEAP32[$103>>2]|0;
     $119 = HEAP32[$106>>2]|0;
     $120 = ($118|0)==($119|0);
     if ($120) {
      $121 = HEAP32[$104>>2]|0;
      $122 = ((($121)) + 40|0);
      $123 = HEAP32[$122>>2]|0;
      (FUNCTION_TABLE_ii[$123 & 1023]($104)|0);
      $$pre$i$i$i8 = $104;$$pre$i3$i$i14 = $$pre$i3$i$i1445;$89 = $186;
      continue;
     } else {
      $124 = ((($118)) + 4|0);
      HEAP32[$103>>2] = $124;
      $$pre$i$i$i8 = $104;$$pre$i3$i$i14 = $$pre$i3$i$i1445;$89 = $186;
      continue;
     }
    }
   }
   else if ((label|0) == 59) {
    label = 0;
    $146 = HEAP32[$$lcssa128>>2]|0;
    $147 = HEAP32[$$lcssa129>>2]|0;
    $148 = ($146|0)==($147|0);
    if ($148) {
     $149 = HEAP32[$$lcssa120>>2]|0;
     $150 = ((($149)) + 40|0);
     $151 = HEAP32[$150>>2]|0;
     (FUNCTION_TABLE_ii[$151 & 1023]($$lcssa120)|0);
    } else {
     $152 = ((($146)) + 4|0);
     HEAP32[$$lcssa128>>2] = $152;
    }
    $153 = ((($$0$ph)) + 4|0);
    $$0$ph$be = $153;
   }
  } while(0);
  $$pre$pre = HEAP32[$__err>>2]|0;
  $$0$ph = $$0$ph$be;$$pre = $$pre$pre;
 }
 if ((label|0) == 19) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i23 = $$lcssa117;
 }
 else if ((label|0) == 23) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i23 = $$lcssa118$lcssa;
 }
 else if ((label|0) == 28) {
  HEAP32[$__err>>2] = 4;
  $$pre$i$i$i23 = $$lcssa118$lcssa121;
 }
 $154 = ($$pre$i$i$i23|0)==(0|0);
 if ($154) {
  $181 = 0;$187 = 1;
 } else {
  $155 = ((($$pre$i$i$i23)) + 12|0);
  $156 = HEAP32[$155>>2]|0;
  $157 = ((($$pre$i$i$i23)) + 16|0);
  $158 = HEAP32[$157>>2]|0;
  $159 = ($156|0)==($158|0);
  if ($159) {
   $160 = HEAP32[$$pre$i$i$i23>>2]|0;
   $161 = ((($160)) + 36|0);
   $162 = HEAP32[$161>>2]|0;
   $163 = (FUNCTION_TABLE_ii[$162 & 1023]($$pre$i$i$i23)|0);
   $$0$i$i$i$i21 = $163;
  } else {
   $164 = HEAP32[$156>>2]|0;
   $$0$i$i$i$i21 = $164;
  }
  $165 = ($$0$i$i$i$i21|0)==(-1);
  if ($165) {
   HEAP32[$__b>>2] = 0;
   $181 = 0;$187 = 1;
  } else {
   $181 = $$pre$i$i$i23;$187 = 0;
  }
 }
 $166 = HEAP32[$__e>>2]|0;
 $167 = ($166|0)==(0|0);
 do {
  if ($167) {
   label = 77;
  } else {
   $168 = ((($166)) + 12|0);
   $169 = HEAP32[$168>>2]|0;
   $170 = ((($166)) + 16|0);
   $171 = HEAP32[$170>>2]|0;
   $172 = ($169|0)==($171|0);
   if ($172) {
    $173 = HEAP32[$166>>2]|0;
    $174 = ((($173)) + 36|0);
    $175 = HEAP32[$174>>2]|0;
    $176 = (FUNCTION_TABLE_ii[$175 & 1023]($166)|0);
    $$0$i$i1$i$i27 = $176;
   } else {
    $177 = HEAP32[$169>>2]|0;
    $$0$i$i1$i$i27 = $177;
   }
   $178 = ($$0$i$i1$i$i27|0)==(-1);
   if ($178) {
    HEAP32[$__e>>2] = 0;
    label = 77;
    break;
   } else {
    if ($187) {
     break;
    } else {
     label = 79;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 77) {
  if ($187) {
   label = 79;
  }
 }
 if ((label|0) == 79) {
  $179 = HEAP32[$__err>>2]|0;
  $180 = $179 | 2;
  HEAP32[$__err>>2] = $180;
 }
 STACKTOP = sp;return ($181|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = ((($this)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (FUNCTION_TABLE_ii[$5 & 1023]($2)|0);
 $7 = HEAP32[$__b>>2]|0;
 HEAP32[$0>>2] = $7;
 $8 = HEAP32[$__e>>2]|0;
 HEAP32[$1>>2] = $8;
 $9 = HEAP8[$6>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 $12 = ((($6)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 4|0);
 $15 = $11 ? $14 : $13;
 $16 = HEAP32[$14>>2]|0;
 $17 = $9&255;
 $18 = $17 >>> 1;
 $19 = $11 ? $18 : $16;
 $20 = (($15) + ($19<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $21 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$15,$20)|0);
 STACKTOP = sp;return ($21|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(608,($0|0),(22448|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 24|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($1)|0);
 $5 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($4)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $7 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$4,$6,$__ct,$__err,0)|0);
 $8 = $7;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $11 = ($10|0)<(168);
 if ($11) {
  $12 = (($10|0) / 12)&-1;
  $13 = (($12|0) % 7)&-1;
  HEAP32[$__w>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(608,($0|0),(22448|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 16|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $6;
 $7 = ((($5)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $8 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$7,$__ct,$__err,0)|0);
 $9 = $8;
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = ($11|0)<(288);
 if ($12) {
  $13 = (($11|0) / 12)&-1;
  $14 = (($13|0) % 12)&-1;
  HEAP32[$__m>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this,$__b,$__e,$__iob,$__err,$__tm) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$0>>2] = $2;
 __THREW__ = 0;
 $3 = (invoke_iii(608,($0|0),(22448|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $9 = ___cxa_find_matching_catch_2()|0;
  $10 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  ___resumeException($9|0);
  // unreachable;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($2)|0);
  $6 = ((($__tm)) + 20|0);
  $7 = HEAP32[$__e>>2]|0;
  HEAP32[$1>>2] = $7;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$6,$__b,$$byval_copy,$__err,$3);
  $8 = HEAP32[$__b>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = ($2|0)<(69);
  if ($6) {
   $7 = (($2) + 2000)|0;
   $__t$0 = $7;
  } else {
   $$off = (($2) + -69)|0;
   $8 = ($$off>>>0)<(31);
   $9 = (($2) + 1900)|0;
   $$ = $8 ? $9 : $2;
   $__t$0 = $$;
  }
  $10 = (($__t$0) + -1900)|0;
  HEAP32[$__y>>2] = $10;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$2 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $$pre$i$i$i19 = 0, $$pre$i$i$i4 = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i20 = 0, $phitmp$i$i$i5 = 0, $phitmp$i4$i$i11 = 0, $tmp$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $148 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $148 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $148 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($148) {
     $149 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($148) {
   label = 16;
  } else {
   $149 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
   $$2 = 0;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 12|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,2048,$$0$i$i)|0);
   if (!($42)) {
    $43 = HEAP32[$__err>>2]|0;
    $44 = $43 | 4;
    HEAP32[$__err>>2] = $44;
    $$2 = 0;
    break;
   }
   $45 = HEAP32[$__ct>>2]|0;
   $46 = ((($45)) + 52|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_iiii[$47 & 1023]($__ct,$$0$i$i,0)|0);
   $49 = $48 << 24 >> 24;
   $50 = HEAP32[$__b>>2]|0;
   $51 = ((($50)) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($50)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = ((($56)) + 40|0);
    $58 = HEAP32[$57>>2]|0;
    (FUNCTION_TABLE_ii[$58 & 1023]($50)|0);
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   } else {
    $59 = ((($52)) + 4|0);
    HEAP32[$51>>2] = $59;
    $$0$in = $__n;$$pre$i3$i$i10 = $149;$73 = $149;$__r$0$in = $49;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $60 = HEAP32[$__b>>2]|0;
    $61 = ($60|0)==(0|0);
    do {
     if ($61) {
      $87 = 1;
     } else {
      $62 = ((($60)) + 12|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ((($60)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($63|0)==($65|0);
      if ($66) {
       $67 = HEAP32[$60>>2]|0;
       $68 = ((($67)) + 36|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
       $$0$i$i$i$i2 = $70;
      } else {
       $71 = HEAP32[$63>>2]|0;
       $$0$i$i$i$i2 = $71;
      }
      $72 = ($$0$i$i$i$i2|0)==(-1);
      if ($72) {
       HEAP32[$__b>>2] = 0;
       $87 = 1;
       break;
      } else {
       $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i5 = ($$pre$i$i$i4|0)==(0|0);
       $87 = $phitmp$i$i$i5;
       break;
      }
     }
    } while(0);
    $74 = ($73|0)==(0|0);
    do {
     if ($74) {
      $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = 0;$86 = 1;
     } else {
      $75 = ((($73)) + 12|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ((($73)) + 16|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($76|0)==($78|0);
      if ($79) {
       $80 = HEAP32[$73>>2]|0;
       $81 = ((($80)) + 36|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
       $$0$i$i1$i$i8 = $83;
      } else {
       $84 = HEAP32[$76>>2]|0;
       $$0$i$i1$i$i8 = $84;
      }
      $85 = ($$0$i$i1$i$i8|0)==(-1);
      if ($85) {
       HEAP32[$__e>>2] = 0;
       $$pre$i3$i$i25 = 0;$150 = 0;$86 = 1;
       break;
      } else {
       $phitmp$i4$i$i11 = ($$pre$i3$i$i10|0)==(0|0);
       $$pre$i3$i$i25 = $$pre$i3$i$i10;$150 = $$pre$i3$i$i10;$86 = $phitmp$i4$i$i11;
       break;
      }
     }
    } while(0);
    $tmp$i$i13 = $87 ^ $86;
    $88 = ($$0$in|0)>(1);
    $89 = $88 & $tmp$i$i13;
    $90 = HEAP32[$__b>>2]|0;
    if (!($89)) {
     $$lcssa = $90;$$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;$__r$0$lcssa = $__r$0;
     break;
    }
    $91 = ((($90)) + 12|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($90)) + 16|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92|0)==($94|0);
    if ($95) {
     $96 = HEAP32[$90>>2]|0;
     $97 = ((($96)) + 36|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_ii[$98 & 1023]($90)|0);
     $$0$i$i14 = $99;
    } else {
     $100 = HEAP32[$92>>2]|0;
     $$0$i$i14 = $100;
    }
    $101 = HEAP32[$__ct>>2]|0;
    $102 = ((($101)) + 12|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = (FUNCTION_TABLE_iiii[$103 & 1023]($__ct,2048,$$0$i$i14)|0);
    if (!($104)) {
     $$2 = $__r$0;
     break L22;
    }
    $105 = ($__r$0*10)|0;
    $106 = HEAP32[$__ct>>2]|0;
    $107 = ((($106)) + 52|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = (FUNCTION_TABLE_iiii[$108 & 1023]($__ct,$$0$i$i14,0)|0);
    $110 = $109 << 24 >> 24;
    $111 = (($110) + ($105))|0;
    $112 = HEAP32[$__b>>2]|0;
    $113 = ((($112)) + 12|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($112)) + 16|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($114|0)==($116|0);
    if ($117) {
     $118 = HEAP32[$112>>2]|0;
     $119 = ((($118)) + 40|0);
     $120 = HEAP32[$119>>2]|0;
     (FUNCTION_TABLE_ii[$120 & 1023]($112)|0);
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    } else {
     $121 = ((($114)) + 4|0);
     HEAP32[$113>>2] = $121;
     $$0$in = $$0;$$pre$i3$i$i10 = $$pre$i3$i$i25;$73 = $150;$__r$0$in = $111;
     continue;
    }
   }
   $122 = ($$lcssa|0)==(0|0);
   do {
    if ($122) {
     $151 = 1;
    } else {
     $123 = ((($$lcssa)) + 12|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($$lcssa)) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($124|0)==($126|0);
     if ($127) {
      $128 = HEAP32[$$lcssa>>2]|0;
      $129 = ((($128)) + 36|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = (FUNCTION_TABLE_ii[$130 & 1023]($$lcssa)|0);
      $$0$i$i$i$i17 = $131;
     } else {
      $132 = HEAP32[$124>>2]|0;
      $$0$i$i$i$i17 = $132;
     }
     $133 = ($$0$i$i$i$i17|0)==(-1);
     if ($133) {
      HEAP32[$__b>>2] = 0;
      $151 = 1;
      break;
     } else {
      $$pre$i$i$i19 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i20 = ($$pre$i$i$i19|0)==(0|0);
      $151 = $phitmp$i$i$i20;
      break;
     }
    }
   } while(0);
   $134 = ($$pre$i3$i$i25$lcssa|0)==(0|0);
   do {
    if ($134) {
     label = 60;
    } else {
     $135 = ((($$pre$i3$i$i25$lcssa)) + 12|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($$pre$i3$i$i25$lcssa)) + 16|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($136|0)==($138|0);
     if ($139) {
      $140 = HEAP32[$$pre$i3$i$i25$lcssa>>2]|0;
      $141 = ((($140)) + 36|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = (FUNCTION_TABLE_ii[$142 & 1023]($$pre$i3$i$i25$lcssa)|0);
      $$0$i$i1$i$i23 = $143;
     } else {
      $144 = HEAP32[$136>>2]|0;
      $$0$i$i1$i$i23 = $144;
     }
     $145 = ($$0$i$i1$i$i23|0)==(-1);
     if ($145) {
      HEAP32[$__e>>2] = 0;
      label = 60;
      break;
     } else {
      if ($151) {
       $$2 = $__r$0$lcssa;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 60) {
    if (!($151)) {
     $$2 = $__r$0$lcssa;
     break;
    }
   }
   $146 = HEAP32[$__err>>2]|0;
   $147 = $146 | 2;
   HEAP32[$__err>>2] = $147;
   $$2 = $__r$0$lcssa;
  }
 } while(0);
 return ($$2|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $1 = sp + 124|0;
 $2 = sp + 120|0;
 $3 = sp + 116|0;
 $4 = sp + 112|0;
 $5 = sp + 108|0;
 $6 = sp + 104|0;
 $7 = sp + 100|0;
 $8 = sp + 96|0;
 $9 = sp + 92|0;
 $10 = sp + 88|0;
 $11 = sp + 84|0;
 $12 = sp + 80|0;
 $13 = sp + 76|0;
 $14 = sp + 72|0;
 $15 = sp + 68|0;
 $16 = sp + 64|0;
 $17 = sp + 60|0;
 $18 = sp + 56|0;
 $19 = sp + 52|0;
 $20 = sp + 48|0;
 $21 = sp + 44|0;
 $22 = sp + 40|0;
 $23 = sp + 36|0;
 $24 = sp + 32|0;
 $25 = sp + 28|0;
 $26 = sp + 24|0;
 $27 = sp + 20|0;
 $28 = sp + 16|0;
 $29 = sp + 12|0;
 $30 = sp + 8|0;
 $31 = sp + 4|0;
 $32 = sp;
 HEAP32[$__err>>2] = 0;
 $33 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$1>>2] = $33;
 __THREW__ = 0;
 $34 = (invoke_iii(608,($1|0),(22448|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $38 = ___cxa_find_matching_catch_2()|0;
  $39 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
  ___resumeException($38|0);
  // unreachable;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($33)|0);
 $37 = $__fmt << 24 >> 24;
 do {
  switch ($37|0) {
  case 65: case 97:  {
   $40 = ((($__tm)) + 24|0);
   $41 = HEAP32[$__e>>2]|0;
   HEAP32[$2>>2] = $41;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$40,$__b,$$byval_copy,$__err,$34);
   label = 28;
   break;
  }
  case 104: case 66: case 98:  {
   $42 = ((($__tm)) + 16|0);
   $43 = HEAP32[$__e>>2]|0;
   HEAP32[$3>>2] = $43;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$42,$__b,$$byval_copy1,$__err,$34);
   label = 28;
   break;
  }
  case 99:  {
   $44 = ((($this)) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (FUNCTION_TABLE_ii[$47 & 1023]($44)|0);
   $49 = HEAP32[$__b>>2]|0;
   HEAP32[$4>>2] = $49;
   $50 = HEAP32[$__e>>2]|0;
   HEAP32[$5>>2] = $50;
   $51 = HEAP8[$48>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   $54 = ((($48)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($48)) + 4|0);
   $57 = $53 ? $56 : $55;
   $58 = HEAP32[$56>>2]|0;
   $59 = $51&255;
   $60 = $59 >>> 1;
   $61 = $53 ? $60 : $58;
   $62 = (($57) + ($61<<2)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;
   $63 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy2,$$byval_copy3,$__iob,$__err,$__tm,$57,$62)|0);
   HEAP32[$__b>>2] = $63;
   label = 28;
   break;
  }
  case 101: case 100:  {
   $64 = ((($__tm)) + 12|0);
   $65 = HEAP32[$__e>>2]|0;
   HEAP32[$6>>2] = $65;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$64,$__b,$$byval_copy4,$__err,$34);
   label = 28;
   break;
  }
  case 68:  {
   $66 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $66;
   $67 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $67;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;
   $68 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy5,$$byval_copy6,$__iob,$__err,$__tm,8292,(8324))|0);
   HEAP32[$__b>>2] = $68;
   label = 28;
   break;
  }
  case 70:  {
   $69 = HEAP32[$__b>>2]|0;
   HEAP32[$9>>2] = $69;
   $70 = HEAP32[$__e>>2]|0;
   HEAP32[$10>>2] = $70;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$9>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$10>>2]|0;
   $71 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy7,$$byval_copy8,$__iob,$__err,$__tm,8324,(8356))|0);
   HEAP32[$__b>>2] = $71;
   label = 28;
   break;
  }
  case 72:  {
   $72 = ((($__tm)) + 8|0);
   $73 = HEAP32[$__e>>2]|0;
   HEAP32[$11>>2] = $73;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$11>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$72,$__b,$$byval_copy9,$__err,$34);
   label = 28;
   break;
  }
  case 73:  {
   $74 = ((($__tm)) + 8|0);
   $75 = HEAP32[$__e>>2]|0;
   HEAP32[$12>>2] = $75;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$12>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$74,$__b,$$byval_copy10,$__err,$34);
   label = 28;
   break;
  }
  case 106:  {
   $76 = ((($__tm)) + 28|0);
   $77 = HEAP32[$__e>>2]|0;
   HEAP32[$13>>2] = $77;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$76,$__b,$$byval_copy11,$__err,$34);
   label = 28;
   break;
  }
  case 109:  {
   $78 = ((($__tm)) + 16|0);
   $79 = HEAP32[$__e>>2]|0;
   HEAP32[$14>>2] = $79;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$14>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$78,$__b,$$byval_copy12,$__err,$34);
   label = 28;
   break;
  }
  case 77:  {
   $80 = ((($__tm)) + 4|0);
   $81 = HEAP32[$__e>>2]|0;
   HEAP32[$15>>2] = $81;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$15>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$80,$__b,$$byval_copy13,$__err,$34);
   label = 28;
   break;
  }
  case 116: case 110:  {
   $82 = HEAP32[$__e>>2]|0;
   HEAP32[$16>>2] = $82;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$16>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy14,$__err,$34);
   label = 28;
   break;
  }
  case 112:  {
   $83 = ((($__tm)) + 8|0);
   $84 = HEAP32[$__e>>2]|0;
   HEAP32[$17>>2] = $84;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$17>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$83,$__b,$$byval_copy15,$__err,$34);
   label = 28;
   break;
  }
  case 114:  {
   $85 = HEAP32[$__b>>2]|0;
   HEAP32[$18>>2] = $85;
   $86 = HEAP32[$__e>>2]|0;
   HEAP32[$19>>2] = $86;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$18>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$19>>2]|0;
   $87 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy16,$$byval_copy17,$__iob,$__err,$__tm,8356,(8400))|0);
   HEAP32[$__b>>2] = $87;
   label = 28;
   break;
  }
  case 82:  {
   $88 = HEAP32[$__b>>2]|0;
   HEAP32[$20>>2] = $88;
   $89 = HEAP32[$__e>>2]|0;
   HEAP32[$21>>2] = $89;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$20>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$21>>2]|0;
   $90 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy18,$$byval_copy19,$__iob,$__err,$__tm,8400,(8420))|0);
   HEAP32[$__b>>2] = $90;
   label = 28;
   break;
  }
  case 83:  {
   $91 = HEAP32[$__e>>2]|0;
   HEAP32[$22>>2] = $91;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__tm,$__b,$$byval_copy20,$__err,$34);
   label = 28;
   break;
  }
  case 84:  {
   $92 = HEAP32[$__b>>2]|0;
   HEAP32[$23>>2] = $92;
   $93 = HEAP32[$__e>>2]|0;
   HEAP32[$24>>2] = $93;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$23>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$24>>2]|0;
   $94 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy21,$$byval_copy22,$__iob,$__err,$__tm,8420,(8452))|0);
   HEAP32[$__b>>2] = $94;
   label = 28;
   break;
  }
  case 119:  {
   $95 = ((($__tm)) + 24|0);
   $96 = HEAP32[$__e>>2]|0;
   HEAP32[$25>>2] = $96;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$25>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$95,$__b,$$byval_copy23,$__err,$34);
   label = 28;
   break;
  }
  case 120:  {
   $97 = HEAP32[$this>>2]|0;
   $98 = ((($97)) + 20|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = HEAP32[$__b>>2]|0;
   HEAP32[$26>>2] = $100;
   $101 = HEAP32[$__e>>2]|0;
   HEAP32[$27>>2] = $101;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$26>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$27>>2]|0;
   $102 = (FUNCTION_TABLE_iiiiiii[$99 & 1023]($this,$$byval_copy24,$$byval_copy25,$__iob,$__err,$__tm)|0);
   $$sroa$07$0 = $102;
   break;
  }
  case 88:  {
   $103 = ((($this)) + 8|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($104)) + 24|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (FUNCTION_TABLE_ii[$106 & 1023]($103)|0);
   $108 = HEAP32[$__b>>2]|0;
   HEAP32[$28>>2] = $108;
   $109 = HEAP32[$__e>>2]|0;
   HEAP32[$29>>2] = $109;
   $110 = HEAP8[$107>>0]|0;
   $111 = $110 & 1;
   $112 = ($111<<24>>24)==(0);
   $113 = ((($107)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = ((($107)) + 4|0);
   $116 = $112 ? $115 : $114;
   $117 = HEAP32[$115>>2]|0;
   $118 = $110&255;
   $119 = $118 >>> 1;
   $120 = $112 ? $119 : $117;
   $121 = (($116) + ($120<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$28>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$29>>2]|0;
   $122 = (__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this,$$byval_copy26,$$byval_copy27,$__iob,$__err,$__tm,$116,$121)|0);
   HEAP32[$__b>>2] = $122;
   label = 28;
   break;
  }
  case 121:  {
   $123 = ((($__tm)) + 20|0);
   $124 = HEAP32[$__e>>2]|0;
   HEAP32[$30>>2] = $124;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$30>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this,$123,$__b,$$byval_copy28,$__err,$34);
   label = 28;
   break;
  }
  case 89:  {
   $125 = ((($__tm)) + 20|0);
   $126 = HEAP32[$__e>>2]|0;
   HEAP32[$31>>2] = $126;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$31>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$125,$__b,$$byval_copy29,$__err,$34);
   label = 28;
   break;
  }
  case 37:  {
   $127 = HEAP32[$__e>>2]|0;
   HEAP32[$32>>2] = $127;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$$byval_copy30,$__err,$34);
   label = 28;
   break;
  }
  default: {
   $128 = HEAP32[$__err>>2]|0;
   $129 = $128 | 4;
   HEAP32[$__err>>2] = $129;
   label = 28;
  }
  }
 } while(0);
 if ((label|0) == 28) {
  $130 = HEAP32[$__b>>2]|0;
  $$sroa$07$0 = $130;
 }
 STACKTOP = sp;return ($$sroa$07$0|0);
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(31);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__d>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(24);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__h>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(12);
 $7 = $6 & $5;
 if ($7) {
  HEAP32[$__h>>2] = $2;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__d,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__d = $__d|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,3)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(366);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__d>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(13);
 $or$cond = $6 & $5;
 if ($or$cond) {
  $7 = (($2) + -1)|0;
  HEAP32[$__m>>2] = $7;
 } else {
  $8 = $3 | 4;
  HEAP32[$__err>>2] = $8;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(60);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__m>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $0 = HEAP32[$__b>>2]|0;
  $1 = ($0|0)==(0|0);
  do {
   if ($1) {
    $78 = 1;
   } else {
    $2 = ((($0)) + 12|0);
    $3 = HEAP32[$2>>2]|0;
    $4 = ((($0)) + 16|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = ($3|0)==($5|0);
    if ($6) {
     $7 = HEAP32[$0>>2]|0;
     $8 = ((($7)) + 36|0);
     $9 = HEAP32[$8>>2]|0;
     $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
     $$0$i$i$i$i = $10;
    } else {
     $11 = HEAP32[$3>>2]|0;
     $$0$i$i$i$i = $11;
    }
    $12 = ($$0$i$i$i$i|0)==(-1);
    if ($12) {
     HEAP32[$__b>>2] = 0;
     $78 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $78 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $13 = HEAP32[$__e>>2]|0;
  $14 = ($13|0)==(0|0);
  do {
   if ($14) {
    label = 15;
   } else {
    $15 = ((($13)) + 12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($13)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($16|0)==($18|0);
    if ($19) {
     $20 = HEAP32[$13>>2]|0;
     $21 = ((($20)) + 36|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
     $$0$i$i1$i$i = $23;
    } else {
     $24 = HEAP32[$16>>2]|0;
     $$0$i$i1$i$i = $24;
    }
    $25 = ($$0$i$i1$i$i|0)==(-1);
    if ($25) {
     HEAP32[$__e>>2] = 0;
     label = 15;
     break;
    } else {
     if ($78) {
      $79 = $13;
      break;
     } else {
      $$pre$i3$i$i9 = $13;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else {
    $79 = 0;
   }
  }
  $26 = HEAP32[$__b>>2]|0;
  $27 = ((($26)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($26)) + 16|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($28|0)==($30|0);
  if ($31) {
   $32 = HEAP32[$26>>2]|0;
   $33 = ((($32)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_ii[$34 & 1023]($26)|0);
   $$0$i$i = $35;
  } else {
   $36 = HEAP32[$28>>2]|0;
   $$0$i$i = $36;
  }
  $37 = HEAP32[$__ct>>2]|0;
  $38 = ((($37)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_iiii[$39 & 1023]($__ct,8192,$$0$i$i)|0);
  if (!($40)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b>>2]|0;
  $42 = ((($41)) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($41)) + 16|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43|0)==($45|0);
  if ($46) {
   $47 = HEAP32[$41>>2]|0;
   $48 = ((($47)) + 40|0);
   $49 = HEAP32[$48>>2]|0;
   (FUNCTION_TABLE_ii[$49 & 1023]($41)|0);
   continue;
  } else {
   $50 = ((($43)) + 4|0);
   HEAP32[$42>>2] = $50;
   continue;
  }
 }
 $51 = HEAP32[$__b>>2]|0;
 $52 = ($51|0)==(0|0);
 do {
  if ($52) {
   $80 = 1;
  } else {
   $53 = ((($51)) + 12|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($51)) + 16|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($54|0)==($56|0);
   if ($57) {
    $58 = HEAP32[$51>>2]|0;
    $59 = ((($58)) + 36|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = (FUNCTION_TABLE_ii[$60 & 1023]($51)|0);
    $$0$i$i$i$i1 = $61;
   } else {
    $62 = HEAP32[$54>>2]|0;
    $$0$i$i$i$i1 = $62;
   }
   $63 = ($$0$i$i$i$i1|0)==(-1);
   if ($63) {
    HEAP32[$__b>>2] = 0;
    $80 = 1;
    break;
   } else {
    $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
    $80 = $phitmp$i$i$i4;
    break;
   }
  }
 } while(0);
 $64 = ($$pre$i3$i$i9|0)==(0|0);
 do {
  if ($64) {
   label = 37;
  } else {
   $65 = ((($$pre$i3$i$i9)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($$pre$i3$i$i9)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$$pre$i3$i$i9>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($$pre$i3$i$i9)|0);
    $$0$i$i1$i$i7 = $73;
   } else {
    $74 = HEAP32[$66>>2]|0;
    $$0$i$i1$i$i7 = $74;
   }
   $75 = ($$0$i$i1$i$i7|0)==(-1);
   if ($75) {
    HEAP32[$__e>>2] = 0;
    label = 37;
    break;
   } else {
    if ($80) {
     break;
    } else {
     label = 39;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  if ($80) {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $76 = HEAP32[$__err>>2]|0;
  $77 = $76 | 2;
  HEAP32[$__err>>2] = $77;
 }
 return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__h,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__h = $__h|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = ((($this)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_ii[$4 & 1023]($1)|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $23 = $12;
 } else {
  $9 = ((($5)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $23 = $10;
 }
 $13 = ((($5)) + 12|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14 & 1;
 $16 = ($15<<24>>24)==(0);
 if ($16) {
  $19 = $14&255;
  $20 = $19 >>> 1;
  $22 = $20;
 } else {
  $17 = ((($5)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $18;
 }
 $21 = (0 - ($22))|0;
 $24 = ($23|0)==($21|0);
 do {
  if ($24) {
   $25 = HEAP32[$__err>>2]|0;
   $26 = $25 | 4;
   HEAP32[$__err>>2] = $26;
  } else {
   $27 = HEAP32[$__e>>2]|0;
   HEAP32[$0>>2] = $27;
   $28 = ((($5)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
   $29 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$$byval_copy,$5,$28,$__ct,$__err,0)|0);
   $30 = ($29|0)==($5|0);
   $31 = HEAP32[$__h>>2]|0;
   $32 = ($31|0)==(12);
   $or$cond = $30 & $32;
   if ($or$cond) {
    HEAP32[$__h>>2] = 0;
    break;
   }
   $33 = $29;
   $34 = $5;
   $35 = (($33) - ($34))|0;
   $36 = ($35|0)==(12);
   $37 = ($31|0)<(12);
   $or$cond3 = $37 & $36;
   if ($or$cond3) {
    $38 = (($31) + 12)|0;
    HEAP32[$__h>>2] = $38;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__s,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__s = $__s|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,2)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(61);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__s>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,1)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 $6 = ($2|0)<(7);
 $or$cond = $6 & $5;
 if ($or$cond) {
  HEAP32[$__w>>2] = $2;
 } else {
  $7 = $3 | 4;
  HEAP32[$__err>>2] = $7;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__y,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__y = $__y|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 4|0;
 $0 = sp;
 $1 = HEAP32[$__e>>2]|0;
 HEAP32[$0>>2] = $1;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$$byval_copy,$__err,$__ct,4)|0);
 $3 = HEAP32[$__err>>2]|0;
 $4 = $3 & 4;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = (($2) + -1900)|0;
  HEAP32[$__y>>2] = $6;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this,$__b,$__e,$__err,$__ct) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i915 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $83 = 1;
  } else {
   $2 = ((($0)) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ((($0)) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = ((($7)) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 1023]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = HEAP32[$__e>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   label = 14;
  } else {
   $15 = ((($13)) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$13>>2]|0;
    $21 = ((($20)) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 1023]($13)|0);
    $$0$i$i1$i$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i1$i$i = $24;
   }
   $25 = ($$0$i$i1$i$i|0)==(-1);
   if ($25) {
    HEAP32[$__e>>2] = 0;
    label = 14;
    break;
   } else {
    if ($83) {
     $$pre$i3$i$i915 = $13;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($83) {
   label = 16;
  } else {
   $$pre$i3$i$i915 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $26 = HEAP32[$__err>>2]|0;
   $27 = $26 | 6;
   HEAP32[$__err>>2] = $27;
  }
  else if ((label|0) == 17) {
   $28 = HEAP32[$__b>>2]|0;
   $29 = ((($28)) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($28)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($30|0)==($32|0);
   if ($33) {
    $34 = HEAP32[$28>>2]|0;
    $35 = ((($34)) + 36|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (FUNCTION_TABLE_ii[$36 & 1023]($28)|0);
    $$0$i$i = $37;
   } else {
    $38 = HEAP32[$30>>2]|0;
    $$0$i$i = $38;
   }
   $39 = HEAP32[$__ct>>2]|0;
   $40 = ((($39)) + 52|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (FUNCTION_TABLE_iiii[$41 & 1023]($__ct,$$0$i$i,0)|0);
   $43 = ($42<<24>>24)==(37);
   if (!($43)) {
    $44 = HEAP32[$__err>>2]|0;
    $45 = $44 | 4;
    HEAP32[$__err>>2] = $45;
    break;
   }
   $46 = HEAP32[$__b>>2]|0;
   $47 = ((($46)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($46)) + 16|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)==($50|0);
   if ($51) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 40|0);
    $55 = HEAP32[$54>>2]|0;
    (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$pre = HEAP32[$__b>>2]|0;
    $56 = ($$pre|0)==(0|0);
    if ($56) {
     $84 = 1;
    } else {
     $58 = $$pre;
     label = 25;
    }
   } else {
    $52 = ((($48)) + 4|0);
    HEAP32[$47>>2] = $52;
    $58 = $46;
    label = 25;
   }
   do {
    if ((label|0) == 25) {
     $57 = ((($58)) + 12|0);
     $59 = HEAP32[$57>>2]|0;
     $60 = ((($58)) + 16|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $63 = HEAP32[$58>>2]|0;
      $64 = ((($63)) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (FUNCTION_TABLE_ii[$65 & 1023]($58)|0);
      $$0$i$i$i$i1 = $66;
     } else {
      $67 = HEAP32[$59>>2]|0;
      $$0$i$i$i$i1 = $67;
     }
     $68 = ($$0$i$i$i$i1|0)==(-1);
     if ($68) {
      HEAP32[$__b>>2] = 0;
      $84 = 1;
      break;
     } else {
      $$pre$i$i$i3 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4 = ($$pre$i$i$i3|0)==(0|0);
      $84 = $phitmp$i$i$i4;
      break;
     }
    }
   } while(0);
   $69 = ($$pre$i3$i$i915|0)==(0|0);
   do {
    if ($69) {
     label = 37;
    } else {
     $70 = ((($$pre$i3$i$i915)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($$pre$i3$i$i915)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$$pre$i3$i$i915>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($$pre$i3$i$i915)|0);
      $$0$i$i1$i$i7 = $78;
     } else {
      $79 = HEAP32[$71>>2]|0;
      $$0$i$i1$i$i7 = $79;
     }
     $80 = ($$0$i$i1$i$i7|0)==(-1);
     if ($80) {
      HEAP32[$__e>>2] = 0;
      label = 37;
      break;
     } else {
      if ($84) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 37) {
    if (!($84)) {
     break;
    }
   }
   $81 = HEAP32[$__err>>2]|0;
   $82 = $81 | 2;
   HEAP32[$__err>>2] = $82;
  }
 } while(0);
 return;
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20208]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20208|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[20216]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((20216|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 23300;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = ((($9)) + 12|0);
       $12 = ($11|0)==((23468)|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      (___cxa_atexit((722|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20216|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(723,(23300|0),(8452|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(723,((23312)|0),(8480|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      __THREW__ = 0;
      (invoke_iii(723,((23324)|0),(8508|0))|0);
      $17 = __THREW__; __THREW__ = 0;
      $18 = $17&1;
      if (!($18)) {
       __THREW__ = 0;
       (invoke_iii(723,((23336)|0),(8540|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if (!($20)) {
        __THREW__ = 0;
        (invoke_iii(723,((23348)|0),(8580|0))|0);
        $21 = __THREW__; __THREW__ = 0;
        $22 = $21&1;
        if (!($22)) {
         __THREW__ = 0;
         (invoke_iii(723,((23360)|0),(8616|0))|0);
         $23 = __THREW__; __THREW__ = 0;
         $24 = $23&1;
         if (!($24)) {
          __THREW__ = 0;
          (invoke_iii(723,((23372)|0),(8644|0))|0);
          $25 = __THREW__; __THREW__ = 0;
          $26 = $25&1;
          if (!($26)) {
           __THREW__ = 0;
           (invoke_iii(723,((23384)|0),(8680|0))|0);
           $27 = __THREW__; __THREW__ = 0;
           $28 = $27&1;
           if (!($28)) {
            __THREW__ = 0;
            (invoke_iii(723,((23396)|0),(8696|0))|0);
            $29 = __THREW__; __THREW__ = 0;
            $30 = $29&1;
            if (!($30)) {
             __THREW__ = 0;
             (invoke_iii(723,((23408)|0),(8712|0))|0);
             $31 = __THREW__; __THREW__ = 0;
             $32 = $31&1;
             if (!($32)) {
              __THREW__ = 0;
              (invoke_iii(723,((23420)|0),(8728|0))|0);
              $33 = __THREW__; __THREW__ = 0;
              $34 = $33&1;
              if (!($34)) {
               __THREW__ = 0;
               (invoke_iii(723,((23432)|0),(8744|0))|0);
               $35 = __THREW__; __THREW__ = 0;
               $36 = $35&1;
               if (!($36)) {
                __THREW__ = 0;
                (invoke_iii(723,((23444)|0),(8760|0))|0);
                $37 = __THREW__; __THREW__ = 0;
                $38 = $37&1;
                if (!($38)) {
                 __THREW__ = 0;
                 (invoke_iii(723,((23456)|0),(8776|0))|0);
                 $39 = __THREW__; __THREW__ = 0;
                 $40 = $39&1;
                 if (!($40)) {
                  HEAP32[5867] = 23300;
                  ___cxa_guard_release((20208|0));
                  break;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
    $42 = ___cxa_find_matching_catch_2()|0;
    $43 = tempRet0;
    ___cxa_guard_abort((20208|0));
    ___resumeException($42|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = HEAP32[5867]|0;
 return ($41|0);
}
function ___cxx_global_array_dtor_54($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23456));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23444));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23432));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23420));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23408));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23396));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23384));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23372));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23360));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23348));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23336));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23324));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23312));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(23300);
 return;
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20224]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20224|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[20232]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((20232|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 23472;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = ((($9)) + 12|0);
       $12 = ($11|0)==((23760)|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      (___cxa_atexit((724|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20232|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(723,(23472|0),(8792|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    do {
     if (!($14)) {
      __THREW__ = 0;
      (invoke_iii(723,((23484)|0),(8824|0))|0);
      $15 = __THREW__; __THREW__ = 0;
      $16 = $15&1;
      if (!($16)) {
       __THREW__ = 0;
       (invoke_iii(723,((23496)|0),(8860|0))|0);
       $17 = __THREW__; __THREW__ = 0;
       $18 = $17&1;
       if (!($18)) {
        __THREW__ = 0;
        (invoke_iii(723,((23508)|0),(8884|0))|0);
        $19 = __THREW__; __THREW__ = 0;
        $20 = $19&1;
        if (!($20)) {
         __THREW__ = 0;
         (invoke_iii(723,((23520)|0),(8908|0))|0);
         $21 = __THREW__; __THREW__ = 0;
         $22 = $21&1;
         if (!($22)) {
          __THREW__ = 0;
          (invoke_iii(723,((23532)|0),(8924|0))|0);
          $23 = __THREW__; __THREW__ = 0;
          $24 = $23&1;
          if (!($24)) {
           __THREW__ = 0;
           (invoke_iii(723,((23544)|0),(8944|0))|0);
           $25 = __THREW__; __THREW__ = 0;
           $26 = $25&1;
           if (!($26)) {
            __THREW__ = 0;
            (invoke_iii(723,((23556)|0),(8964|0))|0);
            $27 = __THREW__; __THREW__ = 0;
            $28 = $27&1;
            if (!($28)) {
             __THREW__ = 0;
             (invoke_iii(723,((23568)|0),(8992|0))|0);
             $29 = __THREW__; __THREW__ = 0;
             $30 = $29&1;
             if (!($30)) {
              __THREW__ = 0;
              (invoke_iii(723,((23580)|0),(9032|0))|0);
              $31 = __THREW__; __THREW__ = 0;
              $32 = $31&1;
              if (!($32)) {
               __THREW__ = 0;
               (invoke_iii(723,((23592)|0),(9064|0))|0);
               $33 = __THREW__; __THREW__ = 0;
               $34 = $33&1;
               if (!($34)) {
                __THREW__ = 0;
                (invoke_iii(723,((23604)|0),(9100|0))|0);
                $35 = __THREW__; __THREW__ = 0;
                $36 = $35&1;
                if (!($36)) {
                 __THREW__ = 0;
                 (invoke_iii(723,((23616)|0),(9136|0))|0);
                 $37 = __THREW__; __THREW__ = 0;
                 $38 = $37&1;
                 if (!($38)) {
                  __THREW__ = 0;
                  (invoke_iii(723,((23628)|0),(9152|0))|0);
                  $39 = __THREW__; __THREW__ = 0;
                  $40 = $39&1;
                  if (!($40)) {
                   __THREW__ = 0;
                   (invoke_iii(723,((23640)|0),(9168|0))|0);
                   $41 = __THREW__; __THREW__ = 0;
                   $42 = $41&1;
                   if (!($42)) {
                    __THREW__ = 0;
                    (invoke_iii(723,((23652)|0),(9184|0))|0);
                    $43 = __THREW__; __THREW__ = 0;
                    $44 = $43&1;
                    if ($44) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23664)|0),(8908|0))|0);
                    $45 = __THREW__; __THREW__ = 0;
                    $46 = $45&1;
                    if ($46) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23676)|0),(9200|0))|0);
                    $47 = __THREW__; __THREW__ = 0;
                    $48 = $47&1;
                    if ($48) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23688)|0),(9216|0))|0);
                    $49 = __THREW__; __THREW__ = 0;
                    $50 = $49&1;
                    if ($50) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23700)|0),(9232|0))|0);
                    $51 = __THREW__; __THREW__ = 0;
                    $52 = $51&1;
                    if ($52) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23712)|0),(9248|0))|0);
                    $53 = __THREW__; __THREW__ = 0;
                    $54 = $53&1;
                    if ($54) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23724)|0),(9264|0))|0);
                    $55 = __THREW__; __THREW__ = 0;
                    $56 = $55&1;
                    if ($56) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23736)|0),(9280|0))|0);
                    $57 = __THREW__; __THREW__ = 0;
                    $58 = $57&1;
                    if ($58) {
                     break;
                    }
                    __THREW__ = 0;
                    (invoke_iii(723,((23748)|0),(9296|0))|0);
                    $59 = __THREW__; __THREW__ = 0;
                    $60 = $59&1;
                    if ($60) {
                     break;
                    }
                    HEAP32[5940] = 23472;
                    ___cxa_guard_release((20224|0));
                    break L1;
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    } while(0);
    $62 = ___cxa_find_matching_catch_2()|0;
    $63 = tempRet0;
    ___cxa_guard_abort((20224|0));
    ___resumeException($62|0);
    // unreachable;
   }
  }
 } while(0);
 $61 = HEAP32[5940]|0;
 return ($61|0);
}
function ___cxx_global_array_dtor_93($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23748));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23736));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23724));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23712));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23700));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23688));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23676));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23664));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23652));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23640));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23628));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23616));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23604));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23592));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23580));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23568));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23556));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23544));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23532));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23520));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23508));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23496));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23484));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(23472);
 return;
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__i$0$i$i$i = 0, $exitcond$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20240]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20240|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    $4 = HEAP8[20248]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $6 = (___cxa_guard_acquire((20248|0))|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      $9 = 23764;
      while(1) {
       $__i$0$i$i$i = 0;
       while(1) {
        $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
        if ($exitcond$i$i$i) {
         break;
        }
        $8 = (($9) + ($__i$0$i$i$i<<2)|0);
        HEAP32[$8>>2] = 0;
        $10 = (($__i$0$i$i$i) + 1)|0;
        $__i$0$i$i$i = $10;
       }
       $11 = ((($9)) + 12|0);
       $12 = ($11|0)==((24052)|0);
       if ($12) {
        break;
       } else {
        $9 = $11;
       }
      }
      (___cxa_atexit((725|0),(0|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20248|0));
     }
    }
    __THREW__ = 0;
    (invoke_iii(723,(23764|0),(9312|0))|0);
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if (!($14)) {
     __THREW__ = 0;
     (invoke_iii(723,((23776)|0),(9324|0))|0);
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if (!($16)) {
      HEAP32[6013] = 23764;
      ___cxa_guard_release((20240|0));
      break;
     }
    }
    $18 = ___cxa_find_matching_catch_2()|0;
    $19 = tempRet0;
    ___cxa_guard_abort((20240|0));
    ___resumeException($18|0);
    // unreachable;
   }
  }
 } while(0);
 $17 = HEAP32[6013]|0;
 return ($17|0);
}
function ___cxx_global_array_dtor_120($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((24040));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((24028));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((24016));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((24004));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23992));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23980));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23968));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23956));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23944));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23932));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23920));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23908));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23896));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23884));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23872));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23860));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23848));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23836));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23824));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23812));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23800));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23788));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev((23776));
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(23764);
 return;
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20256]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20256|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(726,(9336|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(727,(24056|0),(9336|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((728|0),(24056|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20256|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch_2()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((20256|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (24056|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20264]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20264|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(726,(9420|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(727,(24068|0),(9420|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((728|0),(24068|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20264|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch_2()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((20264|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (24068|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20272]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20272|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(726,(9468|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(727,(24080|0),(9468|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((728|0),(24080|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20272|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch_2()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((20272|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (24080|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20280]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20280|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    $4 = (invoke_ii(726,(9504|0))|0);
    $5 = __THREW__; __THREW__ = 0;
    $6 = $5&1;
    if (!($6)) {
     __THREW__ = 0;
     invoke_viii(727,(24092|0),(9504|0),($4|0));
     $7 = __THREW__; __THREW__ = 0;
     $8 = $7&1;
     if (!($8)) {
      (___cxa_atexit((728|0),(24092|0),(___dso_handle|0))|0);
      ___cxa_guard_release((20280|0));
      break;
     }
    }
    $9 = ___cxa_find_matching_catch_2()|0;
    $10 = tempRet0;
    ___cxa_guard_abort((20280|0));
    ___resumeException($9|0);
    // unreachable;
   }
  }
 } while(0);
 return (24092|0);
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 __THREW__ = 0;
 $1 = (invoke_i(704)|0);
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 do {
  if (!($3)) {
   $4 = ($0|0)==($1|0);
   if (!($4)) {
    $5 = HEAP32[$this>>2]|0;
    __THREW__ = 0;
    invoke_vi(729,($5|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if ($7) {
     break;
    }
   }
   return;
  }
 } while(0);
 $8 = ___cxa_find_matching_catch_3(0|0)|0;
 $9 = tempRet0;
 ___clang_call_terminate($8);
 // unreachable;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$sroa$02$0$i = 0, $$0$i$i = 0, $$sroa$02$0$i = 0, $$sroa$02$0$i$lcssa = 0, $$sroa$02$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$$sroa$02$0$i = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$sroa$02$0$i$lcssa = $$sroa$02$0$i;
   break;
  }
  $7 = HEAP8[$$0$i$i>>0]|0;
  $8 = ($$sroa$02$0$i|0)==(0|0);
  do {
   if ($8) {
    $$sroa$02$1$i = 0;
   } else {
    $9 = ((($$sroa$02$0$i)) + 24|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ((($$sroa$02$0$i)) + 28|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($10|0)==($12|0);
    if ($13) {
     $15 = HEAP32[$$sroa$02$0$i>>2]|0;
     $16 = ((($15)) + 52|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = $7&255;
     $19 = (FUNCTION_TABLE_iii[$17 & 1023]($$sroa$02$0$i,$18)|0);
     $20 = ($19|0)==(-1);
     $$$sroa$02$0$i = $20 ? 0 : $$sroa$02$0$i;
     $$sroa$02$1$i = $$$sroa$02$0$i;
     break;
    } else {
     $14 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $14;
     HEAP8[$10>>0] = $7;
     $$sroa$02$1$i = $$sroa$02$0$i;
     break;
    }
   }
  } while(0);
  $21 = ((($$0$i$i)) + 1|0);
  $$0$i$i = $21;$$sroa$02$0$i = $$sroa$02$1$i;
 }
 STACKTOP = sp;return ($$sroa$02$0$i$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = ((($fmt)) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = ((($fmt)) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = ((($fmt)) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $__nb;
 $6 = (($4) - ($5))|0;
 $7 = HEAP32[$this>>2]|0;
 $8 = (_strftime_l(($__nb|0),($6|0),($fmt|0),($__tm|0),($7|0))|0);
 $9 = (($__nb) + ($8)|0);
 HEAP32[$__ne>>2] = $9;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$sroa$02$0$i = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$02$0$i = 0, $$sroa$02$0$i$lcssa = 0, $$sroa$02$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 8|0;
 $__ne = sp;
 $2 = ((($__nar)) + 400|0);
 HEAP32[$__ne>>2] = $2;
 $3 = ((($this)) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $$0$i$i = $__nar;$$sroa$02$0$i = $5;
 while(1) {
  $6 = ($$0$i$i|0)==($4|0);
  if ($6) {
   $$sroa$02$0$i$lcssa = $$sroa$02$0$i;
   break;
  }
  $7 = HEAP32[$$0$i$i>>2]|0;
  $8 = ($$sroa$02$0$i|0)==(0|0);
  if ($8) {
   $$sroa$02$1$i = 0;
  } else {
   $9 = ((($$sroa$02$0$i)) + 24|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ((($$sroa$02$0$i)) + 28|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($10|0)==($12|0);
   if ($13) {
    $14 = HEAP32[$$sroa$02$0$i>>2]|0;
    $15 = ((($14)) + 52|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iii[$16 & 1023]($$sroa$02$0$i,$7)|0);
    $$0$i$i$i$i = $17;
   } else {
    $18 = ((($10)) + 4|0);
    HEAP32[$9>>2] = $18;
    HEAP32[$10>>2] = $7;
    $$0$i$i$i$i = $7;
   }
   $19 = ($$0$i$i$i$i|0)==(-1);
   $$$sroa$02$0$i = $19 ? 0 : $$sroa$02$0$i;
   $$sroa$02$1$i = $$$sroa$02$0$i;
  }
  $20 = ((($$0$i$i)) + 4|0);
  $$0$i$i = $20;$$sroa$02$0$i = $$sroa$02$1$i;
 }
 STACKTOP = sp;return ($$sroa$02$0$i$lcssa|0);
}
function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this,$__wb,$__we,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__wb = $__wb|0;
 $__we = $__we|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__nar = sp + 16|0;
 $__ne = sp + 12|0;
 $mb = sp;
 $__nb = sp + 8|0;
 $0 = ((($__nar)) + 100|0);
 HEAP32[$__ne>>2] = $0;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $1 = $mb;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[$__nb>>2] = $__nar;
 $5 = HEAP32[$__we>>2]|0;
 $6 = $__wb;
 $7 = (($5) - ($6))|0;
 $8 = $7 >> 2;
 $9 = HEAP32[$this>>2]|0;
 $10 = (_uselocale($9)|0);
 __THREW__ = 0;
 $11 = (invoke_iiiii(730,($__wb|0),($__nb|0),($8|0),($mb|0))|0);
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  $19 = ___cxa_find_matching_catch_2()|0;
  $20 = tempRet0;
  $21 = ($10|0)==(0|0);
  if (!($21)) {
   __THREW__ = 0;
   (invoke_ii(706,($10|0))|0);
   $22 = __THREW__; __THREW__ = 0;
   $23 = $22&1;
   if ($23) {
    $24 = ___cxa_find_matching_catch_3(0|0)|0;
    $25 = tempRet0;
    ___clang_call_terminate($24);
    // unreachable;
   }
  }
  ___resumeException($19|0);
  // unreachable;
 }
 $14 = ($10|0)==(0|0);
 if (!($14)) {
  __THREW__ = 0;
  (invoke_ii(706,($10|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   $17 = ___cxa_find_matching_catch_3(0|0)|0;
   $18 = tempRet0;
   ___clang_call_terminate($17);
   // unreachable;
  }
 }
 $26 = ($11|0)==(-1);
 if ($26) {
  __ZNSt3__121__throw_runtime_errorEPKc(18244);
  // unreachable;
 } else {
  $27 = (($__wb) + ($11<<2)|0);
  HEAP32[$__we>>2] = $27;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(731,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  ___cxa_throw(($0|0),(2192|0),(530|0));
  // unreachable;
 }
}
function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($agg$result) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result,1,45);
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$114 = 0, $$115 = 0, $$1212 = 0, $$1213 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre16 = 0, $$pre8 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__h$sroa$0$0 = 0, $__h$sroa$0$1 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0;
 var $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 140|0;
 $__wb = sp + 16|0;
 $__wn = sp + 12|0;
 $__loc = sp + 8|0;
 $__neg = sp + 138|0;
 $0 = sp + 4|0;
 $__atoms = sp + 128|0;
 $__nbuf = sp + 28|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (732);
 $3 = ((($__wbuf)) + 100|0);
 __THREW__ = 0;
 $4 = (invoke_ii(607,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $33 = ___cxa_find_matching_catch_2()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$114 = $33;$$1212 = $34;$108 = 732;$109 = $__wbuf;
  label = 47;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(608,($__loc|0),(22416|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if ($9) {
    label = 10;
   } else {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $13 = (invoke_iiiiiiiiiiii(733,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 10;
    } else {
     L7: do {
      if ($13) {
       $16 = HEAP32[$7>>2]|0;
       $17 = ((($16)) + 32|0);
       $18 = HEAP32[$17>>2]|0;
       __THREW__ = 0;
       (invoke_iiiii($18|0,($7|0),(18493|0),((18503)|0),($__atoms|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        label = 10;
        break L4;
       }
       $21 = HEAP32[$__wn>>2]|0;
       $22 = HEAP32[$__wb>>2]|0;
       $23 = (($21) - ($22))|0;
       $24 = ($23|0)>(98);
       $25 = $22;
       $26 = $21;
       if ($24) {
        $27 = (($23) + 2)|0;
        $28 = (_malloc($27)|0);
        $29 = $28;
        $30 = ($28|0)==(0|0);
        if ($30) {
         __THREW__ = 0;
         invoke_v(693);
         $31 = __THREW__; __THREW__ = 0;
         $32 = $31&1;
         if ($32) {
          $__h$sroa$0$0 = $29;
         } else {
          $__h$sroa$0$1 = $29;$__nc$0 = 0;
          label = 13;
         }
        } else {
         $__h$sroa$0$1 = $29;$__nc$0 = $28;
         label = 13;
        }
       } else {
        $__h$sroa$0$1 = 0;$__nc$0 = $__nbuf;
        label = 13;
       }
       do {
        if ((label|0) == 13) {
         $41 = HEAP8[$__neg>>0]|0;
         $42 = ($41<<24>>24)==(0);
         if ($42) {
          $__nc$1 = $__nc$0;
         } else {
          $43 = ((($__nc$0)) + 1|0);
          HEAP8[$__nc$0>>0] = 45;
          $__nc$1 = $43;
         }
         $44 = ((($__atoms)) + 10|0);
         $45 = $__atoms;
         $47 = $26;$__nc$2 = $__nc$1;$__w$0 = $25;
         while(1) {
          $46 = ($__w$0>>>0)<($47>>>0);
          if (!($46)) {
           $__nc$2$lcssa = $__nc$2;
           break;
          }
          $50 = HEAP8[$__w$0>>0]|0;
          $$0$i = $__atoms;
          while(1) {
           $51 = ($$0$i|0)==($44|0);
           if ($51) {
            $$0$lcssa$i = $44;
            break;
           }
           $52 = HEAP8[$$0$i>>0]|0;
           $53 = ($52<<24>>24)==($50<<24>>24);
           if ($53) {
            $$0$lcssa$i = $$0$i;
            break;
           }
           $54 = ((($$0$i)) + 1|0);
           $$0$i = $54;
          }
          $55 = $$0$lcssa$i;
          $56 = (($55) - ($45))|0;
          $57 = (18493 + ($56)|0);
          $58 = HEAP8[$57>>0]|0;
          HEAP8[$__nc$2>>0] = $58;
          $59 = ((($__w$0)) + 1|0);
          $60 = ((($__nc$2)) + 1|0);
          $$pre = HEAP32[$__wn>>2]|0;
          $47 = $$pre;$__nc$2 = $60;$__w$0 = $59;
         }
         HEAP8[$__nc$2$lcssa>>0] = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $48 = (_sscanf($__nbuf,18504,$vararg_buffer)|0);
         $49 = ($48|0)==(1);
         if (!($49)) {
          __THREW__ = 0;
          invoke_vi(734,(18508|0));
          $61 = __THREW__; __THREW__ = 0;
          $62 = $61&1;
          if ($62) {
           $__h$sroa$0$0 = $__h$sroa$0$1;
           break;
          }
         }
         $63 = ($__h$sroa$0$1|0)==(0);
         if (!($63)) {
          $64 = $__h$sroa$0$1;
          _free($64);
         }
         break L7;
        }
       } while(0);
       $37 = ___cxa_find_matching_catch_2()|0;
       $38 = tempRet0;
       $39 = ($__h$sroa$0$0|0)==(0);
       if ($39) {
        $$0 = $37;$$01 = $38;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
        break L4;
       }
       $40 = $__h$sroa$0$0;
       _free($40);
       $$0 = $37;$$01 = $38;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
       break L4;
      }
     } while(0);
     $65 = HEAP32[$__b>>2]|0;
     $66 = ($65|0)==(0|0);
     do {
      if ($66) {
       $79 = 0;
      } else {
       $67 = ((($65)) + 12|0);
       $68 = HEAP32[$67>>2]|0;
       $69 = ((($65)) + 16|0);
       $70 = HEAP32[$69>>2]|0;
       $71 = ($68|0)==($70|0);
       if ($71) {
        $72 = HEAP32[$65>>2]|0;
        $73 = ((($72)) + 36|0);
        $74 = HEAP32[$73>>2]|0;
        __THREW__ = 0;
        $75 = (invoke_ii($74|0,($65|0))|0);
        $76 = __THREW__; __THREW__ = 0;
        $77 = $76&1;
        if ($77) {
         label = 10;
         break L4;
        }
        $78 = ($75|0)==(-1);
        if ($78) {
         HEAP32[$__b>>2] = 0;
         $79 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $79 = $$pre$i$i$i;
         break;
        }
       } else {
        $79 = $65;
       }
      }
     } while(0);
     $80 = ($79|0)==(0|0);
     $81 = HEAP32[$__e>>2]|0;
     $82 = ($81|0)==(0|0);
     do {
      if ($82) {
       label = 39;
      } else {
       $83 = ((($81)) + 12|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ((($81)) + 16|0);
       $86 = HEAP32[$85>>2]|0;
       $87 = ($84|0)==($86|0);
       if ($87) {
        $88 = HEAP32[$81>>2]|0;
        $89 = ((($88)) + 36|0);
        $90 = HEAP32[$89>>2]|0;
        __THREW__ = 0;
        $91 = (invoke_ii($90|0,($81|0))|0);
        $92 = __THREW__; __THREW__ = 0;
        $93 = $92&1;
        if ($93) {
         label = 10;
         break L4;
        }
        $94 = ($91|0)==(-1);
        if ($94) {
         HEAP32[$__e>>2] = 0;
         label = 39;
         break;
        }
       }
       if (!($80)) {
        label = 40;
       }
      }
     } while(0);
     if ((label|0) == 39) {
      if ($80) {
       label = 40;
      }
     }
     if ((label|0) == 40) {
      $95 = HEAP32[$__err>>2]|0;
      $96 = $95 | 2;
      HEAP32[$__err>>2] = $96;
     }
     $97 = HEAP32[$__b>>2]|0;
     $98 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($98)|0);
     $99 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $100 = ($99|0)==(0|0);
     if (!($100)) {
      $101 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($101|0,($99|0));
      $102 = __THREW__; __THREW__ = 0;
      $103 = $102&1;
      if ($103) {
       $104 = ___cxa_find_matching_catch_3(0|0)|0;
       $105 = tempRet0;
       ___clang_call_terminate($104);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($97|0);
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $35 = ___cxa_find_matching_catch_2()|0;
   $36 = tempRet0;
   $$0 = $35;$$01 = $36;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  $106 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($106)|0);
  $$pre8 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2] = 0;
  $107 = ($$pre8|0)==(0|0);
  if ($107) {
   $$115 = $$0;$$1213 = $$01;
  } else {
   $$pre16 = HEAP32[$2>>2]|0;
   $$114 = $$0;$$1212 = $$01;$108 = $$pre16;$109 = $$pre8;
   label = 47;
  }
 }
 if ((label|0) == 47) {
  __THREW__ = 0;
  invoke_vi($108|0,($109|0));
  $110 = __THREW__; __THREW__ = 0;
  $111 = $110&1;
  if ($111) {
   $112 = ___cxa_find_matching_catch_3(0|0)|0;
   $113 = tempRet0;
   ___clang_call_terminate($112);
   // unreachable;
  } else {
   $$115 = $$114;$$1213 = $$1212;
  }
 }
 ___resumeException($$115|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0$i$i = 0, $$0$i$i109 = 0, $$0$i$i112 = 0, $$0$i$i129 = 0, $$0$i$i136 = 0, $$0$i$i145 = 0, $$0$i$i155 = 0, $$0$i$i172 = 0, $$0$i$i57 = 0, $$0$i$i60 = 0, $$0$i$i73 = 0, $$0$i$i80 = 0, $$0$i$i83 = 0, $$0$i$i90 = 0, $$10 = 0, $$lcssa = 0, $$lcssa392 = 0, $$lcssa394 = 0, $$phi$trans$insert = 0, $$phi$trans$insert301 = 0;
 var $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i119 = 0, $$pre$i$i$i159 = 0, $$pre$i$i$i176 = 0, $$pre$i$i$i47 = 0, $$pre$i$i$i63 = 0, $$pre$i$i$i95 = 0, $$pre$i2$i$i123 = 0, $$pre$i2$i$i163 = 0, $$pre$i2$i$i163283 = 0, $$pre$i2$i$i163285 = 0, $$pre$i2$i$i180 = 0, $$pre$i2$i$i180295 = 0, $$pre$i2$i$i180296 = 0, $$pre$i2$i$i67 = 0, $$pre$i2$i$i67305 = 0, $$pre$i2$i$i67307 = 0, $$pre$i2$i$i99 = 0, $$pre$i2$i$i99291$ph = 0;
 var $$pre$i2$i$i99291310 = 0, $$pre288 = 0, $$pre290 = 0, $$pre293 = 0, $$pre294 = 0, $$pre298 = 0, $$pre299 = 0, $$pre300 = 0, $$pre302 = 0, $$pre303 = 0, $$pre304 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0, $__i$0$i$i29 = 0;
 var $__i$0$i$i32 = 0, $__i$0$i$i36 = 0, $__i$0$i$i41 = 0, $__ng$0 = 0, $__ng$0$lcssa393 = 0, $__ng$2$ph = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$023 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$022 = 0, $__spaces = 0, $__sym = 0, $__sym_curr_char$sroa$0$0 = 0, $__sym_space_end$sroa$0$0 = 0, $__sym_space_end$sroa$0$0$lcssa = 0, $__trailing_sign$0 = 0;
 var $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond28 = 0, $exitcond$i$i = 0, $exitcond$i$i30 = 0, $exitcond$i$i33 = 0, $exitcond$i$i37 = 0, $exitcond$i$i42 = 0, $isascii1$i = 0, $isascii1$i153 = 0, $isascii1$i186 = 0, $isascii1$i76 = 0, $isascii1$i88 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond14 = 0;
 var $or$cond25 = 0, $sext = 0, $sext239 = 0, $sext240 = 0, $sext241 = 0, $switch = 0, $tmp$i$i101 = 0, $tmp$i$i165 = 0, $tmp$i$i182 = 0, $tmp$i$i69 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 488|0;
 $__gbuf = sp + 88|0;
 $__gb = sp + 80|0;
 $__gn = sp + 72|0;
 $__ge = sp + 68|0;
 $__pat = sp + 496|0;
 $__dp = sp + 493|0;
 $__ts = sp + 492|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (732);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $4 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$4>>2] = 0;
  $5 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $5;
 }
 $__i$0$i$i29 = 0;
 while(1) {
  $exitcond$i$i30 = ($__i$0$i$i29|0)==(3);
  if ($exitcond$i$i30) {
   break;
  }
  $6 = (($__sym) + ($__i$0$i$i29<<2)|0);
  HEAP32[$6>>2] = 0;
  $7 = (($__i$0$i$i29) + 1)|0;
  $__i$0$i$i29 = $7;
 }
 $__i$0$i$i32 = 0;
 while(1) {
  $exitcond$i$i33 = ($__i$0$i$i32|0)==(3);
  if ($exitcond$i$i33) {
   break;
  }
  $8 = (($__psn) + ($__i$0$i$i32<<2)|0);
  HEAP32[$8>>2] = 0;
  $9 = (($__i$0$i$i32) + 1)|0;
  $__i$0$i$i32 = $9;
 }
 $__i$0$i$i36 = 0;
 while(1) {
  $exitcond$i$i37 = ($__i$0$i$i36|0)==(3);
  if ($exitcond$i$i37) {
   break;
  }
  $10 = (($__nsn) + ($__i$0$i$i36<<2)|0);
  HEAP32[$10>>2] = 0;
  $11 = (($__i$0$i$i36) + 1)|0;
  $__i$0$i$i36 = $11;
 }
 $__i$0$i$i41 = 0;
 while(1) {
  $exitcond$i$i42 = ($__i$0$i$i41|0)==(3);
  if ($exitcond$i$i42) {
   break;
  }
  $12 = (($__spaces) + ($__i$0$i$i41<<2)|0);
  HEAP32[$12>>2] = 0;
  $13 = (($__i$0$i$i41) + 1)|0;
  $__i$0$i$i41 = $13;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(735,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 L21: do {
  if ($15) {
   $77 = ___cxa_find_matching_catch_2()|0;
   $78 = tempRet0;
   $lpad$phi$index = $77;$lpad$phi$index7 = $78;
  } else {
   $16 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $16;
   $17 = ((($__ct)) + 8|0);
   $18 = ((($__psn)) + 4|0);
   $19 = ((($__nsn)) + 4|0);
   $20 = ((($__nsn)) + 8|0);
   $21 = ((($__nsn)) + 1|0);
   $22 = ((($__psn)) + 8|0);
   $23 = ((($__psn)) + 1|0);
   $24 = $__flags & 512;
   $25 = ($24|0)!=(0);
   $26 = ((($__sym)) + 8|0);
   $27 = ((($__sym)) + 1|0);
   $28 = ((($__sym)) + 4|0);
   $29 = ((($__spaces)) + 4|0);
   $30 = ((($__spaces)) + 8|0);
   $31 = ((($__spaces)) + 1|0);
   $32 = ((($__pat)) + 3|0);
   $33 = ((($__grp)) + 4|0);
   $867 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L24: while(1) {
    $34 = ($__p$0>>>0)<(4);
    if (!($34)) {
     $$lcssa394 = $867;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 251;
     break;
    }
    $35 = HEAP32[$__b>>2]|0;
    $36 = ($35|0)==(0|0);
    do {
     if ($36) {
      $49 = 0;
     } else {
      $37 = ((($35)) + 12|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = ((($35)) + 16|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($38|0)==($40|0);
      if ($41) {
       $42 = HEAP32[$35>>2]|0;
       $43 = ((($42)) + 36|0);
       $44 = HEAP32[$43>>2]|0;
       __THREW__ = 0;
       $45 = (invoke_ii($44|0,($35|0))|0);
       $46 = __THREW__; __THREW__ = 0;
       $47 = $46&1;
       if ($47) {
        label = 38;
        break L24;
       }
       $48 = ($45|0)==(-1);
       if ($48) {
        HEAP32[$__b>>2] = 0;
        $49 = 0;
        break;
       } else {
        $$pre$i$i$i47 = HEAP32[$__b>>2]|0;
        $49 = $$pre$i$i$i47;
        break;
       }
      } else {
       $49 = $35;
      }
     }
    } while(0);
    $50 = ($49|0)==(0|0);
    $51 = HEAP32[$__e>>2]|0;
    $52 = ($51|0)==(0|0);
    do {
     if ($52) {
      label = 31;
     } else {
      $53 = ((($51)) + 12|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = ((($51)) + 16|0);
      $56 = HEAP32[$55>>2]|0;
      $57 = ($54|0)==($56|0);
      if (!($57)) {
       if ($50) {
        $868 = $51;
        break;
       } else {
        $$lcssa394 = $867;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 251;
        break L24;
       }
      }
      $58 = HEAP32[$51>>2]|0;
      $59 = ((($58)) + 36|0);
      $60 = HEAP32[$59>>2]|0;
      __THREW__ = 0;
      $61 = (invoke_ii($60|0,($51|0))|0);
      $62 = __THREW__; __THREW__ = 0;
      $63 = $62&1;
      if ($63) {
       label = 38;
       break L24;
      }
      $64 = ($61|0)==(-1);
      if ($64) {
       HEAP32[$__e>>2] = 0;
       label = 31;
       break;
      } else {
       if ($50) {
        $868 = $51;
        break;
       } else {
        $$lcssa394 = $867;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 251;
        break L24;
       }
      }
     }
    } while(0);
    if ((label|0) == 31) {
     label = 0;
     if ($50) {
      $$lcssa394 = $867;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 251;
      break;
     } else {
      $868 = 0;
     }
    }
    $86 = (($__pat) + ($__p$0)|0);
    $87 = HEAP8[$86>>0]|0;
    $88 = $87 << 24 >> 24;
    L47: do {
     switch ($88|0) {
     case 1:  {
      $cond28 = ($__p$0|0)==(3);
      if ($cond28) {
       $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $90 = HEAP32[$__b>>2]|0;
       $91 = ((($90)) + 12|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = ((($90)) + 16|0);
       $94 = HEAP32[$93>>2]|0;
       $95 = ($92|0)==($94|0);
       if ($95) {
        $96 = HEAP32[$90>>2]|0;
        $97 = ((($96)) + 36|0);
        $98 = HEAP32[$97>>2]|0;
        __THREW__ = 0;
        $99 = (invoke_ii($98|0,($90|0))|0);
        $100 = __THREW__; __THREW__ = 0;
        $101 = $100&1;
        if ($101) {
         label = 38;
         break L24;
        } else {
         $$0$i$i57 = $99;
        }
       } else {
        $102 = HEAP8[$92>>0]|0;
        $103 = $102&255;
        $$0$i$i57 = $103;
       }
       $104 = $$0$i$i57&255;
       $isascii1$i = ($104<<24>>24)>(-1);
       if (!($isascii1$i)) {
        label = 56;
        break L24;
       }
       $sext241 = $$0$i$i57 << 24;
       $105 = $sext241 >> 24;
       $106 = HEAP32[$17>>2]|0;
       $107 = (($106) + ($105<<1)|0);
       $108 = HEAP16[$107>>1]|0;
       $109 = $108 & 8192;
       $110 = ($109<<16>>16)==(0);
       if ($110) {
        label = 56;
        break L24;
       }
       $111 = HEAP32[$__b>>2]|0;
       $112 = ((($111)) + 12|0);
       $113 = HEAP32[$112>>2]|0;
       $114 = ((($111)) + 16|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = ($113|0)==($115|0);
       if ($116) {
        $117 = HEAP32[$111>>2]|0;
        $118 = ((($117)) + 40|0);
        $119 = HEAP32[$118>>2]|0;
        __THREW__ = 0;
        $120 = (invoke_ii($119|0,($111|0))|0);
        $121 = __THREW__; __THREW__ = 0;
        $122 = $121&1;
        if ($122) {
         label = 38;
         break L24;
        } else {
         $$0$i$i60 = $120;
        }
       } else {
        $123 = ((($113)) + 1|0);
        HEAP32[$112>>2] = $123;
        $124 = HEAP8[$113>>0]|0;
        $125 = $124&255;
        $$0$i$i60 = $125;
       }
       $126 = $$0$i$i60&255;
       __THREW__ = 0;
       invoke_vii(628,($__spaces|0),($126|0));
       $127 = __THREW__; __THREW__ = 0;
       $128 = $127&1;
       if ($128) {
        label = 38;
        break L24;
       } else {
        $$pre$i2$i$i67 = $868;$148 = $868;
        label = 58;
       }
      }
      break;
     }
     case 0:  {
      $131 = ($__p$0|0)==(3);
      if ($131) {
       $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $$pre$i2$i$i67 = $868;$148 = $868;
       label = 58;
      }
      break;
     }
     case 3:  {
      $202 = HEAP8[$__psn>>0]|0;
      $203 = $202 & 1;
      $204 = ($203<<24>>24)==(0);
      $205 = HEAP32[$18>>2]|0;
      $206 = $202&255;
      $207 = $206 >>> 1;
      $208 = $204 ? $207 : $205;
      $209 = HEAP8[$__nsn>>0]|0;
      $210 = $209 & 1;
      $211 = ($210<<24>>24)==(0);
      $212 = HEAP32[$19>>2]|0;
      $213 = $209&255;
      $214 = $213 >>> 1;
      $215 = $211 ? $214 : $212;
      $216 = (0 - ($215))|0;
      $217 = ($208|0)==($216|0);
      if ($217) {
       $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $218 = ($208|0)==(0);
       if ($218) {
        $262 = HEAP32[$__b>>2]|0;
        $263 = ((($262)) + 12|0);
        $264 = HEAP32[$263>>2]|0;
        $265 = ((($262)) + 16|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = ($264|0)==($266|0);
        if ($267) {
         $268 = HEAP32[$262>>2]|0;
         $269 = ((($268)) + 36|0);
         $270 = HEAP32[$269>>2]|0;
         __THREW__ = 0;
         $271 = (invoke_ii($270|0,($262|0))|0);
         $272 = __THREW__; __THREW__ = 0;
         $273 = $272&1;
         if ($273) {
          label = 38;
          break L24;
         }
         $$pre304 = HEAP8[$__nsn>>0]|0;
         $$0$i$i129 = $271;$278 = $$pre304;
        } else {
         $274 = HEAP8[$264>>0]|0;
         $275 = $274&255;
         $$0$i$i129 = $275;$278 = $209;
        }
        $276 = $$0$i$i129&255;
        $277 = $278 & 1;
        $279 = ($277<<24>>24)==(0);
        $280 = HEAP32[$20>>2]|0;
        $281 = $279 ? $21 : $280;
        $282 = HEAP8[$281>>0]|0;
        $283 = ($276<<24>>24)==($282<<24>>24);
        if (!($283)) {
         $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
         break L47;
        }
        $284 = HEAP32[$__b>>2]|0;
        $285 = ((($284)) + 12|0);
        $286 = HEAP32[$285>>2]|0;
        $287 = ((($284)) + 16|0);
        $288 = HEAP32[$287>>2]|0;
        $289 = ($286|0)==($288|0);
        if ($289) {
         $290 = HEAP32[$284>>2]|0;
         $291 = ((($290)) + 40|0);
         $292 = HEAP32[$291>>2]|0;
         __THREW__ = 0;
         (invoke_ii($292|0,($284|0))|0);
         $293 = __THREW__; __THREW__ = 0;
         $294 = $293&1;
         if ($294) {
          label = 38;
          break L24;
         }
        } else {
         $295 = ((($286)) + 1|0);
         HEAP32[$285>>2] = $295;
        }
        HEAP8[$__neg>>0] = 1;
        $296 = HEAP8[$__nsn>>0]|0;
        $297 = $296 & 1;
        $298 = ($297<<24>>24)==(0);
        $299 = HEAP32[$19>>2]|0;
        $300 = $296&255;
        $301 = $300 >>> 1;
        $302 = $298 ? $301 : $299;
        $303 = ($302>>>0)>(1);
        $__nsn$__trailing_sign$0 = $303 ? $__nsn : $__trailing_sign$0;
        $869 = $867;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L47;
       }
       $219 = ($215|0)==(0);
       $220 = HEAP32[$__b>>2]|0;
       $221 = ((($220)) + 12|0);
       $222 = HEAP32[$221>>2]|0;
       $223 = ((($220)) + 16|0);
       $224 = HEAP32[$223>>2]|0;
       $225 = ($222|0)==($224|0);
       if ($219) {
        if ($225) {
         $226 = HEAP32[$220>>2]|0;
         $227 = ((($226)) + 36|0);
         $228 = HEAP32[$227>>2]|0;
         __THREW__ = 0;
         $229 = (invoke_ii($228|0,($220|0))|0);
         $230 = __THREW__; __THREW__ = 0;
         $231 = $230&1;
         if ($231) {
          label = 38;
          break L24;
         }
         $$pre303 = HEAP8[$__psn>>0]|0;
         $$0$i$i109 = $229;$236 = $$pre303;
        } else {
         $232 = HEAP8[$222>>0]|0;
         $233 = $232&255;
         $$0$i$i109 = $233;$236 = $202;
        }
        $234 = $$0$i$i109&255;
        $235 = $236 & 1;
        $237 = ($235<<24>>24)==(0);
        $238 = HEAP32[$22>>2]|0;
        $239 = $237 ? $23 : $238;
        $240 = HEAP8[$239>>0]|0;
        $241 = ($234<<24>>24)==($240<<24>>24);
        if (!($241)) {
         HEAP8[$__neg>>0] = 1;
         $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
         break L47;
        }
        $242 = HEAP32[$__b>>2]|0;
        $243 = ((($242)) + 12|0);
        $244 = HEAP32[$243>>2]|0;
        $245 = ((($242)) + 16|0);
        $246 = HEAP32[$245>>2]|0;
        $247 = ($244|0)==($246|0);
        if ($247) {
         $248 = HEAP32[$242>>2]|0;
         $249 = ((($248)) + 40|0);
         $250 = HEAP32[$249>>2]|0;
         __THREW__ = 0;
         (invoke_ii($250|0,($242|0))|0);
         $251 = __THREW__; __THREW__ = 0;
         $252 = $251&1;
         if ($252) {
          label = 38;
          break L24;
         }
        } else {
         $253 = ((($244)) + 1|0);
         HEAP32[$243>>2] = $253;
        }
        $254 = HEAP8[$__psn>>0]|0;
        $255 = $254 & 1;
        $256 = ($255<<24>>24)==(0);
        $257 = HEAP32[$18>>2]|0;
        $258 = $254&255;
        $259 = $258 >>> 1;
        $260 = $256 ? $259 : $257;
        $261 = ($260>>>0)>(1);
        $__psn$__trailing_sign$0 = $261 ? $__psn : $__trailing_sign$0;
        $869 = $867;$__trailing_sign$1 = $__psn$__trailing_sign$0;
        break L47;
       }
       if ($225) {
        $304 = HEAP32[$220>>2]|0;
        $305 = ((($304)) + 36|0);
        $306 = HEAP32[$305>>2]|0;
        __THREW__ = 0;
        $307 = (invoke_ii($306|0,($220|0))|0);
        $308 = __THREW__; __THREW__ = 0;
        $309 = $308&1;
        if ($309) {
         label = 38;
         break L24;
        }
        $$pre298 = HEAP8[$__psn>>0]|0;
        $$pre299 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert = ((($$pre299)) + 12|0);
        $$pre300 = HEAP32[$$phi$trans$insert>>2]|0;
        $$phi$trans$insert301 = ((($$pre299)) + 16|0);
        $$pre302 = HEAP32[$$phi$trans$insert301>>2]|0;
        $$0$i$i136 = $307;$314 = $$pre298;$321 = $$pre299;$322 = $$pre300;$324 = $$pre302;
       } else {
        $310 = HEAP8[$222>>0]|0;
        $311 = $310&255;
        $$0$i$i136 = $311;$314 = $202;$321 = $220;$322 = $222;$324 = $224;
       }
       $312 = $$0$i$i136&255;
       $313 = $314 & 1;
       $315 = ($313<<24>>24)==(0);
       $316 = HEAP32[$22>>2]|0;
       $317 = $315 ? $23 : $316;
       $318 = HEAP8[$317>>0]|0;
       $319 = ($312<<24>>24)==($318<<24>>24);
       $320 = ((($321)) + 12|0);
       $323 = ($322|0)==($324|0);
       if ($319) {
        if ($323) {
         $325 = HEAP32[$321>>2]|0;
         $326 = ((($325)) + 40|0);
         $327 = HEAP32[$326>>2]|0;
         __THREW__ = 0;
         (invoke_ii($327|0,($321|0))|0);
         $328 = __THREW__; __THREW__ = 0;
         $329 = $328&1;
         if ($329) {
          label = 38;
          break L24;
         }
        } else {
         $330 = ((($322)) + 1|0);
         HEAP32[$320>>2] = $330;
        }
        $331 = HEAP8[$__psn>>0]|0;
        $332 = $331 & 1;
        $333 = ($332<<24>>24)==(0);
        $334 = HEAP32[$18>>2]|0;
        $335 = $331&255;
        $336 = $335 >>> 1;
        $337 = $333 ? $336 : $334;
        $338 = ($337>>>0)>(1);
        $__psn$__trailing_sign$022 = $338 ? $__psn : $__trailing_sign$0;
        $869 = $867;$__trailing_sign$1 = $__psn$__trailing_sign$022;
        break L47;
       }
       if ($323) {
        $339 = HEAP32[$321>>2]|0;
        $340 = ((($339)) + 36|0);
        $341 = HEAP32[$340>>2]|0;
        __THREW__ = 0;
        $342 = (invoke_ii($341|0,($321|0))|0);
        $343 = __THREW__; __THREW__ = 0;
        $344 = $343&1;
        if ($344) {
         label = 38;
         break L24;
        } else {
         $$0$i$i145 = $342;
        }
       } else {
        $345 = HEAP8[$322>>0]|0;
        $346 = $345&255;
        $$0$i$i145 = $346;
       }
       $347 = $$0$i$i145&255;
       $348 = HEAP8[$__nsn>>0]|0;
       $349 = $348 & 1;
       $350 = ($349<<24>>24)==(0);
       $351 = HEAP32[$20>>2]|0;
       $352 = $350 ? $21 : $351;
       $353 = HEAP8[$352>>0]|0;
       $354 = ($347<<24>>24)==($353<<24>>24);
       if (!($354)) {
        label = 120;
        break L24;
       }
       $355 = HEAP32[$__b>>2]|0;
       $356 = ((($355)) + 12|0);
       $357 = HEAP32[$356>>2]|0;
       $358 = ((($355)) + 16|0);
       $359 = HEAP32[$358>>2]|0;
       $360 = ($357|0)==($359|0);
       if ($360) {
        $361 = HEAP32[$355>>2]|0;
        $362 = ((($361)) + 40|0);
        $363 = HEAP32[$362>>2]|0;
        __THREW__ = 0;
        (invoke_ii($363|0,($355|0))|0);
        $364 = __THREW__; __THREW__ = 0;
        $365 = $364&1;
        if ($365) {
         label = 38;
         break L24;
        }
       } else {
        $366 = ((($357)) + 1|0);
        HEAP32[$356>>2] = $366;
       }
       HEAP8[$__neg>>0] = 1;
       $367 = HEAP8[$__nsn>>0]|0;
       $368 = $367 & 1;
       $369 = ($368<<24>>24)==(0);
       $370 = HEAP32[$19>>2]|0;
       $371 = $367&255;
       $372 = $371 >>> 1;
       $373 = $369 ? $372 : $370;
       $374 = ($373>>>0)>(1);
       $__nsn$__trailing_sign$023 = $374 ? $__nsn : $__trailing_sign$0;
       $869 = $867;$__trailing_sign$1 = $__nsn$__trailing_sign$023;
      }
      break;
     }
     case 2:  {
      $377 = ($__trailing_sign$0|0)!=(0|0);
      $378 = ($__p$0>>>0)<(2);
      $or$cond = $378 | $377;
      if (!($or$cond)) {
       $379 = ($__p$0|0)==(2);
       $380 = HEAP8[$32>>0]|0;
       $381 = ($380<<24>>24)!=(0);
       $382 = $379 & $381;
       $brmerge = $25 | $382;
       if (!($brmerge)) {
        $869 = $867;$__trailing_sign$1 = 0;
        break L47;
       }
      }
      $383 = HEAP8[$__sym>>0]|0;
      $384 = $383 & 1;
      $385 = ($384<<24>>24)==(0);
      $386 = HEAP32[$26>>2]|0;
      $387 = $385 ? $27 : $386;
      $388 = $387;
      $389 = ($__p$0|0)==(0);
      L116: do {
       if ($389) {
        $$pre$i2$i$i180 = $868;$431 = $383;$436 = $386;$458 = $868;$__sym_curr_char$sroa$0$0 = $388;
       } else {
        $390 = (($__p$0) + -1)|0;
        $391 = (($__pat) + ($390)|0);
        $392 = HEAP8[$391>>0]|0;
        $switch = ($392&255)<(2);
        if ($switch) {
         $393 = HEAP32[$28>>2]|0;
         $394 = $383&255;
         $395 = $394 >>> 1;
         $396 = $385 ? $395 : $393;
         $397 = (($387) + ($396)|0);
         $__sym_space_end$sroa$0$0 = $388;
         while(1) {
          $398 = $__sym_space_end$sroa$0$0;
          $399 = ($398|0)==($397|0);
          if ($399) {
           $__sym_space_end$sroa$0$0$lcssa = $__sym_space_end$sroa$0$0;
           break;
          }
          $400 = HEAP8[$398>>0]|0;
          $isascii1$i186 = ($400<<24>>24)>(-1);
          if (!($isascii1$i186)) {
           $__sym_space_end$sroa$0$0$lcssa = $__sym_space_end$sroa$0$0;
           break;
          }
          $401 = $400 << 24 >> 24;
          $402 = HEAP32[$17>>2]|0;
          $403 = (($402) + ($401<<1)|0);
          $404 = HEAP16[$403>>1]|0;
          $405 = $404 & 8192;
          $406 = ($405<<16>>16)==(0);
          if ($406) {
           $__sym_space_end$sroa$0$0$lcssa = $__sym_space_end$sroa$0$0;
           break;
          }
          $407 = ((($398)) + 1|0);
          $408 = $407;
          $__sym_space_end$sroa$0$0 = $408;
         }
         $409 = (($__sym_space_end$sroa$0$0$lcssa) - ($388))|0;
         $410 = HEAP8[$__spaces>>0]|0;
         $411 = $410 & 1;
         $412 = ($411<<24>>24)==(0);
         $413 = HEAP32[$29>>2]|0;
         $414 = $410&255;
         $415 = $414 >>> 1;
         $416 = $412 ? $415 : $413;
         $417 = ($409>>>0)>($416>>>0);
         if ($417) {
          $$pre$i2$i$i180 = $868;$431 = $383;$436 = $386;$458 = $868;$__sym_curr_char$sroa$0$0 = $388;
         } else {
          $418 = HEAP32[$30>>2]|0;
          $419 = $412 ? $31 : $418;
          $420 = (($419) + ($416)|0);
          $421 = (0 - ($409))|0;
          $422 = (($420) + ($421)|0);
          $$sink = $387;$423 = $422;
          while(1) {
           $424 = ($423|0)==($420|0);
           if ($424) {
            $$pre$i2$i$i180 = $868;$431 = $383;$436 = $386;$458 = $868;$__sym_curr_char$sroa$0$0 = $__sym_space_end$sroa$0$0$lcssa;
            break L116;
           }
           $425 = HEAP8[$423>>0]|0;
           $426 = HEAP8[$$sink>>0]|0;
           $427 = ($425<<24>>24)==($426<<24>>24);
           if (!($427)) {
            $$pre$i2$i$i180 = $868;$431 = $383;$436 = $386;$458 = $868;$__sym_curr_char$sroa$0$0 = $388;
            break L116;
           }
           $428 = ((($423)) + 1|0);
           $429 = ((($$sink)) + 1|0);
           $$sink = $429;$423 = $428;
          }
         }
        } else {
         $$pre$i2$i$i180 = $868;$431 = $383;$436 = $386;$458 = $868;$__sym_curr_char$sroa$0$0 = $388;
        }
       }
      } while(0);
      L130: while(1) {
       $430 = $431 & 1;
       $432 = ($430<<24>>24)==(0);
       $433 = HEAP32[$28>>2]|0;
       $434 = $431&255;
       $435 = $434 >>> 1;
       $437 = $432 ? $27 : $436;
       $438 = $432 ? $435 : $433;
       $439 = (($437) + ($438)|0);
       $440 = $__sym_curr_char$sroa$0$0;
       $441 = ($440|0)==($439|0);
       if ($441) {
        $$lcssa = $439;
        break;
       }
       $442 = HEAP32[$__b>>2]|0;
       $443 = ($442|0)==(0|0);
       do {
        if ($443) {
         $456 = 0;
        } else {
         $444 = ((($442)) + 12|0);
         $445 = HEAP32[$444>>2]|0;
         $446 = ((($442)) + 16|0);
         $447 = HEAP32[$446>>2]|0;
         $448 = ($445|0)==($447|0);
         if ($448) {
          $449 = HEAP32[$442>>2]|0;
          $450 = ((($449)) + 36|0);
          $451 = HEAP32[$450>>2]|0;
          __THREW__ = 0;
          $452 = (invoke_ii($451|0,($442|0))|0);
          $453 = __THREW__; __THREW__ = 0;
          $454 = $453&1;
          if ($454) {
           label = 35;
           break L24;
          }
          $455 = ($452|0)==(-1);
          if ($455) {
           HEAP32[$__b>>2] = 0;
           $456 = 0;
           break;
          } else {
           $$pre$i$i$i176 = HEAP32[$__b>>2]|0;
           $456 = $$pre$i$i$i176;
           break;
          }
         } else {
          $456 = $442;
         }
        }
       } while(0);
       $457 = ($456|0)==(0|0);
       $459 = ($458|0)==(0|0);
       do {
        if ($459) {
         $$pre$i2$i$i180296 = $$pre$i2$i$i180;
         label = 148;
        } else {
         $460 = ((($458)) + 12|0);
         $461 = HEAP32[$460>>2]|0;
         $462 = ((($458)) + 16|0);
         $463 = HEAP32[$462>>2]|0;
         $464 = ($461|0)==($463|0);
         if (!($464)) {
          if ($457) {
           $$pre$i2$i$i180295 = $$pre$i2$i$i180;$871 = $458;
           break;
          } else {
           $$lcssa = $440;
           break L130;
          }
         }
         $465 = HEAP32[$458>>2]|0;
         $466 = ((($465)) + 36|0);
         $467 = HEAP32[$466>>2]|0;
         __THREW__ = 0;
         $468 = (invoke_ii($467|0,($458|0))|0);
         $469 = __THREW__; __THREW__ = 0;
         $470 = $469&1;
         if ($470) {
          label = 35;
          break L24;
         }
         $471 = ($468|0)==(-1);
         if ($471) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i180296 = 0;
          label = 148;
          break;
         } else {
          $472 = ($$pre$i2$i$i180|0)==(0|0);
          $tmp$i$i182 = $457 ^ $472;
          if ($tmp$i$i182) {
           $$pre$i2$i$i180295 = $$pre$i2$i$i180;$871 = $$pre$i2$i$i180;
           break;
          } else {
           $$lcssa = $440;
           break L130;
          }
         }
        }
       } while(0);
       if ((label|0) == 148) {
        label = 0;
        if ($457) {
         $$lcssa = $440;
         break;
        } else {
         $$pre$i2$i$i180295 = $$pre$i2$i$i180296;$871 = 0;
        }
       }
       $473 = HEAP32[$__b>>2]|0;
       $474 = ((($473)) + 12|0);
       $475 = HEAP32[$474>>2]|0;
       $476 = ((($473)) + 16|0);
       $477 = HEAP32[$476>>2]|0;
       $478 = ($475|0)==($477|0);
       if ($478) {
        $479 = HEAP32[$473>>2]|0;
        $480 = ((($479)) + 36|0);
        $481 = HEAP32[$480>>2]|0;
        __THREW__ = 0;
        $482 = (invoke_ii($481|0,($473|0))|0);
        $483 = __THREW__; __THREW__ = 0;
        $484 = $483&1;
        if ($484) {
         label = 35;
         break L24;
        } else {
         $$0$i$i172 = $482;
        }
       } else {
        $485 = HEAP8[$475>>0]|0;
        $486 = $485&255;
        $$0$i$i172 = $486;
       }
       $487 = $$0$i$i172&255;
       $488 = HEAP8[$440>>0]|0;
       $489 = ($487<<24>>24)==($488<<24>>24);
       if (!($489)) {
        $$lcssa = $440;
        break;
       }
       $490 = HEAP32[$__b>>2]|0;
       $491 = ((($490)) + 12|0);
       $492 = HEAP32[$491>>2]|0;
       $493 = ((($490)) + 16|0);
       $494 = HEAP32[$493>>2]|0;
       $495 = ($492|0)==($494|0);
       if ($495) {
        $496 = HEAP32[$490>>2]|0;
        $497 = ((($496)) + 40|0);
        $498 = HEAP32[$497>>2]|0;
        __THREW__ = 0;
        (invoke_ii($498|0,($490|0))|0);
        $499 = __THREW__; __THREW__ = 0;
        $500 = $499&1;
        if ($500) {
         label = 35;
         break L24;
        }
       } else {
        $501 = ((($492)) + 1|0);
        HEAP32[$491>>2] = $501;
       }
       $502 = ((($440)) + 1|0);
       $503 = $502;
       $$pre293 = HEAP8[$__sym>>0]|0;
       $$pre294 = HEAP32[$26>>2]|0;
       $$pre$i2$i$i180 = $$pre$i2$i$i180295;$431 = $$pre293;$436 = $$pre294;$458 = $871;$__sym_curr_char$sroa$0$0 = $503;
      }
      if ($25) {
       $504 = HEAP8[$__sym>>0]|0;
       $505 = $504 & 1;
       $506 = ($505<<24>>24)==(0);
       $507 = HEAP32[$26>>2]|0;
       $508 = HEAP32[$28>>2]|0;
       $509 = $504&255;
       $510 = $509 >>> 1;
       $511 = $506 ? $27 : $507;
       $512 = $506 ? $510 : $508;
       $513 = (($511) + ($512)|0);
       $514 = ($$lcssa|0)==($513|0);
       if ($514) {
        $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 160;
        break L24;
       }
      } else {
       $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 4:  {
      $89 = HEAP8[$__ts>>0]|0;
      $$pre$i2$i$i163 = $868;$533 = $868;$588 = $867;$__ng$0 = 0;
      L165: while(1) {
       $517 = HEAP32[$__b>>2]|0;
       $518 = ($517|0)==(0|0);
       do {
        if ($518) {
         $531 = 0;
        } else {
         $519 = ((($517)) + 12|0);
         $520 = HEAP32[$519>>2]|0;
         $521 = ((($517)) + 16|0);
         $522 = HEAP32[$521>>2]|0;
         $523 = ($520|0)==($522|0);
         if ($523) {
          $524 = HEAP32[$517>>2]|0;
          $525 = ((($524)) + 36|0);
          $526 = HEAP32[$525>>2]|0;
          __THREW__ = 0;
          $527 = (invoke_ii($526|0,($517|0))|0);
          $528 = __THREW__; __THREW__ = 0;
          $529 = $528&1;
          if ($529) {
           label = 37;
           break L24;
          }
          $530 = ($527|0)==(-1);
          if ($530) {
           HEAP32[$__b>>2] = 0;
           $531 = 0;
           break;
          } else {
           $$pre$i$i$i159 = HEAP32[$__b>>2]|0;
           $531 = $$pre$i$i$i159;
           break;
          }
         } else {
          $531 = $517;
         }
        }
       } while(0);
       $532 = ($531|0)==(0|0);
       $534 = ($533|0)==(0|0);
       do {
        if ($534) {
         $$pre$i2$i$i163283 = $$pre$i2$i$i163;
         label = 173;
        } else {
         $535 = ((($533)) + 12|0);
         $536 = HEAP32[$535>>2]|0;
         $537 = ((($533)) + 16|0);
         $538 = HEAP32[$537>>2]|0;
         $539 = ($536|0)==($538|0);
         if (!($539)) {
          if ($532) {
           $$pre$i2$i$i163285 = $$pre$i2$i$i163;$872 = $533;
           break;
          } else {
           $$lcssa392 = $588;$$pre$i2$i$i123 = $$pre$i2$i$i163;$__ng$0$lcssa393 = $__ng$0;
           break L165;
          }
         }
         $540 = HEAP32[$533>>2]|0;
         $541 = ((($540)) + 36|0);
         $542 = HEAP32[$541>>2]|0;
         __THREW__ = 0;
         $543 = (invoke_ii($542|0,($533|0))|0);
         $544 = __THREW__; __THREW__ = 0;
         $545 = $544&1;
         if ($545) {
          label = 37;
          break L24;
         }
         $546 = ($543|0)==(-1);
         if ($546) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i163283 = 0;
          label = 173;
          break;
         } else {
          $547 = ($$pre$i2$i$i163|0)==(0|0);
          $tmp$i$i165 = $532 ^ $547;
          if ($tmp$i$i165) {
           $$pre$i2$i$i163285 = $$pre$i2$i$i163;$872 = $$pre$i2$i$i163;
           break;
          } else {
           $$lcssa392 = $588;$$pre$i2$i$i123 = $$pre$i2$i$i163;$__ng$0$lcssa393 = $__ng$0;
           break L165;
          }
         }
        }
       } while(0);
       if ((label|0) == 173) {
        label = 0;
        if ($532) {
         $$lcssa392 = $588;$$pre$i2$i$i123 = $$pre$i2$i$i163283;$__ng$0$lcssa393 = $__ng$0;
         break;
        } else {
         $$pre$i2$i$i163285 = $$pre$i2$i$i163283;$872 = 0;
        }
       }
       $548 = HEAP32[$__b>>2]|0;
       $549 = ((($548)) + 12|0);
       $550 = HEAP32[$549>>2]|0;
       $551 = ((($548)) + 16|0);
       $552 = HEAP32[$551>>2]|0;
       $553 = ($550|0)==($552|0);
       if ($553) {
        $554 = HEAP32[$548>>2]|0;
        $555 = ((($554)) + 36|0);
        $556 = HEAP32[$555>>2]|0;
        __THREW__ = 0;
        $557 = (invoke_ii($556|0,($548|0))|0);
        $558 = __THREW__; __THREW__ = 0;
        $559 = $558&1;
        if ($559) {
         label = 37;
         break L24;
        } else {
         $$0$i$i155 = $557;
        }
       } else {
        $560 = HEAP8[$550>>0]|0;
        $561 = $560&255;
        $$0$i$i155 = $561;
       }
       $562 = $$0$i$i155&255;
       $isascii1$i153 = ($562<<24>>24)>(-1);
       if ($isascii1$i153) {
        $sext239 = $$0$i$i155 << 24;
        $563 = $sext239 >> 24;
        $564 = HEAP32[$17>>2]|0;
        $565 = (($564) + ($563<<1)|0);
        $566 = HEAP16[$565>>1]|0;
        $567 = $566 & 2048;
        $568 = ($567<<16>>16)==(0);
        if ($568) {
         label = 184;
        } else {
         $569 = HEAP32[$__wn>>2]|0;
         $570 = HEAP32[$0>>2]|0;
         $571 = ($569|0)==($570|0);
         if ($571) {
          __THREW__ = 0;
          invoke_viii(736,($__wb|0),($__wn|0),($0|0));
          $572 = __THREW__; __THREW__ = 0;
          $573 = $572&1;
          if ($573) {
           label = 37;
           break L24;
          }
          $$pre = HEAP32[$__wn>>2]|0;
          $575 = $$pre;
         } else {
          $575 = $569;
         }
         $574 = ((($575)) + 1|0);
         HEAP32[$__wn>>2] = $574;
         HEAP8[$575>>0] = $562;
         $576 = (($__ng$0) + 1)|0;
         $873 = $588;$__ng$2$ph = $576;
        }
       } else {
        label = 184;
       }
       if ((label|0) == 184) {
        label = 0;
        $577 = HEAP8[$__grp>>0]|0;
        $578 = $577 & 1;
        $579 = ($578<<24>>24)==(0);
        $580 = HEAP32[$33>>2]|0;
        $581 = $577&255;
        $582 = $581 >>> 1;
        $583 = $579 ? $582 : $580;
        $584 = ($583|0)!=(0);
        $585 = ($__ng$0|0)!=(0);
        $or$cond12 = $585 & $584;
        $586 = ($562<<24>>24)==($89<<24>>24);
        $or$cond25 = $586 & $or$cond12;
        if (!($or$cond25)) {
         $$lcssa392 = $588;$$pre$i2$i$i123 = $$pre$i2$i$i163285;$__ng$0$lcssa393 = $__ng$0;
         break;
        }
        $587 = HEAP32[$__ge>>2]|0;
        $589 = ($588|0)==($587|0);
        if ($589) {
         __THREW__ = 0;
         invoke_viii(737,($__gb|0),($__gn|0),($__ge|0));
         $590 = __THREW__; __THREW__ = 0;
         $591 = $590&1;
         if ($591) {
          label = 37;
          break L24;
         }
         $$pre288 = HEAP32[$__gn>>2]|0;
         $593 = $$pre288;
        } else {
         $593 = $588;
        }
        $592 = ((($593)) + 4|0);
        HEAP32[$__gn>>2] = $592;
        HEAP32[$593>>2] = $__ng$0;
        $873 = $592;$__ng$2$ph = 0;
       }
       $594 = HEAP32[$__b>>2]|0;
       $595 = ((($594)) + 12|0);
       $596 = HEAP32[$595>>2]|0;
       $597 = ((($594)) + 16|0);
       $598 = HEAP32[$597>>2]|0;
       $599 = ($596|0)==($598|0);
       if ($599) {
        $600 = HEAP32[$594>>2]|0;
        $601 = ((($600)) + 40|0);
        $602 = HEAP32[$601>>2]|0;
        __THREW__ = 0;
        (invoke_ii($602|0,($594|0))|0);
        $603 = __THREW__; __THREW__ = 0;
        $604 = $603&1;
        if ($604) {
         label = 37;
         break L24;
        } else {
         $$pre$i2$i$i163 = $$pre$i2$i$i163285;$533 = $872;$588 = $873;$__ng$0 = $__ng$2$ph;
         continue;
        }
       } else {
        $605 = ((($596)) + 1|0);
        HEAP32[$595>>2] = $605;
        $$pre$i2$i$i163 = $$pre$i2$i$i163285;$533 = $872;$588 = $873;$__ng$0 = $__ng$2$ph;
        continue;
       }
      }
      $606 = HEAP32[$__gb>>2]|0;
      $607 = ($606|0)!=($$lcssa392|0);
      $608 = ($__ng$0$lcssa393|0)!=(0);
      $or$cond14 = $608 & $607;
      if ($or$cond14) {
       $609 = HEAP32[$__ge>>2]|0;
       $610 = ($$lcssa392|0)==($609|0);
       if ($610) {
        __THREW__ = 0;
        invoke_viii(737,($__gb|0),($__gn|0),($__ge|0));
        $611 = __THREW__; __THREW__ = 0;
        $612 = $611&1;
        if ($612) {
         label = 38;
         break L24;
        }
        $$pre290 = HEAP32[$__gn>>2]|0;
        $614 = $$pre290;
       } else {
        $614 = $$lcssa392;
       }
       $613 = ((($614)) + 4|0);
       HEAP32[$__gn>>2] = $613;
       HEAP32[$614>>2] = $__ng$0$lcssa393;
       $874 = $613;
      } else {
       $874 = $$lcssa392;
      }
      $615 = HEAP32[$__fd>>2]|0;
      $616 = ($615|0)>(0);
      L217: do {
       if ($616) {
        $617 = HEAP32[$__b>>2]|0;
        $618 = ($617|0)==(0|0);
        do {
         if ($618) {
          $631 = 0;
         } else {
          $619 = ((($617)) + 12|0);
          $620 = HEAP32[$619>>2]|0;
          $621 = ((($617)) + 16|0);
          $622 = HEAP32[$621>>2]|0;
          $623 = ($620|0)==($622|0);
          if ($623) {
           $624 = HEAP32[$617>>2]|0;
           $625 = ((($624)) + 36|0);
           $626 = HEAP32[$625>>2]|0;
           __THREW__ = 0;
           $627 = (invoke_ii($626|0,($617|0))|0);
           $628 = __THREW__; __THREW__ = 0;
           $629 = $628&1;
           if ($629) {
            label = 38;
            break L24;
           }
           $630 = ($627|0)==(-1);
           if ($630) {
            HEAP32[$__b>>2] = 0;
            $631 = 0;
            break;
           } else {
            $$pre$i$i$i119 = HEAP32[$__b>>2]|0;
            $631 = $$pre$i$i$i119;
            break;
           }
          } else {
           $631 = $617;
          }
         }
        } while(0);
        $632 = ($631|0)==(0|0);
        $633 = ($$pre$i2$i$i123|0)==(0|0);
        do {
         if ($633) {
          label = 210;
         } else {
          $634 = ((($$pre$i2$i$i123)) + 12|0);
          $635 = HEAP32[$634>>2]|0;
          $636 = ((($$pre$i2$i$i123)) + 16|0);
          $637 = HEAP32[$636>>2]|0;
          $638 = ($635|0)==($637|0);
          if ($638) {
           $639 = HEAP32[$$pre$i2$i$i123>>2]|0;
           $640 = ((($639)) + 36|0);
           $641 = HEAP32[$640>>2]|0;
           __THREW__ = 0;
           $642 = (invoke_ii($641|0,($$pre$i2$i$i123|0))|0);
           $643 = __THREW__; __THREW__ = 0;
           $644 = $643&1;
           if ($644) {
            label = 38;
            break L24;
           }
           $645 = ($642|0)==(-1);
           if ($645) {
            HEAP32[$__e>>2] = 0;
            label = 210;
            break;
           }
          }
          if ($632) {
           $875 = $$pre$i2$i$i123;
          } else {
           label = 215;
           break L24;
          }
         }
        } while(0);
        if ((label|0) == 210) {
         label = 0;
         if ($632) {
          label = 215;
          break L24;
         } else {
          $875 = 0;
         }
        }
        $646 = HEAP32[$__b>>2]|0;
        $647 = ((($646)) + 12|0);
        $648 = HEAP32[$647>>2]|0;
        $649 = ((($646)) + 16|0);
        $650 = HEAP32[$649>>2]|0;
        $651 = ($648|0)==($650|0);
        if ($651) {
         $652 = HEAP32[$646>>2]|0;
         $653 = ((($652)) + 36|0);
         $654 = HEAP32[$653>>2]|0;
         __THREW__ = 0;
         $655 = (invoke_ii($654|0,($646|0))|0);
         $656 = __THREW__; __THREW__ = 0;
         $657 = $656&1;
         if ($657) {
          label = 38;
          break L24;
         } else {
          $$0$i$i112 = $655;
         }
        } else {
         $658 = HEAP8[$648>>0]|0;
         $659 = $658&255;
         $$0$i$i112 = $659;
        }
        $660 = $$0$i$i112&255;
        $661 = HEAP8[$__dp>>0]|0;
        $662 = ($660<<24>>24)==($661<<24>>24);
        if (!($662)) {
         label = 215;
         break L24;
        }
        $665 = HEAP32[$__b>>2]|0;
        $666 = ((($665)) + 12|0);
        $667 = HEAP32[$666>>2]|0;
        $668 = ((($665)) + 16|0);
        $669 = HEAP32[$668>>2]|0;
        $670 = ($667|0)==($669|0);
        if ($670) {
         $671 = HEAP32[$665>>2]|0;
         $672 = ((($671)) + 40|0);
         $673 = HEAP32[$672>>2]|0;
         __THREW__ = 0;
         (invoke_ii($673|0,($665|0))|0);
         $674 = __THREW__; __THREW__ = 0;
         $675 = $674&1;
         if ($675) {
          label = 38;
          break L24;
         } else {
          $$pre$i2$i$i99 = $875;$677 = $615;$695 = $875;
         }
        } else {
         $676 = ((($667)) + 1|0);
         HEAP32[$666>>2] = $676;
         $$pre$i2$i$i99 = $875;$677 = $615;$695 = $875;
        }
        while(1) {
         $678 = ($677|0)>(0);
         if (!($678)) {
          break L217;
         }
         $679 = HEAP32[$__b>>2]|0;
         $680 = ($679|0)==(0|0);
         do {
          if ($680) {
           $693 = 0;
          } else {
           $681 = ((($679)) + 12|0);
           $682 = HEAP32[$681>>2]|0;
           $683 = ((($679)) + 16|0);
           $684 = HEAP32[$683>>2]|0;
           $685 = ($682|0)==($684|0);
           if ($685) {
            $686 = HEAP32[$679>>2]|0;
            $687 = ((($686)) + 36|0);
            $688 = HEAP32[$687>>2]|0;
            __THREW__ = 0;
            $689 = (invoke_ii($688|0,($679|0))|0);
            $690 = __THREW__; __THREW__ = 0;
            $691 = $690&1;
            if ($691) {
             label = 36;
             break L24;
            }
            $692 = ($689|0)==(-1);
            if ($692) {
             HEAP32[$__b>>2] = 0;
             $693 = 0;
             break;
            } else {
             $$pre$i$i$i95 = HEAP32[$__b>>2]|0;
             $693 = $$pre$i$i$i95;
             break;
            }
           } else {
            $693 = $679;
           }
          }
         } while(0);
         $694 = ($693|0)==(0|0);
         $696 = ($695|0)==(0|0);
         do {
          if ($696) {
           $$pre$i2$i$i99291$ph = $$pre$i2$i$i99;
           label = 232;
          } else {
           $697 = ((($695)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ((($695)) + 16|0);
           $700 = HEAP32[$699>>2]|0;
           $701 = ($698|0)==($700|0);
           if (!($701)) {
            if ($694) {
             $$pre$i2$i$i99291310 = $$pre$i2$i$i99;$876 = $695;
             break;
            } else {
             label = 239;
             break L24;
            }
           }
           $702 = HEAP32[$695>>2]|0;
           $703 = ((($702)) + 36|0);
           $704 = HEAP32[$703>>2]|0;
           __THREW__ = 0;
           $705 = (invoke_ii($704|0,($695|0))|0);
           $706 = __THREW__; __THREW__ = 0;
           $707 = $706&1;
           if ($707) {
            label = 36;
            break L24;
           }
           $708 = ($705|0)==(-1);
           if ($708) {
            HEAP32[$__e>>2] = 0;
            $$pre$i2$i$i99291$ph = 0;
            label = 232;
            break;
           } else {
            $709 = ($$pre$i2$i$i99|0)==(0|0);
            $tmp$i$i101 = $694 ^ $709;
            if ($tmp$i$i101) {
             $$pre$i2$i$i99291310 = $$pre$i2$i$i99;$876 = $$pre$i2$i$i99;
             break;
            } else {
             label = 239;
             break L24;
            }
           }
          }
         } while(0);
         if ((label|0) == 232) {
          label = 0;
          if ($694) {
           label = 239;
           break L24;
          } else {
           $$pre$i2$i$i99291310 = $$pre$i2$i$i99291$ph;$876 = 0;
          }
         }
         $710 = HEAP32[$__b>>2]|0;
         $711 = ((($710)) + 12|0);
         $712 = HEAP32[$711>>2]|0;
         $713 = ((($710)) + 16|0);
         $714 = HEAP32[$713>>2]|0;
         $715 = ($712|0)==($714|0);
         if ($715) {
          $716 = HEAP32[$710>>2]|0;
          $717 = ((($716)) + 36|0);
          $718 = HEAP32[$717>>2]|0;
          __THREW__ = 0;
          $719 = (invoke_ii($718|0,($710|0))|0);
          $720 = __THREW__; __THREW__ = 0;
          $721 = $720&1;
          if ($721) {
           label = 36;
           break L24;
          } else {
           $$0$i$i90 = $719;
          }
         } else {
          $722 = HEAP8[$712>>0]|0;
          $723 = $722&255;
          $$0$i$i90 = $723;
         }
         $724 = $$0$i$i90&255;
         $isascii1$i88 = ($724<<24>>24)>(-1);
         if (!($isascii1$i88)) {
          label = 239;
          break L24;
         }
         $sext = $$0$i$i90 << 24;
         $725 = $sext >> 24;
         $726 = HEAP32[$17>>2]|0;
         $727 = (($726) + ($725<<1)|0);
         $728 = HEAP16[$727>>1]|0;
         $729 = $728 & 2048;
         $730 = ($729<<16>>16)==(0);
         if ($730) {
          label = 239;
          break L24;
         }
         $733 = HEAP32[$__wn>>2]|0;
         $734 = HEAP32[$0>>2]|0;
         $735 = ($733|0)==($734|0);
         if ($735) {
          __THREW__ = 0;
          invoke_viii(736,($__wb|0),($__wn|0),($0|0));
          $736 = __THREW__; __THREW__ = 0;
          $737 = $736&1;
          if ($737) {
           label = 36;
           break L24;
          }
         }
         $738 = HEAP32[$__b>>2]|0;
         $739 = ((($738)) + 12|0);
         $740 = HEAP32[$739>>2]|0;
         $741 = ((($738)) + 16|0);
         $742 = HEAP32[$741>>2]|0;
         $743 = ($740|0)==($742|0);
         if ($743) {
          $744 = HEAP32[$738>>2]|0;
          $745 = ((($744)) + 36|0);
          $746 = HEAP32[$745>>2]|0;
          __THREW__ = 0;
          $747 = (invoke_ii($746|0,($738|0))|0);
          $748 = __THREW__; __THREW__ = 0;
          $749 = $748&1;
          if ($749) {
           label = 36;
           break L24;
          } else {
           $$0$i$i83 = $747;
          }
         } else {
          $750 = HEAP8[$740>>0]|0;
          $751 = $750&255;
          $$0$i$i83 = $751;
         }
         $752 = $$0$i$i83&255;
         $753 = HEAP32[$__wn>>2]|0;
         $754 = ((($753)) + 1|0);
         HEAP32[$__wn>>2] = $754;
         HEAP8[$753>>0] = $752;
         $755 = (($677) + -1)|0;
         HEAP32[$__fd>>2] = $755;
         $756 = HEAP32[$__b>>2]|0;
         $757 = ((($756)) + 12|0);
         $758 = HEAP32[$757>>2]|0;
         $759 = ((($756)) + 16|0);
         $760 = HEAP32[$759>>2]|0;
         $761 = ($758|0)==($760|0);
         if ($761) {
          $762 = HEAP32[$756>>2]|0;
          $763 = ((($762)) + 40|0);
          $764 = HEAP32[$763>>2]|0;
          __THREW__ = 0;
          (invoke_ii($764|0,($756|0))|0);
          $765 = __THREW__; __THREW__ = 0;
          $766 = $765&1;
          if ($766) {
           label = 36;
           break L24;
          } else {
           $$pre$i2$i$i99 = $$pre$i2$i$i99291310;$677 = $755;$695 = $876;
           continue;
          }
         } else {
          $767 = ((($758)) + 1|0);
          HEAP32[$757>>2] = $767;
          $$pre$i2$i$i99 = $$pre$i2$i$i99291310;$677 = $755;$695 = $876;
          continue;
         }
        }
       }
      } while(0);
      $768 = HEAP32[$__wn>>2]|0;
      $769 = HEAP32[$__wb>>2]|0;
      $770 = ($768|0)==($769|0);
      if ($770) {
       label = 249;
       break L24;
      } else {
       $869 = $874;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     default: {
      $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    L285: do {
     if ((label|0) == 58) {
      while(1) {
       label = 0;
       $132 = HEAP32[$__b>>2]|0;
       $133 = ($132|0)==(0|0);
       do {
        if ($133) {
         $146 = 0;
        } else {
         $134 = ((($132)) + 12|0);
         $135 = HEAP32[$134>>2]|0;
         $136 = ((($132)) + 16|0);
         $137 = HEAP32[$136>>2]|0;
         $138 = ($135|0)==($137|0);
         if ($138) {
          $139 = HEAP32[$132>>2]|0;
          $140 = ((($139)) + 36|0);
          $141 = HEAP32[$140>>2]|0;
          __THREW__ = 0;
          $142 = (invoke_ii($141|0,($132|0))|0);
          $143 = __THREW__; __THREW__ = 0;
          $144 = $143&1;
          if ($144) {
           label = 34;
           break L24;
          }
          $145 = ($142|0)==(-1);
          if ($145) {
           HEAP32[$__b>>2] = 0;
           $146 = 0;
           break;
          } else {
           $$pre$i$i$i63 = HEAP32[$__b>>2]|0;
           $146 = $$pre$i$i$i63;
           break;
          }
         } else {
          $146 = $132;
         }
        }
       } while(0);
       $147 = ($146|0)==(0|0);
       $149 = ($148|0)==(0|0);
       do {
        if ($149) {
         $$pre$i2$i$i67305 = $$pre$i2$i$i67;
         label = 70;
        } else {
         $150 = ((($148)) + 12|0);
         $151 = HEAP32[$150>>2]|0;
         $152 = ((($148)) + 16|0);
         $153 = HEAP32[$152>>2]|0;
         $154 = ($151|0)==($153|0);
         if (!($154)) {
          if ($147) {
           $$pre$i2$i$i67307 = $$pre$i2$i$i67;$870 = $148;
           break;
          } else {
           $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
           break L285;
          }
         }
         $155 = HEAP32[$148>>2]|0;
         $156 = ((($155)) + 36|0);
         $157 = HEAP32[$156>>2]|0;
         __THREW__ = 0;
         $158 = (invoke_ii($157|0,($148|0))|0);
         $159 = __THREW__; __THREW__ = 0;
         $160 = $159&1;
         if ($160) {
          label = 34;
          break L24;
         }
         $161 = ($158|0)==(-1);
         if ($161) {
          HEAP32[$__e>>2] = 0;
          $$pre$i2$i$i67305 = 0;
          label = 70;
          break;
         } else {
          $162 = ($$pre$i2$i$i67|0)==(0|0);
          $tmp$i$i69 = $147 ^ $162;
          if ($tmp$i$i69) {
           $$pre$i2$i$i67307 = $$pre$i2$i$i67;$870 = $$pre$i2$i$i67;
           break;
          } else {
           $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
           break L285;
          }
         }
        }
       } while(0);
       if ((label|0) == 70) {
        label = 0;
        if ($147) {
         $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
         break L285;
        } else {
         $$pre$i2$i$i67307 = $$pre$i2$i$i67305;$870 = 0;
        }
       }
       $163 = HEAP32[$__b>>2]|0;
       $164 = ((($163)) + 12|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ((($163)) + 16|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($165|0)==($167|0);
       if ($168) {
        $169 = HEAP32[$163>>2]|0;
        $170 = ((($169)) + 36|0);
        $171 = HEAP32[$170>>2]|0;
        __THREW__ = 0;
        $172 = (invoke_ii($171|0,($163|0))|0);
        $173 = __THREW__; __THREW__ = 0;
        $174 = $173&1;
        if ($174) {
         label = 34;
         break L24;
        } else {
         $$0$i$i73 = $172;
        }
       } else {
        $175 = HEAP8[$165>>0]|0;
        $176 = $175&255;
        $$0$i$i73 = $176;
       }
       $177 = $$0$i$i73&255;
       $isascii1$i76 = ($177<<24>>24)>(-1);
       if (!($isascii1$i76)) {
        $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
        break L285;
       }
       $sext240 = $$0$i$i73 << 24;
       $178 = $sext240 >> 24;
       $179 = HEAP32[$17>>2]|0;
       $180 = (($179) + ($178<<1)|0);
       $181 = HEAP16[$180>>1]|0;
       $182 = $181 & 8192;
       $183 = ($182<<16>>16)==(0);
       if ($183) {
        $869 = $867;$__trailing_sign$1 = $__trailing_sign$0;
        break L285;
       }
       $184 = HEAP32[$__b>>2]|0;
       $185 = ((($184)) + 12|0);
       $186 = HEAP32[$185>>2]|0;
       $187 = ((($184)) + 16|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = ($186|0)==($188|0);
       if ($189) {
        $190 = HEAP32[$184>>2]|0;
        $191 = ((($190)) + 40|0);
        $192 = HEAP32[$191>>2]|0;
        __THREW__ = 0;
        $193 = (invoke_ii($192|0,($184|0))|0);
        $194 = __THREW__; __THREW__ = 0;
        $195 = $194&1;
        if ($195) {
         label = 34;
         break L24;
        } else {
         $$0$i$i80 = $193;
        }
       } else {
        $196 = ((($186)) + 1|0);
        HEAP32[$185>>2] = $196;
        $197 = HEAP8[$186>>0]|0;
        $198 = $197&255;
        $$0$i$i80 = $198;
       }
       $199 = $$0$i$i80&255;
       __THREW__ = 0;
       invoke_vii(628,($__spaces|0),($199|0));
       $200 = __THREW__; __THREW__ = 0;
       $201 = $200&1;
       if ($201) {
        label = 34;
        break L24;
       } else {
        $$pre$i2$i$i67 = $$pre$i2$i$i67307;$148 = $870;
        label = 58;
       }
      }
     }
    } while(0);
    $773 = (($__p$0) + 1)|0;
    $867 = $869;$__p$0 = $773;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L319:    switch (label|0) {
    case 34: {
     $67 = ___cxa_find_matching_catch_2()|0;
     $68 = tempRet0;
     $lpad$phi$index = $67;$lpad$phi$index7 = $68;
     break L21;
     break;
    }
    case 35: {
     $69 = ___cxa_find_matching_catch_2()|0;
     $70 = tempRet0;
     $lpad$phi$index = $69;$lpad$phi$index7 = $70;
     break L21;
     break;
    }
    case 36: {
     $71 = ___cxa_find_matching_catch_2()|0;
     $72 = tempRet0;
     $lpad$phi$index = $71;$lpad$phi$index7 = $72;
     break L21;
     break;
    }
    case 37: {
     $73 = ___cxa_find_matching_catch_2()|0;
     $74 = tempRet0;
     $lpad$phi$index = $73;$lpad$phi$index7 = $74;
     break L21;
     break;
    }
    case 38: {
     $75 = ___cxa_find_matching_catch_2()|0;
     $76 = tempRet0;
     $lpad$phi$index = $75;$lpad$phi$index7 = $76;
     break L21;
     break;
    }
    case 56: {
     $129 = HEAP32[$__err>>2]|0;
     $130 = $129 | 4;
     HEAP32[$__err>>2] = $130;
     $$10 = 0;
     break;
    }
    case 120: {
     $375 = HEAP32[$__err>>2]|0;
     $376 = $375 | 4;
     HEAP32[$__err>>2] = $376;
     $$10 = 0;
     break;
    }
    case 160: {
     $515 = HEAP32[$__err>>2]|0;
     $516 = $515 | 4;
     HEAP32[$__err>>2] = $516;
     $$10 = 0;
     break;
    }
    case 215: {
     $663 = HEAP32[$__err>>2]|0;
     $664 = $663 | 4;
     HEAP32[$__err>>2] = $664;
     $$10 = 0;
     break;
    }
    case 239: {
     $731 = HEAP32[$__err>>2]|0;
     $732 = $731 | 4;
     HEAP32[$__err>>2] = $732;
     $$10 = 0;
     break;
    }
    case 249: {
     $771 = HEAP32[$__err>>2]|0;
     $772 = $771 | 4;
     HEAP32[$__err>>2] = $772;
     $$10 = 0;
     break;
    }
    case 251: {
     $774 = ($__trailing_sign$0$lcssa|0)==(0|0);
     L321: do {
      if (!($774)) {
       $775 = ((($__trailing_sign$0$lcssa)) + 1|0);
       $776 = ((($__trailing_sign$0$lcssa)) + 8|0);
       $777 = ((($__trailing_sign$0$lcssa)) + 4|0);
       $__i$0 = 1;
       L323: while(1) {
        $778 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $779 = $778 & 1;
        $780 = ($779<<24>>24)==(0);
        if ($780) {
         $782 = $778&255;
         $783 = $782 >>> 1;
         $785 = $783;
        } else {
         $781 = HEAP32[$777>>2]|0;
         $785 = $781;
        }
        $784 = ($__i$0>>>0)<($785>>>0);
        if (!($784)) {
         break L321;
        }
        $786 = HEAP32[$__b>>2]|0;
        $787 = ($786|0)==(0|0);
        do {
         if ($787) {
          $800 = 0;
         } else {
          $788 = ((($786)) + 12|0);
          $789 = HEAP32[$788>>2]|0;
          $790 = ((($786)) + 16|0);
          $791 = HEAP32[$790>>2]|0;
          $792 = ($789|0)==($791|0);
          if ($792) {
           $793 = HEAP32[$786>>2]|0;
           $794 = ((($793)) + 36|0);
           $795 = HEAP32[$794>>2]|0;
           __THREW__ = 0;
           $796 = (invoke_ii($795|0,($786|0))|0);
           $797 = __THREW__; __THREW__ = 0;
           $798 = $797&1;
           if ($798) {
            label = 33;
            break L323;
           }
           $799 = ($796|0)==(-1);
           if ($799) {
            HEAP32[$__b>>2] = 0;
            $800 = 0;
            break;
           } else {
            $$pre$i$i$i = HEAP32[$__b>>2]|0;
            $800 = $$pre$i$i$i;
            break;
           }
          } else {
           $800 = $786;
          }
         }
        } while(0);
        $801 = ($800|0)==(0|0);
        $802 = HEAP32[$__e>>2]|0;
        $803 = ($802|0)==(0|0);
        do {
         if ($803) {
          label = 269;
         } else {
          $804 = ((($802)) + 12|0);
          $805 = HEAP32[$804>>2]|0;
          $806 = ((($802)) + 16|0);
          $807 = HEAP32[$806>>2]|0;
          $808 = ($805|0)==($807|0);
          if ($808) {
           $809 = HEAP32[$802>>2]|0;
           $810 = ((($809)) + 36|0);
           $811 = HEAP32[$810>>2]|0;
           __THREW__ = 0;
           $812 = (invoke_ii($811|0,($802|0))|0);
           $813 = __THREW__; __THREW__ = 0;
           $814 = $813&1;
           if ($814) {
            label = 33;
            break L323;
           }
           $815 = ($812|0)==(-1);
           if ($815) {
            HEAP32[$__e>>2] = 0;
            label = 269;
            break;
           }
          }
          if (!($801)) {
           label = 276;
           break L323;
          }
         }
        } while(0);
        if ((label|0) == 269) {
         label = 0;
         if ($801) {
          label = 276;
          break;
         }
        }
        $816 = HEAP32[$__b>>2]|0;
        $817 = ((($816)) + 12|0);
        $818 = HEAP32[$817>>2]|0;
        $819 = ((($816)) + 16|0);
        $820 = HEAP32[$819>>2]|0;
        $821 = ($818|0)==($820|0);
        if ($821) {
         $822 = HEAP32[$816>>2]|0;
         $823 = ((($822)) + 36|0);
         $824 = HEAP32[$823>>2]|0;
         __THREW__ = 0;
         $825 = (invoke_ii($824|0,($816|0))|0);
         $826 = __THREW__; __THREW__ = 0;
         $827 = $826&1;
         if ($827) {
          label = 33;
          break;
         } else {
          $$0$i$i = $825;
         }
        } else {
         $828 = HEAP8[$818>>0]|0;
         $829 = $828&255;
         $$0$i$i = $829;
        }
        $830 = $$0$i$i&255;
        $831 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $832 = $831 & 1;
        $833 = ($832<<24>>24)==(0);
        if ($833) {
         $836 = $775;
        } else {
         $834 = HEAP32[$776>>2]|0;
         $836 = $834;
        }
        $835 = (($836) + ($__i$0)|0);
        $837 = HEAP8[$835>>0]|0;
        $838 = ($830<<24>>24)==($837<<24>>24);
        if (!($838)) {
         label = 276;
         break;
        }
        $841 = (($__i$0) + 1)|0;
        $842 = HEAP32[$__b>>2]|0;
        $843 = ((($842)) + 12|0);
        $844 = HEAP32[$843>>2]|0;
        $845 = ((($842)) + 16|0);
        $846 = HEAP32[$845>>2]|0;
        $847 = ($844|0)==($846|0);
        if ($847) {
         $848 = HEAP32[$842>>2]|0;
         $849 = ((($848)) + 40|0);
         $850 = HEAP32[$849>>2]|0;
         __THREW__ = 0;
         (invoke_ii($850|0,($842|0))|0);
         $851 = __THREW__; __THREW__ = 0;
         $852 = $851&1;
         if ($852) {
          label = 33;
          break;
         } else {
          $__i$0 = $841;
          continue;
         }
        } else {
         $853 = ((($844)) + 1|0);
         HEAP32[$843>>2] = $853;
         $__i$0 = $841;
         continue;
        }
       }
       if ((label|0) == 33) {
        $65 = ___cxa_find_matching_catch_2()|0;
        $66 = tempRet0;
        $lpad$phi$index = $65;$lpad$phi$index7 = $66;
        break L21;
       }
       else if ((label|0) == 276) {
        $839 = HEAP32[$__err>>2]|0;
        $840 = $839 | 4;
        HEAP32[$__err>>2] = $840;
        $$10 = 0;
        break L319;
       }
      }
     } while(0);
     $854 = HEAP32[$__gb>>2]|0;
     $855 = ($854|0)==($$lcssa394|0);
     if ($855) {
      $$10 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$854,$$lcssa394,$__et);
      $856 = HEAP32[$__et>>2]|0;
      $857 = ($856|0)==(0);
      if ($857) {
       $$10 = 1;
       break;
      } else {
       $858 = HEAP32[$__err>>2]|0;
       $859 = $858 | 4;
       HEAP32[$__err>>2] = $859;
       $$10 = 0;
       break;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $860 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $861 = ($860|0)==(0|0);
   if (!($861)) {
    $862 = HEAP32[$2>>2]|0;
    __THREW__ = 0;
    invoke_vi($862|0,($860|0));
    $863 = __THREW__; __THREW__ = 0;
    $864 = $863&1;
    if ($864) {
     $865 = ___cxa_find_matching_catch_3(0|0)|0;
     $866 = tempRet0;
     ___clang_call_terminate($865);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$10|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($81|0,($79|0));
  $82 = __THREW__; __THREW__ = 0;
  $83 = $82&1;
  if ($83) {
   $84 = ___cxa_find_matching_catch_3(0|0)|0;
   $85 = tempRet0;
   ___clang_call_terminate($84);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i14 = 0, $__i$0$i$i$i19 = 0, $__i$0$i$i$i24 = 0, $__i$0$i$i$i29 = 0, $__i$0$i$i$i34 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i9 = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i15 = 0, $exitcond$i$i$i20 = 0, $exitcond$i$i$i25 = 0, $exitcond$i$i$i30 = 0, $exitcond$i$i$i35 = 0, $exitcond$i$i$i5 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24136)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $24 = ((($__nsn)) + 1|0);
   HEAP8[$24>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP8[$22>>0] = 0;
   $23 = ((($__nsn)) + 4|0);
   HEAP32[$23>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__nsn|0),0);
  $25 = __THREW__; __THREW__ = 0;
  $26 = $25&1;
  if ($26) {
   $27 = ___cxa_find_matching_catch_3(0|0)|0;
   $28 = tempRet0;
   ___clang_call_terminate($27);
   // unreachable;
  }
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $29 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$29>>2] = 0;
   $30 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $30;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $31 = HEAP32[$10>>2]|0;
  $32 = ((($31)) + 28|0);
  $33 = HEAP32[$32>>2]|0;
  FUNCTION_TABLE_vii[$33 & 1023]($2,$10);
  $34 = HEAP8[$__psn>>0]|0;
  $35 = $34 & 1;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   $40 = ((($__psn)) + 1|0);
   HEAP8[$40>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $37 = ((($__psn)) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   HEAP8[$38>>0] = 0;
   $39 = ((($__psn)) + 4|0);
   HEAP32[$39>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__psn|0),0);
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if ($42) {
   $43 = ___cxa_find_matching_catch_3(0|0)|0;
   $44 = tempRet0;
   ___clang_call_terminate($43);
   // unreachable;
  }
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $45 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$45>>2] = 0;
   $46 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $46;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $47 = HEAP32[$10>>2]|0;
  $48 = ((($47)) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (FUNCTION_TABLE_ii[$49 & 1023]($10)|0);
  HEAP8[$__dp>>0] = $50;
  $51 = HEAP32[$10>>2]|0;
  $52 = ((($51)) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (FUNCTION_TABLE_ii[$53 & 1023]($10)|0);
  HEAP8[$__ts>>0] = $54;
  $55 = HEAP32[$10>>2]|0;
  $56 = ((($55)) + 20|0);
  $57 = HEAP32[$56>>2]|0;
  FUNCTION_TABLE_vii[$57 & 1023]($3,$10);
  $58 = HEAP8[$__grp>>0]|0;
  $59 = $58 & 1;
  $60 = ($59<<24>>24)==(0);
  if ($60) {
   $64 = ((($__grp)) + 1|0);
   HEAP8[$64>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $61 = ((($__grp)) + 8|0);
   $62 = HEAP32[$61>>2]|0;
   HEAP8[$62>>0] = 0;
   $63 = ((($__grp)) + 4|0);
   HEAP32[$63>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $65 = __THREW__; __THREW__ = 0;
  $66 = $65&1;
  if ($66) {
   $67 = ___cxa_find_matching_catch_3(0|0)|0;
   $68 = tempRet0;
   ___clang_call_terminate($67);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $69 = (($3) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$69>>2] = 0;
   $70 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $70;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $71 = HEAP32[$10>>2]|0;
  $72 = ((($71)) + 24|0);
  $73 = HEAP32[$72>>2]|0;
  FUNCTION_TABLE_vii[$73 & 1023]($4,$10);
  $74 = HEAP8[$__sym>>0]|0;
  $75 = $74 & 1;
  $76 = ($75<<24>>24)==(0);
  if ($76) {
   $80 = ((($__sym)) + 1|0);
   HEAP8[$80>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $77 = ((($__sym)) + 8|0);
   $78 = HEAP32[$77>>2]|0;
   HEAP8[$78>>0] = 0;
   $79 = ((($__sym)) + 4|0);
   HEAP32[$79>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__sym|0),0);
  $81 = __THREW__; __THREW__ = 0;
  $82 = $81&1;
  if ($82) {
   $83 = ___cxa_find_matching_catch_3(0|0)|0;
   $84 = tempRet0;
   ___clang_call_terminate($83);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i14 = 0;
  while(1) {
   $exitcond$i$i$i15 = ($__i$0$i$i$i14|0)==(3);
   if ($exitcond$i$i$i15) {
    break;
   }
   $85 = (($4) + ($__i$0$i$i$i14<<2)|0);
   HEAP32[$85>>2] = 0;
   $86 = (($__i$0$i$i$i14) + 1)|0;
   $__i$0$i$i$i14 = $86;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $87 = HEAP32[$10>>2]|0;
  $88 = ((($87)) + 36|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (FUNCTION_TABLE_ii[$89 & 1023]($10)|0);
  $storemerge = $90;
 } else {
  $91 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24128)|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ((($92)) + 44|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vii[$94 & 1023]($5,$91);
  $95 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$95&255;HEAP8[$__pat+1>>0]=($95>>8)&255;HEAP8[$__pat+2>>0]=($95>>16)&255;HEAP8[$__pat+3>>0]=$95>>24;
  $96 = HEAP32[$91>>2]|0;
  $97 = ((($96)) + 32|0);
  $98 = HEAP32[$97>>2]|0;
  FUNCTION_TABLE_vii[$98 & 1023]($6,$91);
  $99 = HEAP8[$__nsn>>0]|0;
  $100 = $99 & 1;
  $101 = ($100<<24>>24)==(0);
  if ($101) {
   $105 = ((($__nsn)) + 1|0);
   HEAP8[$105>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $102 = ((($__nsn)) + 8|0);
   $103 = HEAP32[$102>>2]|0;
   HEAP8[$103>>0] = 0;
   $104 = ((($__nsn)) + 4|0);
   HEAP32[$104>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__nsn|0),0);
  $106 = __THREW__; __THREW__ = 0;
  $107 = $106&1;
  if ($107) {
   $108 = ___cxa_find_matching_catch_3(0|0)|0;
   $109 = tempRet0;
   ___clang_call_terminate($108);
   // unreachable;
  }
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i19 = 0;
  while(1) {
   $exitcond$i$i$i20 = ($__i$0$i$i$i19|0)==(3);
   if ($exitcond$i$i$i20) {
    break;
   }
   $110 = (($6) + ($__i$0$i$i$i19<<2)|0);
   HEAP32[$110>>2] = 0;
   $111 = (($__i$0$i$i$i19) + 1)|0;
   $__i$0$i$i$i19 = $111;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $112 = HEAP32[$91>>2]|0;
  $113 = ((($112)) + 28|0);
  $114 = HEAP32[$113>>2]|0;
  FUNCTION_TABLE_vii[$114 & 1023]($7,$91);
  $115 = HEAP8[$__psn>>0]|0;
  $116 = $115 & 1;
  $117 = ($116<<24>>24)==(0);
  if ($117) {
   $121 = ((($__psn)) + 1|0);
   HEAP8[$121>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $118 = ((($__psn)) + 8|0);
   $119 = HEAP32[$118>>2]|0;
   HEAP8[$119>>0] = 0;
   $120 = ((($__psn)) + 4|0);
   HEAP32[$120>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__psn|0),0);
  $122 = __THREW__; __THREW__ = 0;
  $123 = $122&1;
  if ($123) {
   $124 = ___cxa_find_matching_catch_3(0|0)|0;
   $125 = tempRet0;
   ___clang_call_terminate($124);
   // unreachable;
  }
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i24 = 0;
  while(1) {
   $exitcond$i$i$i25 = ($__i$0$i$i$i24|0)==(3);
   if ($exitcond$i$i$i25) {
    break;
   }
   $126 = (($7) + ($__i$0$i$i$i24<<2)|0);
   HEAP32[$126>>2] = 0;
   $127 = (($__i$0$i$i$i24) + 1)|0;
   $__i$0$i$i$i24 = $127;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $128 = HEAP32[$91>>2]|0;
  $129 = ((($128)) + 12|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = (FUNCTION_TABLE_ii[$130 & 1023]($91)|0);
  HEAP8[$__dp>>0] = $131;
  $132 = HEAP32[$91>>2]|0;
  $133 = ((($132)) + 16|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = (FUNCTION_TABLE_ii[$134 & 1023]($91)|0);
  HEAP8[$__ts>>0] = $135;
  $136 = HEAP32[$91>>2]|0;
  $137 = ((($136)) + 20|0);
  $138 = HEAP32[$137>>2]|0;
  FUNCTION_TABLE_vii[$138 & 1023]($8,$91);
  $139 = HEAP8[$__grp>>0]|0;
  $140 = $139 & 1;
  $141 = ($140<<24>>24)==(0);
  if ($141) {
   $145 = ((($__grp)) + 1|0);
   HEAP8[$145>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $142 = ((($__grp)) + 8|0);
   $143 = HEAP32[$142>>2]|0;
   HEAP8[$143>>0] = 0;
   $144 = ((($__grp)) + 4|0);
   HEAP32[$144>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $146 = __THREW__; __THREW__ = 0;
  $147 = $146&1;
  if ($147) {
   $148 = ___cxa_find_matching_catch_3(0|0)|0;
   $149 = tempRet0;
   ___clang_call_terminate($148);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i29 = 0;
  while(1) {
   $exitcond$i$i$i30 = ($__i$0$i$i$i29|0)==(3);
   if ($exitcond$i$i$i30) {
    break;
   }
   $150 = (($8) + ($__i$0$i$i$i29<<2)|0);
   HEAP32[$150>>2] = 0;
   $151 = (($__i$0$i$i$i29) + 1)|0;
   $__i$0$i$i$i29 = $151;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $152 = HEAP32[$91>>2]|0;
  $153 = ((($152)) + 24|0);
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_vii[$154 & 1023]($9,$91);
  $155 = HEAP8[$__sym>>0]|0;
  $156 = $155 & 1;
  $157 = ($156<<24>>24)==(0);
  if ($157) {
   $161 = ((($__sym)) + 1|0);
   HEAP8[$161>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $158 = ((($__sym)) + 8|0);
   $159 = HEAP32[$158>>2]|0;
   HEAP8[$159>>0] = 0;
   $160 = ((($__sym)) + 4|0);
   HEAP32[$160>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__sym|0),0);
  $162 = __THREW__; __THREW__ = 0;
  $163 = $162&1;
  if ($163) {
   $164 = ___cxa_find_matching_catch_3(0|0)|0;
   $165 = tempRet0;
   ___clang_call_terminate($164);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i34 = 0;
  while(1) {
   $exitcond$i$i$i35 = ($__i$0$i$i$i34|0)==(3);
   if ($exitcond$i$i$i35) {
    break;
   }
   $166 = (($9) + ($__i$0$i$i$i34<<2)|0);
   HEAP32[$166>>2] = 0;
   $167 = (($__i$0$i$i$i34) + 1)|0;
   $__i$0$i$i$i34 = $167;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $168 = HEAP32[$91>>2]|0;
  $169 = ((($168)) + 36|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = (FUNCTION_TABLE_ii[$170 & 1023]($91)|0);
  $storemerge = $171;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(732|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = (($3) - ($4))|0;
 $6 = ($5>>>0)<(2147483647);
 $7 = $5 << 1;
 $$ = $6 ? $7 : -1;
 $8 = HEAP32[$__n>>2]|0;
 $9 = $4;
 $10 = (($8) - ($4))|0;
 $11 = $2 ? $9 : 0;
 $12 = (_realloc($11,$$)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $14 = $12;
   HEAP32[$__b>>2] = $14;
   $23 = $12;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $15 = $12;
   HEAP32[$__b>>2] = $15;
   $16 = ($$pr|0)==(0|0);
   if ($16) {
    $23 = $12;
   } else {
    $17 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($17|0,($$pr|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $20 = ___cxa_find_matching_catch_3(0|0)|0;
     $21 = tempRet0;
     ___clang_call_terminate($20);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $23 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (738);
 $22 = (($23) + ($10)|0);
 HEAP32[$__n>>2] = $22;
 $24 = HEAP32[$__b>>2]|0;
 $25 = (($24) + ($$)|0);
 HEAP32[$__e>>2] = $25;
 return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(732|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = (($3) - ($4))|0;
 $6 = ($5>>>0)<(2147483647);
 $7 = $5 << 1;
 $$ = $6 ? $7 : -1;
 $8 = HEAP32[$__n>>2]|0;
 $9 = (($8) - ($4))|0;
 $10 = $9 >> 2;
 $phitmp = $4;
 $11 = $2 ? $phitmp : 0;
 $12 = (_realloc($11,$$)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $14 = $12;
   HEAP32[$__b>>2] = $14;
   $24 = $12;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $15 = $12;
   HEAP32[$__b>>2] = $15;
   $16 = ($$pr|0)==(0|0);
   if ($16) {
    $24 = $12;
   } else {
    $17 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($17|0,($$pr|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $20 = ___cxa_find_matching_catch_3(0|0)|0;
     $21 = tempRet0;
     ___clang_call_terminate($20);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $24 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (738);
 $22 = $$ >>> 2;
 $23 = (($24) + ($10<<2)|0);
 HEAP32[$__n>>2] = $23;
 $25 = HEAP32[$__b>>2]|0;
 $26 = (($25) + ($22<<2)|0);
 HEAP32[$__e>>2] = $26;
 return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 24|0;
 $__wbuf = sp + 32|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 28|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (732);
 $3 = ((($__wbuf)) + 100|0);
 __THREW__ = 0;
 $4 = (invoke_ii(607,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $34 = ___cxa_find_matching_catch_2()|0;
  $35 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$011 = $34;$$019 = $35;$95 = $__wbuf;
  label = 37;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(608,($__loc|0),(22416|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if (!($9)) {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $10;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $14 = (invoke_iiiiiiiiiiii(733,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     if ($14) {
      $17 = HEAP8[$__v>>0]|0;
      $18 = $17 & 1;
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       $23 = ((($__v)) + 1|0);
       HEAP8[$23>>0] = 0;
       HEAP8[$__v>>0] = 0;
      } else {
       $20 = ((($__v)) + 8|0);
       $21 = HEAP32[$20>>2]|0;
       HEAP8[$21>>0] = 0;
       $22 = ((($__v)) + 4|0);
       HEAP32[$22>>2] = 0;
      }
      $24 = HEAP8[$__neg>>0]|0;
      $25 = ($24<<24>>24)==(0);
      if (!($25)) {
       $26 = HEAP32[$7>>2]|0;
       $27 = ((($26)) + 28|0);
       $28 = HEAP32[$27>>2]|0;
       __THREW__ = 0;
       $29 = (invoke_iii($28|0,($7|0),45)|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(628,($__v|0),($29|0));
       $32 = __THREW__; __THREW__ = 0;
       $33 = $32&1;
       if ($33) {
        break;
       }
      }
      $36 = HEAP32[$7>>2]|0;
      $37 = ((($36)) + 28|0);
      $38 = HEAP32[$37>>2]|0;
      __THREW__ = 0;
      $39 = (invoke_iii($38|0,($7|0),48)|0);
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break;
      }
      $42 = HEAP32[$__wb>>2]|0;
      $43 = HEAP32[$__wn>>2]|0;
      $44 = ((($43)) + -1|0);
      $__w$0 = $42;
      while(1) {
       $45 = ($__w$0>>>0)<($44>>>0);
       if (!($45)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $46 = HEAP8[$__w$0>>0]|0;
       $47 = ($46<<24>>24)==($39<<24>>24);
       if (!($47)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $48 = ((($__w$0)) + 1|0);
       $__w$0 = $48;
      }
      __THREW__ = 0;
      (invoke_iiii(739,($__v|0),($__w$0$lcssa|0),($43|0))|0);
      $49 = __THREW__; __THREW__ = 0;
      $50 = $49&1;
      if ($50) {
       break;
      }
     }
     $51 = HEAP32[$__b>>2]|0;
     $52 = ($51|0)==(0|0);
     do {
      if ($52) {
       $65 = 0;
      } else {
       $53 = ((($51)) + 12|0);
       $54 = HEAP32[$53>>2]|0;
       $55 = ((($51)) + 16|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = ($54|0)==($56|0);
       if ($57) {
        $58 = HEAP32[$51>>2]|0;
        $59 = ((($58)) + 36|0);
        $60 = HEAP32[$59>>2]|0;
        __THREW__ = 0;
        $61 = (invoke_ii($60|0,($51|0))|0);
        $62 = __THREW__; __THREW__ = 0;
        $63 = $62&1;
        if ($63) {
         break L4;
        }
        $64 = ($61|0)==(-1);
        if ($64) {
         HEAP32[$__b>>2] = 0;
         $65 = 0;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $65 = $$pre$i$i$i;
         break;
        }
       } else {
        $65 = $51;
       }
      }
     } while(0);
     $66 = ($65|0)==(0|0);
     $67 = ($10|0)==(0);
     do {
      if ($67) {
       label = 30;
      } else {
       $68 = ((($13)) + 12|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = ((($13)) + 16|0);
       $71 = HEAP32[$70>>2]|0;
       $72 = ($69|0)==($71|0);
       if ($72) {
        $73 = $10;
        $74 = HEAP32[$73>>2]|0;
        $75 = ((($74)) + 36|0);
        $76 = HEAP32[$75>>2]|0;
        __THREW__ = 0;
        $77 = (invoke_ii($76|0,($13|0))|0);
        $78 = __THREW__; __THREW__ = 0;
        $79 = $78&1;
        if ($79) {
         break L4;
        }
        $80 = ($77|0)==(-1);
        if ($80) {
         HEAP32[$__e>>2] = 0;
         label = 30;
         break;
        }
       }
       if (!($66)) {
        label = 31;
       }
      }
     } while(0);
     if ((label|0) == 30) {
      if ($66) {
       label = 31;
      }
     }
     if ((label|0) == 31) {
      $81 = HEAP32[$__err>>2]|0;
      $82 = $81 | 2;
      HEAP32[$__err>>2] = $82;
     }
     $83 = HEAP32[$__b>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
     $84 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $85 = ($84|0)==(0|0);
     if (!($85)) {
      $86 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($86|0,($84|0));
      $87 = __THREW__; __THREW__ = 0;
      $88 = $87&1;
      if ($88) {
       $89 = ___cxa_find_matching_catch_3(0|0)|0;
       $90 = tempRet0;
       ___clang_call_terminate($89);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($83|0);
    }
   }
  } while(0);
  $91 = ___cxa_find_matching_catch_2()|0;
  $92 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $93 = ($$pre|0)==(0|0);
  if ($93) {
   $$0110 = $92;$$012 = $91;
  } else {
   $$011 = $91;$$019 = $92;$95 = $$pre;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  $94 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($94|0,($95|0));
  $96 = __THREW__; __THREW__ = 0;
  $97 = $96&1;
  if ($97) {
   $98 = ___cxa_find_matching_catch_3(0|0)|0;
   $99 = tempRet0;
   ___clang_call_terminate($98);
   // unreachable;
  } else {
   $$0110 = $$019;$$012 = $$011;
  }
 }
 ___resumeException($$012|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep1 = 0, $scevgep2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = $5;$16 = 10;$40 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $7;$16 = $phitmp$i;$40 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 do {
  if (!($13)) {
   $14 = (($16) - ($15))|0;
   $17 = ($14>>>0)<($12>>>0);
   if ($17) {
    $18 = (($15) + ($12))|0;
    $19 = (($18) - ($16))|0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$16,$19,$15,$15,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $21 = $$pre;
   } else {
    $21 = $40;
   }
   $20 = $21 & 1;
   $22 = ($20<<24>>24)==(0);
   if ($22) {
    $25 = ((($this)) + 1|0);
    $27 = $25;
   } else {
    $23 = ((($this)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $27 = $24;
   }
   $26 = (($27) + ($15)|0);
   $28 = (($15) - ($0))|0;
   $scevgep = (($__last) + ($28)|0);
   $scevgep1 = $scevgep;
   $$0 = $__first;$__p$0 = $26;
   while(1) {
    $29 = ($$0|0)==($__last|0);
    if ($29) {
     break;
    }
    $30 = HEAP8[$$0>>0]|0;
    HEAP8[$__p$0>>0] = $30;
    $31 = ((($__p$0)) + 1|0);
    $32 = ((($$0)) + 1|0);
    $$0 = $32;$__p$0 = $31;
   }
   $scevgep2 = (($27) + ($scevgep1)|0);
   HEAP8[$scevgep2>>0] = 0;
   $33 = (($15) + ($12))|0;
   $34 = HEAP8[$this>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $38 = $33 << 1;
    $39 = $38&255;
    HEAP8[$this>>0] = $39;
    break;
   } else {
    $37 = ((($this)) + 4|0);
    HEAP32[$37>>2] = $33;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$113 = 0, $$114 = 0, $$1211 = 0, $$1212 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre15 = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__atoms = 0, $__h$sroa$0$0 = 0, $__h$sroa$0$1 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0;
 var $__nc$2 = 0, $__nc$2$lcssa = 0, $__neg = 0, $__w$0 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 472|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 72|0;
 $__wb = sp + 64|0;
 $__wn = sp + 56|0;
 $__loc = sp + 52|0;
 $__neg = sp + 576|0;
 $0 = sp + 48|0;
 $__atoms = sp + 8|0;
 $__nbuf = sp + 476|0;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (732);
 $3 = ((($__wbuf)) + 400|0);
 __THREW__ = 0;
 $4 = (invoke_ii(607,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $34 = ___cxa_find_matching_catch_2()|0;
  $35 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$113 = $34;$$1211 = $35;$110 = 732;$111 = $__wbuf;
  label = 49;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(608,($__loc|0),(22448|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if ($9) {
    label = 10;
   } else {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $13 = (invoke_iiiiiiiiiiii(740,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 10;
    } else {
     L7: do {
      if ($13) {
       $16 = HEAP32[$7>>2]|0;
       $17 = ((($16)) + 48|0);
       $18 = HEAP32[$17>>2]|0;
       __THREW__ = 0;
       (invoke_iiiii($18|0,($7|0),(18619|0),((18629)|0),($__atoms|0))|0);
       $19 = __THREW__; __THREW__ = 0;
       $20 = $19&1;
       if ($20) {
        label = 10;
        break L4;
       }
       $21 = HEAP32[$__wn>>2]|0;
       $22 = HEAP32[$__wb>>2]|0;
       $23 = (($21) - ($22))|0;
       $24 = ($23|0)>(392);
       $25 = $22;
       $26 = $21;
       if ($24) {
        $27 = $23 >> 2;
        $28 = (($27) + 2)|0;
        $29 = (_malloc($28)|0);
        $30 = $29;
        $31 = ($29|0)==(0|0);
        if ($31) {
         __THREW__ = 0;
         invoke_v(693);
         $32 = __THREW__; __THREW__ = 0;
         $33 = $32&1;
         if ($33) {
          $__h$sroa$0$0 = $30;
         } else {
          $__h$sroa$0$1 = $30;$__nc$0 = 0;
          label = 13;
         }
        } else {
         $__h$sroa$0$1 = $30;$__nc$0 = $29;
         label = 13;
        }
       } else {
        $__h$sroa$0$1 = 0;$__nc$0 = $__nbuf;
        label = 13;
       }
       do {
        if ((label|0) == 13) {
         $42 = HEAP8[$__neg>>0]|0;
         $43 = ($42<<24>>24)==(0);
         if ($43) {
          $__nc$1 = $__nc$0;
         } else {
          $44 = ((($__nc$0)) + 1|0);
          HEAP8[$__nc$0>>0] = 45;
          $__nc$1 = $44;
         }
         $45 = ((($__atoms)) + 40|0);
         $46 = $__atoms;
         $48 = $26;$__nc$2 = $__nc$1;$__w$0 = $25;
         while(1) {
          $47 = ($__w$0>>>0)<($48>>>0);
          if (!($47)) {
           $__nc$2$lcssa = $__nc$2;
           break;
          }
          $51 = HEAP32[$__w$0>>2]|0;
          $$0$i = $__atoms;
          while(1) {
           $52 = ($$0$i|0)==($45|0);
           if ($52) {
            $$0$lcssa$i = $45;
            break;
           }
           $53 = HEAP32[$$0$i>>2]|0;
           $54 = ($53|0)==($51|0);
           if ($54) {
            $$0$lcssa$i = $$0$i;
            break;
           }
           $55 = ((($$0$i)) + 4|0);
           $$0$i = $55;
          }
          $56 = $$0$lcssa$i;
          $57 = (($56) - ($46))|0;
          $58 = $57 >> 2;
          $59 = (18619 + ($58)|0);
          $60 = HEAP8[$59>>0]|0;
          HEAP8[$__nc$2>>0] = $60;
          $61 = ((($__w$0)) + 4|0);
          $62 = ((($__nc$2)) + 1|0);
          $$pre = HEAP32[$__wn>>2]|0;
          $48 = $$pre;$__nc$2 = $62;$__w$0 = $61;
         }
         HEAP8[$__nc$2$lcssa>>0] = 0;
         HEAP32[$vararg_buffer>>2] = $__v;
         $49 = (_sscanf($__nbuf,18504,$vararg_buffer)|0);
         $50 = ($49|0)==(1);
         if (!($50)) {
          __THREW__ = 0;
          invoke_vi(734,(18508|0));
          $63 = __THREW__; __THREW__ = 0;
          $64 = $63&1;
          if ($64) {
           $__h$sroa$0$0 = $__h$sroa$0$1;
           break;
          }
         }
         $65 = ($__h$sroa$0$1|0)==(0);
         if (!($65)) {
          $66 = $__h$sroa$0$1;
          _free($66);
         }
         break L7;
        }
       } while(0);
       $38 = ___cxa_find_matching_catch_2()|0;
       $39 = tempRet0;
       $40 = ($__h$sroa$0$0|0)==(0);
       if ($40) {
        $$0 = $38;$$01 = $39;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
        break L4;
       }
       $41 = $__h$sroa$0$0;
       _free($41);
       $$0 = $38;$$01 = $39;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
       break L4;
      }
     } while(0);
     $67 = HEAP32[$__b>>2]|0;
     $68 = ($67|0)==(0|0);
     do {
      if ($68) {
       $116 = 1;
      } else {
       $69 = ((($67)) + 12|0);
       $70 = HEAP32[$69>>2]|0;
       $71 = ((($67)) + 16|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ($70|0)==($72|0);
       if ($73) {
        $74 = HEAP32[$67>>2]|0;
        $75 = ((($74)) + 36|0);
        $76 = HEAP32[$75>>2]|0;
        __THREW__ = 0;
        $77 = (invoke_ii($76|0,($67|0))|0);
        $78 = __THREW__; __THREW__ = 0;
        $79 = $78&1;
        if ($79) {
         label = 10;
         break L4;
        } else {
         $$0$i$i$i$i = $77;
        }
       } else {
        $80 = HEAP32[$70>>2]|0;
        $$0$i$i$i$i = $80;
       }
       $81 = ($$0$i$i$i$i|0)==(-1);
       if ($81) {
        HEAP32[$__b>>2] = 0;
        $116 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $116 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $82 = HEAP32[$__e>>2]|0;
     $83 = ($82|0)==(0|0);
     do {
      if ($83) {
       label = 40;
      } else {
       $84 = ((($82)) + 12|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = ((($82)) + 16|0);
       $87 = HEAP32[$86>>2]|0;
       $88 = ($85|0)==($87|0);
       if ($88) {
        $89 = HEAP32[$82>>2]|0;
        $90 = ((($89)) + 36|0);
        $91 = HEAP32[$90>>2]|0;
        __THREW__ = 0;
        $92 = (invoke_ii($91|0,($82|0))|0);
        $93 = __THREW__; __THREW__ = 0;
        $94 = $93&1;
        if ($94) {
         label = 10;
         break L4;
        } else {
         $$0$i$i1$i$i = $92;
        }
       } else {
        $95 = HEAP32[$85>>2]|0;
        $$0$i$i1$i$i = $95;
       }
       $96 = ($$0$i$i1$i$i|0)==(-1);
       if ($96) {
        HEAP32[$__e>>2] = 0;
        label = 40;
        break;
       } else {
        if ($116) {
         break;
        } else {
         label = 42;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 40) {
      if ($116) {
       label = 42;
      }
     }
     if ((label|0) == 42) {
      $97 = HEAP32[$__err>>2]|0;
      $98 = $97 | 2;
      HEAP32[$__err>>2] = $98;
     }
     $99 = HEAP32[$__b>>2]|0;
     $100 = HEAP32[$__loc>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($100)|0);
     $101 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $102 = ($101|0)==(0|0);
     if (!($102)) {
      $103 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($103|0,($101|0));
      $104 = __THREW__; __THREW__ = 0;
      $105 = $104&1;
      if ($105) {
       $106 = ___cxa_find_matching_catch_3(0|0)|0;
       $107 = tempRet0;
       ___clang_call_terminate($106);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($99|0);
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $36 = ___cxa_find_matching_catch_2()|0;
   $37 = tempRet0;
   $$0 = $36;$$01 = $37;$$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  $108 = HEAP32[$__loc>>2]|0;
  (__ZNSt3__114__shared_count16__release_sharedEv($108)|0);
  $$pre7 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2] = 0;
  $109 = ($$pre7|0)==(0|0);
  if ($109) {
   $$114 = $$0;$$1212 = $$01;
  } else {
   $$pre15 = HEAP32[$2>>2]|0;
   $$113 = $$0;$$1211 = $$01;$110 = $$pre15;$111 = $$pre7;
   label = 49;
  }
 }
 if ((label|0) == 49) {
  __THREW__ = 0;
  invoke_vi($110|0,($111|0));
  $112 = __THREW__; __THREW__ = 0;
  $113 = $112&1;
  if ($113) {
   $114 = ___cxa_find_matching_catch_3(0|0)|0;
   $115 = tempRet0;
   ___clang_call_terminate($114);
   // unreachable;
  } else {
   $$114 = $$113;$$1212 = $$1211;
  }
 }
 ___resumeException($$114|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e,$__intl,$__loc,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i107 = 0, $$0$i$i$i$i141 = 0, $$0$i$i$i$i173 = 0, $$0$i$i$i$i198 = 0, $$0$i$i$i$i45 = 0, $$0$i$i$i$i66 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i113 = 0, $$0$i$i1$i$i147 = 0, $$0$i$i1$i$i179 = 0, $$0$i$i1$i$i204 = 0, $$0$i$i1$i$i51 = 0, $$0$i$i1$i$i72 = 0, $$0$i$i101 = 0, $$0$i$i104 = 0, $$0$i$i125 = 0, $$0$i$i134 = 0, $$0$i$i137 = 0;
 var $$0$i$i159 = 0, $$0$i$i170 = 0, $$0$i$i194 = 0, $$0$i$i60 = 0, $$0$i$i64 = 0, $$0$i$i81 = 0, $$0$i$i88 = 0, $$0$i$i93 = 0, $$10 = 0, $$lcssa = 0, $$lcssa450 = 0, $$lcssa461 = 0, $$phi$trans$insert = 0, $$phi$trans$insert323 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i109 = 0, $$pre$i$i$i143 = 0, $$pre$i$i$i175 = 0, $$pre$i$i$i200 = 0;
 var $$pre$i$i$i47 = 0, $$pre$i$i$i68 = 0, $$pre$i3$i$i115 = 0, $$pre$i3$i$i115309$ph = 0, $$pre$i3$i$i115309333 = 0, $$pre$i3$i$i149 = 0, $$pre$i3$i$i181 = 0, $$pre$i3$i$i181302 = 0, $$pre$i3$i$i181304 = 0, $$pre$i3$i$i206 = 0, $$pre$i3$i$i206317 = 0, $$pre$i3$i$i206318 = 0, $$pre$i3$i$i74 = 0, $$pre$i3$i$i74327 = 0, $$pre$i3$i$i74329 = 0, $$pre306 = 0, $$pre308 = 0, $$pre311 = 0, $$pre312 = 0, $$pre313 = 0;
 var $$pre314 = 0, $$pre315 = 0, $$pre316 = 0, $$pre320 = 0, $$pre321 = 0, $$pre322 = 0, $$pre324 = 0, $$pre325 = 0, $$pre326 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__i$0$i$i = 0;
 var $__i$0$i$i29 = 0, $__i$0$i$i31 = 0, $__i$0$i$i35 = 0, $__i$0$i$i40 = 0, $__ng$0 = 0, $__ng$0$lcssa451 = 0, $__ng$2$ph = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$023 = 0, $__p$0 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$022 = 0, $__spaces = 0, $__sym = 0, $__sym_curr_char$sroa$0$0 = 0, $__sym_space_end$sroa$0$0 = 0, $__sym_space_end$sroa$0$0$lcssa459 = 0;
 var $__sym_space_end$sroa$0$0460 = 0, $__trailing_sign$0 = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$1 = 0, $__ts = 0, $brmerge = 0, $cond28 = 0, $exitcond$i$i = 0, $exitcond$i$i30 = 0, $exitcond$i$i32 = 0, $exitcond$i$i36 = 0, $exitcond$i$i41 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond14 = 0, $or$cond25 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i110 = 0;
 var $phitmp$i$i$i144 = 0, $phitmp$i$i$i176 = 0, $phitmp$i$i$i201 = 0, $phitmp$i$i$i48 = 0, $phitmp$i$i$i69 = 0, $phitmp$i4$i$i116 = 0, $phitmp$i4$i$i182 = 0, $phitmp$i4$i$i207 = 0, $phitmp$i4$i$i75 = 0, $switch = 0, $tmp$i$i118 = 0, $tmp$i$i184 = 0, $tmp$i$i209 = 0, $tmp$i$i77 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 496|0;
 $__gbuf = sp + 96|0;
 $__gb = sp + 88|0;
 $__gn = sp + 80|0;
 $__ge = sp + 76|0;
 $__pat = sp + 500|0;
 $__dp = sp + 72|0;
 $__ts = sp + 68|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__psn = sp + 32|0;
 $__nsn = sp + 20|0;
 $__spaces = sp + 8|0;
 $__fd = sp + 4|0;
 $__et = sp;
 HEAP32[$0>>2] = $__we;
 $1 = $__gbuf;
 HEAP32[$__gb>>2] = $1;
 $2 = ((($__gb)) + 4|0);
 HEAP32[$2>>2] = (732);
 HEAP32[$__gn>>2] = $__gbuf;
 $3 = ((($__gbuf)) + 400|0);
 HEAP32[$__ge>>2] = $3;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $4 = (($__grp) + ($__i$0$i$i<<2)|0);
  HEAP32[$4>>2] = 0;
  $5 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $5;
 }
 $__i$0$i$i29 = 0;
 while(1) {
  $exitcond$i$i30 = ($__i$0$i$i29|0)==(3);
  if ($exitcond$i$i30) {
   break;
  }
  $6 = (($__sym) + ($__i$0$i$i29<<2)|0);
  HEAP32[$6>>2] = 0;
  $7 = (($__i$0$i$i29) + 1)|0;
  $__i$0$i$i29 = $7;
 }
 $__i$0$i$i31 = 0;
 while(1) {
  $exitcond$i$i32 = ($__i$0$i$i31|0)==(3);
  if ($exitcond$i$i32) {
   break;
  }
  $8 = (($__psn) + ($__i$0$i$i31<<2)|0);
  HEAP32[$8>>2] = 0;
  $9 = (($__i$0$i$i31) + 1)|0;
  $__i$0$i$i31 = $9;
 }
 $__i$0$i$i35 = 0;
 while(1) {
  $exitcond$i$i36 = ($__i$0$i$i35|0)==(3);
  if ($exitcond$i$i36) {
   break;
  }
  $10 = (($__nsn) + ($__i$0$i$i35<<2)|0);
  HEAP32[$10>>2] = 0;
  $11 = (($__i$0$i$i35) + 1)|0;
  $__i$0$i$i35 = $11;
 }
 $__i$0$i$i40 = 0;
 while(1) {
  $exitcond$i$i41 = ($__i$0$i$i40|0)==(3);
  if ($exitcond$i$i41) {
   break;
  }
  $12 = (($__spaces) + ($__i$0$i$i40<<2)|0);
  HEAP32[$12>>2] = 0;
  $13 = (($__i$0$i$i40) + 1)|0;
  $__i$0$i$i40 = $13;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(741,($__intl|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__psn|0),($__nsn|0),($__fd|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 L21: do {
  if ($15) {
   $74 = ___cxa_find_matching_catch_2()|0;
   $75 = tempRet0;
   $lpad$phi$index = $74;$lpad$phi$index8 = $75;
  } else {
   $16 = HEAP32[$__wb>>2]|0;
   HEAP32[$__wn>>2] = $16;
   $17 = ((($__psn)) + 4|0);
   $18 = ((($__nsn)) + 4|0);
   $19 = ((($__nsn)) + 8|0);
   $20 = ((($__psn)) + 8|0);
   $21 = $__flags & 512;
   $22 = ($21|0)!=(0);
   $23 = ((($__sym)) + 8|0);
   $24 = ((($__sym)) + 4|0);
   $25 = ((($__spaces)) + 4|0);
   $26 = ((($__spaces)) + 8|0);
   $27 = ((($__pat)) + 3|0);
   $28 = ((($__grp)) + 4|0);
   $847 = $__gbuf;$__p$0 = 0;$__trailing_sign$0 = 0;
   L24: while(1) {
    $29 = ($__p$0>>>0)<(4);
    if (!($29)) {
     $$lcssa461 = $847;$__trailing_sign$0$lcssa = $__trailing_sign$0;
     label = 259;
     break;
    }
    $30 = HEAP32[$__b>>2]|0;
    $31 = ($30|0)==(0|0);
    do {
     if ($31) {
      $848 = 1;
     } else {
      $32 = ((($30)) + 12|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = ((($30)) + 16|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ($33|0)==($35|0);
      if ($36) {
       $37 = HEAP32[$30>>2]|0;
       $38 = ((($37)) + 36|0);
       $39 = HEAP32[$38>>2]|0;
       __THREW__ = 0;
       $40 = (invoke_ii($39|0,($30|0))|0);
       $41 = __THREW__; __THREW__ = 0;
       $42 = $41&1;
       if ($42) {
        label = 40;
        break L24;
       } else {
        $$0$i$i$i$i45 = $40;
       }
      } else {
       $43 = HEAP32[$33>>2]|0;
       $$0$i$i$i$i45 = $43;
      }
      $44 = ($$0$i$i$i$i45|0)==(-1);
      if ($44) {
       HEAP32[$__b>>2] = 0;
       $848 = 1;
       break;
      } else {
       $$pre$i$i$i47 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i48 = ($$pre$i$i$i47|0)==(0|0);
       $848 = $phitmp$i$i$i48;
       break;
      }
     }
    } while(0);
    $45 = HEAP32[$__e>>2]|0;
    $46 = ($45|0)==(0|0);
    do {
     if ($46) {
      label = 32;
     } else {
      $47 = ((($45)) + 12|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ((($45)) + 16|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = ($48|0)==($50|0);
      if ($51) {
       $52 = HEAP32[$45>>2]|0;
       $53 = ((($52)) + 36|0);
       $54 = HEAP32[$53>>2]|0;
       __THREW__ = 0;
       $55 = (invoke_ii($54|0,($45|0))|0);
       $56 = __THREW__; __THREW__ = 0;
       $57 = $56&1;
       if ($57) {
        label = 40;
        break L24;
       } else {
        $$0$i$i1$i$i51 = $55;
       }
      } else {
       $58 = HEAP32[$48>>2]|0;
       $$0$i$i1$i$i51 = $58;
      }
      $59 = ($$0$i$i1$i$i51|0)==(-1);
      if ($59) {
       HEAP32[$__e>>2] = 0;
       label = 32;
       break;
      } else {
       if ($848) {
        $849 = $45;
        break;
       } else {
        $$lcssa461 = $847;$__trailing_sign$0$lcssa = $__trailing_sign$0;
        label = 259;
        break L24;
       }
      }
     }
    } while(0);
    if ((label|0) == 32) {
     label = 0;
     if ($848) {
      $$lcssa461 = $847;$__trailing_sign$0$lcssa = $__trailing_sign$0;
      label = 259;
      break;
     } else {
      $849 = 0;
     }
    }
    $83 = (($__pat) + ($__p$0)|0);
    $84 = HEAP8[$83>>0]|0;
    $85 = $84 << 24 >> 24;
    L49: do {
     switch ($85|0) {
     case 1:  {
      $cond28 = ($__p$0|0)==(3);
      if ($cond28) {
       $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $87 = HEAP32[$__b>>2]|0;
       $88 = ((($87)) + 12|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = ((($87)) + 16|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ($89|0)==($91|0);
       if ($92) {
        $93 = HEAP32[$87>>2]|0;
        $94 = ((($93)) + 36|0);
        $95 = HEAP32[$94>>2]|0;
        __THREW__ = 0;
        $96 = (invoke_ii($95|0,($87|0))|0);
        $97 = __THREW__; __THREW__ = 0;
        $98 = $97&1;
        if ($98) {
         label = 40;
         break L24;
        } else {
         $$0$i$i60 = $96;
        }
       } else {
        $99 = HEAP32[$89>>2]|0;
        $$0$i$i60 = $99;
       }
       $100 = HEAP32[$__ct>>2]|0;
       $101 = ((($100)) + 12|0);
       $102 = HEAP32[$101>>2]|0;
       __THREW__ = 0;
       $103 = (invoke_iiii($102|0,($__ct|0),8192,($$0$i$i60|0))|0);
       $104 = __THREW__; __THREW__ = 0;
       $105 = $104&1;
       if ($105) {
        label = 40;
        break L24;
       }
       if (!($103)) {
        label = 58;
        break L24;
       }
       $106 = HEAP32[$__b>>2]|0;
       $107 = ((($106)) + 12|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = ((($106)) + 16|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = ($108|0)==($110|0);
       if ($111) {
        $112 = HEAP32[$106>>2]|0;
        $113 = ((($112)) + 40|0);
        $114 = HEAP32[$113>>2]|0;
        __THREW__ = 0;
        $115 = (invoke_ii($114|0,($106|0))|0);
        $116 = __THREW__; __THREW__ = 0;
        $117 = $116&1;
        if ($117) {
         label = 40;
         break L24;
        } else {
         $$0$i$i64 = $115;
        }
       } else {
        $118 = ((($108)) + 4|0);
        HEAP32[$107>>2] = $118;
        $119 = HEAP32[$108>>2]|0;
        $$0$i$i64 = $119;
       }
       __THREW__ = 0;
       invoke_vii(742,($__spaces|0),($$0$i$i64|0));
       $120 = __THREW__; __THREW__ = 0;
       $121 = $120&1;
       if ($121) {
        label = 40;
        break L24;
       } else {
        $$pre$i3$i$i74 = $849;$140 = $849;
        label = 60;
       }
      }
      break;
     }
     case 0:  {
      $124 = ($__p$0|0)==(3);
      if ($124) {
       $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $$pre$i3$i$i74 = $849;$140 = $849;
       label = 60;
      }
      break;
     }
     case 3:  {
      $191 = HEAP8[$__psn>>0]|0;
      $192 = $191 & 1;
      $193 = ($192<<24>>24)==(0);
      $194 = HEAP32[$17>>2]|0;
      $195 = $191&255;
      $196 = $195 >>> 1;
      $197 = $193 ? $196 : $194;
      $198 = HEAP8[$__nsn>>0]|0;
      $199 = $198 & 1;
      $200 = ($199<<24>>24)==(0);
      $201 = HEAP32[$18>>2]|0;
      $202 = $198&255;
      $203 = $202 >>> 1;
      $204 = $200 ? $203 : $201;
      $205 = (0 - ($204))|0;
      $206 = ($197|0)==($205|0);
      if ($206) {
       $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
      } else {
       $207 = ($197|0)==(0);
       if ($207) {
        $249 = HEAP32[$__b>>2]|0;
        $250 = ((($249)) + 12|0);
        $251 = HEAP32[$250>>2]|0;
        $252 = ((($249)) + 16|0);
        $253 = HEAP32[$252>>2]|0;
        $254 = ($251|0)==($253|0);
        if ($254) {
         $255 = HEAP32[$249>>2]|0;
         $256 = ((($255)) + 36|0);
         $257 = HEAP32[$256>>2]|0;
         __THREW__ = 0;
         $258 = (invoke_ii($257|0,($249|0))|0);
         $259 = __THREW__; __THREW__ = 0;
         $260 = $259&1;
         if ($260) {
          label = 40;
          break L24;
         }
         $$pre326 = HEAP8[$__nsn>>0]|0;
         $$0$i$i125 = $258;$263 = $$pre326;
        } else {
         $261 = HEAP32[$251>>2]|0;
         $$0$i$i125 = $261;$263 = $198;
        }
        $262 = $263 & 1;
        $264 = ($262<<24>>24)==(0);
        $265 = HEAP32[$19>>2]|0;
        $266 = $264 ? $18 : $265;
        $267 = HEAP32[$266>>2]|0;
        $268 = ($$0$i$i125|0)==($267|0);
        if (!($268)) {
         $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
         break L49;
        }
        $269 = HEAP32[$__b>>2]|0;
        $270 = ((($269)) + 12|0);
        $271 = HEAP32[$270>>2]|0;
        $272 = ((($269)) + 16|0);
        $273 = HEAP32[$272>>2]|0;
        $274 = ($271|0)==($273|0);
        if ($274) {
         $275 = HEAP32[$269>>2]|0;
         $276 = ((($275)) + 40|0);
         $277 = HEAP32[$276>>2]|0;
         __THREW__ = 0;
         (invoke_ii($277|0,($269|0))|0);
         $278 = __THREW__; __THREW__ = 0;
         $279 = $278&1;
         if ($279) {
          label = 40;
          break L24;
         }
        } else {
         $280 = ((($271)) + 4|0);
         HEAP32[$270>>2] = $280;
        }
        HEAP8[$__neg>>0] = 1;
        $281 = HEAP8[$__nsn>>0]|0;
        $282 = $281 & 1;
        $283 = ($282<<24>>24)==(0);
        $284 = HEAP32[$18>>2]|0;
        $285 = $281&255;
        $286 = $285 >>> 1;
        $287 = $283 ? $286 : $284;
        $288 = ($287>>>0)>(1);
        $__nsn$__trailing_sign$0 = $288 ? $__nsn : $__trailing_sign$0;
        $850 = $847;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
        break L49;
       }
       $208 = ($204|0)==(0);
       $209 = HEAP32[$__b>>2]|0;
       $210 = ((($209)) + 12|0);
       $211 = HEAP32[$210>>2]|0;
       $212 = ((($209)) + 16|0);
       $213 = HEAP32[$212>>2]|0;
       $214 = ($211|0)==($213|0);
       if ($208) {
        if ($214) {
         $215 = HEAP32[$209>>2]|0;
         $216 = ((($215)) + 36|0);
         $217 = HEAP32[$216>>2]|0;
         __THREW__ = 0;
         $218 = (invoke_ii($217|0,($209|0))|0);
         $219 = __THREW__; __THREW__ = 0;
         $220 = $219&1;
         if ($220) {
          label = 40;
          break L24;
         }
         $$pre325 = HEAP8[$__psn>>0]|0;
         $$0$i$i104 = $218;$223 = $$pre325;
        } else {
         $221 = HEAP32[$211>>2]|0;
         $$0$i$i104 = $221;$223 = $191;
        }
        $222 = $223 & 1;
        $224 = ($222<<24>>24)==(0);
        $225 = HEAP32[$20>>2]|0;
        $226 = $224 ? $17 : $225;
        $227 = HEAP32[$226>>2]|0;
        $228 = ($$0$i$i104|0)==($227|0);
        if (!($228)) {
         HEAP8[$__neg>>0] = 1;
         $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
         break L49;
        }
        $229 = HEAP32[$__b>>2]|0;
        $230 = ((($229)) + 12|0);
        $231 = HEAP32[$230>>2]|0;
        $232 = ((($229)) + 16|0);
        $233 = HEAP32[$232>>2]|0;
        $234 = ($231|0)==($233|0);
        if ($234) {
         $235 = HEAP32[$229>>2]|0;
         $236 = ((($235)) + 40|0);
         $237 = HEAP32[$236>>2]|0;
         __THREW__ = 0;
         (invoke_ii($237|0,($229|0))|0);
         $238 = __THREW__; __THREW__ = 0;
         $239 = $238&1;
         if ($239) {
          label = 40;
          break L24;
         }
        } else {
         $240 = ((($231)) + 4|0);
         HEAP32[$230>>2] = $240;
        }
        $241 = HEAP8[$__psn>>0]|0;
        $242 = $241 & 1;
        $243 = ($242<<24>>24)==(0);
        $244 = HEAP32[$17>>2]|0;
        $245 = $241&255;
        $246 = $245 >>> 1;
        $247 = $243 ? $246 : $244;
        $248 = ($247>>>0)>(1);
        $__psn$__trailing_sign$0 = $248 ? $__psn : $__trailing_sign$0;
        $850 = $847;$__trailing_sign$1 = $__psn$__trailing_sign$0;
        break L49;
       }
       if ($214) {
        $289 = HEAP32[$209>>2]|0;
        $290 = ((($289)) + 36|0);
        $291 = HEAP32[$290>>2]|0;
        __THREW__ = 0;
        $292 = (invoke_ii($291|0,($209|0))|0);
        $293 = __THREW__; __THREW__ = 0;
        $294 = $293&1;
        if ($294) {
         label = 40;
         break L24;
        }
        $$pre320 = HEAP8[$__psn>>0]|0;
        $$pre321 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert = ((($$pre321)) + 12|0);
        $$pre322 = HEAP32[$$phi$trans$insert>>2]|0;
        $$phi$trans$insert323 = ((($$pre321)) + 16|0);
        $$pre324 = HEAP32[$$phi$trans$insert323>>2]|0;
        $$0$i$i137 = $292;$297 = $$pre320;$304 = $$pre321;$305 = $$pre322;$307 = $$pre324;
       } else {
        $295 = HEAP32[$211>>2]|0;
        $$0$i$i137 = $295;$297 = $191;$304 = $209;$305 = $211;$307 = $213;
       }
       $296 = $297 & 1;
       $298 = ($296<<24>>24)==(0);
       $299 = HEAP32[$20>>2]|0;
       $300 = $298 ? $17 : $299;
       $301 = HEAP32[$300>>2]|0;
       $302 = ($$0$i$i137|0)==($301|0);
       $303 = ((($304)) + 12|0);
       $306 = ($305|0)==($307|0);
       if ($302) {
        if ($306) {
         $308 = HEAP32[$304>>2]|0;
         $309 = ((($308)) + 40|0);
         $310 = HEAP32[$309>>2]|0;
         __THREW__ = 0;
         (invoke_ii($310|0,($304|0))|0);
         $311 = __THREW__; __THREW__ = 0;
         $312 = $311&1;
         if ($312) {
          label = 40;
          break L24;
         }
        } else {
         $313 = ((($305)) + 4|0);
         HEAP32[$303>>2] = $313;
        }
        $314 = HEAP8[$__psn>>0]|0;
        $315 = $314 & 1;
        $316 = ($315<<24>>24)==(0);
        $317 = HEAP32[$17>>2]|0;
        $318 = $314&255;
        $319 = $318 >>> 1;
        $320 = $316 ? $319 : $317;
        $321 = ($320>>>0)>(1);
        $__psn$__trailing_sign$022 = $321 ? $__psn : $__trailing_sign$0;
        $850 = $847;$__trailing_sign$1 = $__psn$__trailing_sign$022;
        break L49;
       }
       if ($306) {
        $322 = HEAP32[$304>>2]|0;
        $323 = ((($322)) + 36|0);
        $324 = HEAP32[$323>>2]|0;
        __THREW__ = 0;
        $325 = (invoke_ii($324|0,($304|0))|0);
        $326 = __THREW__; __THREW__ = 0;
        $327 = $326&1;
        if ($327) {
         label = 40;
         break L24;
        } else {
         $$0$i$i159 = $325;
        }
       } else {
        $328 = HEAP32[$305>>2]|0;
        $$0$i$i159 = $328;
       }
       $329 = HEAP8[$__nsn>>0]|0;
       $330 = $329 & 1;
       $331 = ($330<<24>>24)==(0);
       $332 = HEAP32[$19>>2]|0;
       $333 = $331 ? $18 : $332;
       $334 = HEAP32[$333>>2]|0;
       $335 = ($$0$i$i159|0)==($334|0);
       if (!($335)) {
        label = 123;
        break L24;
       }
       $336 = HEAP32[$__b>>2]|0;
       $337 = ((($336)) + 12|0);
       $338 = HEAP32[$337>>2]|0;
       $339 = ((($336)) + 16|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($338|0)==($340|0);
       if ($341) {
        $342 = HEAP32[$336>>2]|0;
        $343 = ((($342)) + 40|0);
        $344 = HEAP32[$343>>2]|0;
        __THREW__ = 0;
        (invoke_ii($344|0,($336|0))|0);
        $345 = __THREW__; __THREW__ = 0;
        $346 = $345&1;
        if ($346) {
         label = 40;
         break L24;
        }
       } else {
        $347 = ((($338)) + 4|0);
        HEAP32[$337>>2] = $347;
       }
       HEAP8[$__neg>>0] = 1;
       $348 = HEAP8[$__nsn>>0]|0;
       $349 = $348 & 1;
       $350 = ($349<<24>>24)==(0);
       $351 = HEAP32[$18>>2]|0;
       $352 = $348&255;
       $353 = $352 >>> 1;
       $354 = $350 ? $353 : $351;
       $355 = ($354>>>0)>(1);
       $__nsn$__trailing_sign$023 = $355 ? $__nsn : $__trailing_sign$0;
       $850 = $847;$__trailing_sign$1 = $__nsn$__trailing_sign$023;
      }
      break;
     }
     case 2:  {
      $358 = ($__trailing_sign$0|0)!=(0|0);
      $359 = ($__p$0>>>0)<(2);
      $or$cond = $359 | $358;
      if (!($or$cond)) {
       $360 = ($__p$0|0)==(2);
       $361 = HEAP8[$27>>0]|0;
       $362 = ($361<<24>>24)!=(0);
       $363 = $360 & $362;
       $brmerge = $22 | $363;
       if (!($brmerge)) {
        $850 = $847;$__trailing_sign$1 = 0;
        break L49;
       }
      }
      $364 = HEAP8[$__sym>>0]|0;
      $365 = $364 & 1;
      $366 = ($365<<24>>24)==(0);
      $367 = HEAP32[$23>>2]|0;
      $368 = $366 ? $24 : $367;
      $369 = $368;
      $370 = ($__p$0|0)==(0);
      L118: do {
       if ($370) {
        $$pre$i3$i$i206 = $849;$424 = $364;$429 = $367;$450 = $849;$__sym_curr_char$sroa$0$0 = $369;
       } else {
        $371 = (($__p$0) + -1)|0;
        $372 = (($__pat) + ($371)|0);
        $373 = HEAP8[$372>>0]|0;
        $switch = ($373&255)<(2);
        if ($switch) {
         $375 = $364;$380 = $367;$__sym_space_end$sroa$0$0 = $369;
         while(1) {
          $374 = $375 & 1;
          $376 = ($374<<24>>24)==(0);
          $377 = HEAP32[$24>>2]|0;
          $378 = $375&255;
          $379 = $378 >>> 1;
          $381 = $376 ? $24 : $380;
          $382 = $376 ? $379 : $377;
          $383 = (($381) + ($382<<2)|0);
          $384 = $__sym_space_end$sroa$0$0;
          $385 = ($384|0)==($383|0);
          if ($385) {
           $396 = $375;$398 = $380;$__sym_space_end$sroa$0$0460 = $__sym_space_end$sroa$0$0;
           break;
          }
          $386 = HEAP32[$384>>2]|0;
          $387 = HEAP32[$__ct>>2]|0;
          $388 = ((($387)) + 12|0);
          $389 = HEAP32[$388>>2]|0;
          __THREW__ = 0;
          $390 = (invoke_iiii($389|0,($__ct|0),8192,($386|0))|0);
          $391 = __THREW__; __THREW__ = 0;
          $392 = $391&1;
          if ($392) {
           label = 37;
           break L24;
          }
          if (!($390)) {
           $__sym_space_end$sroa$0$0$lcssa459 = $__sym_space_end$sroa$0$0;
           label = 131;
           break;
          }
          $393 = ((($384)) + 4|0);
          $394 = $393;
          $$pre311 = HEAP8[$__sym>>0]|0;
          $$pre312 = HEAP32[$23>>2]|0;
          $375 = $$pre311;$380 = $$pre312;$__sym_space_end$sroa$0$0 = $394;
         }
         if ((label|0) == 131) {
          label = 0;
          $$pre313 = HEAP8[$__sym>>0]|0;
          $$pre314 = HEAP32[$23>>2]|0;
          $396 = $$pre313;$398 = $$pre314;$__sym_space_end$sroa$0$0460 = $__sym_space_end$sroa$0$0$lcssa459;
         }
         $395 = $396 & 1;
         $397 = ($395<<24>>24)==(0);
         $399 = $397 ? $24 : $398;
         $400 = $399;
         $401 = (($__sym_space_end$sroa$0$0460) - ($400))|0;
         $402 = $401 >> 2;
         $403 = HEAP8[$__spaces>>0]|0;
         $404 = $403 & 1;
         $405 = ($404<<24>>24)==(0);
         $406 = HEAP32[$25>>2]|0;
         $407 = $403&255;
         $408 = $407 >>> 1;
         $409 = $405 ? $408 : $406;
         $410 = ($402>>>0)>($409>>>0);
         if ($410) {
          $$pre$i3$i$i206 = $849;$424 = $396;$429 = $398;$450 = $849;$__sym_curr_char$sroa$0$0 = $400;
         } else {
          $411 = HEAP32[$26>>2]|0;
          $412 = $405 ? $25 : $411;
          $413 = (($412) + ($409<<2)|0);
          $414 = (0 - ($402))|0;
          $415 = (($413) + ($414<<2)|0);
          $$sink = $399;$416 = $415;
          while(1) {
           $417 = ($416|0)==($413|0);
           if ($417) {
            $$pre$i3$i$i206 = $849;$424 = $396;$429 = $398;$450 = $849;$__sym_curr_char$sroa$0$0 = $__sym_space_end$sroa$0$0460;
            break L118;
           }
           $418 = HEAP32[$416>>2]|0;
           $419 = HEAP32[$$sink>>2]|0;
           $420 = ($418|0)==($419|0);
           if (!($420)) {
            $$pre$i3$i$i206 = $849;$424 = $396;$429 = $398;$450 = $849;$__sym_curr_char$sroa$0$0 = $400;
            break L118;
           }
           $421 = ((($416)) + 4|0);
           $422 = ((($$sink)) + 4|0);
           $$sink = $422;$416 = $421;
          }
         }
        } else {
         $$pre$i3$i$i206 = $849;$424 = $364;$429 = $367;$450 = $849;$__sym_curr_char$sroa$0$0 = $369;
        }
       }
      } while(0);
      L133: while(1) {
       $423 = $424 & 1;
       $425 = ($423<<24>>24)==(0);
       $426 = HEAP32[$24>>2]|0;
       $427 = $424&255;
       $428 = $427 >>> 1;
       $430 = $425 ? $24 : $429;
       $431 = $425 ? $428 : $426;
       $432 = (($430) + ($431<<2)|0);
       $433 = $__sym_curr_char$sroa$0$0;
       $434 = ($433|0)==($432|0);
       if ($434) {
        $$lcssa = $432;
        break;
       }
       $435 = HEAP32[$__b>>2]|0;
       $436 = ($435|0)==(0|0);
       do {
        if ($436) {
         $465 = 1;
        } else {
         $437 = ((($435)) + 12|0);
         $438 = HEAP32[$437>>2]|0;
         $439 = ((($435)) + 16|0);
         $440 = HEAP32[$439>>2]|0;
         $441 = ($438|0)==($440|0);
         if ($441) {
          $442 = HEAP32[$435>>2]|0;
          $443 = ((($442)) + 36|0);
          $444 = HEAP32[$443>>2]|0;
          __THREW__ = 0;
          $445 = (invoke_ii($444|0,($435|0))|0);
          $446 = __THREW__; __THREW__ = 0;
          $447 = $446&1;
          if ($447) {
           label = 36;
           break L24;
          } else {
           $$0$i$i$i$i198 = $445;
          }
         } else {
          $448 = HEAP32[$438>>2]|0;
          $$0$i$i$i$i198 = $448;
         }
         $449 = ($$0$i$i$i$i198|0)==(-1);
         if ($449) {
          HEAP32[$__b>>2] = 0;
          $465 = 1;
          break;
         } else {
          $$pre$i$i$i200 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i201 = ($$pre$i$i$i200|0)==(0|0);
          $465 = $phitmp$i$i$i201;
          break;
         }
        }
       } while(0);
       $451 = ($450|0)==(0|0);
       do {
        if ($451) {
         $$pre$i3$i$i206318 = $$pre$i3$i$i206;
         label = 152;
        } else {
         $452 = ((($450)) + 12|0);
         $453 = HEAP32[$452>>2]|0;
         $454 = ((($450)) + 16|0);
         $455 = HEAP32[$454>>2]|0;
         $456 = ($453|0)==($455|0);
         if ($456) {
          $457 = HEAP32[$450>>2]|0;
          $458 = ((($457)) + 36|0);
          $459 = HEAP32[$458>>2]|0;
          __THREW__ = 0;
          $460 = (invoke_ii($459|0,($450|0))|0);
          $461 = __THREW__; __THREW__ = 0;
          $462 = $461&1;
          if ($462) {
           label = 36;
           break L24;
          } else {
           $$0$i$i1$i$i204 = $460;
          }
         } else {
          $463 = HEAP32[$453>>2]|0;
          $$0$i$i1$i$i204 = $463;
         }
         $464 = ($$0$i$i1$i$i204|0)==(-1);
         if ($464) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i206318 = 0;
          label = 152;
          break;
         } else {
          $phitmp$i4$i$i207 = ($$pre$i3$i$i206|0)==(0|0);
          $tmp$i$i209 = $465 ^ $phitmp$i4$i$i207;
          if ($tmp$i$i209) {
           $$pre$i3$i$i206317 = $$pre$i3$i$i206;$852 = $$pre$i3$i$i206;
           break;
          } else {
           $$lcssa = $433;
           break L133;
          }
         }
        }
       } while(0);
       if ((label|0) == 152) {
        label = 0;
        if ($465) {
         $$lcssa = $433;
         break;
        } else {
         $$pre$i3$i$i206317 = $$pre$i3$i$i206318;$852 = 0;
        }
       }
       $466 = HEAP32[$__b>>2]|0;
       $467 = ((($466)) + 12|0);
       $468 = HEAP32[$467>>2]|0;
       $469 = ((($466)) + 16|0);
       $470 = HEAP32[$469>>2]|0;
       $471 = ($468|0)==($470|0);
       if ($471) {
        $472 = HEAP32[$466>>2]|0;
        $473 = ((($472)) + 36|0);
        $474 = HEAP32[$473>>2]|0;
        __THREW__ = 0;
        $475 = (invoke_ii($474|0,($466|0))|0);
        $476 = __THREW__; __THREW__ = 0;
        $477 = $476&1;
        if ($477) {
         label = 36;
         break L24;
        } else {
         $$0$i$i194 = $475;
        }
       } else {
        $478 = HEAP32[$468>>2]|0;
        $$0$i$i194 = $478;
       }
       $479 = HEAP32[$433>>2]|0;
       $480 = ($$0$i$i194|0)==($479|0);
       if (!($480)) {
        $$lcssa = $433;
        break;
       }
       $481 = HEAP32[$__b>>2]|0;
       $482 = ((($481)) + 12|0);
       $483 = HEAP32[$482>>2]|0;
       $484 = ((($481)) + 16|0);
       $485 = HEAP32[$484>>2]|0;
       $486 = ($483|0)==($485|0);
       if ($486) {
        $487 = HEAP32[$481>>2]|0;
        $488 = ((($487)) + 40|0);
        $489 = HEAP32[$488>>2]|0;
        __THREW__ = 0;
        (invoke_ii($489|0,($481|0))|0);
        $490 = __THREW__; __THREW__ = 0;
        $491 = $490&1;
        if ($491) {
         label = 36;
         break L24;
        }
       } else {
        $492 = ((($483)) + 4|0);
        HEAP32[$482>>2] = $492;
       }
       $493 = ((($433)) + 4|0);
       $494 = $493;
       $$pre315 = HEAP8[$__sym>>0]|0;
       $$pre316 = HEAP32[$23>>2]|0;
       $$pre$i3$i$i206 = $$pre$i3$i$i206317;$424 = $$pre315;$429 = $$pre316;$450 = $852;$__sym_curr_char$sroa$0$0 = $494;
      }
      if ($22) {
       $495 = HEAP8[$__sym>>0]|0;
       $496 = $495 & 1;
       $497 = ($496<<24>>24)==(0);
       $498 = HEAP32[$23>>2]|0;
       $499 = HEAP32[$24>>2]|0;
       $500 = $495&255;
       $501 = $500 >>> 1;
       $502 = $497 ? $24 : $498;
       $503 = $497 ? $501 : $499;
       $504 = (($502) + ($503<<2)|0);
       $505 = ($$lcssa|0)==($504|0);
       if ($505) {
        $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
       } else {
        label = 164;
        break L24;
       }
      } else {
       $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     case 4:  {
      $86 = HEAP32[$__ts>>2]|0;
      $$pre$i3$i$i181 = $849;$523 = $849;$577 = $847;$__ng$0 = 0;
      L170: while(1) {
       $508 = HEAP32[$__b>>2]|0;
       $509 = ($508|0)==(0|0);
       do {
        if ($509) {
         $538 = 1;
        } else {
         $510 = ((($508)) + 12|0);
         $511 = HEAP32[$510>>2]|0;
         $512 = ((($508)) + 16|0);
         $513 = HEAP32[$512>>2]|0;
         $514 = ($511|0)==($513|0);
         if ($514) {
          $515 = HEAP32[$508>>2]|0;
          $516 = ((($515)) + 36|0);
          $517 = HEAP32[$516>>2]|0;
          __THREW__ = 0;
          $518 = (invoke_ii($517|0,($508|0))|0);
          $519 = __THREW__; __THREW__ = 0;
          $520 = $519&1;
          if ($520) {
           label = 39;
           break L24;
          } else {
           $$0$i$i$i$i173 = $518;
          }
         } else {
          $521 = HEAP32[$511>>2]|0;
          $$0$i$i$i$i173 = $521;
         }
         $522 = ($$0$i$i$i$i173|0)==(-1);
         if ($522) {
          HEAP32[$__b>>2] = 0;
          $538 = 1;
          break;
         } else {
          $$pre$i$i$i175 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i176 = ($$pre$i$i$i175|0)==(0|0);
          $538 = $phitmp$i$i$i176;
          break;
         }
        }
       } while(0);
       $524 = ($523|0)==(0|0);
       do {
        if ($524) {
         $$pre$i3$i$i181302 = $$pre$i3$i$i181;
         label = 178;
        } else {
         $525 = ((($523)) + 12|0);
         $526 = HEAP32[$525>>2]|0;
         $527 = ((($523)) + 16|0);
         $528 = HEAP32[$527>>2]|0;
         $529 = ($526|0)==($528|0);
         if ($529) {
          $530 = HEAP32[$523>>2]|0;
          $531 = ((($530)) + 36|0);
          $532 = HEAP32[$531>>2]|0;
          __THREW__ = 0;
          $533 = (invoke_ii($532|0,($523|0))|0);
          $534 = __THREW__; __THREW__ = 0;
          $535 = $534&1;
          if ($535) {
           label = 39;
           break L24;
          } else {
           $$0$i$i1$i$i179 = $533;
          }
         } else {
          $536 = HEAP32[$526>>2]|0;
          $$0$i$i1$i$i179 = $536;
         }
         $537 = ($$0$i$i1$i$i179|0)==(-1);
         if ($537) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i181302 = 0;
          label = 178;
          break;
         } else {
          $phitmp$i4$i$i182 = ($$pre$i3$i$i181|0)==(0|0);
          $tmp$i$i184 = $538 ^ $phitmp$i4$i$i182;
          if ($tmp$i$i184) {
           $$pre$i3$i$i181304 = $$pre$i3$i$i181;$853 = $$pre$i3$i$i181;
           break;
          } else {
           $$lcssa450 = $577;$$pre$i3$i$i149 = $$pre$i3$i$i181;$__ng$0$lcssa451 = $__ng$0;
           break L170;
          }
         }
        }
       } while(0);
       if ((label|0) == 178) {
        label = 0;
        if ($538) {
         $$lcssa450 = $577;$$pre$i3$i$i149 = $$pre$i3$i$i181302;$__ng$0$lcssa451 = $__ng$0;
         break;
        } else {
         $$pre$i3$i$i181304 = $$pre$i3$i$i181302;$853 = 0;
        }
       }
       $539 = HEAP32[$__b>>2]|0;
       $540 = ((($539)) + 12|0);
       $541 = HEAP32[$540>>2]|0;
       $542 = ((($539)) + 16|0);
       $543 = HEAP32[$542>>2]|0;
       $544 = ($541|0)==($543|0);
       if ($544) {
        $545 = HEAP32[$539>>2]|0;
        $546 = ((($545)) + 36|0);
        $547 = HEAP32[$546>>2]|0;
        __THREW__ = 0;
        $548 = (invoke_ii($547|0,($539|0))|0);
        $549 = __THREW__; __THREW__ = 0;
        $550 = $549&1;
        if ($550) {
         label = 39;
         break L24;
        } else {
         $$0$i$i170 = $548;
        }
       } else {
        $551 = HEAP32[$541>>2]|0;
        $$0$i$i170 = $551;
       }
       $552 = HEAP32[$__ct>>2]|0;
       $553 = ((($552)) + 12|0);
       $554 = HEAP32[$553>>2]|0;
       __THREW__ = 0;
       $555 = (invoke_iiii($554|0,($__ct|0),2048,($$0$i$i170|0))|0);
       $556 = __THREW__; __THREW__ = 0;
       $557 = $556&1;
       if ($557) {
        label = 39;
        break L24;
       }
       if ($555) {
        $558 = HEAP32[$__wn>>2]|0;
        $559 = HEAP32[$0>>2]|0;
        $560 = ($558|0)==($559|0);
        if ($560) {
         __THREW__ = 0;
         invoke_viii(743,($__wb|0),($__wn|0),($0|0));
         $561 = __THREW__; __THREW__ = 0;
         $562 = $561&1;
         if ($562) {
          label = 39;
          break L24;
         }
         $$pre306 = HEAP32[$__wn>>2]|0;
         $564 = $$pre306;
        } else {
         $564 = $558;
        }
        $563 = ((($564)) + 4|0);
        HEAP32[$__wn>>2] = $563;
        HEAP32[$564>>2] = $$0$i$i170;
        $565 = (($__ng$0) + 1)|0;
        $854 = $577;$__ng$2$ph = $565;
       } else {
        $566 = HEAP8[$__grp>>0]|0;
        $567 = $566 & 1;
        $568 = ($567<<24>>24)==(0);
        $569 = HEAP32[$28>>2]|0;
        $570 = $566&255;
        $571 = $570 >>> 1;
        $572 = $568 ? $571 : $569;
        $573 = ($572|0)!=(0);
        $574 = ($__ng$0|0)!=(0);
        $or$cond12 = $574 & $573;
        $575 = ($$0$i$i170|0)==($86|0);
        $or$cond25 = $575 & $or$cond12;
        if (!($or$cond25)) {
         $$lcssa450 = $577;$$pre$i3$i$i149 = $$pre$i3$i$i181304;$__ng$0$lcssa451 = $__ng$0;
         break;
        }
        $576 = HEAP32[$__ge>>2]|0;
        $578 = ($577|0)==($576|0);
        if ($578) {
         __THREW__ = 0;
         invoke_viii(737,($__gb|0),($__gn|0),($__ge|0));
         $579 = __THREW__; __THREW__ = 0;
         $580 = $579&1;
         if ($580) {
          label = 39;
          break L24;
         }
         $$pre = HEAP32[$__gn>>2]|0;
         $582 = $$pre;
        } else {
         $582 = $577;
        }
        $581 = ((($582)) + 4|0);
        HEAP32[$__gn>>2] = $581;
        HEAP32[$582>>2] = $__ng$0;
        $854 = $581;$__ng$2$ph = 0;
       }
       $583 = HEAP32[$__b>>2]|0;
       $584 = ((($583)) + 12|0);
       $585 = HEAP32[$584>>2]|0;
       $586 = ((($583)) + 16|0);
       $587 = HEAP32[$586>>2]|0;
       $588 = ($585|0)==($587|0);
       if ($588) {
        $589 = HEAP32[$583>>2]|0;
        $590 = ((($589)) + 40|0);
        $591 = HEAP32[$590>>2]|0;
        __THREW__ = 0;
        (invoke_ii($591|0,($583|0))|0);
        $592 = __THREW__; __THREW__ = 0;
        $593 = $592&1;
        if ($593) {
         label = 39;
         break L24;
        } else {
         $$pre$i3$i$i181 = $$pre$i3$i$i181304;$523 = $853;$577 = $854;$__ng$0 = $__ng$2$ph;
         continue;
        }
       } else {
        $594 = ((($585)) + 4|0);
        HEAP32[$584>>2] = $594;
        $$pre$i3$i$i181 = $$pre$i3$i$i181304;$523 = $853;$577 = $854;$__ng$0 = $__ng$2$ph;
        continue;
       }
      }
      $595 = HEAP32[$__gb>>2]|0;
      $596 = ($595|0)!=($$lcssa450|0);
      $597 = ($__ng$0$lcssa451|0)!=(0);
      $or$cond14 = $597 & $596;
      if ($or$cond14) {
       $598 = HEAP32[$__ge>>2]|0;
       $599 = ($$lcssa450|0)==($598|0);
       if ($599) {
        __THREW__ = 0;
        invoke_viii(737,($__gb|0),($__gn|0),($__ge|0));
        $600 = __THREW__; __THREW__ = 0;
        $601 = $600&1;
        if ($601) {
         label = 40;
         break L24;
        }
        $$pre308 = HEAP32[$__gn>>2]|0;
        $603 = $$pre308;
       } else {
        $603 = $$lcssa450;
       }
       $602 = ((($603)) + 4|0);
       HEAP32[$__gn>>2] = $602;
       HEAP32[$603>>2] = $__ng$0$lcssa451;
       $855 = $602;
      } else {
       $855 = $$lcssa450;
      }
      $604 = HEAP32[$__fd>>2]|0;
      $605 = ($604|0)>(0);
      L223: do {
       if ($605) {
        $606 = HEAP32[$__b>>2]|0;
        $607 = ($606|0)==(0|0);
        do {
         if ($607) {
          $856 = 1;
         } else {
          $608 = ((($606)) + 12|0);
          $609 = HEAP32[$608>>2]|0;
          $610 = ((($606)) + 16|0);
          $611 = HEAP32[$610>>2]|0;
          $612 = ($609|0)==($611|0);
          if ($612) {
           $613 = HEAP32[$606>>2]|0;
           $614 = ((($613)) + 36|0);
           $615 = HEAP32[$614>>2]|0;
           __THREW__ = 0;
           $616 = (invoke_ii($615|0,($606|0))|0);
           $617 = __THREW__; __THREW__ = 0;
           $618 = $617&1;
           if ($618) {
            label = 40;
            break L24;
           } else {
            $$0$i$i$i$i141 = $616;
           }
          } else {
           $619 = HEAP32[$609>>2]|0;
           $$0$i$i$i$i141 = $619;
          }
          $620 = ($$0$i$i$i$i141|0)==(-1);
          if ($620) {
           HEAP32[$__b>>2] = 0;
           $856 = 1;
           break;
          } else {
           $$pre$i$i$i143 = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i144 = ($$pre$i$i$i143|0)==(0|0);
           $856 = $phitmp$i$i$i144;
           break;
          }
         }
        } while(0);
        $621 = ($$pre$i3$i$i149|0)==(0|0);
        do {
         if ($621) {
          label = 216;
         } else {
          $622 = ((($$pre$i3$i$i149)) + 12|0);
          $623 = HEAP32[$622>>2]|0;
          $624 = ((($$pre$i3$i$i149)) + 16|0);
          $625 = HEAP32[$624>>2]|0;
          $626 = ($623|0)==($625|0);
          if ($626) {
           $627 = HEAP32[$$pre$i3$i$i149>>2]|0;
           $628 = ((($627)) + 36|0);
           $629 = HEAP32[$628>>2]|0;
           __THREW__ = 0;
           $630 = (invoke_ii($629|0,($$pre$i3$i$i149|0))|0);
           $631 = __THREW__; __THREW__ = 0;
           $632 = $631&1;
           if ($632) {
            label = 40;
            break L24;
           } else {
            $$0$i$i1$i$i147 = $630;
           }
          } else {
           $633 = HEAP32[$623>>2]|0;
           $$0$i$i1$i$i147 = $633;
          }
          $634 = ($$0$i$i1$i$i147|0)==(-1);
          if ($634) {
           HEAP32[$__e>>2] = 0;
           label = 216;
           break;
          } else {
           if ($856) {
            $857 = $$pre$i3$i$i149;
            break;
           } else {
            label = 222;
            break L24;
           }
          }
         }
        } while(0);
        if ((label|0) == 216) {
         label = 0;
         if ($856) {
          label = 222;
          break L24;
         } else {
          $857 = 0;
         }
        }
        $635 = HEAP32[$__b>>2]|0;
        $636 = ((($635)) + 12|0);
        $637 = HEAP32[$636>>2]|0;
        $638 = ((($635)) + 16|0);
        $639 = HEAP32[$638>>2]|0;
        $640 = ($637|0)==($639|0);
        if ($640) {
         $641 = HEAP32[$635>>2]|0;
         $642 = ((($641)) + 36|0);
         $643 = HEAP32[$642>>2]|0;
         __THREW__ = 0;
         $644 = (invoke_ii($643|0,($635|0))|0);
         $645 = __THREW__; __THREW__ = 0;
         $646 = $645&1;
         if ($646) {
          label = 40;
          break L24;
         } else {
          $$0$i$i134 = $644;
         }
        } else {
         $647 = HEAP32[$637>>2]|0;
         $$0$i$i134 = $647;
        }
        $648 = HEAP32[$__dp>>2]|0;
        $649 = ($$0$i$i134|0)==($648|0);
        if (!($649)) {
         label = 222;
         break L24;
        }
        $652 = HEAP32[$__b>>2]|0;
        $653 = ((($652)) + 12|0);
        $654 = HEAP32[$653>>2]|0;
        $655 = ((($652)) + 16|0);
        $656 = HEAP32[$655>>2]|0;
        $657 = ($654|0)==($656|0);
        if ($657) {
         $658 = HEAP32[$652>>2]|0;
         $659 = ((($658)) + 40|0);
         $660 = HEAP32[$659>>2]|0;
         __THREW__ = 0;
         (invoke_ii($660|0,($652|0))|0);
         $661 = __THREW__; __THREW__ = 0;
         $662 = $661&1;
         if ($662) {
          label = 40;
          break L24;
         } else {
          $$pre$i3$i$i115 = $857;$664 = $604;$681 = $857;
         }
        } else {
         $663 = ((($654)) + 4|0);
         HEAP32[$653>>2] = $663;
         $$pre$i3$i$i115 = $857;$664 = $604;$681 = $857;
        }
        while(1) {
         $665 = ($664|0)>(0);
         if (!($665)) {
          break L223;
         }
         $666 = HEAP32[$__b>>2]|0;
         $667 = ($666|0)==(0|0);
         do {
          if ($667) {
           $696 = 1;
          } else {
           $668 = ((($666)) + 12|0);
           $669 = HEAP32[$668>>2]|0;
           $670 = ((($666)) + 16|0);
           $671 = HEAP32[$670>>2]|0;
           $672 = ($669|0)==($671|0);
           if ($672) {
            $673 = HEAP32[$666>>2]|0;
            $674 = ((($673)) + 36|0);
            $675 = HEAP32[$674>>2]|0;
            __THREW__ = 0;
            $676 = (invoke_ii($675|0,($666|0))|0);
            $677 = __THREW__; __THREW__ = 0;
            $678 = $677&1;
            if ($678) {
             label = 38;
             break L24;
            } else {
             $$0$i$i$i$i107 = $676;
            }
           } else {
            $679 = HEAP32[$669>>2]|0;
            $$0$i$i$i$i107 = $679;
           }
           $680 = ($$0$i$i$i$i107|0)==(-1);
           if ($680) {
            HEAP32[$__b>>2] = 0;
            $696 = 1;
            break;
           } else {
            $$pre$i$i$i109 = HEAP32[$__b>>2]|0;
            $phitmp$i$i$i110 = ($$pre$i$i$i109|0)==(0|0);
            $696 = $phitmp$i$i$i110;
            break;
           }
          }
         } while(0);
         $682 = ($681|0)==(0|0);
         do {
          if ($682) {
           $$pre$i3$i$i115309$ph = $$pre$i3$i$i115;
           label = 240;
          } else {
           $683 = ((($681)) + 12|0);
           $684 = HEAP32[$683>>2]|0;
           $685 = ((($681)) + 16|0);
           $686 = HEAP32[$685>>2]|0;
           $687 = ($684|0)==($686|0);
           if ($687) {
            $688 = HEAP32[$681>>2]|0;
            $689 = ((($688)) + 36|0);
            $690 = HEAP32[$689>>2]|0;
            __THREW__ = 0;
            $691 = (invoke_ii($690|0,($681|0))|0);
            $692 = __THREW__; __THREW__ = 0;
            $693 = $692&1;
            if ($693) {
             label = 38;
             break L24;
            } else {
             $$0$i$i1$i$i113 = $691;
            }
           } else {
            $694 = HEAP32[$684>>2]|0;
            $$0$i$i1$i$i113 = $694;
           }
           $695 = ($$0$i$i1$i$i113|0)==(-1);
           if ($695) {
            HEAP32[$__e>>2] = 0;
            $$pre$i3$i$i115309$ph = 0;
            label = 240;
            break;
           } else {
            $phitmp$i4$i$i116 = ($$pre$i3$i$i115|0)==(0|0);
            $tmp$i$i118 = $696 ^ $phitmp$i4$i$i116;
            if ($tmp$i$i118) {
             $$pre$i3$i$i115309333 = $$pre$i3$i$i115;$858 = $$pre$i3$i$i115;
             break;
            } else {
             label = 247;
             break L24;
            }
           }
          }
         } while(0);
         if ((label|0) == 240) {
          label = 0;
          if ($696) {
           label = 247;
           break L24;
          } else {
           $$pre$i3$i$i115309333 = $$pre$i3$i$i115309$ph;$858 = 0;
          }
         }
         $697 = HEAP32[$__b>>2]|0;
         $698 = ((($697)) + 12|0);
         $699 = HEAP32[$698>>2]|0;
         $700 = ((($697)) + 16|0);
         $701 = HEAP32[$700>>2]|0;
         $702 = ($699|0)==($701|0);
         if ($702) {
          $703 = HEAP32[$697>>2]|0;
          $704 = ((($703)) + 36|0);
          $705 = HEAP32[$704>>2]|0;
          __THREW__ = 0;
          $706 = (invoke_ii($705|0,($697|0))|0);
          $707 = __THREW__; __THREW__ = 0;
          $708 = $707&1;
          if ($708) {
           label = 38;
           break L24;
          } else {
           $$0$i$i101 = $706;
          }
         } else {
          $709 = HEAP32[$699>>2]|0;
          $$0$i$i101 = $709;
         }
         $710 = HEAP32[$__ct>>2]|0;
         $711 = ((($710)) + 12|0);
         $712 = HEAP32[$711>>2]|0;
         __THREW__ = 0;
         $713 = (invoke_iiii($712|0,($__ct|0),2048,($$0$i$i101|0))|0);
         $714 = __THREW__; __THREW__ = 0;
         $715 = $714&1;
         if ($715) {
          label = 38;
          break L24;
         }
         if (!($713)) {
          label = 247;
          break L24;
         }
         $718 = HEAP32[$__wn>>2]|0;
         $719 = HEAP32[$0>>2]|0;
         $720 = ($718|0)==($719|0);
         if ($720) {
          __THREW__ = 0;
          invoke_viii(743,($__wb|0),($__wn|0),($0|0));
          $721 = __THREW__; __THREW__ = 0;
          $722 = $721&1;
          if ($722) {
           label = 38;
           break L24;
          }
         }
         $723 = HEAP32[$__b>>2]|0;
         $724 = ((($723)) + 12|0);
         $725 = HEAP32[$724>>2]|0;
         $726 = ((($723)) + 16|0);
         $727 = HEAP32[$726>>2]|0;
         $728 = ($725|0)==($727|0);
         if ($728) {
          $729 = HEAP32[$723>>2]|0;
          $730 = ((($729)) + 36|0);
          $731 = HEAP32[$730>>2]|0;
          __THREW__ = 0;
          $732 = (invoke_ii($731|0,($723|0))|0);
          $733 = __THREW__; __THREW__ = 0;
          $734 = $733&1;
          if ($734) {
           label = 38;
           break L24;
          } else {
           $$0$i$i93 = $732;
          }
         } else {
          $735 = HEAP32[$725>>2]|0;
          $$0$i$i93 = $735;
         }
         $736 = HEAP32[$__wn>>2]|0;
         $737 = ((($736)) + 4|0);
         HEAP32[$__wn>>2] = $737;
         HEAP32[$736>>2] = $$0$i$i93;
         $738 = (($664) + -1)|0;
         HEAP32[$__fd>>2] = $738;
         $739 = HEAP32[$__b>>2]|0;
         $740 = ((($739)) + 12|0);
         $741 = HEAP32[$740>>2]|0;
         $742 = ((($739)) + 16|0);
         $743 = HEAP32[$742>>2]|0;
         $744 = ($741|0)==($743|0);
         if ($744) {
          $745 = HEAP32[$739>>2]|0;
          $746 = ((($745)) + 40|0);
          $747 = HEAP32[$746>>2]|0;
          __THREW__ = 0;
          (invoke_ii($747|0,($739|0))|0);
          $748 = __THREW__; __THREW__ = 0;
          $749 = $748&1;
          if ($749) {
           label = 38;
           break L24;
          } else {
           $$pre$i3$i$i115 = $$pre$i3$i$i115309333;$664 = $738;$681 = $858;
           continue;
          }
         } else {
          $750 = ((($741)) + 4|0);
          HEAP32[$740>>2] = $750;
          $$pre$i3$i$i115 = $$pre$i3$i$i115309333;$664 = $738;$681 = $858;
          continue;
         }
        }
       }
      } while(0);
      $751 = HEAP32[$__wn>>2]|0;
      $752 = HEAP32[$__wb>>2]|0;
      $753 = ($751|0)==($752|0);
      if ($753) {
       label = 257;
       break L24;
      } else {
       $850 = $855;$__trailing_sign$1 = $__trailing_sign$0;
      }
      break;
     }
     default: {
      $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
     }
     }
    } while(0);
    L297: do {
     if ((label|0) == 60) {
      while(1) {
       label = 0;
       $125 = HEAP32[$__b>>2]|0;
       $126 = ($125|0)==(0|0);
       do {
        if ($126) {
         $155 = 1;
        } else {
         $127 = ((($125)) + 12|0);
         $128 = HEAP32[$127>>2]|0;
         $129 = ((($125)) + 16|0);
         $130 = HEAP32[$129>>2]|0;
         $131 = ($128|0)==($130|0);
         if ($131) {
          $132 = HEAP32[$125>>2]|0;
          $133 = ((($132)) + 36|0);
          $134 = HEAP32[$133>>2]|0;
          __THREW__ = 0;
          $135 = (invoke_ii($134|0,($125|0))|0);
          $136 = __THREW__; __THREW__ = 0;
          $137 = $136&1;
          if ($137) {
           label = 35;
           break L24;
          } else {
           $$0$i$i$i$i66 = $135;
          }
         } else {
          $138 = HEAP32[$128>>2]|0;
          $$0$i$i$i$i66 = $138;
         }
         $139 = ($$0$i$i$i$i66|0)==(-1);
         if ($139) {
          HEAP32[$__b>>2] = 0;
          $155 = 1;
          break;
         } else {
          $$pre$i$i$i68 = HEAP32[$__b>>2]|0;
          $phitmp$i$i$i69 = ($$pre$i$i$i68|0)==(0|0);
          $155 = $phitmp$i$i$i69;
          break;
         }
        }
       } while(0);
       $141 = ($140|0)==(0|0);
       do {
        if ($141) {
         $$pre$i3$i$i74327 = $$pre$i3$i$i74;
         label = 73;
        } else {
         $142 = ((($140)) + 12|0);
         $143 = HEAP32[$142>>2]|0;
         $144 = ((($140)) + 16|0);
         $145 = HEAP32[$144>>2]|0;
         $146 = ($143|0)==($145|0);
         if ($146) {
          $147 = HEAP32[$140>>2]|0;
          $148 = ((($147)) + 36|0);
          $149 = HEAP32[$148>>2]|0;
          __THREW__ = 0;
          $150 = (invoke_ii($149|0,($140|0))|0);
          $151 = __THREW__; __THREW__ = 0;
          $152 = $151&1;
          if ($152) {
           label = 35;
           break L24;
          } else {
           $$0$i$i1$i$i72 = $150;
          }
         } else {
          $153 = HEAP32[$143>>2]|0;
          $$0$i$i1$i$i72 = $153;
         }
         $154 = ($$0$i$i1$i$i72|0)==(-1);
         if ($154) {
          HEAP32[$__e>>2] = 0;
          $$pre$i3$i$i74327 = 0;
          label = 73;
          break;
         } else {
          $phitmp$i4$i$i75 = ($$pre$i3$i$i74|0)==(0|0);
          $tmp$i$i77 = $155 ^ $phitmp$i4$i$i75;
          if ($tmp$i$i77) {
           $$pre$i3$i$i74329 = $$pre$i3$i$i74;$851 = $$pre$i3$i$i74;
           break;
          } else {
           $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
           break L297;
          }
         }
        }
       } while(0);
       if ((label|0) == 73) {
        label = 0;
        if ($155) {
         $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
         break L297;
        } else {
         $$pre$i3$i$i74329 = $$pre$i3$i$i74327;$851 = 0;
        }
       }
       $156 = HEAP32[$__b>>2]|0;
       $157 = ((($156)) + 12|0);
       $158 = HEAP32[$157>>2]|0;
       $159 = ((($156)) + 16|0);
       $160 = HEAP32[$159>>2]|0;
       $161 = ($158|0)==($160|0);
       if ($161) {
        $162 = HEAP32[$156>>2]|0;
        $163 = ((($162)) + 36|0);
        $164 = HEAP32[$163>>2]|0;
        __THREW__ = 0;
        $165 = (invoke_ii($164|0,($156|0))|0);
        $166 = __THREW__; __THREW__ = 0;
        $167 = $166&1;
        if ($167) {
         label = 35;
         break L24;
        } else {
         $$0$i$i81 = $165;
        }
       } else {
        $168 = HEAP32[$158>>2]|0;
        $$0$i$i81 = $168;
       }
       $169 = HEAP32[$__ct>>2]|0;
       $170 = ((($169)) + 12|0);
       $171 = HEAP32[$170>>2]|0;
       __THREW__ = 0;
       $172 = (invoke_iiii($171|0,($__ct|0),8192,($$0$i$i81|0))|0);
       $173 = __THREW__; __THREW__ = 0;
       $174 = $173&1;
       if ($174) {
        label = 35;
        break L24;
       }
       if (!($172)) {
        $850 = $847;$__trailing_sign$1 = $__trailing_sign$0;
        break L297;
       }
       $175 = HEAP32[$__b>>2]|0;
       $176 = ((($175)) + 12|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ((($175)) + 16|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($177|0)==($179|0);
       if ($180) {
        $181 = HEAP32[$175>>2]|0;
        $182 = ((($181)) + 40|0);
        $183 = HEAP32[$182>>2]|0;
        __THREW__ = 0;
        $184 = (invoke_ii($183|0,($175|0))|0);
        $185 = __THREW__; __THREW__ = 0;
        $186 = $185&1;
        if ($186) {
         label = 35;
         break L24;
        } else {
         $$0$i$i88 = $184;
        }
       } else {
        $187 = ((($177)) + 4|0);
        HEAP32[$176>>2] = $187;
        $188 = HEAP32[$177>>2]|0;
        $$0$i$i88 = $188;
       }
       __THREW__ = 0;
       invoke_vii(742,($__spaces|0),($$0$i$i88|0));
       $189 = __THREW__; __THREW__ = 0;
       $190 = $189&1;
       if ($190) {
        label = 35;
        break L24;
       } else {
        $$pre$i3$i$i74 = $$pre$i3$i$i74329;$140 = $851;
        label = 60;
       }
      }
     }
    } while(0);
    $756 = (($__p$0) + 1)|0;
    $847 = $850;$__p$0 = $756;$__trailing_sign$0 = $__trailing_sign$1;
   }
   L333:    switch (label|0) {
    case 35: {
     $62 = ___cxa_find_matching_catch_2()|0;
     $63 = tempRet0;
     $lpad$phi$index = $62;$lpad$phi$index8 = $63;
     break L21;
     break;
    }
    case 36: {
     $64 = ___cxa_find_matching_catch_2()|0;
     $65 = tempRet0;
     $lpad$phi$index = $64;$lpad$phi$index8 = $65;
     break L21;
     break;
    }
    case 37: {
     $66 = ___cxa_find_matching_catch_2()|0;
     $67 = tempRet0;
     $lpad$phi$index = $66;$lpad$phi$index8 = $67;
     break L21;
     break;
    }
    case 38: {
     $68 = ___cxa_find_matching_catch_2()|0;
     $69 = tempRet0;
     $lpad$phi$index = $68;$lpad$phi$index8 = $69;
     break L21;
     break;
    }
    case 39: {
     $70 = ___cxa_find_matching_catch_2()|0;
     $71 = tempRet0;
     $lpad$phi$index = $70;$lpad$phi$index8 = $71;
     break L21;
     break;
    }
    case 40: {
     $72 = ___cxa_find_matching_catch_2()|0;
     $73 = tempRet0;
     $lpad$phi$index = $72;$lpad$phi$index8 = $73;
     break L21;
     break;
    }
    case 58: {
     $122 = HEAP32[$__err>>2]|0;
     $123 = $122 | 4;
     HEAP32[$__err>>2] = $123;
     $$10 = 0;
     break;
    }
    case 123: {
     $356 = HEAP32[$__err>>2]|0;
     $357 = $356 | 4;
     HEAP32[$__err>>2] = $357;
     $$10 = 0;
     break;
    }
    case 164: {
     $506 = HEAP32[$__err>>2]|0;
     $507 = $506 | 4;
     HEAP32[$__err>>2] = $507;
     $$10 = 0;
     break;
    }
    case 222: {
     $650 = HEAP32[$__err>>2]|0;
     $651 = $650 | 4;
     HEAP32[$__err>>2] = $651;
     $$10 = 0;
     break;
    }
    case 247: {
     $716 = HEAP32[$__err>>2]|0;
     $717 = $716 | 4;
     HEAP32[$__err>>2] = $717;
     $$10 = 0;
     break;
    }
    case 257: {
     $754 = HEAP32[$__err>>2]|0;
     $755 = $754 | 4;
     HEAP32[$__err>>2] = $755;
     $$10 = 0;
     break;
    }
    case 259: {
     $757 = ($__trailing_sign$0$lcssa|0)==(0|0);
     L335: do {
      if (!($757)) {
       $758 = ((($__trailing_sign$0$lcssa)) + 4|0);
       $759 = ((($__trailing_sign$0$lcssa)) + 8|0);
       $__i$0 = 1;
       L337: while(1) {
        $760 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $761 = $760 & 1;
        $762 = ($761<<24>>24)==(0);
        if ($762) {
         $764 = $760&255;
         $765 = $764 >>> 1;
         $767 = $765;
        } else {
         $763 = HEAP32[$758>>2]|0;
         $767 = $763;
        }
        $766 = ($__i$0>>>0)<($767>>>0);
        if (!($766)) {
         break L335;
        }
        $768 = HEAP32[$__b>>2]|0;
        $769 = ($768|0)==(0|0);
        do {
         if ($769) {
          $859 = 1;
         } else {
          $770 = ((($768)) + 12|0);
          $771 = HEAP32[$770>>2]|0;
          $772 = ((($768)) + 16|0);
          $773 = HEAP32[$772>>2]|0;
          $774 = ($771|0)==($773|0);
          if ($774) {
           $775 = HEAP32[$768>>2]|0;
           $776 = ((($775)) + 36|0);
           $777 = HEAP32[$776>>2]|0;
           __THREW__ = 0;
           $778 = (invoke_ii($777|0,($768|0))|0);
           $779 = __THREW__; __THREW__ = 0;
           $780 = $779&1;
           if ($780) {
            label = 34;
            break L337;
           } else {
            $$0$i$i$i$i = $778;
           }
          } else {
           $781 = HEAP32[$771>>2]|0;
           $$0$i$i$i$i = $781;
          }
          $782 = ($$0$i$i$i$i|0)==(-1);
          if ($782) {
           HEAP32[$__b>>2] = 0;
           $859 = 1;
           break;
          } else {
           $$pre$i$i$i = HEAP32[$__b>>2]|0;
           $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
           $859 = $phitmp$i$i$i;
           break;
          }
         }
        } while(0);
        $783 = HEAP32[$__e>>2]|0;
        $784 = ($783|0)==(0|0);
        do {
         if ($784) {
          label = 278;
         } else {
          $785 = ((($783)) + 12|0);
          $786 = HEAP32[$785>>2]|0;
          $787 = ((($783)) + 16|0);
          $788 = HEAP32[$787>>2]|0;
          $789 = ($786|0)==($788|0);
          if ($789) {
           $790 = HEAP32[$783>>2]|0;
           $791 = ((($790)) + 36|0);
           $792 = HEAP32[$791>>2]|0;
           __THREW__ = 0;
           $793 = (invoke_ii($792|0,($783|0))|0);
           $794 = __THREW__; __THREW__ = 0;
           $795 = $794&1;
           if ($795) {
            label = 34;
            break L337;
           } else {
            $$0$i$i1$i$i = $793;
           }
          } else {
           $796 = HEAP32[$786>>2]|0;
           $$0$i$i1$i$i = $796;
          }
          $797 = ($$0$i$i1$i$i|0)==(-1);
          if ($797) {
           HEAP32[$__e>>2] = 0;
           label = 278;
           break;
          } else {
           if ($859) {
            break;
           } else {
            label = 286;
            break L337;
           }
          }
         }
        } while(0);
        if ((label|0) == 278) {
         label = 0;
         if ($859) {
          label = 286;
          break;
         }
        }
        $798 = HEAP32[$__b>>2]|0;
        $799 = ((($798)) + 12|0);
        $800 = HEAP32[$799>>2]|0;
        $801 = ((($798)) + 16|0);
        $802 = HEAP32[$801>>2]|0;
        $803 = ($800|0)==($802|0);
        if ($803) {
         $804 = HEAP32[$798>>2]|0;
         $805 = ((($804)) + 36|0);
         $806 = HEAP32[$805>>2]|0;
         __THREW__ = 0;
         $807 = (invoke_ii($806|0,($798|0))|0);
         $808 = __THREW__; __THREW__ = 0;
         $809 = $808&1;
         if ($809) {
          label = 34;
          break;
         } else {
          $$0$i$i = $807;
         }
        } else {
         $810 = HEAP32[$800>>2]|0;
         $$0$i$i = $810;
        }
        $811 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
        $812 = $811 & 1;
        $813 = ($812<<24>>24)==(0);
        if ($813) {
         $816 = $758;
        } else {
         $814 = HEAP32[$759>>2]|0;
         $816 = $814;
        }
        $815 = (($816) + ($__i$0<<2)|0);
        $817 = HEAP32[$815>>2]|0;
        $818 = ($$0$i$i|0)==($817|0);
        if (!($818)) {
         label = 286;
         break;
        }
        $821 = (($__i$0) + 1)|0;
        $822 = HEAP32[$__b>>2]|0;
        $823 = ((($822)) + 12|0);
        $824 = HEAP32[$823>>2]|0;
        $825 = ((($822)) + 16|0);
        $826 = HEAP32[$825>>2]|0;
        $827 = ($824|0)==($826|0);
        if ($827) {
         $828 = HEAP32[$822>>2]|0;
         $829 = ((($828)) + 40|0);
         $830 = HEAP32[$829>>2]|0;
         __THREW__ = 0;
         (invoke_ii($830|0,($822|0))|0);
         $831 = __THREW__; __THREW__ = 0;
         $832 = $831&1;
         if ($832) {
          label = 34;
          break;
         } else {
          $__i$0 = $821;
          continue;
         }
        } else {
         $833 = ((($824)) + 4|0);
         HEAP32[$823>>2] = $833;
         $__i$0 = $821;
         continue;
        }
       }
       if ((label|0) == 34) {
        $60 = ___cxa_find_matching_catch_2()|0;
        $61 = tempRet0;
        $lpad$phi$index = $60;$lpad$phi$index8 = $61;
        break L21;
       }
       else if ((label|0) == 286) {
        $819 = HEAP32[$__err>>2]|0;
        $820 = $819 | 4;
        HEAP32[$__err>>2] = $820;
        $$10 = 0;
        break L333;
       }
      }
     } while(0);
     $834 = HEAP32[$__gb>>2]|0;
     $835 = ($834|0)==($$lcssa461|0);
     if ($835) {
      $$10 = 1;
     } else {
      HEAP32[$__et>>2] = 0;
      __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$834,$$lcssa461,$__et);
      $836 = HEAP32[$__et>>2]|0;
      $837 = ($836|0)==(0);
      if ($837) {
       $$10 = 1;
       break;
      } else {
       $838 = HEAP32[$__err>>2]|0;
       $839 = $838 | 4;
       HEAP32[$__err>>2] = $839;
       $$10 = 0;
       break;
      }
     }
     break;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $840 = HEAP32[$__gb>>2]|0;
   HEAP32[$__gb>>2] = 0;
   $841 = ($840|0)==(0|0);
   if (!($841)) {
    $842 = HEAP32[$2>>2]|0;
    __THREW__ = 0;
    invoke_vi($842|0,($840|0));
    $843 = __THREW__; __THREW__ = 0;
    $844 = $843&1;
    if ($844) {
     $845 = ___cxa_find_matching_catch_3(0|0)|0;
     $846 = tempRet0;
     ___clang_call_terminate($845);
     // unreachable;
    }
   }
   STACKTOP = sp;return ($$10|0);
  }
 } while(0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $76 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $77 = ($76|0)==(0|0);
 if (!($77)) {
  $78 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($78|0,($76|0));
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if ($80) {
   $81 = ___cxa_find_matching_catch_3(0|0)|0;
   $82 = tempRet0;
   ___clang_call_terminate($81);
   // unreachable;
  }
 }
 ___resumeException($lpad$phi$index|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__psn,$__nsn,$__fd) {
 $__intl = $__intl|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__psn = $__psn|0;
 $__nsn = $__nsn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i4 = 0, $__i$0$i$i$i7 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0;
 var $exitcond$i$i$i5 = 0, $exitcond$i$i$i8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 100|0;
 $1 = sp + 88|0;
 $2 = sp + 76|0;
 $3 = sp + 64|0;
 $4 = sp + 52|0;
 $5 = sp + 48|0;
 $6 = sp + 36|0;
 $7 = sp + 24|0;
 $8 = sp + 12|0;
 $9 = sp;
 if ($__intl) {
  $10 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24152)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_vii[$13 & 1023]($0,$10);
  $14 = HEAP32[$0>>2]|0;
  HEAP8[$__pat>>0]=$14&255;HEAP8[$__pat+1>>0]=($14>>8)&255;HEAP8[$__pat+2>>0]=($14>>16)&255;HEAP8[$__pat+3>>0]=$14>>24;
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 32|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 1023]($1,$10);
  $18 = HEAP8[$__nsn>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $21 = ((($__nsn)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = 0;
  }
  $23 = ((($__nsn)) + 4|0);
  HEAP32[$23>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__nsn|0),0);
  $24 = __THREW__; __THREW__ = 0;
  $25 = $24&1;
  if ($25) {
   $26 = ___cxa_find_matching_catch_3(0|0)|0;
   $27 = tempRet0;
   ___clang_call_terminate($26);
   // unreachable;
  }
  ;HEAP32[$__nsn>>2]=HEAP32[$1>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  $__i$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $28 = (($1) + ($__i$0$i$i$i<<2)|0);
   HEAP32[$28>>2] = 0;
   $29 = (($__i$0$i$i$i) + 1)|0;
   $__i$0$i$i$i = $29;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  $30 = HEAP32[$10>>2]|0;
  $31 = ((($30)) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vii[$32 & 1023]($2,$10);
  $33 = HEAP8[$__psn>>0]|0;
  $34 = $33 & 1;
  $35 = ($34<<24>>24)==(0);
  if ($35) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $36 = ((($__psn)) + 8|0);
   $37 = HEAP32[$36>>2]|0;
   HEAP32[$37>>2] = 0;
  }
  $38 = ((($__psn)) + 4|0);
  HEAP32[$38>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__psn|0),0);
  $39 = __THREW__; __THREW__ = 0;
  $40 = $39&1;
  if ($40) {
   $41 = ___cxa_find_matching_catch_3(0|0)|0;
   $42 = tempRet0;
   ___clang_call_terminate($41);
   // unreachable;
  }
  ;HEAP32[$__psn>>2]=HEAP32[$2>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  $__i$0$i$i$i4 = 0;
  while(1) {
   $exitcond$i$i$i5 = ($__i$0$i$i$i4|0)==(3);
   if ($exitcond$i$i$i5) {
    break;
   }
   $43 = (($2) + ($__i$0$i$i$i4<<2)|0);
   HEAP32[$43>>2] = 0;
   $44 = (($__i$0$i$i$i4) + 1)|0;
   $__i$0$i$i$i4 = $44;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  $45 = HEAP32[$10>>2]|0;
  $46 = ((($45)) + 12|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 1023]($10)|0);
  HEAP32[$__dp>>2] = $48;
  $49 = HEAP32[$10>>2]|0;
  $50 = ((($49)) + 16|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (FUNCTION_TABLE_ii[$51 & 1023]($10)|0);
  HEAP32[$__ts>>2] = $52;
  $53 = HEAP32[$10>>2]|0;
  $54 = ((($53)) + 20|0);
  $55 = HEAP32[$54>>2]|0;
  FUNCTION_TABLE_vii[$55 & 1023]($3,$10);
  $56 = HEAP8[$__grp>>0]|0;
  $57 = $56 & 1;
  $58 = ($57<<24>>24)==(0);
  if ($58) {
   $62 = ((($__grp)) + 1|0);
   HEAP8[$62>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $59 = ((($__grp)) + 8|0);
   $60 = HEAP32[$59>>2]|0;
   HEAP8[$60>>0] = 0;
   $61 = ((($__grp)) + 4|0);
   HEAP32[$61>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $63 = __THREW__; __THREW__ = 0;
  $64 = $63&1;
  if ($64) {
   $65 = ___cxa_find_matching_catch_3(0|0)|0;
   $66 = tempRet0;
   ___clang_call_terminate($65);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$3>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  $__i$0$i$i$i7 = 0;
  while(1) {
   $exitcond$i$i$i8 = ($__i$0$i$i$i7|0)==(3);
   if ($exitcond$i$i$i8) {
    break;
   }
   $67 = (($3) + ($__i$0$i$i$i7<<2)|0);
   HEAP32[$67>>2] = 0;
   $68 = (($__i$0$i$i$i7) + 1)|0;
   $__i$0$i$i$i7 = $68;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  $69 = HEAP32[$10>>2]|0;
  $70 = ((($69)) + 24|0);
  $71 = HEAP32[$70>>2]|0;
  FUNCTION_TABLE_vii[$71 & 1023]($4,$10);
  $72 = HEAP8[$__sym>>0]|0;
  $73 = $72 & 1;
  $74 = ($73<<24>>24)==(0);
  if ($74) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $75 = ((($__sym)) + 8|0);
   $76 = HEAP32[$75>>2]|0;
   HEAP32[$76>>2] = 0;
  }
  $77 = ((($__sym)) + 4|0);
  HEAP32[$77>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__sym|0),0);
  $78 = __THREW__; __THREW__ = 0;
  $79 = $78&1;
  if ($79) {
   $80 = ___cxa_find_matching_catch_3(0|0)|0;
   $81 = tempRet0;
   ___clang_call_terminate($80);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$4>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $82 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$82>>2] = 0;
   $83 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $83;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
  $84 = HEAP32[$10>>2]|0;
  $85 = ((($84)) + 36|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (FUNCTION_TABLE_ii[$86 & 1023]($10)|0);
  $storemerge = $87;
 } else {
  $88 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24144)|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = ((($89)) + 44|0);
  $91 = HEAP32[$90>>2]|0;
  FUNCTION_TABLE_vii[$91 & 1023]($5,$88);
  $92 = HEAP32[$5>>2]|0;
  HEAP8[$__pat>>0]=$92&255;HEAP8[$__pat+1>>0]=($92>>8)&255;HEAP8[$__pat+2>>0]=($92>>16)&255;HEAP8[$__pat+3>>0]=$92>>24;
  $93 = HEAP32[$88>>2]|0;
  $94 = ((($93)) + 32|0);
  $95 = HEAP32[$94>>2]|0;
  FUNCTION_TABLE_vii[$95 & 1023]($6,$88);
  $96 = HEAP8[$__nsn>>0]|0;
  $97 = $96 & 1;
  $98 = ($97<<24>>24)==(0);
  if ($98) {
   HEAP8[$__nsn>>0] = 0;
  } else {
   $99 = ((($__nsn)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   HEAP32[$100>>2] = 0;
  }
  $101 = ((($__nsn)) + 4|0);
  HEAP32[$101>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__nsn|0),0);
  $102 = __THREW__; __THREW__ = 0;
  $103 = $102&1;
  if ($103) {
   $104 = ___cxa_find_matching_catch_3(0|0)|0;
   $105 = tempRet0;
   ___clang_call_terminate($104);
   // unreachable;
  }
  ;HEAP32[$__nsn>>2]=HEAP32[$6>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $106 = (($6) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$106>>2] = 0;
   $107 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $107;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  $108 = HEAP32[$88>>2]|0;
  $109 = ((($108)) + 28|0);
  $110 = HEAP32[$109>>2]|0;
  FUNCTION_TABLE_vii[$110 & 1023]($7,$88);
  $111 = HEAP8[$__psn>>0]|0;
  $112 = $111 & 1;
  $113 = ($112<<24>>24)==(0);
  if ($113) {
   HEAP8[$__psn>>0] = 0;
  } else {
   $114 = ((($__psn)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   HEAP32[$115>>2] = 0;
  }
  $116 = ((($__psn)) + 4|0);
  HEAP32[$116>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__psn|0),0);
  $117 = __THREW__; __THREW__ = 0;
  $118 = $117&1;
  if ($118) {
   $119 = ___cxa_find_matching_catch_3(0|0)|0;
   $120 = tempRet0;
   ___clang_call_terminate($119);
   // unreachable;
  }
  ;HEAP32[$__psn>>2]=HEAP32[$7>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  $__i$0$i$i$i21 = 0;
  while(1) {
   $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
   if ($exitcond$i$i$i22) {
    break;
   }
   $121 = (($7) + ($__i$0$i$i$i21<<2)|0);
   HEAP32[$121>>2] = 0;
   $122 = (($__i$0$i$i$i21) + 1)|0;
   $__i$0$i$i$i21 = $122;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $123 = HEAP32[$88>>2]|0;
  $124 = ((($123)) + 12|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = (FUNCTION_TABLE_ii[$125 & 1023]($88)|0);
  HEAP32[$__dp>>2] = $126;
  $127 = HEAP32[$88>>2]|0;
  $128 = ((($127)) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (FUNCTION_TABLE_ii[$129 & 1023]($88)|0);
  HEAP32[$__ts>>2] = $130;
  $131 = HEAP32[$88>>2]|0;
  $132 = ((($131)) + 20|0);
  $133 = HEAP32[$132>>2]|0;
  FUNCTION_TABLE_vii[$133 & 1023]($8,$88);
  $134 = HEAP8[$__grp>>0]|0;
  $135 = $134 & 1;
  $136 = ($135<<24>>24)==(0);
  if ($136) {
   $140 = ((($__grp)) + 1|0);
   HEAP8[$140>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $137 = ((($__grp)) + 8|0);
   $138 = HEAP32[$137>>2]|0;
   HEAP8[$138>>0] = 0;
   $139 = ((($__grp)) + 4|0);
   HEAP32[$139>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $141 = __THREW__; __THREW__ = 0;
  $142 = $141&1;
  if ($142) {
   $143 = ___cxa_find_matching_catch_3(0|0)|0;
   $144 = tempRet0;
   ___clang_call_terminate($143);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$8>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  $__i$0$i$i$i26 = 0;
  while(1) {
   $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
   if ($exitcond$i$i$i27) {
    break;
   }
   $145 = (($8) + ($__i$0$i$i$i26<<2)|0);
   HEAP32[$145>>2] = 0;
   $146 = (($__i$0$i$i$i26) + 1)|0;
   $__i$0$i$i$i26 = $146;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $147 = HEAP32[$88>>2]|0;
  $148 = ((($147)) + 24|0);
  $149 = HEAP32[$148>>2]|0;
  FUNCTION_TABLE_vii[$149 & 1023]($9,$88);
  $150 = HEAP8[$__sym>>0]|0;
  $151 = $150 & 1;
  $152 = ($151<<24>>24)==(0);
  if ($152) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $153 = ((($__sym)) + 8|0);
   $154 = HEAP32[$153>>2]|0;
   HEAP32[$154>>2] = 0;
  }
  $155 = ((($__sym)) + 4|0);
  HEAP32[$155>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__sym|0),0);
  $156 = __THREW__; __THREW__ = 0;
  $157 = $156&1;
  if ($157) {
   $158 = ___cxa_find_matching_catch_3(0|0)|0;
   $159 = tempRet0;
   ___clang_call_terminate($158);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$9>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $160 = (($9) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$160>>2] = 0;
   $161 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $161;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  $162 = HEAP32[$88>>2]|0;
  $163 = ((($162)) + 36|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (FUNCTION_TABLE_ii[$164 & 1023]($88)|0);
  $storemerge = $165;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($__b)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(732|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = (($3) - ($4))|0;
 $6 = ($5>>>0)<(2147483647);
 $7 = $5 << 1;
 $$ = $6 ? $7 : -1;
 $8 = HEAP32[$__n>>2]|0;
 $9 = (($8) - ($4))|0;
 $10 = $9 >> 2;
 $phitmp = $4;
 $11 = $2 ? $phitmp : 0;
 $12 = (_realloc($11,$$)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  __ZSt17__throw_bad_allocv();
 }
 do {
  if ($2) {
   $14 = $12;
   HEAP32[$__b>>2] = $14;
   $24 = $12;
  } else {
   $$pr = HEAP32[$__b>>2]|0;
   $15 = $12;
   HEAP32[$__b>>2] = $15;
   $16 = ($$pr|0)==(0|0);
   if ($16) {
    $24 = $12;
   } else {
    $17 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi($17|0,($$pr|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     $20 = ___cxa_find_matching_catch_3(0|0)|0;
     $21 = tempRet0;
     ___clang_call_terminate($20);
     // unreachable;
    } else {
     $$pre = HEAP32[$__b>>2]|0;
     $24 = $$pre;
     break;
    }
   }
  }
 } while(0);
 HEAP32[$0>>2] = (738);
 $22 = $$ >>> 2;
 $23 = (($24) + ($10<<2)|0);
 HEAP32[$__n>>2] = $23;
 $25 = HEAP32[$__b>>2]|0;
 $26 = (($25) + ($22<<2)|0);
 HEAP32[$__e>>2] = $26;
 return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0 = 0, $__w$0$lcssa = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 424|0;
 $__wbuf = sp + 24|0;
 $__wb = sp + 16|0;
 $__wn = sp + 8|0;
 $__loc = sp + 4|0;
 $__neg = sp + 428|0;
 $0 = sp;
 $1 = $__wbuf;
 HEAP32[$__wb>>2] = $1;
 $2 = ((($__wb)) + 4|0);
 HEAP32[$2>>2] = (732);
 $3 = ((($__wbuf)) + 400|0);
 __THREW__ = 0;
 $4 = (invoke_ii(607,($__iob|0))|0);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $33 = ___cxa_find_matching_catch_2()|0;
  $34 = tempRet0;
  HEAP32[$__wb>>2] = 0;
  $$011 = $33;$$019 = $34;$94 = $__wbuf;
  label = 39;
 } else {
  HEAP32[$__loc>>2] = $4;
  __THREW__ = 0;
  $7 = (invoke_iii(608,($__loc|0),(22448|0))|0);
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  L4: do {
   if (!($9)) {
    HEAP8[$__neg>>0] = 0;
    $10 = HEAP32[$__e>>2]|0;
    HEAP32[$0>>2] = $10;
    $11 = ((($__iob)) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $10;
    __THREW__ = 0;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
    $14 = (invoke_iiiiiiiiiiii(740,($__b|0),($$byval_copy|0),($__intl|0),($__loc|0),($12|0),($__err|0),($__neg|0),($7|0),($__wb|0),($__wn|0),($3|0))|0);
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if (!($16)) {
     if ($14) {
      $17 = HEAP8[$__v>>0]|0;
      $18 = $17 & 1;
      $19 = ($18<<24>>24)==(0);
      if ($19) {
       HEAP8[$__v>>0] = 0;
      } else {
       $20 = ((($__v)) + 8|0);
       $21 = HEAP32[$20>>2]|0;
       HEAP32[$21>>2] = 0;
      }
      $22 = ((($__v)) + 4|0);
      HEAP32[$22>>2] = 0;
      $23 = HEAP8[$__neg>>0]|0;
      $24 = ($23<<24>>24)==(0);
      if (!($24)) {
       $25 = HEAP32[$7>>2]|0;
       $26 = ((($25)) + 44|0);
       $27 = HEAP32[$26>>2]|0;
       __THREW__ = 0;
       $28 = (invoke_iii($27|0,($7|0),45)|0);
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        break;
       }
       __THREW__ = 0;
       invoke_vii(742,($__v|0),($28|0));
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        break;
       }
      }
      $35 = HEAP32[$7>>2]|0;
      $36 = ((($35)) + 44|0);
      $37 = HEAP32[$36>>2]|0;
      __THREW__ = 0;
      $38 = (invoke_iii($37|0,($7|0),48)|0);
      $39 = __THREW__; __THREW__ = 0;
      $40 = $39&1;
      if ($40) {
       break;
      }
      $41 = HEAP32[$__wb>>2]|0;
      $42 = HEAP32[$__wn>>2]|0;
      $43 = ((($42)) + -4|0);
      $__w$0 = $41;
      while(1) {
       $44 = ($__w$0>>>0)<($43>>>0);
       if (!($44)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $45 = HEAP32[$__w$0>>2]|0;
       $46 = ($45|0)==($38|0);
       if (!($46)) {
        $__w$0$lcssa = $__w$0;
        break;
       }
       $47 = ((($__w$0)) + 4|0);
       $__w$0 = $47;
      }
      __THREW__ = 0;
      (invoke_iiii(745,($__v|0),($__w$0$lcssa|0),($42|0))|0);
      $48 = __THREW__; __THREW__ = 0;
      $49 = $48&1;
      if ($49) {
       break;
      }
     }
     $50 = HEAP32[$__b>>2]|0;
     $51 = ($50|0)==(0|0);
     do {
      if ($51) {
       $99 = 1;
      } else {
       $52 = ((($50)) + 12|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = ((($50)) + 16|0);
       $55 = HEAP32[$54>>2]|0;
       $56 = ($53|0)==($55|0);
       if ($56) {
        $57 = HEAP32[$50>>2]|0;
        $58 = ((($57)) + 36|0);
        $59 = HEAP32[$58>>2]|0;
        __THREW__ = 0;
        $60 = (invoke_ii($59|0,($50|0))|0);
        $61 = __THREW__; __THREW__ = 0;
        $62 = $61&1;
        if ($62) {
         break L4;
        } else {
         $$0$i$i$i$i = $60;
        }
       } else {
        $63 = HEAP32[$53>>2]|0;
        $$0$i$i$i$i = $63;
       }
       $64 = ($$0$i$i$i$i|0)==(-1);
       if ($64) {
        HEAP32[$__b>>2] = 0;
        $99 = 1;
        break;
       } else {
        $$pre$i$i$i = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
        $99 = $phitmp$i$i$i;
        break;
       }
      }
     } while(0);
     $65 = ($10|0)==(0);
     do {
      if ($65) {
       label = 31;
      } else {
       $66 = ((($13)) + 12|0);
       $67 = HEAP32[$66>>2]|0;
       $68 = ((($13)) + 16|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = ($67|0)==($69|0);
       if ($70) {
        $71 = $10;
        $72 = HEAP32[$71>>2]|0;
        $73 = ((($72)) + 36|0);
        $74 = HEAP32[$73>>2]|0;
        __THREW__ = 0;
        $75 = (invoke_ii($74|0,($13|0))|0);
        $76 = __THREW__; __THREW__ = 0;
        $77 = $76&1;
        if ($77) {
         break L4;
        } else {
         $$0$i$i1$i$i = $75;
        }
       } else {
        $78 = HEAP32[$67>>2]|0;
        $$0$i$i1$i$i = $78;
       }
       $79 = ($$0$i$i1$i$i|0)==(-1);
       if ($79) {
        HEAP32[$__e>>2] = 0;
        label = 31;
        break;
       } else {
        if ($99) {
         break;
        } else {
         label = 33;
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 31) {
      if ($99) {
       label = 33;
      }
     }
     if ((label|0) == 33) {
      $80 = HEAP32[$__err>>2]|0;
      $81 = $80 | 2;
      HEAP32[$__err>>2] = $81;
     }
     $82 = HEAP32[$__b>>2]|0;
     (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
     $83 = HEAP32[$__wb>>2]|0;
     HEAP32[$__wb>>2] = 0;
     $84 = ($83|0)==(0|0);
     if (!($84)) {
      $85 = HEAP32[$2>>2]|0;
      __THREW__ = 0;
      invoke_vi($85|0,($83|0));
      $86 = __THREW__; __THREW__ = 0;
      $87 = $86&1;
      if ($87) {
       $88 = ___cxa_find_matching_catch_3(0|0)|0;
       $89 = tempRet0;
       ___clang_call_terminate($88);
       // unreachable;
      }
     }
     STACKTOP = sp;return ($82|0);
    }
   }
  } while(0);
  $90 = ___cxa_find_matching_catch_2()|0;
  $91 = tempRet0;
  (__ZNSt3__114__shared_count16__release_sharedEv($4)|0);
  $$pre = HEAP32[$__wb>>2]|0;
  HEAP32[$__wb>>2] = 0;
  $92 = ($$pre|0)==(0|0);
  if ($92) {
   $$0110 = $91;$$012 = $90;
  } else {
   $$011 = $90;$$019 = $91;$94 = $$pre;
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $93 = HEAP32[$2>>2]|0;
  __THREW__ = 0;
  invoke_vi($93|0,($94|0));
  $95 = __THREW__; __THREW__ = 0;
  $96 = $95&1;
  if ($96) {
   $97 = ___cxa_find_matching_catch_3(0|0)|0;
   $98 = tempRet0;
   ___clang_call_terminate($97);
   // unreachable;
  } else {
   $$0110 = $$019;$$012 = $$011;
  }
 }
 ___resumeException($$012|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, $phitmp$i = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $16 = $5;$17 = 1;$44 = $1;
 } else {
  $6 = ((($this)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $16 = $7;$17 = $phitmp$i;$44 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = $12 >> 2;
 $14 = ($13|0)==(0);
 do {
  if (!($14)) {
   $15 = (($17) - ($16))|0;
   $18 = ($15>>>0)<($13>>>0);
   if ($18) {
    $19 = (($16) + ($13))|0;
    $20 = (($19) - ($17))|0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$17,$20,$16,$16,0,0);
    $$pre = HEAP8[$this>>0]|0;
    $22 = $$pre;
   } else {
    $22 = $44;
   }
   $21 = $22 & 1;
   $23 = ($21<<24>>24)==(0);
   if ($23) {
    $26 = ((($this)) + 4|0);
    $28 = $26;
   } else {
    $24 = ((($this)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $28 = $25;
   }
   $27 = (($28) + ($16<<2)|0);
   $29 = $__last;
   $30 = (($29) - ($0))|0;
   $31 = $30 >>> 2;
   $32 = (($16) + ($31))|0;
   $$0 = $__first;$__p$0 = $27;
   while(1) {
    $33 = ($$0|0)==($__last|0);
    if ($33) {
     break;
    }
    $34 = HEAP32[$$0>>2]|0;
    HEAP32[$__p$0>>2] = $34;
    $35 = ((($__p$0)) + 4|0);
    $36 = ((($$0)) + 4|0);
    $$0 = $36;$__p$0 = $35;
   }
   $scevgep = (($28) + ($32<<2)|0);
   HEAP32[$scevgep>>2] = 0;
   $37 = (($16) + ($13))|0;
   $38 = HEAP8[$this>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $42 = $37 << 1;
    $43 = $42&255;
    HEAP8[$this>>0] = $43;
    break;
   } else {
    $41 = ((($this)) + 4|0);
    HEAP32[$41>>2] = $37;
    break;
   }
  }
 } while(0);
 return ($this|0);
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre = 0, $$pre23 = 0, $$pre23$pre = 0, $$pre25 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__hd$sroa$0$0 = 0, $__hd$sroa$0$1 = 0, $__hd$sroa$0$2 = 0, $__hn$sroa$0$0 = 0, $__hn$sroa$0$1 = 0, $__hn$sroa$0$2 = 0, $__hw$sroa$0$0 = 0, $__hw$sroa$0$1 = 0, $__i$0$i$i = 0, $__i$0$i$i6 = 0, $__i$0$i$i9 = 0;
 var $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i10 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 76|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 288|0;
 $__bb = sp + 72|0;
 $__digits = sp + 188|0;
 $__loc = sp + 68|0;
 $__pat = sp + 184|0;
 $__dp = sp + 181|0;
 $__ts = sp + 180|0;
 $__grp = sp + 56|0;
 $__sym = sp + 44|0;
 $__sn = sp + 32|0;
 $__fd = sp + 28|0;
 $__mbuf = sp + 80|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,18725,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(704)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $__hd$sroa$0$0 = 0;$__hn$sroa$0$0 = 0;
    label = 8;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(709,($__bb|0),($3|0),(18725|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $__hd$sroa$0$0 = 0;$__hn$sroa$0$0 = 0;
     label = 8;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(693);
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      if ($13) {
       $__hd$sroa$0$0 = 0;$__hn$sroa$0$0 = 0;
       label = 8;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $130 = $$pre;
     } else {
      $11 = $9;
      $130 = $11;
     }
     $16 = (_malloc($6)|0);
     $17 = $16;
     $18 = ($16|0)==(0|0);
     if ($18) {
      __THREW__ = 0;
      invoke_v(693);
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      if ($20) {
       $__hd$sroa$0$0 = $17;$__hn$sroa$0$0 = $130;
       label = 8;
      } else {
       $__db$0 = 0;$__hd$sroa$0$1 = $17;$__hn$sroa$0$1 = $130;$__n$0 = $6;
       label = 11;
      }
     } else {
      $__db$0 = $16;$__hd$sroa$0$1 = $17;$__hn$sroa$0$1 = $130;$__n$0 = $6;
      label = 11;
     }
    }
   }
  } else {
   $__db$0 = $__digits;$__hd$sroa$0$1 = 0;$__hn$sroa$0$1 = 0;$__n$0 = $1;
   label = 11;
  }
 } while(0);
 if ((label|0) == 11) {
  __THREW__ = 0;
  $21 = (invoke_ii(607,($__iob|0))|0);
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if ($23) {
   $__hd$sroa$0$0 = $__hd$sroa$0$1;$__hn$sroa$0$0 = $__hn$sroa$0$1;
   label = 8;
  } else {
   HEAP32[$__loc>>2] = $21;
   __THREW__ = 0;
   $24 = (invoke_iii(608,($__loc|0),(22416|0))|0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if ($26) {
    label = 32;
   } else {
    $27 = HEAP32[$__bb>>2]|0;
    $28 = (($27) + ($__n$0)|0);
    $29 = HEAP32[$24>>2]|0;
    $30 = ((($29)) + 32|0);
    $31 = HEAP32[$30>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($31|0,($24|0),($27|0),($28|0),($__db$0|0))|0);
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 32;
    } else {
     $34 = ($__n$0|0)==(0);
     if ($34) {
      $44 = 0;
     } else {
      $35 = HEAP32[$__bb>>2]|0;
      $36 = HEAP8[$35>>0]|0;
      $37 = ($36<<24>>24)==(45);
      $44 = $37;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $38 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$38>>2] = 0;
      $39 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $39;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $40 = (($__sym) + ($__i$0$i$i6<<2)|0);
      HEAP32[$40>>2] = 0;
      $41 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $41;
     }
     $__i$0$i$i9 = 0;
     while(1) {
      $exitcond$i$i10 = ($__i$0$i$i9|0)==(3);
      if ($exitcond$i$i10) {
       break;
      }
      $42 = (($__sn) + ($__i$0$i$i9<<2)|0);
      HEAP32[$42>>2] = 0;
      $43 = (($__i$0$i$i9) + 1)|0;
      $__i$0$i$i9 = $43;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(746,($__intl|0),($44|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $45 = __THREW__; __THREW__ = 0;
     $46 = $45&1;
     if ($46) {
      $99 = ___cxa_find_matching_catch_2()|0;
      $100 = tempRet0;
      $$0 = $99;$$01 = $100;$$pre23 = $21;
     } else {
      $47 = HEAP32[$__fd>>2]|0;
      $48 = ($__n$0|0)>($47|0);
      if ($48) {
       $49 = (($__n$0) - ($47))|0;
       $50 = $49 << 1;
       $51 = HEAP8[$__sn>>0]|0;
       $52 = $51 & 1;
       $53 = ($52<<24>>24)==(0);
       $54 = ((($__sn)) + 4|0);
       $55 = HEAP32[$54>>2]|0;
       $56 = $51&255;
       $57 = $56 >>> 1;
       $58 = $53 ? $57 : $55;
       $59 = HEAP8[$__sym>>0]|0;
       $60 = $59 & 1;
       $61 = ($60<<24>>24)==(0);
       $62 = ((($__sym)) + 4|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = $59&255;
       $65 = $64 >>> 1;
       $66 = $61 ? $65 : $63;
       $67 = $50 | 1;
       $68 = (($67) + ($47))|0;
       $69 = (($68) + ($58))|0;
       $70 = (($69) + ($66))|0;
       $90 = $70;
      } else {
       $71 = HEAP8[$__sn>>0]|0;
       $72 = $71 & 1;
       $73 = ($72<<24>>24)==(0);
       $74 = ((($__sn)) + 4|0);
       $75 = HEAP32[$74>>2]|0;
       $76 = $71&255;
       $77 = $76 >>> 1;
       $78 = $73 ? $77 : $75;
       $79 = HEAP8[$__sym>>0]|0;
       $80 = $79 & 1;
       $81 = ($80<<24>>24)==(0);
       $82 = ((($__sym)) + 4|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = $79&255;
       $85 = $84 >>> 1;
       $86 = $81 ? $85 : $83;
       $87 = (($47) + 2)|0;
       $88 = (($87) + ($78))|0;
       $89 = (($88) + ($86))|0;
       $90 = $89;
      }
      $91 = ($90>>>0)>(100);
      if ($91) {
       $92 = (_malloc($90)|0);
       $93 = $92;
       $94 = ($92|0)==(0|0);
       if ($94) {
        __THREW__ = 0;
        invoke_v(693);
        $95 = __THREW__; __THREW__ = 0;
        $96 = $95&1;
        if ($96) {
         $__hw$sroa$0$0 = $93;
        } else {
         $__hw$sroa$0$1 = $93;$__mb$0 = 0;
         label = 36;
        }
       } else {
        $__hw$sroa$0$1 = $93;$__mb$0 = $92;
        label = 36;
       }
      } else {
       $__hw$sroa$0$1 = 0;$__mb$0 = $__mbuf;
       label = 36;
      }
      if ((label|0) == 36) {
       $105 = ((($__iob)) + 4|0);
       $106 = HEAP32[$105>>2]|0;
       $107 = (($__db$0) + ($__n$0)|0);
       $108 = HEAP8[$__dp>>0]|0;
       $109 = HEAP8[$__ts>>0]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(747,($__mb$0|0),($__mi|0),($__me|0),($106|0),($__db$0|0),($107|0),($24|0),($44|0),($__pat|0),($108|0),($109|0),($__grp|0),($__sym|0),($__sn|0),($47|0));
       $110 = __THREW__; __THREW__ = 0;
       $111 = $110&1;
       if ($111) {
        $__hw$sroa$0$0 = $__hw$sroa$0$1;
       } else {
        $112 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $112;
        $113 = HEAP32[$__mi>>2]|0;
        $114 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
        $115 = (invoke_iiiiiii(609,($$byval_copy|0),($__mb$0|0),($113|0),($114|0),($__iob|0),($__fl|0))|0);
        $116 = __THREW__; __THREW__ = 0;
        $117 = $116&1;
        if ($117) {
         $__hw$sroa$0$0 = $__hw$sroa$0$1;
        } else {
         $118 = ($__hw$sroa$0$1|0)==(0);
         if ($118) {
          $120 = $21;
         } else {
          $119 = $__hw$sroa$0$1;
          _free($119);
          $$pre25 = HEAP32[$__loc>>2]|0;
          $120 = $$pre25;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         (__ZNSt3__114__shared_count16__release_sharedEv($120)|0);
         $121 = ($__hd$sroa$0$1|0)==(0);
         if (!($121)) {
          $122 = $__hd$sroa$0$1;
          _free($122);
         }
         $123 = ($__hn$sroa$0$1|0)==(0);
         if (!($123)) {
          $124 = $__hn$sroa$0$1;
          _free($124);
         }
         STACKTOP = sp;return ($115|0);
        }
       }
      }
      $101 = ___cxa_find_matching_catch_2()|0;
      $102 = tempRet0;
      $103 = ($__hw$sroa$0$0|0)==(0);
      if ($103) {
       $$0 = $101;$$01 = $102;$$pre23 = $21;
      } else {
       $104 = $__hw$sroa$0$0;
       _free($104);
       $$pre23$pre = HEAP32[$__loc>>2]|0;
       $$0 = $101;$$01 = $102;$$pre23 = $$pre23$pre;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;$125 = $$pre23;
    }
   }
   if ((label|0) == 32) {
    $97 = ___cxa_find_matching_catch_2()|0;
    $98 = tempRet0;
    $$1 = $97;$$12 = $98;$125 = $21;
   }
   (__ZNSt3__114__shared_count16__release_sharedEv($125)|0);
   $$2 = $$1;$$23 = $$12;$__hd$sroa$0$2 = $__hd$sroa$0$1;$__hn$sroa$0$2 = $__hn$sroa$0$1;
  }
 }
 if ((label|0) == 8) {
  $14 = ___cxa_find_matching_catch_2()|0;
  $15 = tempRet0;
  $$2 = $14;$$23 = $15;$__hd$sroa$0$2 = $__hd$sroa$0$0;$__hn$sroa$0$2 = $__hn$sroa$0$0;
 }
 $126 = ($__hd$sroa$0$2|0)==(0);
 if (!($126)) {
  $127 = $__hd$sroa$0$2;
  _free($127);
 }
 $128 = ($__hn$sroa$0$2|0)==(0);
 if (!($128)) {
  $129 = $__hn$sroa$0$2;
  _free($129);
 }
 ___resumeException($$2|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i11 = 0, $__i$0$i$i$i16 = 0, $__i$0$i$i$i21 = 0, $__i$0$i$i$i26 = 0, $__i$0$i$i$i31 = 0, $__i$0$i$i$i36 = 0, $__i$0$i$i$i6 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i12 = 0, $exitcond$i$i$i17 = 0, $exitcond$i$i$i22 = 0, $exitcond$i$i$i27 = 0, $exitcond$i$i$i32 = 0, $exitcond$i$i$i37 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24136)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    $26 = ((($__sn)) + 1|0);
    HEAP8[$26>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP8[$24>>0] = 0;
    $25 = ((($__sn)) + 4|0);
    HEAP32[$25>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(635,($__sn|0),0);
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $29 = ___cxa_find_matching_catch_3(0|0)|0;
    $30 = tempRet0;
    ___clang_call_terminate($29);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $31 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$31>>2] = 0;
    $32 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $32;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$pre$phiZ2D = $12;
  } else {
   $33 = ((($13)) + 40|0);
   $34 = HEAP32[$33>>2]|0;
   FUNCTION_TABLE_vii[$34 & 1023]($2,$12);
   $35 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$35&255;HEAP8[$__pat+1>>0]=($35>>8)&255;HEAP8[$__pat+2>>0]=($35>>16)&255;HEAP8[$__pat+3>>0]=$35>>24;
   $36 = HEAP32[$12>>2]|0;
   $37 = ((($36)) + 28|0);
   $38 = HEAP32[$37>>2]|0;
   FUNCTION_TABLE_vii[$38 & 1023]($3,$12);
   $39 = HEAP8[$__sn>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)==(0);
   if ($41) {
    $45 = ((($__sn)) + 1|0);
    HEAP8[$45>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $42 = ((($__sn)) + 8|0);
    $43 = HEAP32[$42>>2]|0;
    HEAP8[$43>>0] = 0;
    $44 = ((($__sn)) + 4|0);
    HEAP32[$44>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(635,($__sn|0),0);
   $46 = __THREW__; __THREW__ = 0;
   $47 = $46&1;
   if ($47) {
    $48 = ___cxa_find_matching_catch_3(0|0)|0;
    $49 = tempRet0;
    ___clang_call_terminate($48);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $50 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$50>>2] = 0;
    $51 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $51;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$pre$phiZ2D = $12;
  }
  $52 = HEAP32[$12>>2]|0;
  $53 = ((($52)) + 12|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (FUNCTION_TABLE_ii[$54 & 1023]($12)|0);
  HEAP8[$__dp>>0] = $55;
  $56 = HEAP32[$12>>2]|0;
  $57 = ((($56)) + 16|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (FUNCTION_TABLE_ii[$58 & 1023]($12)|0);
  HEAP8[$__ts>>0] = $59;
  $60 = HEAP32[$$pre$phiZ2D>>2]|0;
  $61 = ((($60)) + 20|0);
  $62 = HEAP32[$61>>2]|0;
  FUNCTION_TABLE_vii[$62 & 1023]($4,$12);
  $63 = HEAP8[$__grp>>0]|0;
  $64 = $63 & 1;
  $65 = ($64<<24>>24)==(0);
  if ($65) {
   $69 = ((($__grp)) + 1|0);
   HEAP8[$69>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $66 = ((($__grp)) + 8|0);
   $67 = HEAP32[$66>>2]|0;
   HEAP8[$67>>0] = 0;
   $68 = ((($__grp)) + 4|0);
   HEAP32[$68>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $70 = __THREW__; __THREW__ = 0;
  $71 = $70&1;
  if ($71) {
   $72 = ___cxa_find_matching_catch_3(0|0)|0;
   $73 = tempRet0;
   ___clang_call_terminate($72);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i11 = 0;
  while(1) {
   $exitcond$i$i$i12 = ($__i$0$i$i$i11|0)==(3);
   if ($exitcond$i$i$i12) {
    break;
   }
   $74 = (($4) + ($__i$0$i$i$i11<<2)|0);
   HEAP32[$74>>2] = 0;
   $75 = (($__i$0$i$i$i11) + 1)|0;
   $__i$0$i$i$i11 = $75;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $76 = HEAP32[$$pre$phiZ2D>>2]|0;
  $77 = ((($76)) + 24|0);
  $78 = HEAP32[$77>>2]|0;
  FUNCTION_TABLE_vii[$78 & 1023]($5,$12);
  $79 = HEAP8[$__sym>>0]|0;
  $80 = $79 & 1;
  $81 = ($80<<24>>24)==(0);
  if ($81) {
   $85 = ((($__sym)) + 1|0);
   HEAP8[$85>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $82 = ((($__sym)) + 8|0);
   $83 = HEAP32[$82>>2]|0;
   HEAP8[$83>>0] = 0;
   $84 = ((($__sym)) + 4|0);
   HEAP32[$84>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__sym|0),0);
  $86 = __THREW__; __THREW__ = 0;
  $87 = $86&1;
  if ($87) {
   $88 = ___cxa_find_matching_catch_3(0|0)|0;
   $89 = tempRet0;
   ___clang_call_terminate($88);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i16 = 0;
  while(1) {
   $exitcond$i$i$i17 = ($__i$0$i$i$i16|0)==(3);
   if ($exitcond$i$i$i17) {
    break;
   }
   $90 = (($5) + ($__i$0$i$i$i16<<2)|0);
   HEAP32[$90>>2] = 0;
   $91 = (($__i$0$i$i$i16) + 1)|0;
   $__i$0$i$i$i16 = $91;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $92 = HEAP32[$12>>2]|0;
  $93 = ((($92)) + 36|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = (FUNCTION_TABLE_ii[$94 & 1023]($12)|0);
  $storemerge = $95;
 } else {
  $96 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24128)|0);
  $97 = HEAP32[$96>>2]|0;
  if ($__neg) {
   $98 = ((($97)) + 44|0);
   $99 = HEAP32[$98>>2]|0;
   FUNCTION_TABLE_vii[$99 & 1023]($6,$96);
   $100 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$100&255;HEAP8[$__pat+1>>0]=($100>>8)&255;HEAP8[$__pat+2>>0]=($100>>16)&255;HEAP8[$__pat+3>>0]=$100>>24;
   $101 = HEAP32[$96>>2]|0;
   $102 = ((($101)) + 32|0);
   $103 = HEAP32[$102>>2]|0;
   FUNCTION_TABLE_vii[$103 & 1023]($7,$96);
   $104 = HEAP8[$__sn>>0]|0;
   $105 = $104 & 1;
   $106 = ($105<<24>>24)==(0);
   if ($106) {
    $110 = ((($__sn)) + 1|0);
    HEAP8[$110>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $107 = ((($__sn)) + 8|0);
    $108 = HEAP32[$107>>2]|0;
    HEAP8[$108>>0] = 0;
    $109 = ((($__sn)) + 4|0);
    HEAP32[$109>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(635,($__sn|0),0);
   $111 = __THREW__; __THREW__ = 0;
   $112 = $111&1;
   if ($112) {
    $113 = ___cxa_find_matching_catch_3(0|0)|0;
    $114 = tempRet0;
    ___clang_call_terminate($113);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i21 = 0;
   while(1) {
    $exitcond$i$i$i22 = ($__i$0$i$i$i21|0)==(3);
    if ($exitcond$i$i$i22) {
     break;
    }
    $115 = (($7) + ($__i$0$i$i$i21<<2)|0);
    HEAP32[$115>>2] = 0;
    $116 = (($__i$0$i$i$i21) + 1)|0;
    $__i$0$i$i$i21 = $116;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
   $$pre$phi39Z2D = $96;
  } else {
   $117 = ((($97)) + 40|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($8,$96);
   $119 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$119&255;HEAP8[$__pat+1>>0]=($119>>8)&255;HEAP8[$__pat+2>>0]=($119>>16)&255;HEAP8[$__pat+3>>0]=$119>>24;
   $120 = HEAP32[$96>>2]|0;
   $121 = ((($120)) + 28|0);
   $122 = HEAP32[$121>>2]|0;
   FUNCTION_TABLE_vii[$122 & 1023]($9,$96);
   $123 = HEAP8[$__sn>>0]|0;
   $124 = $123 & 1;
   $125 = ($124<<24>>24)==(0);
   if ($125) {
    $129 = ((($__sn)) + 1|0);
    HEAP8[$129>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $126 = ((($__sn)) + 8|0);
    $127 = HEAP32[$126>>2]|0;
    HEAP8[$127>>0] = 0;
    $128 = ((($__sn)) + 4|0);
    HEAP32[$128>>2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(635,($__sn|0),0);
   $130 = __THREW__; __THREW__ = 0;
   $131 = $130&1;
   if ($131) {
    $132 = ___cxa_find_matching_catch_3(0|0)|0;
    $133 = tempRet0;
    ___clang_call_terminate($132);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i26 = 0;
   while(1) {
    $exitcond$i$i$i27 = ($__i$0$i$i$i26|0)==(3);
    if ($exitcond$i$i$i27) {
     break;
    }
    $134 = (($9) + ($__i$0$i$i$i26<<2)|0);
    HEAP32[$134>>2] = 0;
    $135 = (($__i$0$i$i$i26) + 1)|0;
    $__i$0$i$i$i26 = $135;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$pre$phi39Z2D = $96;
  }
  $136 = HEAP32[$96>>2]|0;
  $137 = ((($136)) + 12|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (FUNCTION_TABLE_ii[$138 & 1023]($96)|0);
  HEAP8[$__dp>>0] = $139;
  $140 = HEAP32[$96>>2]|0;
  $141 = ((($140)) + 16|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = (FUNCTION_TABLE_ii[$142 & 1023]($96)|0);
  HEAP8[$__ts>>0] = $143;
  $144 = HEAP32[$$pre$phi39Z2D>>2]|0;
  $145 = ((($144)) + 20|0);
  $146 = HEAP32[$145>>2]|0;
  FUNCTION_TABLE_vii[$146 & 1023]($10,$96);
  $147 = HEAP8[$__grp>>0]|0;
  $148 = $147 & 1;
  $149 = ($148<<24>>24)==(0);
  if ($149) {
   $153 = ((($__grp)) + 1|0);
   HEAP8[$153>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $150 = ((($__grp)) + 8|0);
   $151 = HEAP32[$150>>2]|0;
   HEAP8[$151>>0] = 0;
   $152 = ((($__grp)) + 4|0);
   HEAP32[$152>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $154 = __THREW__; __THREW__ = 0;
  $155 = $154&1;
  if ($155) {
   $156 = ___cxa_find_matching_catch_3(0|0)|0;
   $157 = tempRet0;
   ___clang_call_terminate($156);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i31 = 0;
  while(1) {
   $exitcond$i$i$i32 = ($__i$0$i$i$i31|0)==(3);
   if ($exitcond$i$i$i32) {
    break;
   }
   $158 = (($10) + ($__i$0$i$i$i31<<2)|0);
   HEAP32[$158>>2] = 0;
   $159 = (($__i$0$i$i$i31) + 1)|0;
   $__i$0$i$i$i31 = $159;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $160 = HEAP32[$$pre$phi39Z2D>>2]|0;
  $161 = ((($160)) + 24|0);
  $162 = HEAP32[$161>>2]|0;
  FUNCTION_TABLE_vii[$162 & 1023]($11,$96);
  $163 = HEAP8[$__sym>>0]|0;
  $164 = $163 & 1;
  $165 = ($164<<24>>24)==(0);
  if ($165) {
   $169 = ((($__sym)) + 1|0);
   HEAP8[$169>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $166 = ((($__sym)) + 8|0);
   $167 = HEAP32[$166>>2]|0;
   HEAP8[$167>>0] = 0;
   $168 = ((($__sym)) + 4|0);
   HEAP32[$168>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__sym|0),0);
  $170 = __THREW__; __THREW__ = 0;
  $171 = $170&1;
  if ($171) {
   $172 = ___cxa_find_matching_catch_3(0|0)|0;
   $173 = tempRet0;
   ___clang_call_terminate($172);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i36 = 0;
  while(1) {
   $exitcond$i$i$i37 = ($__i$0$i$i$i36|0)==(3);
   if ($exitcond$i$i$i37) {
    break;
   }
   $174 = (($11) + ($__i$0$i$i$i36<<2)|0);
   HEAP32[$174>>2] = 0;
   $175 = (($__i$0$i$i$i36) + 1)|0;
   $__i$0$i$i$i36 = $175;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $176 = HEAP32[$96>>2]|0;
  $177 = ((($176)) + 36|0);
  $178 = HEAP32[$177>>2]|0;
  $179 = (FUNCTION_TABLE_ii[$178 & 1023]($96)|0);
  $storemerge = $179;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$lcssa = 0, $$0$i$i2 = 0, $$0$i$i9 = 0, $$0$i$i9$lcssa = 0, $$01$i$i = 0, $$2 = 0, $$lcssa36 = 0, $$pn = 0, $$sroa$04$0$i = 0, $$sroa$04$0$i8 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sn)) + 1|0);
 $3 = ((($__sym)) + 4|0);
 $4 = $__flags & 512;
 $5 = ($4|0)==(0);
 $6 = ((($__sym)) + 8|0);
 $7 = ((($__sym)) + 1|0);
 $8 = ((($__ct)) + 8|0);
 $9 = ($__fd|0)>(0);
 $10 = ((($__grp)) + 4|0);
 $11 = ((($__grp)) + 8|0);
 $12 = ((($__grp)) + 1|0);
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $21 = (($__pat) + ($__p$0)|0);
  $22 = HEAP8[$21>>0]|0;
  $23 = $22 << 24 >> 24;
  L4: do {
   switch ($23|0) {
   case 0:  {
    $24 = HEAP32[$__me>>2]|0;
    HEAP32[$__mi>>2] = $24;
    $$2 = $$0;
    break;
   }
   case 1:  {
    $25 = HEAP32[$__me>>2]|0;
    HEAP32[$__mi>>2] = $25;
    $26 = HEAP32[$__ct>>2]|0;
    $27 = ((($26)) + 28|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (FUNCTION_TABLE_iii[$28 & 1023]($__ct,32)|0);
    $30 = HEAP32[$__me>>2]|0;
    $31 = ((($30)) + 1|0);
    HEAP32[$__me>>2] = $31;
    HEAP8[$30>>0] = $29;
    $$2 = $$0;
    break;
   }
   case 3:  {
    $32 = HEAP8[$__sn>>0]|0;
    $33 = $32 & 1;
    $34 = ($33<<24>>24)==(0);
    $35 = HEAP32[$0>>2]|0;
    $36 = $32&255;
    $37 = $36 >>> 1;
    $38 = $34 ? $37 : $35;
    $39 = ($38|0)==(0);
    if ($39) {
     $$2 = $$0;
    } else {
     $40 = HEAP32[$1>>2]|0;
     $41 = $34 ? $2 : $40;
     $42 = HEAP8[$41>>0]|0;
     $43 = HEAP32[$__me>>2]|0;
     $44 = ((($43)) + 1|0);
     HEAP32[$__me>>2] = $44;
     HEAP8[$43>>0] = $42;
     $$2 = $$0;
    }
    break;
   }
   case 2:  {
    $45 = HEAP8[$__sym>>0]|0;
    $46 = $45 & 1;
    $47 = ($46<<24>>24)==(0);
    $48 = HEAP32[$3>>2]|0;
    $49 = $45&255;
    $50 = $49 >>> 1;
    $51 = $47 ? $50 : $48;
    $52 = ($51|0)==(0);
    $or$cond = $5 | $52;
    if ($or$cond) {
     $$2 = $$0;
    } else {
     $53 = HEAP32[$6>>2]|0;
     $54 = $47 ? $7 : $53;
     $55 = (($54) + ($51)|0);
     $56 = HEAP32[$__me>>2]|0;
     $$0$i$i9 = $56;$$sroa$04$0$i8 = $54;
     while(1) {
      $57 = ($$sroa$04$0$i8|0)==($55|0);
      if ($57) {
       $$0$i$i9$lcssa = $$0$i$i9;
       break;
      }
      $58 = HEAP8[$$sroa$04$0$i8>>0]|0;
      HEAP8[$$0$i$i9>>0] = $58;
      $59 = ((($$sroa$04$0$i8)) + 1|0);
      $60 = ((($$0$i$i9)) + 1|0);
      $$0$i$i9 = $60;$$sroa$04$0$i8 = $59;
     }
     HEAP32[$__me>>2] = $$0$i$i9$lcssa;
     $$2 = $$0;
    }
    break;
   }
   case 4:  {
    $61 = HEAP32[$__me>>2]|0;
    $62 = ((($$0)) + 1|0);
    $$$0 = $__neg ? $62 : $$0;
    $__d$0 = $$$0;
    while(1) {
     $63 = ($__d$0>>>0)<($__de>>>0);
     if (!($63)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $64 = HEAP8[$__d$0>>0]|0;
     $isascii1$i = ($64<<24>>24)>(-1);
     if (!($isascii1$i)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $65 = $64 << 24 >> 24;
     $66 = HEAP32[$8>>2]|0;
     $67 = (($66) + ($65<<1)|0);
     $68 = HEAP16[$67>>1]|0;
     $69 = $68 & 2048;
     $70 = ($69<<16>>16)==(0);
     if ($70) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $71 = ((($__d$0)) + 1|0);
     $__d$0 = $71;
    }
    if ($9) {
     $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
     while(1) {
      $72 = ($__d$1>>>0)>($$$0>>>0);
      $73 = ($__f$0|0)>(0);
      $74 = $72 & $73;
      if (!($74)) {
       break;
      }
      $75 = ((($__d$1)) + -1|0);
      $76 = HEAP8[$75>>0]|0;
      $77 = HEAP32[$__me>>2]|0;
      $78 = ((($77)) + 1|0);
      HEAP32[$__me>>2] = $78;
      HEAP8[$77>>0] = $76;
      $79 = (($__f$0) + -1)|0;
      $__d$1 = $75;$__f$0 = $79;
     }
     if ($73) {
      $80 = HEAP32[$__ct>>2]|0;
      $81 = ((($80)) + 28|0);
      $82 = HEAP32[$81>>2]|0;
      $83 = (FUNCTION_TABLE_iii[$82 & 1023]($__ct,48)|0);
      $87 = $83;
     } else {
      $87 = 0;
     }
     $__f$1 = $__f$0;
     while(1) {
      $84 = ($__f$1|0)>(0);
      $85 = HEAP32[$__me>>2]|0;
      $86 = ((($85)) + 1|0);
      HEAP32[$__me>>2] = $86;
      if (!($84)) {
       $$lcssa36 = $85;
       break;
      }
      HEAP8[$85>>0] = $87;
      $88 = (($__f$1) + -1)|0;
      $__f$1 = $88;
     }
     HEAP8[$$lcssa36>>0] = $__dp;
     $__d$2 = $__d$1;
    } else {
     $__d$2 = $__d$0$lcssa;
    }
    $89 = ($__d$2|0)==($$$0|0);
    L35: do {
     if ($89) {
      $90 = HEAP32[$__ct>>2]|0;
      $91 = ((($90)) + 28|0);
      $92 = HEAP32[$91>>2]|0;
      $93 = (FUNCTION_TABLE_iii[$92 & 1023]($__ct,48)|0);
      $94 = HEAP32[$__me>>2]|0;
      $95 = ((($94)) + 1|0);
      HEAP32[$__me>>2] = $95;
      HEAP8[$94>>0] = $93;
     } else {
      $96 = HEAP8[$__grp>>0]|0;
      $97 = $96 & 1;
      $98 = ($97<<24>>24)==(0);
      $99 = HEAP32[$10>>2]|0;
      $100 = $96&255;
      $101 = $100 >>> 1;
      $102 = $98 ? $101 : $99;
      $103 = ($102|0)==(0);
      if ($103) {
       $__d$3 = $__d$2;$__gl$0 = -1;$__ig$0 = 0;$__ng$0 = 0;
      } else {
       $104 = HEAP32[$11>>2]|0;
       $105 = $98 ? $12 : $104;
       $106 = HEAP8[$105>>0]|0;
       $107 = $106 << 24 >> 24;
       $__d$3 = $__d$2;$__gl$0 = $107;$__ig$0 = 0;$__ng$0 = 0;
      }
      while(1) {
       $108 = ($__d$3|0)==($$$0|0);
       if ($108) {
        break L35;
       }
       $109 = ($__ng$0|0)==($__gl$0|0);
       if ($109) {
        $110 = HEAP32[$__me>>2]|0;
        $111 = ((($110)) + 1|0);
        HEAP32[$__me>>2] = $111;
        HEAP8[$110>>0] = $__ts;
        $112 = (($__ig$0) + 1)|0;
        $113 = HEAP8[$__grp>>0]|0;
        $114 = $113 & 1;
        $115 = ($114<<24>>24)==(0);
        $116 = HEAP32[$10>>2]|0;
        $117 = $113&255;
        $118 = $117 >>> 1;
        $119 = $115 ? $118 : $116;
        $120 = ($112>>>0)<($119>>>0);
        if ($120) {
         $121 = HEAP32[$11>>2]|0;
         $122 = $115 ? $12 : $121;
         $123 = (($122) + ($112)|0);
         $124 = HEAP8[$123>>0]|0;
         $125 = ($124<<24>>24)==(127);
         $126 = $124 << 24 >> 24;
         $$ = $125 ? -1 : $126;
         $__gl$1 = $$;$__ig$1 = $112;$__ng$1 = 0;
        } else {
         $__gl$1 = $__ng$0;$__ig$1 = $112;$__ng$1 = 0;
        }
       } else {
        $__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
       }
       $127 = ((($__d$3)) + -1|0);
       $128 = HEAP8[$127>>0]|0;
       $129 = HEAP32[$__me>>2]|0;
       $130 = ((($129)) + 1|0);
       HEAP32[$__me>>2] = $130;
       HEAP8[$129>>0] = $128;
       $131 = (($__ng$1) + 1)|0;
       $__d$3 = $127;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $131;
      }
     }
    } while(0);
    $132 = HEAP32[$__me>>2]|0;
    $133 = ($61|0)==($132|0);
    if ($133) {
     $$2 = $$$0;
    } else {
     $$0$i$i2 = $132;$$01$i$i = $61;
     while(1) {
      $134 = ((($$0$i$i2)) + -1|0);
      $135 = ($$01$i$i>>>0)<($134>>>0);
      if (!($135)) {
       $$2 = $$$0;
       break L4;
      }
      $136 = HEAP8[$$01$i$i>>0]|0;
      $137 = HEAP8[$134>>0]|0;
      HEAP8[$$01$i$i>>0] = $137;
      HEAP8[$134>>0] = $136;
      $138 = ((($$01$i$i)) + 1|0);
      $$0$i$i2 = $134;$$01$i$i = $138;
     }
    }
    break;
   }
   default: {
    $$2 = $$0;
   }
   }
  } while(0);
  $139 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $139;
 }
 $13 = HEAP8[$__sn>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 $16 = HEAP32[$0>>2]|0;
 $17 = $13&255;
 $18 = $17 >>> 1;
 $19 = $15 ? $18 : $16;
 $20 = ($19>>>0)>(1);
 if ($20) {
  $140 = HEAP32[$1>>2]|0;
  $141 = $15 ? $2 : $140;
  $142 = (($141) + ($19)|0);
  $143 = HEAP32[$__me>>2]|0;
  $$0$i$i = $143;$$pn = $141;
  while(1) {
   $$sroa$04$0$i = ((($$pn)) + 1|0);
   $144 = ($$sroa$04$0$i|0)==($142|0);
   if ($144) {
    $$0$i$i$lcssa = $$0$i$i;
    break;
   }
   $145 = HEAP8[$$sroa$04$0$i>>0]|0;
   HEAP8[$$0$i$i>>0] = $145;
   $146 = ((($$0$i$i)) + 1|0);
   $$0$i$i = $146;$$pn = $$sroa$04$0$i;
  }
  HEAP32[$__me>>2] = $$0$i$i$lcssa;
 }
 $147 = $__flags & 176;
 switch ($147|0) {
 case 32:  {
  $148 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $148;
  break;
 }
 case 16:  {
  break;
 }
 default: {
  HEAP32[$__mi>>2] = $__mb;
 }
 }
 return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre = 0, $$pre18 = 0, $$pre19 = 0, $$pre19$pre = 0, $$pre21 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0;
 var $__grp = 0, $__h$sroa$0$0 = 0, $__h$sroa$0$1 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 56|0;
 $__loc = sp + 52|0;
 $__pat = sp + 164|0;
 $__dp = sp + 161|0;
 $__ts = sp + 160|0;
 $__grp = sp + 40|0;
 $__sym = sp + 28|0;
 $__sn = sp + 16|0;
 $__fd = sp + 12|0;
 $__mbuf = sp + 60|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 __THREW__ = 0;
 $2 = (invoke_iii(608,($__loc|0),(22416|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 22;
  } else {
   $5 = HEAP8[$__digits>>0]|0;
   $6 = $5 & 1;
   $7 = ($6<<24>>24)==(0);
   $8 = ((($__digits)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   $11 = $10 >>> 1;
   $12 = $7 ? $11 : $9;
   $13 = ($12|0)==(0);
   if ($13) {
    $32 = 0;
   } else {
    $14 = ((($__digits)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($__digits)) + 1|0);
    $17 = $7 ? $16 : $15;
    $18 = HEAP8[$17>>0]|0;
    $19 = HEAP32[$2>>2]|0;
    $20 = ((($19)) + 28|0);
    $21 = HEAP32[$20>>2]|0;
    __THREW__ = 0;
    $22 = (invoke_iii($21|0,($2|0),45)|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     label = 22;
     break;
    }
    $25 = ($18<<24>>24)==($22<<24>>24);
    $32 = $25;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $26 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$26>>2] = 0;
    $27 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $27;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $28 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$28>>2] = 0;
    $29 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $29;
   }
   $__i$0$i$i6 = 0;
   while(1) {
    $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
    if ($exitcond$i$i7) {
     break;
    }
    $30 = (($__sn) + ($__i$0$i$i6<<2)|0);
    HEAP32[$30>>2] = 0;
    $31 = (($__i$0$i$i6) + 1)|0;
    $__i$0$i$i6 = $31;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(746,($__intl|0),($32|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if ($34) {
    $94 = ___cxa_find_matching_catch_2()|0;
    $95 = tempRet0;
    $$0 = $94;$$01 = $95;$$pre19 = $1;
   } else {
    $35 = HEAP8[$__digits>>0]|0;
    $36 = $35 & 1;
    $37 = ($36<<24>>24)==(0);
    $38 = HEAP32[$8>>2]|0;
    $39 = $35&255;
    $40 = $39 >>> 1;
    $41 = $37 ? $40 : $38;
    $42 = HEAP32[$__fd>>2]|0;
    $43 = ($41|0)>($42|0);
    if ($43) {
     $44 = (($41) - ($42))|0;
     $45 = $44 << 1;
     $46 = HEAP8[$__sn>>0]|0;
     $47 = $46 & 1;
     $48 = ($47<<24>>24)==(0);
     $49 = ((($__sn)) + 4|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = $46&255;
     $52 = $51 >>> 1;
     $53 = $48 ? $52 : $50;
     $54 = HEAP8[$__sym>>0]|0;
     $55 = $54 & 1;
     $56 = ($55<<24>>24)==(0);
     $57 = ((($__sym)) + 4|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = $54&255;
     $60 = $59 >>> 1;
     $61 = $56 ? $60 : $58;
     $62 = $45 | 1;
     $63 = (($62) + ($42))|0;
     $64 = (($63) + ($53))|0;
     $65 = (($64) + ($61))|0;
     $85 = $65;
    } else {
     $66 = HEAP8[$__sn>>0]|0;
     $67 = $66 & 1;
     $68 = ($67<<24>>24)==(0);
     $69 = ((($__sn)) + 4|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = $66&255;
     $72 = $71 >>> 1;
     $73 = $68 ? $72 : $70;
     $74 = HEAP8[$__sym>>0]|0;
     $75 = $74 & 1;
     $76 = ($75<<24>>24)==(0);
     $77 = ((($__sym)) + 4|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = $74&255;
     $80 = $79 >>> 1;
     $81 = $76 ? $80 : $78;
     $82 = (($42) + 2)|0;
     $83 = (($82) + ($73))|0;
     $84 = (($83) + ($81))|0;
     $85 = $84;
    }
    $86 = ($85>>>0)>(100);
    if ($86) {
     $87 = (_malloc($85)|0);
     $88 = $87;
     $89 = ($87|0)==(0|0);
     if ($89) {
      __THREW__ = 0;
      invoke_v(693);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       $__h$sroa$0$0 = $88;
      } else {
       $$pre = HEAP8[$__digits>>0]|0;
       $$pre18 = HEAP32[$8>>2]|0;
       $103 = $$pre;$111 = $$pre18;$__h$sroa$0$1 = $88;$__mb$0 = 0;
       label = 26;
      }
     } else {
      $103 = $35;$111 = $38;$__h$sroa$0$1 = $88;$__mb$0 = $87;
      label = 26;
     }
    } else {
     $103 = $35;$111 = $38;$__h$sroa$0$1 = 0;$__mb$0 = $__mbuf;
     label = 26;
    }
    if ((label|0) == 26) {
     $100 = ((($__iob)) + 4|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = $103 & 1;
     $104 = ($102<<24>>24)==(0);
     $105 = ((($__digits)) + 8|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = ((($__digits)) + 1|0);
     $108 = $104 ? $107 : $106;
     $109 = $103&255;
     $110 = $109 >>> 1;
     $112 = $104 ? $110 : $111;
     $113 = (($108) + ($112)|0);
     $114 = HEAP8[$__dp>>0]|0;
     $115 = HEAP8[$__ts>>0]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(747,($__mb$0|0),($__mi|0),($__me|0),($101|0),($108|0),($113|0),($2|0),($32|0),($__pat|0),($114|0),($115|0),($__grp|0),($__sym|0),($__sn|0),($42|0));
     $116 = __THREW__; __THREW__ = 0;
     $117 = $116&1;
     if ($117) {
      $__h$sroa$0$0 = $__h$sroa$0$1;
     } else {
      $118 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $118;
      $119 = HEAP32[$__mi>>2]|0;
      $120 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
      $121 = (invoke_iiiiiii(609,($$byval_copy|0),($__mb$0|0),($119|0),($120|0),($__iob|0),($__fl|0))|0);
      $122 = __THREW__; __THREW__ = 0;
      $123 = $122&1;
      if ($123) {
       $__h$sroa$0$0 = $__h$sroa$0$1;
      } else {
       $124 = ($__h$sroa$0$1|0)==(0);
       if ($124) {
        $126 = $1;
       } else {
        $125 = $__h$sroa$0$1;
        _free($125);
        $$pre21 = HEAP32[$__loc>>2]|0;
        $126 = $$pre21;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       (__ZNSt3__114__shared_count16__release_sharedEv($126)|0);
       STACKTOP = sp;return ($121|0);
      }
     }
    }
    $96 = ___cxa_find_matching_catch_2()|0;
    $97 = tempRet0;
    $98 = ($__h$sroa$0$0|0)==(0);
    if ($98) {
     $$0 = $96;$$01 = $97;$$pre19 = $1;
    } else {
     $99 = $__h$sroa$0$0;
     _free($99);
     $$pre19$pre = HEAP32[$__loc>>2]|0;
     $$0 = $96;$$01 = $97;$$pre19 = $$pre19$pre;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;$127 = $$pre19;
  }
 } while(0);
 if ((label|0) == 22) {
  $92 = ___cxa_find_matching_catch_2()|0;
  $93 = tempRet0;
  $$1 = $92;$$12 = $93;$127 = $1;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
 ___resumeException($$1|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this,$__s,$__intl,$__iob,$__fl,$__units) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre = 0, $$pre20 = 0, $$pre20$pre = 0, $$pre22 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__hd$sroa$0$0 = 0, $__hd$sroa$0$1 = 0, $__hd$sroa$0$2 = 0, $__hn$sroa$0$0 = 0, $__hn$sroa$0$1 = 0, $__hn$sroa$0$2 = 0, $__hw$sroa$0$0 = 0, $__hw$sroa$0$1 = 0, $__i$0$i$i = 0;
 var $__i$0$i$i4 = 0, $__i$0$i$i6 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i5 = 0, $exitcond$i$i7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 892|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $__buf = sp + 900|0;
 $__bb = sp + 888|0;
 $__digits = sp + 488|0;
 $__loc = sp + 480|0;
 $__pat = sp + 896|0;
 $__dp = sp + 476|0;
 $__ts = sp + 472|0;
 $__grp = sp + 460|0;
 $__sym = sp + 448|0;
 $__sn = sp + 436|0;
 $__fd = sp + 432|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 24|0;
 $__me = sp + 20|0;
 $0 = sp + 16|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[$vararg_buffer>>3] = $__units;
 $1 = (_snprintf($__buf,100,18725,$vararg_buffer)|0);
 $2 = ($1>>>0)>(99);
 do {
  if ($2) {
   __THREW__ = 0;
   $3 = (invoke_i(704)|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if ($5) {
    $__hd$sroa$0$0 = 0;$__hn$sroa$0$0 = 0;
    label = 8;
   } else {
    __THREW__ = 0;
    HEAPF64[$vararg_buffer1>>3] = $__units;
    $6 = (invoke_iiiii(709,($__bb|0),($3|0),(18725|0),($vararg_buffer1|0))|0);
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     $__hd$sroa$0$0 = 0;$__hn$sroa$0$0 = 0;
     label = 8;
    } else {
     $9 = HEAP32[$__bb>>2]|0;
     $10 = ($9|0)==(0|0);
     if ($10) {
      __THREW__ = 0;
      invoke_v(693);
      $12 = __THREW__; __THREW__ = 0;
      $13 = $12&1;
      if ($13) {
       $__hd$sroa$0$0 = 0;$__hn$sroa$0$0 = 0;
       label = 8;
       break;
      }
      $$pre = HEAP32[$__bb>>2]|0;
      $132 = $$pre;
     } else {
      $11 = $9;
      $132 = $11;
     }
     $16 = $6 << 2;
     $17 = (_malloc($16)|0);
     $18 = $17;
     $19 = ($17|0)==(0|0);
     if ($19) {
      __THREW__ = 0;
      invoke_v(693);
      $20 = __THREW__; __THREW__ = 0;
      $21 = $20&1;
      if ($21) {
       $__hd$sroa$0$0 = $18;$__hn$sroa$0$0 = $132;
       label = 8;
      } else {
       $__db$0 = 0;$__hd$sroa$0$1 = $18;$__hn$sroa$0$1 = $132;$__n$0 = $6;
       label = 11;
      }
     } else {
      $__db$0 = $17;$__hd$sroa$0$1 = $18;$__hn$sroa$0$1 = $132;$__n$0 = $6;
      label = 11;
     }
    }
   }
  } else {
   $__db$0 = $__digits;$__hd$sroa$0$1 = 0;$__hn$sroa$0$1 = 0;$__n$0 = $1;
   label = 11;
  }
 } while(0);
 if ((label|0) == 11) {
  __THREW__ = 0;
  $22 = (invoke_ii(607,($__iob|0))|0);
  $23 = __THREW__; __THREW__ = 0;
  $24 = $23&1;
  if ($24) {
   $__hd$sroa$0$0 = $__hd$sroa$0$1;$__hn$sroa$0$0 = $__hn$sroa$0$1;
   label = 8;
  } else {
   HEAP32[$__loc>>2] = $22;
   __THREW__ = 0;
   $25 = (invoke_iii(608,($__loc|0),(22448|0))|0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    label = 32;
   } else {
    $28 = HEAP32[$__bb>>2]|0;
    $29 = (($28) + ($__n$0)|0);
    $30 = HEAP32[$25>>2]|0;
    $31 = ((($30)) + 48|0);
    $32 = HEAP32[$31>>2]|0;
    __THREW__ = 0;
    (invoke_iiiii($32|0,($25|0),($28|0),($29|0),($__db$0|0))|0);
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     label = 32;
    } else {
     $35 = ($__n$0|0)==(0);
     if ($35) {
      $45 = 0;
     } else {
      $36 = HEAP32[$__bb>>2]|0;
      $37 = HEAP8[$36>>0]|0;
      $38 = ($37<<24>>24)==(45);
      $45 = $38;
     }
     $__i$0$i$i = 0;
     while(1) {
      $exitcond$i$i = ($__i$0$i$i|0)==(3);
      if ($exitcond$i$i) {
       break;
      }
      $39 = (($__grp) + ($__i$0$i$i<<2)|0);
      HEAP32[$39>>2] = 0;
      $40 = (($__i$0$i$i) + 1)|0;
      $__i$0$i$i = $40;
     }
     $__i$0$i$i4 = 0;
     while(1) {
      $exitcond$i$i5 = ($__i$0$i$i4|0)==(3);
      if ($exitcond$i$i5) {
       break;
      }
      $41 = (($__sym) + ($__i$0$i$i4<<2)|0);
      HEAP32[$41>>2] = 0;
      $42 = (($__i$0$i$i4) + 1)|0;
      $__i$0$i$i4 = $42;
     }
     $__i$0$i$i6 = 0;
     while(1) {
      $exitcond$i$i7 = ($__i$0$i$i6|0)==(3);
      if ($exitcond$i$i7) {
       break;
      }
      $43 = (($__sn) + ($__i$0$i$i6<<2)|0);
      HEAP32[$43>>2] = 0;
      $44 = (($__i$0$i$i6) + 1)|0;
      $__i$0$i$i6 = $44;
     }
     __THREW__ = 0;
     invoke_viiiiiiiiii(748,($__intl|0),($45|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
     $46 = __THREW__; __THREW__ = 0;
     $47 = $46&1;
     if ($47) {
      $101 = ___cxa_find_matching_catch_2()|0;
      $102 = tempRet0;
      $$0 = $101;$$01 = $102;$$pre20 = $22;
     } else {
      $48 = HEAP32[$__fd>>2]|0;
      $49 = ($__n$0|0)>($48|0);
      if ($49) {
       $50 = (($__n$0) - ($48))|0;
       $51 = $50 << 1;
       $52 = HEAP8[$__sn>>0]|0;
       $53 = $52 & 1;
       $54 = ($53<<24>>24)==(0);
       $55 = ((($__sn)) + 4|0);
       $56 = HEAP32[$55>>2]|0;
       $57 = $52&255;
       $58 = $57 >>> 1;
       $59 = $54 ? $58 : $56;
       $60 = HEAP8[$__sym>>0]|0;
       $61 = $60 & 1;
       $62 = ($61<<24>>24)==(0);
       $63 = ((($__sym)) + 4|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = $60&255;
       $66 = $65 >>> 1;
       $67 = $62 ? $66 : $64;
       $68 = $51 | 1;
       $69 = (($68) + ($48))|0;
       $70 = (($69) + ($59))|0;
       $71 = (($70) + ($67))|0;
       $91 = $71;
      } else {
       $72 = HEAP8[$__sn>>0]|0;
       $73 = $72 & 1;
       $74 = ($73<<24>>24)==(0);
       $75 = ((($__sn)) + 4|0);
       $76 = HEAP32[$75>>2]|0;
       $77 = $72&255;
       $78 = $77 >>> 1;
       $79 = $74 ? $78 : $76;
       $80 = HEAP8[$__sym>>0]|0;
       $81 = $80 & 1;
       $82 = ($81<<24>>24)==(0);
       $83 = ((($__sym)) + 4|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = $80&255;
       $86 = $85 >>> 1;
       $87 = $82 ? $86 : $84;
       $88 = (($48) + 2)|0;
       $89 = (($88) + ($79))|0;
       $90 = (($89) + ($87))|0;
       $91 = $90;
      }
      $92 = ($91>>>0)>(100);
      if ($92) {
       $93 = $91 << 2;
       $94 = (_malloc($93)|0);
       $95 = $94;
       $96 = ($94|0)==(0|0);
       if ($96) {
        __THREW__ = 0;
        invoke_v(693);
        $97 = __THREW__; __THREW__ = 0;
        $98 = $97&1;
        if ($98) {
         $__hw$sroa$0$0 = $95;
        } else {
         $__hw$sroa$0$1 = $95;$__mb$0 = 0;
         label = 36;
        }
       } else {
        $__hw$sroa$0$1 = $95;$__mb$0 = $94;
        label = 36;
       }
      } else {
       $__hw$sroa$0$1 = 0;$__mb$0 = $__mbuf;
       label = 36;
      }
      if ((label|0) == 36) {
       $107 = ((($__iob)) + 4|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = (($__db$0) + ($__n$0<<2)|0);
       $110 = HEAP32[$__dp>>2]|0;
       $111 = HEAP32[$__ts>>2]|0;
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(749,($__mb$0|0),($__mi|0),($__me|0),($108|0),($__db$0|0),($109|0),($25|0),($45|0),($__pat|0),($110|0),($111|0),($__grp|0),($__sym|0),($__sn|0),($48|0));
       $112 = __THREW__; __THREW__ = 0;
       $113 = $112&1;
       if ($113) {
        $__hw$sroa$0$0 = $__hw$sroa$0$1;
       } else {
        $114 = HEAP32[$__s>>2]|0;
        HEAP32[$0>>2] = $114;
        $115 = HEAP32[$__mi>>2]|0;
        $116 = HEAP32[$__me>>2]|0;
        __THREW__ = 0;
        ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
        $117 = (invoke_iiiiiii(716,($$byval_copy|0),($__mb$0|0),($115|0),($116|0),($__iob|0),($__fl|0))|0);
        $118 = __THREW__; __THREW__ = 0;
        $119 = $118&1;
        if ($119) {
         $__hw$sroa$0$0 = $__hw$sroa$0$1;
        } else {
         $120 = ($__hw$sroa$0$1|0)==(0);
         if ($120) {
          $122 = $22;
         } else {
          $121 = $__hw$sroa$0$1;
          _free($121);
          $$pre22 = HEAP32[$__loc>>2]|0;
          $122 = $$pre22;
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         (__ZNSt3__114__shared_count16__release_sharedEv($122)|0);
         $123 = ($__hd$sroa$0$1|0)==(0);
         if (!($123)) {
          $124 = $__hd$sroa$0$1;
          _free($124);
         }
         $125 = ($__hn$sroa$0$1|0)==(0);
         if (!($125)) {
          $126 = $__hn$sroa$0$1;
          _free($126);
         }
         STACKTOP = sp;return ($117|0);
        }
       }
      }
      $103 = ___cxa_find_matching_catch_2()|0;
      $104 = tempRet0;
      $105 = ($__hw$sroa$0$0|0)==(0);
      if ($105) {
       $$0 = $103;$$01 = $104;$$pre20 = $22;
      } else {
       $106 = $__hw$sroa$0$0;
       _free($106);
       $$pre20$pre = HEAP32[$__loc>>2]|0;
       $$0 = $103;$$01 = $104;$$pre20 = $$pre20$pre;
      }
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;$$12 = $$01;$127 = $$pre20;
    }
   }
   if ((label|0) == 32) {
    $99 = ___cxa_find_matching_catch_2()|0;
    $100 = tempRet0;
    $$1 = $99;$$12 = $100;$127 = $22;
   }
   (__ZNSt3__114__shared_count16__release_sharedEv($127)|0);
   $$2 = $$1;$$23 = $$12;$__hd$sroa$0$2 = $__hd$sroa$0$1;$__hn$sroa$0$2 = $__hn$sroa$0$1;
  }
 }
 if ((label|0) == 8) {
  $14 = ___cxa_find_matching_catch_2()|0;
  $15 = tempRet0;
  $$2 = $14;$$23 = $15;$__hd$sroa$0$2 = $__hd$sroa$0$0;$__hn$sroa$0$2 = $__hn$sroa$0$0;
 }
 $128 = ($__hd$sroa$0$2|0)==(0);
 if (!($128)) {
  $129 = $__hd$sroa$0$2;
  _free($129);
 }
 $130 = ($__hn$sroa$0$2|0)==(0);
 if (!($130)) {
  $131 = $__hn$sroa$0$2;
  _free($131);
 }
 ___resumeException($$2|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc = $__loc|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__i$0$i$i$i = 0, $__i$0$i$i$i13 = 0, $__i$0$i$i$i18 = 0, $__i$0$i$i$i23 = 0, $__i$0$i$i$i28 = 0, $__i$0$i$i$i33 = 0;
 var $__i$0$i$i$i6 = 0, $__i$0$i$i$i9 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i10 = 0, $exitcond$i$i$i14 = 0, $exitcond$i$i$i19 = 0, $exitcond$i$i$i24 = 0, $exitcond$i$i$i29 = 0, $exitcond$i$i$i34 = 0, $exitcond$i$i$i7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 108|0;
 $1 = sp + 96|0;
 $2 = sp + 92|0;
 $3 = sp + 80|0;
 $4 = sp + 68|0;
 $5 = sp + 56|0;
 $6 = sp + 52|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 24|0;
 $10 = sp + 12|0;
 $11 = sp;
 if ($__intl) {
  $12 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24152)|0);
  $13 = HEAP32[$12>>2]|0;
  if ($__neg) {
   $14 = ((($13)) + 44|0);
   $15 = HEAP32[$14>>2]|0;
   FUNCTION_TABLE_vii[$15 & 1023]($0,$12);
   $16 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$16&255;HEAP8[$__pat+1>>0]=($16>>8)&255;HEAP8[$__pat+2>>0]=($16>>16)&255;HEAP8[$__pat+3>>0]=$16>>24;
   $17 = HEAP32[$12>>2]|0;
   $18 = ((($17)) + 32|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_vii[$19 & 1023]($1,$12);
   $20 = HEAP8[$__sn>>0]|0;
   $21 = $20 & 1;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $23 = ((($__sn)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    HEAP32[$24>>2] = 0;
   }
   $25 = ((($__sn)) + 4|0);
   HEAP32[$25>>2] = 0;
   __THREW__ = 0;
   invoke_vii(744,($__sn|0),0);
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch_3(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$1>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   $__i$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($__i$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $30 = (($1) + ($__i$0$i$i$i<<2)|0);
    HEAP32[$30>>2] = 0;
    $31 = (($__i$0$i$i$i) + 1)|0;
    $__i$0$i$i$i = $31;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  } else {
   $32 = ((($13)) + 40|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 1023]($2,$12);
   $34 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$34&255;HEAP8[$__pat+1>>0]=($34>>8)&255;HEAP8[$__pat+2>>0]=($34>>16)&255;HEAP8[$__pat+3>>0]=$34>>24;
   $35 = HEAP32[$12>>2]|0;
   $36 = ((($35)) + 28|0);
   $37 = HEAP32[$36>>2]|0;
   FUNCTION_TABLE_vii[$37 & 1023]($3,$12);
   $38 = HEAP8[$__sn>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $41 = ((($__sn)) + 8|0);
    $42 = HEAP32[$41>>2]|0;
    HEAP32[$42>>2] = 0;
   }
   $43 = ((($__sn)) + 4|0);
   HEAP32[$43>>2] = 0;
   __THREW__ = 0;
   invoke_vii(744,($__sn|0),0);
   $44 = __THREW__; __THREW__ = 0;
   $45 = $44&1;
   if ($45) {
    $46 = ___cxa_find_matching_catch_3(0|0)|0;
    $47 = tempRet0;
    ___clang_call_terminate($46);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$3>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   $__i$0$i$i$i6 = 0;
   while(1) {
    $exitcond$i$i$i7 = ($__i$0$i$i$i6|0)==(3);
    if ($exitcond$i$i$i7) {
     break;
    }
    $48 = (($3) + ($__i$0$i$i$i6<<2)|0);
    HEAP32[$48>>2] = 0;
    $49 = (($__i$0$i$i$i6) + 1)|0;
    $__i$0$i$i$i6 = $49;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
  }
  $50 = HEAP32[$12>>2]|0;
  $51 = ((($50)) + 12|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = (FUNCTION_TABLE_ii[$52 & 1023]($12)|0);
  HEAP32[$__dp>>2] = $53;
  $54 = HEAP32[$12>>2]|0;
  $55 = ((($54)) + 16|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (FUNCTION_TABLE_ii[$56 & 1023]($12)|0);
  HEAP32[$__ts>>2] = $57;
  $58 = HEAP32[$12>>2]|0;
  $59 = ((($58)) + 20|0);
  $60 = HEAP32[$59>>2]|0;
  FUNCTION_TABLE_vii[$60 & 1023]($4,$12);
  $61 = HEAP8[$__grp>>0]|0;
  $62 = $61 & 1;
  $63 = ($62<<24>>24)==(0);
  if ($63) {
   $67 = ((($__grp)) + 1|0);
   HEAP8[$67>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $64 = ((($__grp)) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   HEAP8[$65>>0] = 0;
   $66 = ((($__grp)) + 4|0);
   HEAP32[$66>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if ($69) {
   $70 = ___cxa_find_matching_catch_3(0|0)|0;
   $71 = tempRet0;
   ___clang_call_terminate($70);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$4>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  $__i$0$i$i$i9 = 0;
  while(1) {
   $exitcond$i$i$i10 = ($__i$0$i$i$i9|0)==(3);
   if ($exitcond$i$i$i10) {
    break;
   }
   $72 = (($4) + ($__i$0$i$i$i9<<2)|0);
   HEAP32[$72>>2] = 0;
   $73 = (($__i$0$i$i$i9) + 1)|0;
   $__i$0$i$i$i9 = $73;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $74 = HEAP32[$12>>2]|0;
  $75 = ((($74)) + 24|0);
  $76 = HEAP32[$75>>2]|0;
  FUNCTION_TABLE_vii[$76 & 1023]($5,$12);
  $77 = HEAP8[$__sym>>0]|0;
  $78 = $77 & 1;
  $79 = ($78<<24>>24)==(0);
  if ($79) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $80 = ((($__sym)) + 8|0);
   $81 = HEAP32[$80>>2]|0;
   HEAP32[$81>>2] = 0;
  }
  $82 = ((($__sym)) + 4|0);
  HEAP32[$82>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__sym|0),0);
  $83 = __THREW__; __THREW__ = 0;
  $84 = $83&1;
  if ($84) {
   $85 = ___cxa_find_matching_catch_3(0|0)|0;
   $86 = tempRet0;
   ___clang_call_terminate($85);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$5>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  $__i$0$i$i$i13 = 0;
  while(1) {
   $exitcond$i$i$i14 = ($__i$0$i$i$i13|0)==(3);
   if ($exitcond$i$i$i14) {
    break;
   }
   $87 = (($5) + ($__i$0$i$i$i13<<2)|0);
   HEAP32[$87>>2] = 0;
   $88 = (($__i$0$i$i$i13) + 1)|0;
   $__i$0$i$i$i13 = $88;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
  $89 = HEAP32[$12>>2]|0;
  $90 = ((($89)) + 36|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (FUNCTION_TABLE_ii[$91 & 1023]($12)|0);
  $storemerge = $92;
 } else {
  $93 = (__ZNKSt3__16locale9use_facetERNS0_2idE($__loc,24144)|0);
  $94 = HEAP32[$93>>2]|0;
  if ($__neg) {
   $95 = ((($94)) + 44|0);
   $96 = HEAP32[$95>>2]|0;
   FUNCTION_TABLE_vii[$96 & 1023]($6,$93);
   $97 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$97&255;HEAP8[$__pat+1>>0]=($97>>8)&255;HEAP8[$__pat+2>>0]=($97>>16)&255;HEAP8[$__pat+3>>0]=$97>>24;
   $98 = HEAP32[$93>>2]|0;
   $99 = ((($98)) + 32|0);
   $100 = HEAP32[$99>>2]|0;
   FUNCTION_TABLE_vii[$100 & 1023]($7,$93);
   $101 = HEAP8[$__sn>>0]|0;
   $102 = $101 & 1;
   $103 = ($102<<24>>24)==(0);
   if ($103) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $104 = ((($__sn)) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    HEAP32[$105>>2] = 0;
   }
   $106 = ((($__sn)) + 4|0);
   HEAP32[$106>>2] = 0;
   __THREW__ = 0;
   invoke_vii(744,($__sn|0),0);
   $107 = __THREW__; __THREW__ = 0;
   $108 = $107&1;
   if ($108) {
    $109 = ___cxa_find_matching_catch_3(0|0)|0;
    $110 = tempRet0;
    ___clang_call_terminate($109);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$7>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   $__i$0$i$i$i18 = 0;
   while(1) {
    $exitcond$i$i$i19 = ($__i$0$i$i$i18|0)==(3);
    if ($exitcond$i$i$i19) {
     break;
    }
    $111 = (($7) + ($__i$0$i$i$i18<<2)|0);
    HEAP32[$111>>2] = 0;
    $112 = (($__i$0$i$i$i18) + 1)|0;
    $__i$0$i$i$i18 = $112;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  } else {
   $113 = ((($94)) + 40|0);
   $114 = HEAP32[$113>>2]|0;
   FUNCTION_TABLE_vii[$114 & 1023]($8,$93);
   $115 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$115&255;HEAP8[$__pat+1>>0]=($115>>8)&255;HEAP8[$__pat+2>>0]=($115>>16)&255;HEAP8[$__pat+3>>0]=$115>>24;
   $116 = HEAP32[$93>>2]|0;
   $117 = ((($116)) + 28|0);
   $118 = HEAP32[$117>>2]|0;
   FUNCTION_TABLE_vii[$118 & 1023]($9,$93);
   $119 = HEAP8[$__sn>>0]|0;
   $120 = $119 & 1;
   $121 = ($120<<24>>24)==(0);
   if ($121) {
    HEAP8[$__sn>>0] = 0;
   } else {
    $122 = ((($__sn)) + 8|0);
    $123 = HEAP32[$122>>2]|0;
    HEAP32[$123>>2] = 0;
   }
   $124 = ((($__sn)) + 4|0);
   HEAP32[$124>>2] = 0;
   __THREW__ = 0;
   invoke_vii(744,($__sn|0),0);
   $125 = __THREW__; __THREW__ = 0;
   $126 = $125&1;
   if ($126) {
    $127 = ___cxa_find_matching_catch_3(0|0)|0;
    $128 = tempRet0;
    ___clang_call_terminate($127);
    // unreachable;
   }
   ;HEAP32[$__sn>>2]=HEAP32[$9>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   $__i$0$i$i$i23 = 0;
   while(1) {
    $exitcond$i$i$i24 = ($__i$0$i$i$i23|0)==(3);
    if ($exitcond$i$i$i24) {
     break;
    }
    $129 = (($9) + ($__i$0$i$i$i23<<2)|0);
    HEAP32[$129>>2] = 0;
    $130 = (($__i$0$i$i$i23) + 1)|0;
    $__i$0$i$i$i23 = $130;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
  }
  $131 = HEAP32[$93>>2]|0;
  $132 = ((($131)) + 12|0);
  $133 = HEAP32[$132>>2]|0;
  $134 = (FUNCTION_TABLE_ii[$133 & 1023]($93)|0);
  HEAP32[$__dp>>2] = $134;
  $135 = HEAP32[$93>>2]|0;
  $136 = ((($135)) + 16|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (FUNCTION_TABLE_ii[$137 & 1023]($93)|0);
  HEAP32[$__ts>>2] = $138;
  $139 = HEAP32[$93>>2]|0;
  $140 = ((($139)) + 20|0);
  $141 = HEAP32[$140>>2]|0;
  FUNCTION_TABLE_vii[$141 & 1023]($10,$93);
  $142 = HEAP8[$__grp>>0]|0;
  $143 = $142 & 1;
  $144 = ($143<<24>>24)==(0);
  if ($144) {
   $148 = ((($__grp)) + 1|0);
   HEAP8[$148>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $145 = ((($__grp)) + 8|0);
   $146 = HEAP32[$145>>2]|0;
   HEAP8[$146>>0] = 0;
   $147 = ((($__grp)) + 4|0);
   HEAP32[$147>>2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(635,($__grp|0),0);
  $149 = __THREW__; __THREW__ = 0;
  $150 = $149&1;
  if ($150) {
   $151 = ___cxa_find_matching_catch_3(0|0)|0;
   $152 = tempRet0;
   ___clang_call_terminate($151);
   // unreachable;
  }
  ;HEAP32[$__grp>>2]=HEAP32[$10>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  $__i$0$i$i$i28 = 0;
  while(1) {
   $exitcond$i$i$i29 = ($__i$0$i$i$i28|0)==(3);
   if ($exitcond$i$i$i29) {
    break;
   }
   $153 = (($10) + ($__i$0$i$i$i28<<2)|0);
   HEAP32[$153>>2] = 0;
   $154 = (($__i$0$i$i$i28) + 1)|0;
   $__i$0$i$i$i28 = $154;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  $155 = HEAP32[$93>>2]|0;
  $156 = ((($155)) + 24|0);
  $157 = HEAP32[$156>>2]|0;
  FUNCTION_TABLE_vii[$157 & 1023]($11,$93);
  $158 = HEAP8[$__sym>>0]|0;
  $159 = $158 & 1;
  $160 = ($159<<24>>24)==(0);
  if ($160) {
   HEAP8[$__sym>>0] = 0;
  } else {
   $161 = ((($__sym)) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   HEAP32[$162>>2] = 0;
  }
  $163 = ((($__sym)) + 4|0);
  HEAP32[$163>>2] = 0;
  __THREW__ = 0;
  invoke_vii(744,($__sym|0),0);
  $164 = __THREW__; __THREW__ = 0;
  $165 = $164&1;
  if ($165) {
   $166 = ___cxa_find_matching_catch_3(0|0)|0;
   $167 = tempRet0;
   ___clang_call_terminate($166);
   // unreachable;
  }
  ;HEAP32[$__sym>>2]=HEAP32[$11>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  $__i$0$i$i$i33 = 0;
  while(1) {
   $exitcond$i$i$i34 = ($__i$0$i$i$i33|0)==(3);
   if ($exitcond$i$i$i34) {
    break;
   }
   $168 = (($11) + ($__i$0$i$i$i33<<2)|0);
   HEAP32[$168>>2] = 0;
   $169 = (($__i$0$i$i$i33) + 1)|0;
   $__i$0$i$i$i33 = $169;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $170 = HEAP32[$93>>2]|0;
  $171 = ((($170)) + 36|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = (FUNCTION_TABLE_ii[$172 & 1023]($93)|0);
  $storemerge = $173;
 }
 HEAP32[$__fd>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$ = 0, $$$0 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i2 = 0, $$0$i$i6 = 0, $$01$i$i = 0, $$2 = 0, $$lcssa34 = 0, $$lcssa35 = 0, $$pre27 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__d$0 = 0, $__d$0$lcssa = 0, $__d$1 = 0, $__d$2 = 0, $__d$3 = 0, $__f$0 = 0, $__f$1 = 0, $__gl$0 = 0, $__gl$1 = 0, $__ig$0 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$0 = 0, $__ng$1 = 0, $__p$0 = 0, $exitcond = 0, $or$cond = 0, $scevgep$i = 0;
 var $scevgep$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = ((($__sn)) + 4|0);
 $1 = ((($__sn)) + 8|0);
 $2 = ((($__sym)) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = ((($__sym)) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = ((($__grp)) + 4|0);
 $8 = ((($__grp)) + 8|0);
 $9 = ((($__grp)) + 1|0);
 $$0 = $__db;$__p$0 = 0;
 while(1) {
  $exitcond = ($__p$0|0)==(4);
  if ($exitcond) {
   break;
  }
  $18 = (($__pat) + ($__p$0)|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  L4: do {
   switch ($20|0) {
   case 0:  {
    $21 = HEAP32[$__me>>2]|0;
    HEAP32[$__mi>>2] = $21;
    $$2 = $$0;
    break;
   }
   case 1:  {
    $22 = HEAP32[$__me>>2]|0;
    HEAP32[$__mi>>2] = $22;
    $23 = HEAP32[$__ct>>2]|0;
    $24 = ((($23)) + 44|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = (FUNCTION_TABLE_iii[$25 & 1023]($__ct,32)|0);
    $27 = HEAP32[$__me>>2]|0;
    $28 = ((($27)) + 4|0);
    HEAP32[$__me>>2] = $28;
    HEAP32[$27>>2] = $26;
    $$2 = $$0;
    break;
   }
   case 3:  {
    $29 = HEAP8[$__sn>>0]|0;
    $30 = $29 & 1;
    $31 = ($30<<24>>24)==(0);
    $32 = HEAP32[$0>>2]|0;
    $33 = $29&255;
    $34 = $33 >>> 1;
    $35 = $31 ? $34 : $32;
    $36 = ($35|0)==(0);
    if ($36) {
     $$2 = $$0;
    } else {
     $37 = HEAP32[$1>>2]|0;
     $38 = $31 ? $0 : $37;
     $39 = HEAP32[$38>>2]|0;
     $40 = HEAP32[$__me>>2]|0;
     $41 = ((($40)) + 4|0);
     HEAP32[$__me>>2] = $41;
     HEAP32[$40>>2] = $39;
     $$2 = $$0;
    }
    break;
   }
   case 2:  {
    $42 = HEAP8[$__sym>>0]|0;
    $43 = $42 & 1;
    $44 = ($43<<24>>24)==(0);
    $45 = HEAP32[$2>>2]|0;
    $46 = $42&255;
    $47 = $46 >>> 1;
    $48 = $44 ? $47 : $45;
    $49 = ($48|0)==(0);
    $or$cond = $4 | $49;
    if ($or$cond) {
     $$2 = $$0;
    } else {
     $50 = HEAP32[$5>>2]|0;
     $51 = $44 ? $2 : $50;
     $52 = (($51) + ($48<<2)|0);
     $53 = HEAP32[$__me>>2]|0;
     $$0$i$i6 = $53;$54 = $51;
     while(1) {
      $55 = ($54|0)==($52|0);
      if ($55) {
       break;
      }
      $56 = HEAP32[$54>>2]|0;
      HEAP32[$$0$i$i6>>2] = $56;
      $57 = ((($54)) + 4|0);
      $58 = ((($$0$i$i6)) + 4|0);
      $$0$i$i6 = $58;$54 = $57;
     }
     $scevgep$i7 = (($53) + ($48<<2)|0);
     HEAP32[$__me>>2] = $scevgep$i7;
     $$2 = $$0;
    }
    break;
   }
   case 4:  {
    $59 = HEAP32[$__me>>2]|0;
    $60 = ((($$0)) + 4|0);
    $$$0 = $__neg ? $60 : $$0;
    $__d$0 = $$$0;
    while(1) {
     $61 = ($__d$0>>>0)<($__de>>>0);
     if (!($61)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $62 = HEAP32[$__d$0>>2]|0;
     $63 = HEAP32[$__ct>>2]|0;
     $64 = ((($63)) + 12|0);
     $65 = HEAP32[$64>>2]|0;
     $66 = (FUNCTION_TABLE_iiii[$65 & 1023]($__ct,2048,$62)|0);
     if (!($66)) {
      $__d$0$lcssa = $__d$0;
      break;
     }
     $67 = ((($__d$0)) + 4|0);
     $__d$0 = $67;
    }
    if ($6) {
     $__d$1 = $__d$0$lcssa;$__f$0 = $__fd;
     while(1) {
      $68 = ($__d$1>>>0)>($$$0>>>0);
      $69 = ($__f$0|0)>(0);
      $70 = $68 & $69;
      if (!($70)) {
       break;
      }
      $71 = ((($__d$1)) + -4|0);
      $72 = HEAP32[$71>>2]|0;
      $73 = HEAP32[$__me>>2]|0;
      $74 = ((($73)) + 4|0);
      HEAP32[$__me>>2] = $74;
      HEAP32[$73>>2] = $72;
      $75 = (($__f$0) + -1)|0;
      $__d$1 = $71;$__f$0 = $75;
     }
     if ($69) {
      $76 = HEAP32[$__ct>>2]|0;
      $77 = ((($76)) + 44|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = (FUNCTION_TABLE_iii[$78 & 1023]($__ct,48)|0);
      $83 = $79;
     } else {
      $83 = 0;
     }
     $__me$promoted = HEAP32[$__me>>2]|0;
     $82 = $__me$promoted;$__f$1 = $__f$0;
     while(1) {
      $80 = ($__f$1|0)>(0);
      $81 = ((($82)) + 4|0);
      if (!($80)) {
       $$lcssa34 = $82;$$lcssa35 = $81;
       break;
      }
      HEAP32[$82>>2] = $83;
      $84 = (($__f$1) + -1)|0;
      $82 = $81;$__f$1 = $84;
     }
     HEAP32[$__me>>2] = $$lcssa35;
     HEAP32[$$lcssa34>>2] = $__dp;
     $__d$2 = $__d$1;
    } else {
     $__d$2 = $__d$0$lcssa;
    }
    $85 = ($__d$2|0)==($$$0|0);
    if ($85) {
     $86 = HEAP32[$__ct>>2]|0;
     $87 = ((($86)) + 44|0);
     $88 = HEAP32[$87>>2]|0;
     $89 = (FUNCTION_TABLE_iii[$88 & 1023]($__ct,48)|0);
     $90 = HEAP32[$__me>>2]|0;
     $91 = ((($90)) + 4|0);
     HEAP32[$__me>>2] = $91;
     HEAP32[$90>>2] = $89;
     $128 = $91;
    } else {
     $92 = HEAP8[$__grp>>0]|0;
     $93 = $92 & 1;
     $94 = ($93<<24>>24)==(0);
     $95 = HEAP32[$7>>2]|0;
     $96 = $92&255;
     $97 = $96 >>> 1;
     $98 = $94 ? $97 : $95;
     $99 = ($98|0)==(0);
     if ($99) {
      $__d$3 = $__d$2;$__gl$0 = -1;$__ig$0 = 0;$__ng$0 = 0;
     } else {
      $100 = HEAP32[$8>>2]|0;
      $101 = $94 ? $9 : $100;
      $102 = HEAP8[$101>>0]|0;
      $103 = $102 << 24 >> 24;
      $__d$3 = $__d$2;$__gl$0 = $103;$__ig$0 = 0;$__ng$0 = 0;
     }
     while(1) {
      $104 = ($__d$3|0)==($$$0|0);
      if ($104) {
       break;
      }
      $105 = ($__ng$0|0)==($__gl$0|0);
      $106 = HEAP32[$__me>>2]|0;
      if ($105) {
       $107 = ((($106)) + 4|0);
       HEAP32[$__me>>2] = $107;
       HEAP32[$106>>2] = $__ts;
       $108 = (($__ig$0) + 1)|0;
       $109 = HEAP8[$__grp>>0]|0;
       $110 = $109 & 1;
       $111 = ($110<<24>>24)==(0);
       $112 = $109&255;
       $113 = $112 >>> 1;
       $114 = $111 ? $113 : $95;
       $115 = ($108>>>0)<($114>>>0);
       if ($115) {
        $116 = HEAP32[$8>>2]|0;
        $117 = $111 ? $9 : $116;
        $118 = (($117) + ($108)|0);
        $119 = HEAP8[$118>>0]|0;
        $120 = ($119<<24>>24)==(127);
        $121 = $119 << 24 >> 24;
        $$ = $120 ? -1 : $121;
        $125 = $107;$__gl$1 = $$;$__ig$1 = $108;$__ng$1 = 0;
       } else {
        $125 = $107;$__gl$1 = $__ng$0;$__ig$1 = $108;$__ng$1 = 0;
       }
      } else {
       $125 = $106;$__gl$1 = $__gl$0;$__ig$1 = $__ig$0;$__ng$1 = $__ng$0;
      }
      $122 = ((($__d$3)) + -4|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = ((($125)) + 4|0);
      HEAP32[$__me>>2] = $124;
      HEAP32[$125>>2] = $123;
      $126 = (($__ng$1) + 1)|0;
      $__d$3 = $122;$__gl$0 = $__gl$1;$__ig$0 = $__ig$1;$__ng$0 = $126;
     }
     $$pre27 = HEAP32[$__me>>2]|0;
     $128 = $$pre27;
    }
    $127 = ($59|0)==($128|0);
    if ($127) {
     $$2 = $$$0;
    } else {
     $$0$i$i2 = $128;$$01$i$i = $59;
     while(1) {
      $129 = ((($$0$i$i2)) + -4|0);
      $130 = ($$01$i$i>>>0)<($129>>>0);
      if (!($130)) {
       $$2 = $$$0;
       break L4;
      }
      $131 = HEAP32[$$01$i$i>>2]|0;
      $132 = HEAP32[$129>>2]|0;
      HEAP32[$$01$i$i>>2] = $132;
      HEAP32[$129>>2] = $131;
      $133 = ((($$01$i$i)) + 4|0);
      $$0$i$i2 = $129;$$01$i$i = $133;
     }
    }
    break;
   }
   default: {
    $$2 = $$0;
   }
   }
  } while(0);
  $134 = (($__p$0) + 1)|0;
  $$0 = $$2;$__p$0 = $134;
 }
 $10 = HEAP8[$__sn>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 $13 = HEAP32[$0>>2]|0;
 $14 = $10&255;
 $15 = $14 >>> 1;
 $16 = $12 ? $15 : $13;
 $17 = ($16>>>0)>(1);
 if ($17) {
  $135 = HEAP32[$1>>2]|0;
  $136 = $12 ? $0 : $135;
  $137 = ((($136)) + 4|0);
  $138 = (($136) + ($16<<2)|0);
  $139 = HEAP32[$__me>>2]|0;
  $140 = $137;
  $141 = $138;
  $142 = (($141) - ($140))|0;
  $$0$i$i = $139;$143 = $137;
  while(1) {
   $144 = ($143|0)==($138|0);
   if ($144) {
    break;
   }
   $145 = HEAP32[$143>>2]|0;
   HEAP32[$$0$i$i>>2] = $145;
   $146 = ((($143)) + 4|0);
   $147 = ((($$0$i$i)) + 4|0);
   $$0$i$i = $147;$143 = $146;
  }
  $148 = $142 >>> 2;
  $scevgep$i = (($139) + ($148<<2)|0);
  HEAP32[$__me>>2] = $scevgep$i;
 }
 $149 = $__flags & 176;
 switch ($149|0) {
 case 32:  {
  $150 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $150;
  break;
 }
 case 16:  {
  break;
 }
 default: {
  HEAP32[$__mi>>2] = $__mb;
 }
 }
 return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre = 0, $$pre17 = 0, $$pre18 = 0, $$pre18$pre = 0, $$pre20 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0;
 var $__h$sroa$0$0 = 0, $__h$sroa$0$1 = 0, $__i$0$i$i = 0, $__i$0$i$i3 = 0, $__i$0$i$i5 = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $exitcond$i$i = 0, $exitcond$i$i4 = 0, $exitcond$i$i6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 468|0;
 $__loc = sp + 464|0;
 $__pat = sp + 472|0;
 $__dp = sp + 460|0;
 $__ts = sp + 456|0;
 $__grp = sp + 444|0;
 $__sym = sp + 432|0;
 $__sn = sp + 420|0;
 $__fd = sp + 416|0;
 $__mbuf = sp + 16|0;
 $__mi = sp + 8|0;
 $__me = sp + 4|0;
 $0 = sp;
 $1 = (__ZNKSt3__18ios_base6getlocEv($__iob)|0);
 HEAP32[$__loc>>2] = $1;
 __THREW__ = 0;
 $2 = (invoke_iii(608,($__loc|0),(22448|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 22;
  } else {
   $5 = HEAP8[$__digits>>0]|0;
   $6 = $5 & 1;
   $7 = ($6<<24>>24)==(0);
   $8 = ((($__digits)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   $11 = $10 >>> 1;
   $12 = $7 ? $11 : $9;
   $13 = ($12|0)==(0);
   if ($13) {
    $31 = 0;
   } else {
    $14 = ((($__digits)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = $7 ? $8 : $15;
    $17 = HEAP32[$16>>2]|0;
    $18 = HEAP32[$2>>2]|0;
    $19 = ((($18)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    __THREW__ = 0;
    $21 = (invoke_iii($20|0,($2|0),45)|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 22;
     break;
    }
    $24 = ($17|0)==($21|0);
    $31 = $24;
   }
   $__i$0$i$i = 0;
   while(1) {
    $exitcond$i$i = ($__i$0$i$i|0)==(3);
    if ($exitcond$i$i) {
     break;
    }
    $25 = (($__grp) + ($__i$0$i$i<<2)|0);
    HEAP32[$25>>2] = 0;
    $26 = (($__i$0$i$i) + 1)|0;
    $__i$0$i$i = $26;
   }
   $__i$0$i$i3 = 0;
   while(1) {
    $exitcond$i$i4 = ($__i$0$i$i3|0)==(3);
    if ($exitcond$i$i4) {
     break;
    }
    $27 = (($__sym) + ($__i$0$i$i3<<2)|0);
    HEAP32[$27>>2] = 0;
    $28 = (($__i$0$i$i3) + 1)|0;
    $__i$0$i$i3 = $28;
   }
   $__i$0$i$i5 = 0;
   while(1) {
    $exitcond$i$i6 = ($__i$0$i$i5|0)==(3);
    if ($exitcond$i$i6) {
     break;
    }
    $29 = (($__sn) + ($__i$0$i$i5<<2)|0);
    HEAP32[$29>>2] = 0;
    $30 = (($__i$0$i$i5) + 1)|0;
    $__i$0$i$i5 = $30;
   }
   __THREW__ = 0;
   invoke_viiiiiiiiii(748,($__intl|0),($31|0),($__loc|0),($__pat|0),($__dp|0),($__ts|0),($__grp|0),($__sym|0),($__sn|0),($__fd|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $94 = ___cxa_find_matching_catch_2()|0;
    $95 = tempRet0;
    $$0 = $94;$$01 = $95;$$pre18 = $1;
   } else {
    $34 = HEAP8[$__digits>>0]|0;
    $35 = $34 & 1;
    $36 = ($35<<24>>24)==(0);
    $37 = HEAP32[$8>>2]|0;
    $38 = $34&255;
    $39 = $38 >>> 1;
    $40 = $36 ? $39 : $37;
    $41 = HEAP32[$__fd>>2]|0;
    $42 = ($40|0)>($41|0);
    if ($42) {
     $43 = (($40) - ($41))|0;
     $44 = $43 << 1;
     $45 = HEAP8[$__sn>>0]|0;
     $46 = $45 & 1;
     $47 = ($46<<24>>24)==(0);
     $48 = ((($__sn)) + 4|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = $45&255;
     $51 = $50 >>> 1;
     $52 = $47 ? $51 : $49;
     $53 = HEAP8[$__sym>>0]|0;
     $54 = $53 & 1;
     $55 = ($54<<24>>24)==(0);
     $56 = ((($__sym)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = $53&255;
     $59 = $58 >>> 1;
     $60 = $55 ? $59 : $57;
     $61 = $44 | 1;
     $62 = (($61) + ($41))|0;
     $63 = (($62) + ($52))|0;
     $64 = (($63) + ($60))|0;
     $84 = $64;
    } else {
     $65 = HEAP8[$__sn>>0]|0;
     $66 = $65 & 1;
     $67 = ($66<<24>>24)==(0);
     $68 = ((($__sn)) + 4|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = $65&255;
     $71 = $70 >>> 1;
     $72 = $67 ? $71 : $69;
     $73 = HEAP8[$__sym>>0]|0;
     $74 = $73 & 1;
     $75 = ($74<<24>>24)==(0);
     $76 = ((($__sym)) + 4|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = $73&255;
     $79 = $78 >>> 1;
     $80 = $75 ? $79 : $77;
     $81 = (($41) + 2)|0;
     $82 = (($81) + ($72))|0;
     $83 = (($82) + ($80))|0;
     $84 = $83;
    }
    $85 = ($84>>>0)>(100);
    if ($85) {
     $86 = $84 << 2;
     $87 = (_malloc($86)|0);
     $88 = $87;
     $89 = ($87|0)==(0|0);
     if ($89) {
      __THREW__ = 0;
      invoke_v(693);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       $__h$sroa$0$0 = $88;
      } else {
       $$pre = HEAP8[$__digits>>0]|0;
       $$pre17 = HEAP32[$8>>2]|0;
       $103 = $$pre;$110 = $$pre17;$__h$sroa$0$1 = $88;$__mb$0 = 0;
       label = 26;
      }
     } else {
      $103 = $34;$110 = $37;$__h$sroa$0$1 = $88;$__mb$0 = $87;
      label = 26;
     }
    } else {
     $103 = $34;$110 = $37;$__h$sroa$0$1 = 0;$__mb$0 = $__mbuf;
     label = 26;
    }
    if ((label|0) == 26) {
     $100 = ((($__iob)) + 4|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = $103 & 1;
     $104 = ($102<<24>>24)==(0);
     $105 = ((($__digits)) + 8|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = $104 ? $8 : $106;
     $108 = $103&255;
     $109 = $108 >>> 1;
     $111 = $104 ? $109 : $110;
     $112 = (($107) + ($111<<2)|0);
     $113 = HEAP32[$__dp>>2]|0;
     $114 = HEAP32[$__ts>>2]|0;
     __THREW__ = 0;
     invoke_viiiiiiiiiiiiiii(749,($__mb$0|0),($__mi|0),($__me|0),($101|0),($107|0),($112|0),($2|0),($31|0),($__pat|0),($113|0),($114|0),($__grp|0),($__sym|0),($__sn|0),($41|0));
     $115 = __THREW__; __THREW__ = 0;
     $116 = $115&1;
     if ($116) {
      $__h$sroa$0$0 = $__h$sroa$0$1;
     } else {
      $117 = HEAP32[$__s>>2]|0;
      HEAP32[$0>>2] = $117;
      $118 = HEAP32[$__mi>>2]|0;
      $119 = HEAP32[$__me>>2]|0;
      __THREW__ = 0;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
      $120 = (invoke_iiiiiii(716,($$byval_copy|0),($__mb$0|0),($118|0),($119|0),($__iob|0),($__fl|0))|0);
      $121 = __THREW__; __THREW__ = 0;
      $122 = $121&1;
      if ($122) {
       $__h$sroa$0$0 = $__h$sroa$0$1;
      } else {
       $123 = ($__h$sroa$0$1|0)==(0);
       if ($123) {
        $125 = $1;
       } else {
        $124 = $__h$sroa$0$1;
        _free($124);
        $$pre20 = HEAP32[$__loc>>2]|0;
        $125 = $$pre20;
       }
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
       __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
       (__ZNSt3__114__shared_count16__release_sharedEv($125)|0);
       STACKTOP = sp;return ($120|0);
      }
     }
    }
    $96 = ___cxa_find_matching_catch_2()|0;
    $97 = tempRet0;
    $98 = ($__h$sroa$0$0|0)==(0);
    if ($98) {
     $$0 = $96;$$01 = $97;$$pre18 = $1;
    } else {
     $99 = $__h$sroa$0$0;
     _free($99);
     $$pre18$pre = HEAP32[$__loc>>2]|0;
     $$0 = $96;$$01 = $97;$$pre18 = $$pre18$pre;
    }
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
   $$1 = $$0;$$12 = $$01;$126 = $$pre18;
  }
 } while(0);
 if ((label|0) == 22) {
  $92 = ___cxa_find_matching_catch_2()|0;
  $93 = tempRet0;
  $$1 = $92;$$12 = $93;$126 = $1;
 }
 (__ZNSt3__114__shared_count16__release_sharedEv($126)|0);
 ___resumeException($$1|0);
 // unreachable;
 return (0)|0;
}
function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen($7,1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i8 = 0, $$02 = 0, $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $__i$0$i$i4 = 0, $__ndflt = 0, $exitcond$i$i = 0, $exitcond$i$i5 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__ndflt = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $0 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$0>>2] = 0;
  $1 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $1;
 }
 $2 = HEAP8[$__dflt>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 $5 = ((($__dflt)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($__dflt)) + 1|0);
 $8 = $4 ? $7 : $6;
 $9 = ((($__dflt)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2&255;
 $12 = $11 >>> 1;
 $13 = $4 ? $12 : $10;
 $14 = (($8) + ($13)|0);
 $$0$i8 = $8;
 while(1) {
  $15 = ($$0$i8>>>0)<($14>>>0);
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = HEAP8[$$0$i8>>0]|0;
  __THREW__ = 0;
  invoke_vii(628,($__ndflt|0),($16|0));
  $17 = __THREW__; __THREW__ = 0;
  $18 = $17&1;
  if ($18) {
   label = 9;
   break;
  }
  $19 = ((($$0$i8)) + 1|0);
  $$0$i8 = $19;
 }
 do {
  if ((label|0) == 8) {
   $20 = ($__c|0)==(-1);
   $21 = $__c << 1;
   $22 = $21;
   $23 = $20 ? (-1) : $22;
   $24 = HEAP8[$__ndflt>>0]|0;
   $25 = $24 & 1;
   $26 = ($25<<24>>24)==(0);
   $27 = ((($__ndflt)) + 8|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ((($__ndflt)) + 1|0);
   $30 = $26 ? $29 : $28;
   __THREW__ = 0;
   $31 = (invoke_iiiii(750,($23|0),($__set|0),($__msgid|0),($30|0))|0);
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $36 = ___cxa_find_matching_catch_2()|0;
    $37 = tempRet0;
    $lpad$phi$index = $36;$lpad$phi$index2 = $37;
    label = 11;
    break;
   }
   $__i$0$i$i4 = 0;
   while(1) {
    $exitcond$i$i5 = ($__i$0$i$i4|0)==(3);
    if ($exitcond$i$i5) {
     break;
    }
    $38 = (($agg$result) + ($__i$0$i$i4<<2)|0);
    HEAP32[$38>>2] = 0;
    $39 = (($__i$0$i$i4) + 1)|0;
    $__i$0$i$i4 = $39;
   }
   $40 = (_strlen($31)|0);
   $41 = (($31) + ($40)|0);
   $$0$i = $31;
   while(1) {
    $42 = ($$0$i>>>0)<($41>>>0);
    if (!($42)) {
     label = 20;
     break;
    }
    $43 = HEAP8[$$0$i>>0]|0;
    __THREW__ = 0;
    invoke_vii(628,($agg$result|0),($43|0));
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     label = 19;
     break;
    }
    $46 = ((($$0$i)) + 1|0);
    $$0$i = $46;
   }
   if ((label|0) == 19) {
    $47 = ___cxa_find_matching_catch_2()|0;
    $48 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    $$02 = $47;$$03 = $48;
    break;
   }
   else if ((label|0) == 20) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
    STACKTOP = sp;return;
   }
  }
  else if ((label|0) == 9) {
   $34 = ___cxa_find_matching_catch_2()|0;
   $35 = tempRet0;
   $lpad$phi$index = $34;$lpad$phi$index2 = $35;
   label = 11;
  }
 } while(0);
 if ((label|0) == 11) {
  $$02 = $lpad$phi$index;$$03 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$02|0);
 // unreachable;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($__nm)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($__nm)) + 1|0);
 $7 = $3 ? $6 : $5;
 $8 = (_catopen($7,1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$0$i = 0, $$0$i14 = 0, $$1 = 0, $$14 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $__bn$i = 0, $__bn$i12 = 0, $__buf$i = 0, $__buf$i11 = 0, $__i$0$i$i = 0, $__i$0$i$i8 = 0, $__mb$i = 0, $__mb$i10 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i = 0, $__p$0$i16 = 0, $__r$0$i = 0, $__r$0$i13 = 0, $__wn$i = 0, $exitcond$i$i = 0, $exitcond$i$i9 = 0, $lpad$phi$index = 0;
 var $lpad$phi$index10 = 0, $lpad$phi30$index = 0, $lpad$phi30$index3 = 0, $or$cond$i = 0, $or$cond$i15 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__mb$i10 = sp + 184|0;
 $__buf$i11 = sp + 192|0;
 $__bn$i12 = sp + 180|0;
 $__wn$i = sp + 176|0;
 $__mb$i = sp + 168|0;
 $__buf$i = sp + 40|0;
 $__bn$i = sp + 32|0;
 $__nn$i = sp + 28|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($__ndflt) + ($__i$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $3;
 }
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 HEAP32[$0>>2] = (9996);
 $5 = HEAP8[$__dflt>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 $8 = ((($__dflt)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($__dflt)) + 4|0);
 $11 = $7 ? $10 : $9;
 $12 = HEAP32[$10>>2]|0;
 $13 = $5&255;
 $14 = $13 >>> 1;
 $15 = $7 ? $14 : $12;
 $16 = (($11) + ($15<<2)|0);
 $17 = ((($__buf$i11)) + 32|0);
 $$0$i14 = $11;$__r$0$i13 = 0;
 L5: while(1) {
  $18 = ($$0$i14>>>0)<($16>>>0);
  $19 = ($__r$0$i13|0)!=(2);
  $20 = $19 & $18;
  if (!($20)) {
   label = 13;
   break;
  }
  HEAP32[$__wn$i>>2] = $$0$i14;
  $21 = HEAP32[$0>>2]|0;
  $22 = ((($21)) + 12|0);
  $23 = HEAP32[$22>>2]|0;
  __THREW__ = 0;
  $24 = (invoke_iiiiiiiii($23|0,($0|0),($__mb$i10|0),($$0$i14|0),($16|0),($__wn$i|0),($__buf$i11|0),($17|0),($__bn$i12|0))|0);
  $25 = __THREW__; __THREW__ = 0;
  $26 = $25&1;
  if ($26) {
   label = 16;
   break;
  }
  $27 = ($24|0)==(2);
  $28 = HEAP32[$__wn$i>>2]|0;
  $29 = ($28|0)==($$0$i14|0);
  $or$cond$i15 = $27 | $29;
  if ($or$cond$i15) {
   label = 8;
   break;
  } else {
   $__p$0$i16 = $__buf$i11;
  }
  while(1) {
   $33 = HEAP32[$__bn$i12>>2]|0;
   $34 = ($__p$0$i16>>>0)<($33>>>0);
   if (!($34)) {
    break;
   }
   $36 = HEAP8[$__p$0$i16>>0]|0;
   __THREW__ = 0;
   invoke_vii(628,($__ndflt|0),($36|0));
   $37 = __THREW__; __THREW__ = 0;
   $38 = $37&1;
   if ($38) {
    label = 15;
    break L5;
   }
   $39 = ((($__p$0$i16)) + 1|0);
   $__p$0$i16 = $39;
  }
  $35 = HEAP32[$__wn$i>>2]|0;
  $$0$i14 = $35;$__r$0$i13 = $24;
 }
 do {
  if ((label|0) == 8) {
   __THREW__ = 0;
   invoke_vi(734,(18244|0));
   $30 = __THREW__; __THREW__ = 0;
   $31 = ___cxa_find_matching_catch_2()|0;
   $32 = tempRet0;
   $lpad$phi30$index = $31;$lpad$phi30$index3 = $32;
   label = 17;
  }
  else if ((label|0) == 13) {
   $40 = ($__c|0)==(-1);
   $41 = $__c << 1;
   $42 = $41;
   $43 = $40 ? (-1) : $42;
   $44 = HEAP8[$__ndflt>>0]|0;
   $45 = $44 & 1;
   $46 = ($45<<24>>24)==(0);
   $47 = ((($__ndflt)) + 8|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($__ndflt)) + 1|0);
   $50 = $46 ? $49 : $48;
   __THREW__ = 0;
   $51 = (invoke_iiiii(750,($43|0),($__set|0),($__msgid|0),($50|0))|0);
   $52 = __THREW__; __THREW__ = 0;
   $53 = $52&1;
   if ($53) {
    $54 = ___cxa_find_matching_catch_2()|0;
    $55 = tempRet0;
    $$1 = $54;$$14 = $55;
    break;
   }
   $__i$0$i$i8 = 0;
   while(1) {
    $exitcond$i$i9 = ($__i$0$i$i8|0)==(3);
    if ($exitcond$i$i9) {
     break;
    }
    $60 = (($agg$result) + ($__i$0$i$i8<<2)|0);
    HEAP32[$60>>2] = 0;
    $61 = (($__i$0$i$i8) + 1)|0;
    $__i$0$i$i8 = $61;
   }
   $62 = ((($1)) + 4|0);
   HEAP32[$62>>2] = 0;
   HEAP32[$1>>2] = (10044);
   $63 = (_strlen($51)|0);
   $64 = (($51) + ($63)|0);
   $65 = $64;
   $66 = ((($__buf$i)) + 128|0);
   $$0$i = $51;$__r$0$i = 0;
   L23: while(1) {
    $67 = ($$0$i>>>0)<($64>>>0);
    $68 = ($__r$0$i|0)!=(2);
    $69 = $68 & $67;
    if (!($69)) {
     label = 30;
     break;
    }
    HEAP32[$__nn$i>>2] = $$0$i;
    $70 = HEAP32[$1>>2]|0;
    $71 = ((($70)) + 16|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $$0$i;
    $74 = (($65) - ($73))|0;
    $75 = ($74|0)>(32);
    $76 = ((($$0$i)) + 32|0);
    $77 = $75 ? $76 : $64;
    __THREW__ = 0;
    $78 = (invoke_iiiiiiiii($72|0,($1|0),($__mb$i|0),($$0$i|0),($77|0),($__nn$i|0),($__buf$i|0),($66|0),($__bn$i|0))|0);
    $79 = __THREW__; __THREW__ = 0;
    $80 = $79&1;
    if ($80) {
     label = 32;
     break;
    }
    $81 = ($78|0)==(2);
    $82 = HEAP32[$__nn$i>>2]|0;
    $83 = ($82|0)==($$0$i|0);
    $or$cond$i = $81 | $83;
    if ($or$cond$i) {
     label = 25;
     break;
    } else {
     $__p$0$i = $__buf$i;
    }
    while(1) {
     $87 = HEAP32[$__bn$i>>2]|0;
     $88 = ($__p$0$i>>>0)<($87>>>0);
     if (!($88)) {
      break;
     }
     $90 = HEAP32[$__p$0$i>>2]|0;
     __THREW__ = 0;
     invoke_vii(742,($agg$result|0),($90|0));
     $91 = __THREW__; __THREW__ = 0;
     $92 = $91&1;
     if ($92) {
      label = 31;
      break L23;
     }
     $93 = ((($__p$0$i)) + 4|0);
     $__p$0$i = $93;
    }
    $89 = HEAP32[$__nn$i>>2]|0;
    $$0$i = $89;$__r$0$i = $78;
   }
   if ((label|0) == 25) {
    __THREW__ = 0;
    invoke_vi(734,(18244|0));
    $84 = __THREW__; __THREW__ = 0;
    $85 = ___cxa_find_matching_catch_2()|0;
    $86 = tempRet0;
    $lpad$phi$index = $85;$lpad$phi$index10 = $86;
   }
   else if ((label|0) == 30) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
    STACKTOP = sp;return;
   }
   else if ((label|0) == 31) {
    $94 = ___cxa_find_matching_catch_2()|0;
    $95 = tempRet0;
    $lpad$phi$index = $94;$lpad$phi$index10 = $95;
   }
   else if ((label|0) == 32) {
    $96 = ___cxa_find_matching_catch_2()|0;
    $97 = tempRet0;
    $lpad$phi$index = $96;$lpad$phi$index10 = $97;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
   $$1 = $lpad$phi$index;$$14 = $lpad$phi$index10;
  }
  else if ((label|0) == 15) {
   $56 = ___cxa_find_matching_catch_2()|0;
   $57 = tempRet0;
   $lpad$phi30$index = $56;$lpad$phi30$index3 = $57;
   label = 17;
  }
  else if ((label|0) == 16) {
   $58 = ___cxa_find_matching_catch_2()|0;
   $59 = tempRet0;
   $lpad$phi30$index = $58;$lpad$phi30$index3 = $59;
   label = 17;
  }
 } while(0);
 if ((label|0) == 17) {
  $$1 = $lpad$phi30$index;$$14 = $lpad$phi30$index3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1|0);
 // unreachable;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$2 = 0, $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre2 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre2) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$2 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $10 = $$pre;
   while(1) {
    $11 = ($10>>>0)<($frm_end>>>0);
    if (!($11)) {
     $$2 = 0;
     break L4;
    }
    $12 = HEAP32[$10>>2]|0;
    $13 = $12 & -2048;
    $14 = ($13|0)==(55296);
    $15 = ($12>>>0)>($Maxcode>>>0);
    $or$cond = $15 | $14;
    if ($or$cond) {
     $$2 = 2;
     break L4;
    }
    $16 = ($12>>>0)<(128);
    do {
     if ($16) {
      $17 = HEAP32[$to_nxt>>2]|0;
      $18 = $17;
      $19 = (($$pre2) - ($18))|0;
      $20 = ($19|0)<(1);
      if ($20) {
       $$2 = 1;
       break L4;
      }
      $21 = $12&255;
      $22 = ((($17)) + 1|0);
      HEAP32[$to_nxt>>2] = $22;
      HEAP8[$17>>0] = $21;
     } else {
      $23 = ($12>>>0)<(2048);
      if ($23) {
       $24 = HEAP32[$to_nxt>>2]|0;
       $25 = $24;
       $26 = (($$pre2) - ($25))|0;
       $27 = ($26|0)<(2);
       if ($27) {
        $$2 = 1;
        break L4;
       }
       $28 = $12 >>> 6;
       $29 = $28 | 192;
       $30 = $29&255;
       $31 = ((($24)) + 1|0);
       HEAP32[$to_nxt>>2] = $31;
       HEAP8[$24>>0] = $30;
       $32 = $12 & 63;
       $33 = $32 | 128;
       $34 = $33&255;
       $35 = HEAP32[$to_nxt>>2]|0;
       $36 = ((($35)) + 1|0);
       HEAP32[$to_nxt>>2] = $36;
       HEAP8[$35>>0] = $34;
       break;
      }
      $37 = ($12>>>0)<(65536);
      $38 = HEAP32[$to_nxt>>2]|0;
      $39 = $38;
      $40 = (($$pre2) - ($39))|0;
      if ($37) {
       $41 = ($40|0)<(3);
       if ($41) {
        $$2 = 1;
        break L4;
       }
       $42 = $12 >>> 12;
       $43 = $42 | 224;
       $44 = $43&255;
       $45 = ((($38)) + 1|0);
       HEAP32[$to_nxt>>2] = $45;
       HEAP8[$38>>0] = $44;
       $46 = $12 >>> 6;
       $47 = $46 & 63;
       $48 = $47 | 128;
       $49 = $48&255;
       $50 = HEAP32[$to_nxt>>2]|0;
       $51 = ((($50)) + 1|0);
       HEAP32[$to_nxt>>2] = $51;
       HEAP8[$50>>0] = $49;
       $52 = $12 & 63;
       $53 = $52 | 128;
       $54 = $53&255;
       $55 = HEAP32[$to_nxt>>2]|0;
       $56 = ((($55)) + 1|0);
       HEAP32[$to_nxt>>2] = $56;
       HEAP8[$55>>0] = $54;
       break;
      } else {
       $57 = ($40|0)<(4);
       if ($57) {
        $$2 = 1;
        break L4;
       }
       $58 = $12 >>> 18;
       $59 = $58 | 240;
       $60 = $59&255;
       $61 = ((($38)) + 1|0);
       HEAP32[$to_nxt>>2] = $61;
       HEAP8[$38>>0] = $60;
       $62 = $12 >>> 12;
       $63 = $62 & 63;
       $64 = $63 | 128;
       $65 = $64&255;
       $66 = HEAP32[$to_nxt>>2]|0;
       $67 = ((($66)) + 1|0);
       HEAP32[$to_nxt>>2] = $67;
       HEAP8[$66>>0] = $65;
       $68 = $12 >>> 6;
       $69 = $68 & 63;
       $70 = $69 | 128;
       $71 = $70&255;
       $72 = HEAP32[$to_nxt>>2]|0;
       $73 = ((($72)) + 1|0);
       HEAP32[$to_nxt>>2] = $73;
       HEAP8[$72>>0] = $71;
       $74 = $12 & 63;
       $75 = $74 | 128;
       $76 = $75&255;
       $77 = HEAP32[$to_nxt>>2]|0;
       $78 = ((($77)) + 1|0);
       HEAP32[$to_nxt>>2] = $78;
       HEAP8[$77>>0] = $76;
       break;
      }
     }
    } while(0);
    $79 = HEAP32[$frm_nxt>>2]|0;
    $80 = ((($79)) + 4|0);
    HEAP32[$frm_nxt>>2] = $80;
    $10 = $80;
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$9 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 L9: while(1) {
  $16 = HEAP32[$frm_nxt>>2]|0;
  $17 = ($16>>>0)<($frm_end>>>0);
  if (!($17)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $18 = HEAP32[$to_nxt>>2]|0;
  $19 = ($18>>>0)<($to_end>>>0);
  if (!($19)) {
   $$lcssa = $17;
   label = 40;
   break;
  }
  $20 = HEAP8[$16>>0]|0;
  $21 = $20&255;
  $22 = ($20<<24>>24)>(-1);
  do {
   if ($22) {
    $23 = ($21>>>0)>($Maxcode>>>0);
    if ($23) {
     $$9 = 2;
     break L9;
    }
    HEAP32[$18>>2] = $21;
    $24 = ((($16)) + 1|0);
    HEAP32[$frm_nxt>>2] = $24;
   } else {
    $25 = ($20&255)<(194);
    if ($25) {
     $$9 = 2;
     break L9;
    }
    $26 = ($20&255)<(224);
    if ($26) {
     $27 = $16;
     $28 = (($$pre$phiZ2D) - ($27))|0;
     $29 = ($28|0)<(2);
     if ($29) {
      $$9 = 1;
      break L9;
     }
     $30 = ((($16)) + 1|0);
     $31 = HEAP8[$30>>0]|0;
     $32 = $31&255;
     $33 = $32 & 192;
     $34 = ($33|0)==(128);
     if (!($34)) {
      $$9 = 2;
      break L9;
     }
     $35 = $21 << 6;
     $36 = $35 & 1984;
     $37 = $32 & 63;
     $38 = $37 | $36;
     $39 = ($38>>>0)>($Maxcode>>>0);
     if ($39) {
      $$9 = 2;
      break L9;
     }
     HEAP32[$18>>2] = $38;
     $40 = ((($16)) + 2|0);
     HEAP32[$frm_nxt>>2] = $40;
     break;
    }
    $41 = ($20&255)<(240);
    if ($41) {
     $42 = $16;
     $43 = (($$pre$phiZ2D) - ($42))|0;
     $44 = ($43|0)<(3);
     if ($44) {
      $$9 = 1;
      break L9;
     }
     $45 = ((($16)) + 1|0);
     $46 = HEAP8[$45>>0]|0;
     $47 = ((($16)) + 2|0);
     $48 = HEAP8[$47>>0]|0;
     switch ($21|0) {
     case 224:  {
      $49 = $46 & -32;
      $50 = ($49<<24>>24)==(-96);
      if (!($50)) {
       $$9 = 2;
       break L9;
      }
      break;
     }
     case 237:  {
      $51 = $46 & -32;
      $52 = ($51<<24>>24)==(-128);
      if (!($52)) {
       $$9 = 2;
       break L9;
      }
      break;
     }
     default: {
      $53 = $46 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$9 = 2;
       break L9;
      }
     }
     }
     $55 = $48&255;
     $56 = $55 & 192;
     $57 = ($56|0)==(128);
     if (!($57)) {
      $$9 = 2;
      break L9;
     }
     $58 = $21 << 12;
     $59 = $58 & 61440;
     $60 = $46&255;
     $61 = $60 << 6;
     $62 = $61 & 4032;
     $63 = $62 | $59;
     $64 = $55 & 63;
     $65 = $63 | $64;
     $66 = ($65>>>0)>($Maxcode>>>0);
     if ($66) {
      $$9 = 2;
      break L9;
     }
     HEAP32[$18>>2] = $65;
     $67 = ((($16)) + 3|0);
     HEAP32[$frm_nxt>>2] = $67;
     break;
    }
    $68 = ($20&255)<(245);
    if (!($68)) {
     $$9 = 2;
     break L9;
    }
    $69 = $16;
    $70 = (($$pre$phiZ2D) - ($69))|0;
    $71 = ($70|0)<(4);
    if ($71) {
     $$9 = 1;
     break L9;
    }
    $72 = ((($16)) + 1|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = ((($16)) + 2|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = ((($16)) + 3|0);
    $77 = HEAP8[$76>>0]|0;
    switch ($21|0) {
    case 240:  {
     $$off = (($73) + 112)<<24>>24;
     $78 = ($$off&255)<(48);
     if (!($78)) {
      $$9 = 2;
      break L9;
     }
     break;
    }
    case 244:  {
     $79 = $73 & -16;
     $80 = ($79<<24>>24)==(-128);
     if (!($80)) {
      $$9 = 2;
      break L9;
     }
     break;
    }
    default: {
     $81 = $73 & -64;
     $82 = ($81<<24>>24)==(-128);
     if (!($82)) {
      $$9 = 2;
      break L9;
     }
    }
    }
    $83 = $75&255;
    $84 = $83 & 192;
    $85 = ($84|0)==(128);
    if (!($85)) {
     $$9 = 2;
     break L9;
    }
    $86 = $77&255;
    $87 = $86 & 192;
    $88 = ($87|0)==(128);
    if (!($88)) {
     $$9 = 2;
     break L9;
    }
    $89 = $21 << 18;
    $90 = $89 & 1835008;
    $91 = $73&255;
    $92 = $91 << 12;
    $93 = $92 & 258048;
    $94 = $93 | $90;
    $95 = $83 << 6;
    $96 = $95 & 4032;
    $97 = $94 | $96;
    $98 = $86 & 63;
    $99 = $97 | $98;
    $100 = ($99>>>0)>($Maxcode>>>0);
    if ($100) {
     $$9 = 2;
     break L9;
    }
    HEAP32[$18>>2] = $99;
    $101 = ((($16)) + 4|0);
    HEAP32[$frm_nxt>>2] = $101;
   }
  } while(0);
  $102 = HEAP32[$to_nxt>>2]|0;
  $103 = ((($102)) + 4|0);
  HEAP32[$to_nxt>>2] = $103;
 }
 if ((label|0) == 40) {
  $104 = $$lcssa&1;
  $$9 = $104;
 }
 return ($$9|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$37 = 0, $$frm = 0, $$lcssa = 0, $$lcssa88 = 0, $$lcssa89 = 0, $$lcssa90 = 0, $$lcssa91 = 0, $$lcssa92 = 0, $$off = 0, $$pre = 0, $$pre43 = 0, $$pre45 = 0, $$pre47 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$5 = 0, $nchar32_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre47 = $frm_end;
 if ($1) {
  $frm_nxt$1 = $frm;$nchar32_t$0 = 0;
 } else {
  $2 = $frm;
  $3 = (($$pre47) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1 = $$frm;$nchar32_t$0 = 0;
    } else {
     $frm_nxt$1 = $frm;$nchar32_t$0 = 0;
    }
   } else {
    $frm_nxt$1 = $frm;$nchar32_t$0 = 0;
   }
  } else {
   $frm_nxt$1 = $frm;$nchar32_t$0 = 0;
  }
 }
 L6: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar32_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 40;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($16<<24>>24)>(-1);
  do {
   if ($18) {
    $19 = ($17>>>0)>($Maxcode>>>0);
    if ($19) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $20 = ((($frm_nxt$1)) + 1|0);
    $frm_nxt$5 = $20;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre47) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $26 = ((($frm_nxt$1)) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $36 = ((($frm_nxt$1)) + 2|0);
     $frm_nxt$5 = $36;
     break;
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre47) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $41 = ((($frm_nxt$1)) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = ((($frm_nxt$1)) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     switch ($17|0) {
     case 224:  {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa91 = $38;
       label = 20;
       break L6;
      }
      break;
     }
     case 237:  {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa90 = $38;
       label = 22;
       break L6;
      }
      break;
     }
     default: {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa92 = $38;
       label = 24;
       break L6;
      }
     }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     $69 = ((($frm_nxt$1)) + 3|0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     } else {
      $frm_nxt$5 = $69;
      break;
     }
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre47) - ($71))|0;
    $73 = ($72|0)<(4);
    if ($73) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $74 = ((($frm_nxt$1)) + 1|0);
    $75 = HEAP8[$74>>0]|0;
    $76 = ((($frm_nxt$1)) + 2|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = ((($frm_nxt$1)) + 3|0);
    $79 = HEAP8[$78>>0]|0;
    switch ($17|0) {
    case 240:  {
     $$off = (($75) + 112)<<24>>24;
     $80 = ($$off&255)<(48);
     if (!($80)) {
      $$lcssa88 = $71;
      label = 31;
      break L6;
     }
     break;
    }
    case 244:  {
     $83 = $75 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$lcssa = $71;
      label = 33;
      break L6;
     }
     break;
    }
    default: {
     $87 = $75 & -64;
     $88 = ($87<<24>>24)==(-128);
     if (!($88)) {
      $$lcssa89 = $71;
      label = 35;
      break L6;
     }
    }
    }
    $91 = $77&255;
    $92 = $91 & 192;
    $93 = ($92|0)==(128);
    if (!($93)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $94 = $79&255;
    $95 = $94 & 192;
    $96 = ($95|0)==(128);
    if (!($96)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $97 = $17 << 18;
    $98 = $97 & 1835008;
    $99 = $75&255;
    $100 = $99 << 12;
    $101 = $100 & 258048;
    $102 = $101 | $98;
    $103 = $91 << 6;
    $104 = $103 & 4032;
    $105 = $102 | $104;
    $106 = $94 & 63;
    $107 = $105 | $106;
    $108 = ($107>>>0)>($Maxcode>>>0);
    $109 = ((($frm_nxt$1)) + 4|0);
    if ($108) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    } else {
     $frm_nxt$5 = $109;
    }
   }
  } while(0);
  $110 = (($nchar32_t$0) + 1)|0;
  $frm_nxt$1 = $frm_nxt$5;$nchar32_t$0 = $110;
 }
 if ((label|0) == 20) {
  $47 = $frm;
  $48 = (($$lcssa91) - ($47))|0;
  $$37 = $48;
 }
 else if ((label|0) == 22) {
  $51 = $frm;
  $52 = (($$lcssa90) - ($51))|0;
  $$37 = $52;
 }
 else if ((label|0) == 24) {
  $55 = $frm;
  $56 = (($$lcssa92) - ($55))|0;
  $$37 = $56;
 }
 else if ((label|0) == 31) {
  $81 = $frm;
  $82 = (($$lcssa88) - ($81))|0;
  $$37 = $82;
 }
 else if ((label|0) == 33) {
  $85 = $frm;
  $86 = (($$lcssa) - ($85))|0;
  $$37 = $86;
 }
 else if ((label|0) == 35) {
  $89 = $frm;
  $90 = (($$lcssa89) - ($89))|0;
  $$37 = $90;
 }
 else if ((label|0) == 40) {
  $$pre = $frm_nxt$1$lcssa;
  $$pre43 = $frm;
  $$pre45 = (($$pre) - ($$pre43))|0;
  $$37 = $$pre45;
 }
 return ($$37|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10092);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_i(704)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if (!($4)) {
   $5 = ($1|0)==($2|0);
   if (!($5)) {
    $6 = HEAP32[$0>>2]|0;
    __THREW__ = 0;
    invoke_vi(729,($6|0));
    $7 = __THREW__; __THREW__ = 0;
    $8 = $7&1;
    if ($8) {
     break;
    }
   }
   return;
  }
 } while(0);
 $9 = ___cxa_find_matching_catch_3(0|0)|0;
 $10 = tempRet0;
 ___clang_call_terminate($9);
 // unreachable;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$03 = 0, $$03$lcssa201 = 0, $$05 = 0, $$05$lcssa193 = 0, $$12 = 0, $$14 = 0, $$14$lcssa = 0, $$3$ph = 0, $$4 = 0, $$lcssa = 0, $$lcssa207 = 0, $$lcssa215 = 0, $$pre = 0, $$pre96 = 0, $$pre97 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $fend$0 = 0, $fend$0$lcssa = 0, $fend$1 = 0, $fend$2 = 0, $fend$2$lcssa = 0, $fend$5$ph13 = 0, $n$0 = 0, $not$ = 0, $or$cond = 0, $p$0 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $tmp = sp + 8|0;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP32[$fend$0>>2]|0;
  $2 = ($1|0)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = ((($fend$0)) + 4|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = ((($this)) + 8|0);
 $$03 = $frm;$$05 = $to;$fend$1 = $fend$0$lcssa;
 L6: while(1) {
  $6 = ($$03|0)==($frm_end|0);
  $7 = ($$05|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $103 = $$03;
   label = 53;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$03;
  $20 = (($18) - ($19))|0;
  $21 = $20 >> 2;
  $22 = $$05;
  $23 = (($4) - ($22))|0;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale($24)|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(751,($$05|0),($frm_nxt|0),($21|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa207 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(706,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  switch ($26|0) {
  case -1:  {
   $$03$lcssa201 = $$03;$$05$lcssa193 = $$05;
   label = 16;
   break L6;
   break;
  }
  case 0:  {
   $$3$ph = 1;
   label = 50;
   break L6;
   break;
  }
  default: {
  }
  }
  $66 = HEAP32[$to_nxt>>2]|0;
  $67 = (($66) + ($26)|0);
  HEAP32[$to_nxt>>2] = $67;
  $68 = ($67|0)==($to_end|0);
  if ($68) {
   label = 51;
   break;
  }
  $69 = ($fend$1|0)==($frm_end|0);
  if ($69) {
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $105 = $67;$106 = $$pre;$fend$5$ph13 = $frm_end;
  } else {
   $70 = HEAP32[$5>>2]|0;
   $71 = (_uselocale($70)|0);
   __THREW__ = 0;
   $72 = (invoke_iiii(752,($tmp|0),0,($st|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    $$lcssa215 = $71;
    label = 36;
    break;
   }
   $75 = ($71|0)==(0|0);
   if (!($75)) {
    __THREW__ = 0;
    (invoke_ii(706,($71|0))|0);
    $76 = __THREW__; __THREW__ = 0;
    $77 = $76&1;
    if ($77) {
     label = 35;
     break;
    }
   }
   $87 = ($72|0)==(-1);
   if ($87) {
    $$12 = 2;
    label = 49;
    break;
   }
   $88 = HEAP32[$to_nxt>>2]|0;
   $89 = (($4) - ($88))|0;
   $90 = ($72>>>0)>($89>>>0);
   if ($90) {
    $$12 = 1;
    label = 49;
    break;
   } else {
    $n$0 = $72;$p$0 = $tmp;
   }
   while(1) {
    $91 = ($n$0|0)==(0);
    if ($91) {
     break;
    }
    $94 = ((($p$0)) + 1|0);
    $95 = HEAP8[$p$0>>0]|0;
    $96 = HEAP32[$to_nxt>>2]|0;
    $97 = ((($96)) + 1|0);
    HEAP32[$to_nxt>>2] = $97;
    HEAP8[$96>>0] = $95;
    $98 = (($n$0) + -1)|0;
    $n$0 = $98;$p$0 = $94;
   }
   $92 = HEAP32[$frm_nxt>>2]|0;
   $93 = ((($92)) + 4|0);
   HEAP32[$frm_nxt>>2] = $93;
   $fend$2 = $93;
   while(1) {
    $99 = ($fend$2|0)==($frm_end|0);
    if ($99) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $100 = HEAP32[$fend$2>>2]|0;
    $101 = ($100|0)==(0);
    if ($101) {
     $fend$2$lcssa = $fend$2;
     break;
    }
    $102 = ((($fend$2)) + 4|0);
    $fend$2 = $102;
   }
   $$pre96 = HEAP32[$to_nxt>>2]|0;
   $105 = $$pre96;$106 = $93;$fend$5$ph13 = $fend$2$lcssa;
  }
  $$03 = $106;$$05 = $105;$fend$1 = $fend$5$ph13;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch_3(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch_2()|0;
   $35 = tempRet0;
   $36 = ($$lcssa207|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(706,($$lcssa207|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch_3(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   HEAP32[$to_nxt>>2] = $$05$lcssa193;
   $$14 = $$03$lcssa201;$46 = $$05$lcssa193;
   while(1) {
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$14|0)==($41|0);
    if ($42) {
     $$14$lcssa = $$14;
     label = 28;
     break;
    }
    $43 = HEAP32[$$14>>2]|0;
    $44 = HEAP32[$5>>2]|0;
    $45 = (_uselocale($44)|0);
    __THREW__ = 0;
    $47 = (invoke_iiii(752,($46|0),($43|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $45;
     label = 22;
     break;
    }
    $50 = ($45|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(706,($45|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    $62 = ($47|0)==(-1);
    if ($62) {
     $$14$lcssa = $$14;
     label = 28;
     break;
    }
    $63 = HEAP32[$to_nxt>>2]|0;
    $64 = (($63) + ($47)|0);
    HEAP32[$to_nxt>>2] = $64;
    $65 = ((($$14)) + 4|0);
    $$14 = $65;$46 = $64;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch_3(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch_2()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(706,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch_3(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$14$lcssa;
    $$3$ph = 2;
    label = 50;
    break;
   }
  }
  else if ((label|0) == 35) {
   $78 = ___cxa_find_matching_catch_3(0|0)|0;
   $79 = tempRet0;
   ___clang_call_terminate($78);
   // unreachable;
  }
  else if ((label|0) == 36) {
   $80 = ___cxa_find_matching_catch_2()|0;
   $81 = tempRet0;
   $82 = ($$lcssa215|0)==(0|0);
   if (!($82)) {
    __THREW__ = 0;
    (invoke_ii(706,($$lcssa215|0))|0);
    $83 = __THREW__; __THREW__ = 0;
    $84 = $83&1;
    if ($84) {
     $85 = ___cxa_find_matching_catch_3(0|0)|0;
     $86 = tempRet0;
     ___clang_call_terminate($85);
     // unreachable;
    }
   }
   ___resumeException($80|0);
   // unreachable;
  }
  else if ((label|0) == 49) {
   $$3$ph = $$12;
   label = 50;
  }
  else if ((label|0) == 51) {
   $$pre97 = HEAP32[$frm_nxt>>2]|0;
   $103 = $$pre97;
   label = 53;
  }
 } while(0);
 if ((label|0) == 50) {
  $$4 = $$3$ph;
 }
 else if ((label|0) == 53) {
  $not$ = ($103|0)!=($frm_end|0);
  $104 = $not$&1;
  $$4 = $104;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$02 = 0, $$02$lcssa231 = 0, $$05 = 0, $$05$lcssa224 = 0, $$1$ph = 0, $$13 = 0, $$13$lcssa = 0, $$13$lcssa217 = 0, $$13$lcssa218 = 0, $$2 = 0, $$24 = 0, $$lcssa = 0, $$lcssa238 = 0, $$lcssa243 = 0, $$lcssa250 = 0, $$pre = 0, $$pre102 = 0, $$pre103 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fend$0 = 0;
 var $fend$0$lcssa = 0, $fend$1 = 0, $fend$2 = 0, $fend$2$lcssa = 0, $fend$4$ph = 0, $not$ = 0, $not$6 = 0, $or$cond = 0, $save_state = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $save_state = sp;
 $fend$0 = $frm;
 while(1) {
  $0 = ($fend$0|0)==($frm_end|0);
  if ($0) {
   $fend$0$lcssa = $frm_end;
   break;
  }
  $1 = HEAP8[$fend$0>>0]|0;
  $2 = ($1<<24>>24)==(0);
  if ($2) {
   $fend$0$lcssa = $fend$0;
   break;
  }
  $3 = ((($fend$0)) + 1|0);
  $fend$0 = $3;
 }
 HEAP32[$to_nxt>>2] = $to;
 HEAP32[$frm_nxt>>2] = $frm;
 $4 = $to_end;
 $5 = ((($this)) + 8|0);
 $$02 = $frm;$$05 = $to;$fend$1 = $fend$0$lcssa;
 L6: while(1) {
  $6 = ($$02|0)==($frm_end|0);
  $7 = ($$05|0)==($to_end|0);
  $or$cond = $7 | $6;
  if ($or$cond) {
   $97 = $$02;
   label = 52;
   break;
  }
  $8 = $st;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $11 = (($8) + 4)|0;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = $save_state;
  $15 = $14;
  HEAP32[$15>>2] = $10;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = $13;
  $18 = $fend$1;
  $19 = $$02;
  $20 = (($18) - ($19))|0;
  $21 = $$05;
  $22 = (($4) - ($21))|0;
  $23 = $22 >> 2;
  $24 = HEAP32[$5>>2]|0;
  $25 = (_uselocale($24)|0);
  __THREW__ = 0;
  $26 = (invoke_iiiiii(753,($$05|0),($frm_nxt|0),($20|0),($23|0),($st|0))|0);
  $27 = __THREW__; __THREW__ = 0;
  $28 = $27&1;
  if ($28) {
   $$lcssa243 = $25;
   label = 11;
   break;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   __THREW__ = 0;
   (invoke_ii(706,($25|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 10;
    break;
   }
  }
  switch ($26|0) {
  case -1:  {
   $$02$lcssa231 = $$02;$$05$lcssa224 = $$05;$$lcssa238 = $18;
   label = 16;
   break L6;
   break;
  }
  case 0:  {
   $$1$ph = 2;
   label = 48;
   break L6;
   break;
  }
  default: {
  }
  }
  $67 = HEAP32[$to_nxt>>2]|0;
  $68 = (($67) + ($26<<2)|0);
  HEAP32[$to_nxt>>2] = $68;
  $69 = ($68|0)==($to_end|0);
  if ($69) {
   label = 49;
   break;
  }
  $70 = ($fend$1|0)==($frm_end|0);
  $$pre = HEAP32[$frm_nxt>>2]|0;
  if ($70) {
   $100 = $$pre;$99 = $68;$fend$4$ph = $frm_end;
  } else {
   $71 = HEAP32[$5>>2]|0;
   $72 = (_uselocale($71)|0);
   __THREW__ = 0;
   $73 = (invoke_iiiii(754,($68|0),($$pre|0),1,($st|0))|0);
   $74 = __THREW__; __THREW__ = 0;
   $75 = $74&1;
   if ($75) {
    $$lcssa250 = $72;
    label = 39;
    break;
   }
   $76 = ($72|0)==(0|0);
   if (!($76)) {
    __THREW__ = 0;
    (invoke_ii(706,($72|0))|0);
    $77 = __THREW__; __THREW__ = 0;
    $78 = $77&1;
    if ($78) {
     label = 38;
     break;
    }
   }
   $88 = ($73|0)==(0);
   if (!($88)) {
    $$1$ph = 2;
    label = 48;
    break;
   }
   $89 = HEAP32[$to_nxt>>2]|0;
   $90 = ((($89)) + 4|0);
   HEAP32[$to_nxt>>2] = $90;
   $91 = HEAP32[$frm_nxt>>2]|0;
   $92 = ((($91)) + 1|0);
   HEAP32[$frm_nxt>>2] = $92;
   $fend$2 = $92;
   while(1) {
    $93 = ($fend$2|0)==($frm_end|0);
    if ($93) {
     $fend$2$lcssa = $frm_end;
     break;
    }
    $94 = HEAP8[$fend$2>>0]|0;
    $95 = ($94<<24>>24)==(0);
    if ($95) {
     $fend$2$lcssa = $fend$2;
     break;
    }
    $96 = ((($fend$2)) + 1|0);
    $fend$2 = $96;
   }
   $$pre102 = HEAP32[$to_nxt>>2]|0;
   $100 = $92;$99 = $$pre102;$fend$4$ph = $fend$2$lcssa;
  }
  $$02 = $100;$$05 = $99;$fend$1 = $fend$4$ph;
 }
 do {
  if ((label|0) == 10) {
   $32 = ___cxa_find_matching_catch_3(0|0)|0;
   $33 = tempRet0;
   ___clang_call_terminate($32);
   // unreachable;
  }
  else if ((label|0) == 11) {
   $34 = ___cxa_find_matching_catch_2()|0;
   $35 = tempRet0;
   $36 = ($$lcssa243|0)==(0|0);
   if (!($36)) {
    __THREW__ = 0;
    (invoke_ii(706,($$lcssa243|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     $39 = ___cxa_find_matching_catch_3(0|0)|0;
     $40 = tempRet0;
     ___clang_call_terminate($39);
     // unreachable;
    }
   }
   ___resumeException($34|0);
   // unreachable;
  }
  else if ((label|0) == 16) {
   $$13 = $$02$lcssa231;$storemerge = $$05$lcssa224;
   L31: while(1) {
    HEAP32[$to_nxt>>2] = $storemerge;
    $41 = HEAP32[$frm_nxt>>2]|0;
    $42 = ($$13|0)==($41|0);
    if ($42) {
     $$13$lcssa = $$13;
     label = 32;
     break;
    }
    $43 = $$13;
    $44 = (($$lcssa238) - ($43))|0;
    $45 = HEAP32[$5>>2]|0;
    $46 = (_uselocale($45)|0);
    __THREW__ = 0;
    $47 = (invoke_iiiii(754,($storemerge|0),($$13|0),($44|0),($save_state|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     $$lcssa = $46;
     label = 22;
     break;
    }
    $50 = ($46|0)==(0|0);
    if (!($50)) {
     __THREW__ = 0;
     (invoke_ii(706,($46|0))|0);
     $51 = __THREW__; __THREW__ = 0;
     $52 = $51&1;
     if ($52) {
      label = 21;
      break;
     }
    }
    switch ($47|0) {
    case -1:  {
     $$13$lcssa217 = $$13;
     label = 28;
     break L31;
     break;
    }
    case -2:  {
     $$13$lcssa218 = $$13;
     label = 29;
     break L31;
     break;
    }
    case 0:  {
     $62 = ((($$13)) + 1|0);
     $$24 = $62;
     break;
    }
    default: {
     $63 = (($$13) + ($47)|0);
     $$24 = $63;
    }
    }
    $64 = HEAP32[$to_nxt>>2]|0;
    $65 = ((($64)) + 4|0);
    $$13 = $$24;$storemerge = $65;
   }
   if ((label|0) == 21) {
    $53 = ___cxa_find_matching_catch_3(0|0)|0;
    $54 = tempRet0;
    ___clang_call_terminate($53);
    // unreachable;
   }
   else if ((label|0) == 22) {
    $55 = ___cxa_find_matching_catch_2()|0;
    $56 = tempRet0;
    $57 = ($$lcssa|0)==(0|0);
    if (!($57)) {
     __THREW__ = 0;
     (invoke_ii(706,($$lcssa|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      $60 = ___cxa_find_matching_catch_3(0|0)|0;
      $61 = tempRet0;
      ___clang_call_terminate($60);
      // unreachable;
     }
    }
    ___resumeException($55|0);
    // unreachable;
   }
   else if ((label|0) == 28) {
    HEAP32[$frm_nxt>>2] = $$13$lcssa217;
    $$1$ph = 2;
    label = 48;
    break;
   }
   else if ((label|0) == 29) {
    HEAP32[$frm_nxt>>2] = $$13$lcssa218;
    $$1$ph = 1;
    label = 48;
    break;
   }
   else if ((label|0) == 32) {
    HEAP32[$frm_nxt>>2] = $$13$lcssa;
    $not$6 = ($$13$lcssa|0)!=($frm_end|0);
    $66 = $not$6&1;
    $$1$ph = $66;
    label = 48;
    break;
   }
  }
  else if ((label|0) == 38) {
   $79 = ___cxa_find_matching_catch_3(0|0)|0;
   $80 = tempRet0;
   ___clang_call_terminate($79);
   // unreachable;
  }
  else if ((label|0) == 39) {
   $81 = ___cxa_find_matching_catch_2()|0;
   $82 = tempRet0;
   $83 = ($$lcssa250|0)==(0|0);
   if (!($83)) {
    __THREW__ = 0;
    (invoke_ii(706,($$lcssa250|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     $86 = ___cxa_find_matching_catch_3(0|0)|0;
     $87 = tempRet0;
     ___clang_call_terminate($86);
     // unreachable;
    }
   }
   ___resumeException($81|0);
   // unreachable;
  }
  else if ((label|0) == 49) {
   $$pre103 = HEAP32[$frm_nxt>>2]|0;
   $97 = $$pre103;
   label = 52;
  }
 } while(0);
 if ((label|0) == 48) {
  $$2 = $$1$ph;
 }
 else if ((label|0) == 52) {
  $not$ = ($97|0)!=($frm_end|0);
  $98 = $not$&1;
  $$2 = $98;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n$0 = 0, $p$0 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 HEAP32[$to_nxt>>2] = $to;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale($1)|0);
 __THREW__ = 0;
 $3 = (invoke_iiii(752,($tmp|0),0,($st|0))|0);
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  $13 = ($2|0)==(0|0);
  if (!($13)) {
   __THREW__ = 0;
   (invoke_ii(706,($2|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $16 = ___cxa_find_matching_catch_3(0|0)|0;
    $17 = tempRet0;
    ___clang_call_terminate($16);
    // unreachable;
   }
  }
  ___resumeException($11|0);
  // unreachable;
 }
 $6 = ($2|0)==(0|0);
 if (!($6)) {
  __THREW__ = 0;
  (invoke_ii(706,($2|0))|0);
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   $9 = ___cxa_find_matching_catch_3(0|0)|0;
   $10 = tempRet0;
   ___clang_call_terminate($9);
   // unreachable;
  }
 }
 L12: do {
  switch ($3|0) {
  case 0: case -1:  {
   $$0 = 2;
   break;
  }
  default: {
   $18 = (($3) + -1)|0;
   $19 = HEAP32[$to_nxt>>2]|0;
   $20 = $to_end;
   $21 = (($20) - ($19))|0;
   $22 = ($18>>>0)>($21>>>0);
   if ($22) {
    $$0 = 1;
   } else {
    $n$0 = $18;$p$0 = $tmp;
    while(1) {
     $23 = ($n$0|0)==(0);
     if ($23) {
      $$0 = 0;
      break L12;
     }
     $24 = ((($p$0)) + 1|0);
     $25 = HEAP8[$p$0>>0]|0;
     $26 = HEAP32[$to_nxt>>2]|0;
     $27 = ((($26)) + 1|0);
     HEAP32[$to_nxt>>2] = $27;
     HEAP8[$26>>0] = $25;
     $28 = (($n$0) + -1)|0;
     $n$0 = $28;$p$0 = $24;
    }
   }
  }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 __THREW__ = 0;
 $2 = (invoke_ii(706,($1|0))|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   label = 16;
  } else {
   __THREW__ = 0;
   $5 = (invoke_iiii(755,(0|0),(0|0),4)|0);
   $6 = __THREW__; __THREW__ = 0;
   $7 = $6&1;
   if ($7) {
    $13 = ___cxa_find_matching_catch_3(0|0)|0;
    $14 = tempRet0;
    $15 = ($2|0)==(0|0);
    if ($15) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(706,($2|0))|0);
    $16 = __THREW__; __THREW__ = 0;
    $17 = $16&1;
    if (!($17)) {
     $eh$lpad$body$indexZ2D = $13;
     break;
    }
    $18 = ___cxa_find_matching_catch_3(0|0)|0;
    $19 = tempRet0;
    ___clang_call_terminate($18);
    // unreachable;
   }
   $8 = ($2|0)==(0|0);
   if (!($8)) {
    __THREW__ = 0;
    (invoke_ii(706,($2|0))|0);
    $9 = __THREW__; __THREW__ = 0;
    $10 = $9&1;
    if ($10) {
     $11 = ___cxa_find_matching_catch_3(0|0)|0;
     $12 = tempRet0;
     ___clang_call_terminate($11);
     // unreachable;
    }
   }
   $20 = ($5|0)==(0);
   if ($20) {
    $21 = HEAP32[$0>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$0 = 1;
    } else {
     __THREW__ = 0;
     $23 = (invoke_ii(706,($21|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 16;
      break;
     }
     $26 = ($23|0)==(0|0);
     if ($26) {
      $$0 = 0;
     } else {
      __THREW__ = 0;
      (invoke_ii(706,($23|0))|0);
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $29 = ___cxa_find_matching_catch_3(0|0)|0;
       $30 = tempRet0;
       ___clang_call_terminate($29);
       // unreachable;
      } else {
       $$0 = 0;
      }
     }
    }
   } else {
    $$0 = -1;
   }
   return ($$0|0);
  }
 } while(0);
 if ((label|0) == 16) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 // unreachable;
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$04 = 0, $$15 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0 = 0, $nbytes$0$lcssa = 0, $nbytes$1 = 0, $nwchar_t$0 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $frm_end;
 $1 = ((($this)) + 8|0);
 $$04 = $frm;$nbytes$0 = 0;$nwchar_t$0 = 0;
 L1: while(1) {
  $2 = ($nwchar_t$0>>>0)>=($mx>>>0);
  $3 = ($$04|0)==($frm_end|0);
  $or$cond = $3 | $2;
  if ($or$cond) {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break;
  }
  $4 = $$04;
  $5 = (($0) - ($4))|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = (_uselocale($6)|0);
  __THREW__ = 0;
  $8 = (invoke_iiii(756,($$04|0),($5|0),($st|0))|0);
  $9 = __THREW__; __THREW__ = 0;
  $10 = $9&1;
  if ($10) {
   $$lcssa = $7;
   label = 7;
   break;
  }
  $11 = ($7|0)==(0|0);
  if (!($11)) {
   __THREW__ = 0;
   (invoke_ii(706,($7|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    label = 6;
    break;
   }
  }
  switch ($8|0) {
  case -2: case -1:  {
   $nbytes$0$lcssa = $nbytes$0;
   label = 15;
   break L1;
   break;
  }
  case 0:  {
   $23 = ((($$04)) + 1|0);
   $$15 = $23;$$pn = 1;
   break;
  }
  default: {
   $24 = (($$04) + ($8)|0);
   $$15 = $24;$$pn = $8;
  }
  }
  $nbytes$1 = (($$pn) + ($nbytes$0))|0;
  $25 = (($nwchar_t$0) + 1)|0;
  $$04 = $$15;$nbytes$0 = $nbytes$1;$nwchar_t$0 = $25;
 }
 if ((label|0) == 6) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 }
 else if ((label|0) == 7) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  $18 = ($$lcssa|0)==(0|0);
  if (!($18)) {
   __THREW__ = 0;
   (invoke_ii(706,($$lcssa|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    $21 = ___cxa_find_matching_catch_3(0|0)|0;
    $22 = tempRet0;
    ___clang_call_terminate($21);
    // unreachable;
   }
  }
  ___resumeException($16|0);
  // unreachable;
 }
 else if ((label|0) == 15) {
  return ($nbytes$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $11 = 1;
 } else {
  __THREW__ = 0;
  $3 = (invoke_ii(706,($1|0))|0);
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $12 = ___cxa_find_matching_catch_3(0|0)|0;
   $13 = tempRet0;
   ___clang_call_terminate($12);
   // unreachable;
  }
  $6 = ($3|0)==(0|0);
  if ($6) {
   $11 = 4;
  } else {
   __THREW__ = 0;
   (invoke_ii(706,($3|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   $8 = $7&1;
   if ($8) {
    $9 = ___cxa_find_matching_catch_3(0|0)|0;
    $10 = tempRet0;
    ___clang_call_terminate($9);
    // unreachable;
   } else {
    $11 = 4;
   }
  }
 }
 return ($11|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$4 = 0, $$pre = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 2;
 $1 = ($0|0)==(0);
 $$pre7 = $to_end;
 if ($1) {
  label = 4;
 } else {
  $2 = $to;
  $3 = (($$pre7) - ($2))|0;
  $4 = ($3|0)<(3);
  if ($4) {
   $$4 = 1;
  } else {
   $5 = ((($to)) + 1|0);
   HEAP32[$to_nxt>>2] = $5;
   HEAP8[$to>>0] = -17;
   $6 = HEAP32[$to_nxt>>2]|0;
   $7 = ((($6)) + 1|0);
   HEAP32[$to_nxt>>2] = $7;
   HEAP8[$6>>0] = -69;
   $8 = HEAP32[$to_nxt>>2]|0;
   $9 = ((($8)) + 1|0);
   HEAP32[$to_nxt>>2] = $9;
   HEAP8[$8>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $10 = $frm_end;
   $$pre = HEAP32[$frm_nxt>>2]|0;
   $11 = $$pre;
   while(1) {
    $12 = ($11>>>0)<($frm_end>>>0);
    if (!($12)) {
     $$4 = 0;
     break L4;
    }
    $13 = HEAP16[$11>>1]|0;
    $14 = $13&65535;
    $15 = ($14>>>0)>($Maxcode>>>0);
    if ($15) {
     $$4 = 2;
     break L4;
    }
    $16 = ($13&65535)<(128);
    do {
     if ($16) {
      $17 = HEAP32[$to_nxt>>2]|0;
      $18 = $17;
      $19 = (($$pre7) - ($18))|0;
      $20 = ($19|0)<(1);
      if ($20) {
       $$4 = 1;
       break L4;
      }
      $21 = $13&255;
      $22 = ((($17)) + 1|0);
      HEAP32[$to_nxt>>2] = $22;
      HEAP8[$17>>0] = $21;
     } else {
      $23 = ($13&65535)<(2048);
      if ($23) {
       $24 = HEAP32[$to_nxt>>2]|0;
       $25 = $24;
       $26 = (($$pre7) - ($25))|0;
       $27 = ($26|0)<(2);
       if ($27) {
        $$4 = 1;
        break L4;
       }
       $28 = $14 >>> 6;
       $29 = $28 | 192;
       $30 = $29&255;
       $31 = ((($24)) + 1|0);
       HEAP32[$to_nxt>>2] = $31;
       HEAP8[$24>>0] = $30;
       $32 = $14 & 63;
       $33 = $32 | 128;
       $34 = $33&255;
       $35 = HEAP32[$to_nxt>>2]|0;
       $36 = ((($35)) + 1|0);
       HEAP32[$to_nxt>>2] = $36;
       HEAP8[$35>>0] = $34;
       break;
      }
      $37 = ($13&65535)<(55296);
      if ($37) {
       $38 = HEAP32[$to_nxt>>2]|0;
       $39 = $38;
       $40 = (($$pre7) - ($39))|0;
       $41 = ($40|0)<(3);
       if ($41) {
        $$4 = 1;
        break L4;
       }
       $42 = $14 >>> 12;
       $43 = $42 | 224;
       $44 = $43&255;
       $45 = ((($38)) + 1|0);
       HEAP32[$to_nxt>>2] = $45;
       HEAP8[$38>>0] = $44;
       $46 = $14 >>> 6;
       $47 = $46 & 63;
       $48 = $47 | 128;
       $49 = $48&255;
       $50 = HEAP32[$to_nxt>>2]|0;
       $51 = ((($50)) + 1|0);
       HEAP32[$to_nxt>>2] = $51;
       HEAP8[$50>>0] = $49;
       $52 = $14 & 63;
       $53 = $52 | 128;
       $54 = $53&255;
       $55 = HEAP32[$to_nxt>>2]|0;
       $56 = ((($55)) + 1|0);
       HEAP32[$to_nxt>>2] = $56;
       HEAP8[$55>>0] = $54;
       break;
      }
      $57 = ($13&65535)<(56320);
      if (!($57)) {
       $108 = ($13&65535)<(57344);
       if ($108) {
        $$4 = 2;
        break L4;
       }
       $109 = HEAP32[$to_nxt>>2]|0;
       $110 = $109;
       $111 = (($$pre7) - ($110))|0;
       $112 = ($111|0)<(3);
       if ($112) {
        $$4 = 1;
        break L4;
       }
       $113 = $14 >>> 12;
       $114 = $113 | 224;
       $115 = $114&255;
       $116 = ((($109)) + 1|0);
       HEAP32[$to_nxt>>2] = $116;
       HEAP8[$109>>0] = $115;
       $117 = $14 >>> 6;
       $118 = $117 & 63;
       $119 = $118 | 128;
       $120 = $119&255;
       $121 = HEAP32[$to_nxt>>2]|0;
       $122 = ((($121)) + 1|0);
       HEAP32[$to_nxt>>2] = $122;
       HEAP8[$121>>0] = $120;
       $123 = $14 & 63;
       $124 = $123 | 128;
       $125 = $124&255;
       $126 = HEAP32[$to_nxt>>2]|0;
       $127 = ((($126)) + 1|0);
       HEAP32[$to_nxt>>2] = $127;
       HEAP8[$126>>0] = $125;
       break;
      }
      $58 = $11;
      $59 = (($10) - ($58))|0;
      $60 = ($59|0)<(4);
      if ($60) {
       $$4 = 1;
       break L4;
      }
      $61 = ((($11)) + 2|0);
      $62 = HEAP16[$61>>1]|0;
      $63 = $62&65535;
      $64 = $63 & 64512;
      $65 = ($64|0)==(56320);
      if (!($65)) {
       $$4 = 2;
       break L4;
      }
      $66 = HEAP32[$to_nxt>>2]|0;
      $67 = (($$pre7) - ($66))|0;
      $68 = ($67|0)<(4);
      if ($68) {
       $$4 = 1;
       break L4;
      }
      $69 = $14 & 960;
      $70 = $69 << 10;
      $71 = (($70) + 65536)|0;
      $72 = $14 << 10;
      $73 = $72 & 64512;
      $74 = $71 | $73;
      $75 = $63 & 1023;
      $76 = $74 | $75;
      $77 = ($76>>>0)>($Maxcode>>>0);
      if ($77) {
       $$4 = 2;
       break L4;
      }
      HEAP32[$frm_nxt>>2] = $61;
      $78 = $69 >>> 6;
      $79 = (($78) + 1)|0;
      $80 = $79 >>> 2;
      $81 = $80 | 240;
      $82 = $81&255;
      $83 = HEAP32[$to_nxt>>2]|0;
      $84 = ((($83)) + 1|0);
      HEAP32[$to_nxt>>2] = $84;
      HEAP8[$83>>0] = $82;
      $85 = $79 << 4;
      $86 = $85 & 48;
      $87 = $14 >>> 2;
      $88 = $87 & 15;
      $89 = $88 | $86;
      $90 = $89 | 128;
      $91 = $90&255;
      $92 = HEAP32[$to_nxt>>2]|0;
      $93 = ((($92)) + 1|0);
      HEAP32[$to_nxt>>2] = $93;
      HEAP8[$92>>0] = $91;
      $94 = $14 << 4;
      $95 = $94 & 48;
      $96 = $63 >>> 6;
      $97 = $96 & 15;
      $98 = $95 | $97;
      $99 = $98 | 128;
      $100 = $99&255;
      $101 = HEAP32[$to_nxt>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$to_nxt>>2] = $102;
      HEAP8[$101>>0] = $100;
      $103 = $63 & 63;
      $104 = $103 | 128;
      $105 = $104&255;
      $106 = HEAP32[$to_nxt>>2]|0;
      $107 = ((($106)) + 1|0);
      HEAP32[$to_nxt>>2] = $107;
      HEAP8[$106>>0] = $105;
     }
    } while(0);
    $128 = HEAP32[$frm_nxt>>2]|0;
    $129 = ((($128)) + 2|0);
    HEAP32[$frm_nxt>>2] = $129;
    $11 = $129;
   }
  }
 } while(0);
 return ($$4|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $1 = 0, $2 = 0, $3 = 0, $_frm_nxt = 0, $_to_nxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $_frm_nxt = sp + 4|0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt>>2] = $frm;
 HEAP32[$_to_nxt>>2] = $to;
 $1 = (__ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$_frm_nxt,$to,$to_end,$_to_nxt,1114111,0)|0);
 $2 = HEAP32[$_frm_nxt>>2]|0;
 HEAP32[$frm_nxt>>2] = $2;
 $3 = HEAP32[$_to_nxt>>2]|0;
 HEAP32[$to_nxt>>2] = $3;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$8 = 0, $$lcssa = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 if ($1) {
  $$pre = $frm_end;
  $$pre$phiZ2D = $$pre;
 } else {
  $2 = HEAP32[$frm_nxt>>2]|0;
  $3 = $frm_end;
  $4 = $2;
  $5 = (($3) - ($4))|0;
  $6 = ($5|0)>(2);
  if ($6) {
   $7 = HEAP8[$2>>0]|0;
   $8 = ($7<<24>>24)==(-17);
   if ($8) {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(-69);
    if ($11) {
     $12 = ((($2)) + 2|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(-65);
     if ($14) {
      $15 = ((($2)) + 3|0);
      HEAP32[$frm_nxt>>2] = $15;
      $$pre$phiZ2D = $3;
     } else {
      $$pre$phiZ2D = $3;
     }
    } else {
     $$pre$phiZ2D = $3;
    }
   } else {
    $$pre$phiZ2D = $3;
   }
  } else {
   $$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 L9: while(1) {
  $17 = HEAP32[$frm_nxt>>2]|0;
  $18 = ($17>>>0)<($frm_end>>>0);
  if (!($18)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $19 = HEAP32[$to_nxt>>2]|0;
  $20 = ($19>>>0)<($to_end>>>0);
  if (!($20)) {
   $$lcssa = $18;
   label = 41;
   break;
  }
  $21 = HEAP8[$17>>0]|0;
  $22 = $21&255;
  $23 = ($22>>>0)>($Maxcode>>>0);
  if ($23) {
   $$8 = 2;
   break;
  }
  $24 = ($21<<24>>24)>(-1);
  do {
   if ($24) {
    $25 = $21&255;
    HEAP16[$19>>1] = $25;
    $26 = ((($17)) + 1|0);
    HEAP32[$frm_nxt>>2] = $26;
   } else {
    $27 = ($21&255)<(194);
    if ($27) {
     $$8 = 2;
     break L9;
    }
    $28 = ($21&255)<(224);
    if ($28) {
     $29 = $17;
     $30 = (($$pre$phiZ2D) - ($29))|0;
     $31 = ($30|0)<(2);
     if ($31) {
      $$8 = 1;
      break L9;
     }
     $32 = ((($17)) + 1|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = $33&255;
     $35 = $34 & 192;
     $36 = ($35|0)==(128);
     if (!($36)) {
      $$8 = 2;
      break L9;
     }
     $37 = $22 << 6;
     $38 = $37 & 1984;
     $39 = $34 & 63;
     $40 = $39 | $38;
     $41 = ($40>>>0)>($Maxcode>>>0);
     if ($41) {
      $$8 = 2;
      break L9;
     }
     $42 = $40&65535;
     HEAP16[$19>>1] = $42;
     $43 = ((($17)) + 2|0);
     HEAP32[$frm_nxt>>2] = $43;
     break;
    }
    $44 = ($21&255)<(240);
    if ($44) {
     $45 = $17;
     $46 = (($$pre$phiZ2D) - ($45))|0;
     $47 = ($46|0)<(3);
     if ($47) {
      $$8 = 1;
      break L9;
     }
     $48 = ((($17)) + 1|0);
     $49 = HEAP8[$48>>0]|0;
     $50 = ((($17)) + 2|0);
     $51 = HEAP8[$50>>0]|0;
     switch ($22|0) {
     case 224:  {
      $52 = $49 & -32;
      $53 = ($52<<24>>24)==(-96);
      if (!($53)) {
       $$8 = 2;
       break L9;
      }
      break;
     }
     case 237:  {
      $54 = $49 & -32;
      $55 = ($54<<24>>24)==(-128);
      if (!($55)) {
       $$8 = 2;
       break L9;
      }
      break;
     }
     default: {
      $56 = $49 & -64;
      $57 = ($56<<24>>24)==(-128);
      if (!($57)) {
       $$8 = 2;
       break L9;
      }
     }
     }
     $58 = $51&255;
     $59 = $58 & 192;
     $60 = ($59|0)==(128);
     if (!($60)) {
      $$8 = 2;
      break L9;
     }
     $61 = $22 << 12;
     $62 = $49&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $58 & 63;
     $67 = $65 | $66;
     $68 = $67 & 65535;
     $69 = ($68>>>0)>($Maxcode>>>0);
     if ($69) {
      $$8 = 2;
      break L9;
     }
     $70 = $67&65535;
     HEAP16[$19>>1] = $70;
     $71 = ((($17)) + 3|0);
     HEAP32[$frm_nxt>>2] = $71;
     break;
    }
    $72 = ($21&255)<(245);
    if (!($72)) {
     $$8 = 2;
     break L9;
    }
    $73 = $17;
    $74 = (($$pre$phiZ2D) - ($73))|0;
    $75 = ($74|0)<(4);
    if ($75) {
     $$8 = 1;
     break L9;
    }
    $76 = ((($17)) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = ((($17)) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = ((($17)) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    switch ($22|0) {
    case 240:  {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$8 = 2;
      break L9;
     }
     break;
    }
    case 244:  {
     $83 = $77 & -16;
     $84 = ($83<<24>>24)==(-128);
     if (!($84)) {
      $$8 = 2;
      break L9;
     }
     break;
    }
    default: {
     $85 = $77 & -64;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$8 = 2;
      break L9;
     }
    }
    }
    $87 = $79&255;
    $88 = $87 & 192;
    $89 = ($88|0)==(128);
    if (!($89)) {
     $$8 = 2;
     break L9;
    }
    $90 = $81&255;
    $91 = $90 & 192;
    $92 = ($91|0)==(128);
    if (!($92)) {
     $$8 = 2;
     break L9;
    }
    $93 = $19;
    $94 = (($16) - ($93))|0;
    $95 = ($94|0)<(4);
    if ($95) {
     $$8 = 1;
     break L9;
    }
    $96 = $22 & 7;
    $97 = $96 << 18;
    $98 = $77&255;
    $99 = $98 << 12;
    $100 = $99 & 258048;
    $101 = $100 | $97;
    $102 = $87 << 6;
    $103 = $102 & 4032;
    $104 = $101 | $103;
    $105 = $90 & 63;
    $106 = $104 | $105;
    $107 = ($106>>>0)>($Maxcode>>>0);
    if ($107) {
     $$8 = 2;
     break L9;
    }
    $108 = $96 << 2;
    $109 = $98 >>> 4;
    $110 = $109 & 3;
    $111 = $110 | $108;
    $112 = $111 << 6;
    $113 = (($112) + 16320)|0;
    $114 = $98 << 2;
    $115 = $114 & 60;
    $116 = $87 >>> 4;
    $117 = $116 & 3;
    $118 = $115 | $117;
    $119 = $118 | $113;
    $120 = $119 | 55296;
    $121 = $120&65535;
    HEAP16[$19>>1] = $121;
    $122 = $102 & 960;
    $123 = $105 | $122;
    $124 = $123 | 56320;
    $125 = $124&65535;
    $126 = ((($19)) + 2|0);
    HEAP32[$to_nxt>>2] = $126;
    HEAP16[$126>>1] = $125;
    $127 = HEAP32[$frm_nxt>>2]|0;
    $128 = ((($127)) + 4|0);
    HEAP32[$frm_nxt>>2] = $128;
   }
  } while(0);
  $129 = HEAP32[$to_nxt>>2]|0;
  $130 = ((($129)) + 2|0);
  HEAP32[$to_nxt>>2] = $130;
 }
 if ((label|0) == 41) {
  $131 = $$lcssa&1;
  $$8 = $131;
 }
 return ($$8|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,1114111,0)|0);
 return ($1|0);
}
function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm,$frm_end,$mx,$Maxcode,$mode) {
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 $Maxcode = $Maxcode|0;
 $mode = $mode|0;
 var $$frm = 0, $$lcssa = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$lcssa87 = 0, $$off = 0, $$pre = 0, $$pre42 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $frm_nxt$1 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$5 = 0, $nchar16_t$0 = 0, $nchar16_t$2 = 0, $or$cond = 0, $or$cond11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $mode & 4;
 $1 = ($0|0)==(0);
 $$pre42 = $frm_end;
 if ($1) {
  $frm_nxt$1 = $frm;$nchar16_t$0 = 0;
 } else {
  $2 = $frm;
  $3 = (($$pre42) - ($2))|0;
  $4 = ($3|0)>(2);
  if ($4) {
   $5 = HEAP8[$frm>>0]|0;
   $6 = ($5<<24>>24)==(-17);
   if ($6) {
    $7 = ((($frm)) + 1|0);
    $8 = HEAP8[$7>>0]|0;
    $9 = ($8<<24>>24)==(-69);
    if ($9) {
     $10 = ((($frm)) + 2|0);
     $11 = HEAP8[$10>>0]|0;
     $12 = ($11<<24>>24)==(-65);
     $13 = ((($frm)) + 3|0);
     $$frm = $12 ? $13 : $frm;
     $frm_nxt$1 = $$frm;$nchar16_t$0 = 0;
    } else {
     $frm_nxt$1 = $frm;$nchar16_t$0 = 0;
    }
   } else {
    $frm_nxt$1 = $frm;$nchar16_t$0 = 0;
   }
  } else {
   $frm_nxt$1 = $frm;$nchar16_t$0 = 0;
  }
 }
 L6: while(1) {
  $14 = ($frm_nxt$1>>>0)<($frm_end>>>0);
  $15 = ($nchar16_t$0>>>0)<($mx>>>0);
  $or$cond = $15 & $14;
  if (!($or$cond)) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 40;
   break;
  }
  $16 = HEAP8[$frm_nxt$1>>0]|0;
  $17 = $16&255;
  $18 = ($17>>>0)>($Maxcode>>>0);
  if ($18) {
   $frm_nxt$1$lcssa = $frm_nxt$1;
   label = 40;
   break;
  }
  $19 = ($16<<24>>24)>(-1);
  do {
   if ($19) {
    $20 = ((($frm_nxt$1)) + 1|0);
    $frm_nxt$5 = $20;$nchar16_t$2 = $nchar16_t$0;
   } else {
    $21 = ($16&255)<(194);
    if ($21) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $22 = ($16&255)<(224);
    if ($22) {
     $23 = $frm_nxt$1;
     $24 = (($$pre42) - ($23))|0;
     $25 = ($24|0)<(2);
     if ($25) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $26 = ((($frm_nxt$1)) + 1|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = $27&255;
     $29 = $28 & 192;
     $30 = ($29|0)==(128);
     if (!($30)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $31 = $17 << 6;
     $32 = $31 & 1984;
     $33 = $28 & 63;
     $34 = $33 | $32;
     $35 = ($34>>>0)>($Maxcode>>>0);
     $36 = ((($frm_nxt$1)) + 2|0);
     if ($35) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     } else {
      $frm_nxt$5 = $36;$nchar16_t$2 = $nchar16_t$0;
      break;
     }
    }
    $37 = ($16&255)<(240);
    if ($37) {
     $38 = $frm_nxt$1;
     $39 = (($$pre42) - ($38))|0;
     $40 = ($39|0)<(3);
     if ($40) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $41 = ((($frm_nxt$1)) + 1|0);
     $42 = HEAP8[$41>>0]|0;
     $43 = ((($frm_nxt$1)) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     switch ($17|0) {
     case 224:  {
      $45 = $42 & -32;
      $46 = ($45<<24>>24)==(-96);
      if (!($46)) {
       $$lcssa86 = $38;
       label = 19;
       break L6;
      }
      break;
     }
     case 237:  {
      $49 = $42 & -32;
      $50 = ($49<<24>>24)==(-128);
      if (!($50)) {
       $$lcssa85 = $38;
       label = 21;
       break L6;
      }
      break;
     }
     default: {
      $53 = $42 & -64;
      $54 = ($53<<24>>24)==(-128);
      if (!($54)) {
       $$lcssa87 = $38;
       label = 23;
       break L6;
      }
     }
     }
     $57 = $44&255;
     $58 = $57 & 192;
     $59 = ($58|0)==(128);
     if (!($59)) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     }
     $60 = $17 << 12;
     $61 = $60 & 61440;
     $62 = $42&255;
     $63 = $62 << 6;
     $64 = $63 & 4032;
     $65 = $64 | $61;
     $66 = $57 & 63;
     $67 = $65 | $66;
     $68 = ($67>>>0)>($Maxcode>>>0);
     $69 = ((($frm_nxt$1)) + 3|0);
     if ($68) {
      $frm_nxt$1$lcssa = $frm_nxt$1;
      label = 40;
      break L6;
     } else {
      $frm_nxt$5 = $69;$nchar16_t$2 = $nchar16_t$0;
      break;
     }
    }
    $70 = ($16&255)<(245);
    if (!($70)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $71 = $frm_nxt$1;
    $72 = (($$pre42) - ($71))|0;
    $73 = ($72|0)<(4);
    $74 = (($mx) - ($nchar16_t$0))|0;
    $75 = ($74>>>0)<(2);
    $or$cond11 = $75 | $73;
    if ($or$cond11) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $76 = ((($frm_nxt$1)) + 1|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = ((($frm_nxt$1)) + 2|0);
    $79 = HEAP8[$78>>0]|0;
    $80 = ((($frm_nxt$1)) + 3|0);
    $81 = HEAP8[$80>>0]|0;
    switch ($17|0) {
    case 240:  {
     $$off = (($77) + 112)<<24>>24;
     $82 = ($$off&255)<(48);
     if (!($82)) {
      $$lcssa83 = $71;
      label = 30;
      break L6;
     }
     break;
    }
    case 244:  {
     $85 = $77 & -16;
     $86 = ($85<<24>>24)==(-128);
     if (!($86)) {
      $$lcssa = $71;
      label = 32;
      break L6;
     }
     break;
    }
    default: {
     $89 = $77 & -64;
     $90 = ($89<<24>>24)==(-128);
     if (!($90)) {
      $$lcssa84 = $71;
      label = 34;
      break L6;
     }
    }
    }
    $93 = $79&255;
    $94 = $93 & 192;
    $95 = ($94|0)==(128);
    if (!($95)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $96 = $81&255;
    $97 = $96 & 192;
    $98 = ($97|0)==(128);
    if (!($98)) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $99 = $17 << 18;
    $100 = $99 & 1835008;
    $101 = $77&255;
    $102 = $101 << 12;
    $103 = $102 & 258048;
    $104 = $103 | $100;
    $105 = $93 << 6;
    $106 = $105 & 4032;
    $107 = $104 | $106;
    $108 = $96 & 63;
    $109 = $107 | $108;
    $110 = ($109>>>0)>($Maxcode>>>0);
    if ($110) {
     $frm_nxt$1$lcssa = $frm_nxt$1;
     label = 40;
     break L6;
    }
    $111 = (($nchar16_t$0) + 1)|0;
    $112 = ((($frm_nxt$1)) + 4|0);
    $frm_nxt$5 = $112;$nchar16_t$2 = $111;
   }
  } while(0);
  $113 = (($nchar16_t$2) + 1)|0;
  $frm_nxt$1 = $frm_nxt$5;$nchar16_t$0 = $113;
 }
 if ((label|0) == 19) {
  $47 = $frm;
  $48 = (($$lcssa86) - ($47))|0;
  $116 = $48;
 }
 else if ((label|0) == 21) {
  $51 = $frm;
  $52 = (($$lcssa85) - ($51))|0;
  $116 = $52;
 }
 else if ((label|0) == 23) {
  $55 = $frm;
  $56 = (($$lcssa87) - ($55))|0;
  $116 = $56;
 }
 else if ((label|0) == 30) {
  $83 = $frm;
  $84 = (($$lcssa83) - ($83))|0;
  $116 = $84;
 }
 else if ((label|0) == 32) {
  $87 = $frm;
  $88 = (($$lcssa) - ($87))|0;
  $116 = $88;
 }
 else if ((label|0) == 34) {
  $91 = $frm;
  $92 = (($$lcssa84) - ($91))|0;
  $116 = $92;
 }
 else if ((label|0) == 40) {
  $$pre = $frm;
  $114 = $frm_nxt$1$lcssa;
  $115 = (($114) - ($$pre))|0;
  $116 = $115;
 }
 return ($116|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10140);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $i$0 = 0;
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  $3 = HEAP32[$0>>2]|0;
  $4 = (($2) - ($3))|0;
  $5 = $4 >> 2;
  $6 = ($i$0>>>0)<($5>>>0);
  if (!($6)) {
   break;
  }
  $8 = $3;
  $9 = (($8) + ($i$0<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   (__ZNSt3__114__shared_count16__release_sharedEv($10)|0);
  }
  $12 = (($i$0) + 1)|0;
  $i$0 = $12;
 }
 $7 = ((($this)) + 144|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if (!($1)) {
   $2 = ((($this)) + 4|0);
   $$pre$i$i = HEAP32[$2>>2]|0;
   $3 = $$pre$i$i;
   while(1) {
    $4 = ($3|0)==($0|0);
    if ($4) {
     break;
    }
    $5 = ((($3)) + -4|0);
    HEAP32[$2>>2] = $5;
    $3 = $5;
   }
   $6 = ((($this)) + 16|0);
   $7 = ($6|0)==($0|0);
   if ($7) {
    $8 = ((($this)) + 128|0);
    HEAP8[$8>>0] = 0;
    break;
   } else {
    __ZdlPv($0);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10160);
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($this)) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   __ZdaPv($1);
  }
 }
 return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c&255;
  $1 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(757)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch_3(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = ((($$0)) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if ($isascii1) {
  $0 = $c << 24 >> 24;
  $1 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $2 = (($1) + ($0<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3&255;
  $5 = $4;
 } else {
  $5 = $c;
 }
 return ($5|0);
}
function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(758)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch_3(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$0>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = $1 << 24 >> 24;
   $3 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $4 = (($3) + ($2<<2)|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = $5&255;
   $7 = $6;
  } else {
   $7 = $1;
  }
  HEAP8[$$0>>0] = $7;
  $8 = ((($$0)) + 1|0);
  $$0 = $8;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  HEAP8[$$0>>0] = $1;
  $2 = ((($$01)) + 1|0);
  $3 = ((($$0)) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $isascii2 = ($1<<24>>24)>(-1);
  $$dfault = $isascii2 ? $1 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $2 = ((($$01)) + 1|0);
  $3 = ((($$0)) + 1|0);
  $$0 = $3;$$01 = $2;
 }
 return ($high|0);
}
function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(759)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch_3(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  return ($3|0);
 }
 return (0)|0;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10212);
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,19222,4);
 return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,19227,5);
 return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10252);
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result,$0);
 return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10284)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10284,$0);
 return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_wcslen(10304)|0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,10304,$0);
 return;
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $1 = (($0) + ($c<<1)|0);
  $2 = HEAP16[$1>>1]|0;
  $3 = $2 & $m;
  $4 = ($3<<16>>16)!=(0);
  $5 = $4;
 } else {
  $5 = 0;
 }
 return ($5|0);
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $vec;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $6 = (($5) + ($4<<1)|0);
   $7 = HEAP16[$6>>1]|0;
   $8 = $7&65535;
   $10 = $8;
  } else {
   $10 = 0;
  }
  $9 = $10&65535;
  HEAP16[$$0>>1] = $9;
  $11 = ((($$01)) + 4|0);
  $12 = ((($$0)) + 2|0);
  $$0 = $12;$$01 = $11;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if ($isascii) {
   $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
   $3 = (($2) + ($1<<1)|0);
   $4 = HEAP16[$3>>1]|0;
   $5 = $4 & $m;
   $6 = ($5<<16>>16)==(0);
   if (!($6)) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $7 = ((($$0)) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $$0$lcssa = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $low;
 while(1) {
  $0 = ($$0|0)==($high|0);
  if ($0) {
   $$0$lcssa = $high;
   break;
  }
  $1 = HEAP32[$$0>>2]|0;
  $isascii = ($1>>>0)<(128);
  if (!($isascii)) {
   $$0$lcssa = $$0;
   break;
  }
  $2 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
  $3 = (($2) + ($1<<1)|0);
  $4 = HEAP16[$3>>1]|0;
  $5 = $4 & $m;
  $6 = ($5<<16>>16)==(0);
  if ($6) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = ((($$0)) + 4|0);
  $$0 = $7;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_upper_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = ((($$0)) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if ($isascii) {
  $0 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
  $1 = (($0) + ($c<<2)|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = $2;
 } else {
  $3 = $c;
 }
 return ($3|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low2 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low2 = $low;
 $0 = $high;
 $1 = (($0) - ($low2))|0;
 $2 = $1 >>> 2;
 $$0 = $low;
 while(1) {
  $3 = ($$0|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $isascii = ($4>>>0)<(128);
  if ($isascii) {
   $5 = (__ZNSt3__15ctypeIcE21__classic_lower_tableEv()|0);
   $6 = (($5) + ($4<<2)|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = $7;
  } else {
   $8 = $4;
  }
  HEAP32[$$0>>2] = $8;
  $9 = ((($$0)) + 4|0);
  $$0 = $9;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $0 = ($$01|0)==($high|0);
  if ($0) {
   break;
  }
  $1 = HEAP8[$$01>>0]|0;
  $2 = $1 << 24 >> 24;
  HEAP32[$$0>>2] = $2;
  $3 = ((($$01)) + 1|0);
  $4 = ((($$0)) + 4|0);
  $$0 = $4;$$01 = $3;
 }
 return ($high|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$0 = 0, $$01 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $low3 = $low;
 $0 = $high;
 $1 = (($0) - ($low3))|0;
 $2 = $1 >>> 2;
 $$0 = $dest;$$01 = $low;
 while(1) {
  $3 = ($$01|0)==($high|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$01>>2]|0;
  $isascii = ($4>>>0)<(128);
  $5 = $4&255;
  $$dfault = $isascii ? $5 : $dfault;
  HEAP8[$$0>>0] = $$dfault;
  $6 = ((($$01)) + 4|0);
  $7 = ((($$0)) + 1|0);
  $$0 = $7;$$01 = $6;
 }
 $scevgep = (($low) + ($2<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(683,($0|0),(19254|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  ___cxa_free_exception(($0|0));
  ___resumeException($3|0);
  // unreachable;
 } else {
  HEAP32[$0>>2] = (10736);
  ___cxa_throw(($0|0),(2208|0),(527|0));
  // unreachable;
 }
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10140);
 $2 = ((($this)) + 8|0);
 __THREW__ = 0;
 invoke_vii(760,($2|0),28);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $82 = ___cxa_find_matching_catch_2()|0;
  $83 = tempRet0;
  $$1 = $83;$$12 = $82;
 } else {
  $5 = ((($this)) + 144|0);
  __THREW__ = 0;
  invoke_viii(551,($5|0),(17221|0),1);
  $6 = __THREW__; __THREW__ = 0;
  $7 = $6&1;
  if ($7) {
   $84 = ___cxa_find_matching_catch_2()|0;
   $85 = tempRet0;
   $$0 = $85;$$01 = $84;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = ((($this)) + 12|0);
   $$pre$i$i$i = HEAP32[$9>>2]|0;
   $10 = $$pre$i$i$i;
   while(1) {
    $11 = ($10|0)==($8|0);
    if ($11) {
     break;
    }
    $12 = ((($10)) + -4|0);
    HEAP32[$9>>2] = $12;
    $10 = $12;
   }
   HEAP32[(20292)>>2] = 0;
   HEAP32[5072] = (7804);
   __THREW__ = 0;
   invoke_vii(761,($this|0),(20288|0));
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   do {
    if ($14) {
     label = 42;
    } else {
     HEAP32[(20300)>>2] = 0;
     HEAP32[5074] = (7836);
     __THREW__ = 0;
     invoke_vii(762,($this|0),(20296|0));
     $15 = __THREW__; __THREW__ = 0;
     $16 = $15&1;
     if ($16) {
      label = 42;
     } else {
      HEAP32[(20308)>>2] = 0;
      HEAP32[5076] = (10160);
      HEAP32[(20312)>>2] = 0;
      HEAP8[(20316)>>0] = 0;
      $17 = (__ZNSt3__15ctypeIcE13classic_tableEv()|0);
      HEAP32[(20312)>>2] = $17;
      __THREW__ = 0;
      invoke_vii(763,($this|0),(20304|0));
      $18 = __THREW__; __THREW__ = 0;
      $19 = $18&1;
      if ($19) {
       label = 42;
      } else {
       HEAP32[(20324)>>2] = 0;
       HEAP32[5080] = (10356);
       __THREW__ = 0;
       invoke_vii(764,($this|0),(20320|0));
       $20 = __THREW__; __THREW__ = 0;
       $21 = $20&1;
       if ($21) {
        label = 42;
       } else {
        HEAP32[(20332)>>2] = 0;
        HEAP32[5082] = (10424);
        __THREW__ = 0;
        invoke_vii(765,($this|0),(20328|0));
        $22 = __THREW__; __THREW__ = 0;
        $23 = $22&1;
        if ($23) {
         label = 42;
        } else {
         __THREW__ = 0;
         invoke_vii(766,(20336|0),1);
         $24 = __THREW__; __THREW__ = 0;
         $25 = $24&1;
         if ($25) {
          label = 42;
         } else {
          __THREW__ = 0;
          invoke_vii(767,($this|0),(20336|0));
          $26 = __THREW__; __THREW__ = 0;
          $27 = $26&1;
          if ($27) {
           label = 42;
          } else {
           HEAP32[(20356)>>2] = 0;
           HEAP32[5088] = (10472);
           __THREW__ = 0;
           invoke_vii(768,($this|0),(20352|0));
           $28 = __THREW__; __THREW__ = 0;
           $29 = $28&1;
           if ($29) {
            label = 42;
           } else {
            HEAP32[(20364)>>2] = 0;
            HEAP32[5090] = (10520);
            __THREW__ = 0;
            invoke_vii(769,($this|0),(20360|0));
            $30 = __THREW__; __THREW__ = 0;
            $31 = $30&1;
            if ($31) {
             label = 42;
            } else {
             __ZNSt3__18numpunctIcEC2Ej(20368,1);
             __THREW__ = 0;
             invoke_vii(770,($this|0),(20368|0));
             $32 = __THREW__; __THREW__ = 0;
             $33 = $32&1;
             if ($33) {
              label = 42;
             } else {
              __ZNSt3__18numpunctIwEC2Ej(20392,1);
              __THREW__ = 0;
              invoke_vii(771,($this|0),(20392|0));
              $34 = __THREW__; __THREW__ = 0;
              $35 = $34&1;
              if ($35) {
               label = 42;
              } else {
               HEAP32[(20428)>>2] = 0;
               HEAP32[5106] = (7868);
               __THREW__ = 0;
               invoke_vii(772,($this|0),(20424|0));
               $36 = __THREW__; __THREW__ = 0;
               $37 = $36&1;
               if ($37) {
                label = 42;
               } else {
                HEAP32[(20436)>>2] = 0;
                HEAP32[5108] = (7932);
                __THREW__ = 0;
                invoke_vii(773,($this|0),(20432|0));
                $38 = __THREW__; __THREW__ = 0;
                $39 = $38&1;
                if ($39) {
                 label = 42;
                } else {
                 HEAP32[(20444)>>2] = 0;
                 HEAP32[5110] = (7996);
                 __THREW__ = 0;
                 invoke_vii(774,($this|0),(20440|0));
                 $40 = __THREW__; __THREW__ = 0;
                 $41 = $40&1;
                 if ($41) {
                  label = 42;
                 } else {
                  HEAP32[(20452)>>2] = 0;
                  HEAP32[5112] = (8048);
                  __THREW__ = 0;
                  invoke_vii(775,($this|0),(20448|0));
                  $42 = __THREW__; __THREW__ = 0;
                  $43 = $42&1;
                  if ($43) {
                   label = 42;
                  } else {
                   HEAP32[(20460)>>2] = 0;
                   HEAP32[5114] = (9596);
                   __THREW__ = 0;
                   invoke_vii(776,($this|0),(20456|0));
                   $44 = __THREW__; __THREW__ = 0;
                   $45 = $44&1;
                   if ($45) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20468)>>2] = 0;
                   HEAP32[5116] = (9652);
                   __THREW__ = 0;
                   invoke_vii(777,($this|0),(20464|0));
                   $46 = __THREW__; __THREW__ = 0;
                   $47 = $46&1;
                   if ($47) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20476)>>2] = 0;
                   HEAP32[5118] = (9708);
                   __THREW__ = 0;
                   invoke_vii(778,($this|0),(20472|0));
                   $48 = __THREW__; __THREW__ = 0;
                   $49 = $48&1;
                   if ($49) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20484)>>2] = 0;
                   HEAP32[5120] = (9764);
                   __THREW__ = 0;
                   invoke_vii(779,($this|0),(20480|0));
                   $50 = __THREW__; __THREW__ = 0;
                   $51 = $50&1;
                   if ($51) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20492)>>2] = 0;
                   HEAP32[5122] = (9820);
                   __THREW__ = 0;
                   invoke_vii(780,($this|0),(20488|0));
                   $52 = __THREW__; __THREW__ = 0;
                   $53 = $52&1;
                   if ($53) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20500)>>2] = 0;
                   HEAP32[5124] = (9848);
                   __THREW__ = 0;
                   invoke_vii(781,($this|0),(20496|0));
                   $54 = __THREW__; __THREW__ = 0;
                   $55 = $54&1;
                   if ($55) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20508)>>2] = 0;
                   HEAP32[5126] = (9876);
                   __THREW__ = 0;
                   invoke_vii(782,($this|0),(20504|0));
                   $56 = __THREW__; __THREW__ = 0;
                   $57 = $56&1;
                   if ($57) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20516)>>2] = 0;
                   HEAP32[5128] = (9904);
                   __THREW__ = 0;
                   invoke_vii(783,($this|0),(20512|0));
                   $58 = __THREW__; __THREW__ = 0;
                   $59 = $58&1;
                   if ($59) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20524)>>2] = 0;
                   HEAP32[5130] = (8100);
                   HEAP32[(20528)>>2] = (8148);
                   __THREW__ = 0;
                   invoke_vii(784,($this|0),(20520|0));
                   $60 = __THREW__; __THREW__ = 0;
                   $61 = $60&1;
                   if ($61) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20540)>>2] = 0;
                   HEAP32[5134] = (8184);
                   HEAP32[(20544)>>2] = (8232);
                   __THREW__ = 0;
                   invoke_vii(785,($this|0),(20536|0));
                   $62 = __THREW__; __THREW__ = 0;
                   $63 = $62&1;
                   if ($63) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20556)>>2] = 0;
                   HEAP32[5138] = (10336);
                   __THREW__ = 0;
                   $64 = (invoke_i(704)|0);
                   $65 = __THREW__; __THREW__ = 0;
                   $66 = $65&1;
                   if ($66) {
                    $67 = ___cxa_find_matching_catch_2()|0;
                    $68 = tempRet0;
                    $eh$lpad$body$index3Z2D = $68;$eh$lpad$body$indexZ2D = $67;
                    break;
                   }
                   HEAP32[(20560)>>2] = $64;
                   HEAP32[5138] = (9548);
                   __THREW__ = 0;
                   invoke_vii(786,($this|0),(20552|0));
                   $69 = __THREW__; __THREW__ = 0;
                   $70 = $69&1;
                   if ($70) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20572)>>2] = 0;
                   HEAP32[5142] = (10336);
                   __THREW__ = 0;
                   $71 = (invoke_i(704)|0);
                   $72 = __THREW__; __THREW__ = 0;
                   $73 = $72&1;
                   if ($73) {
                    $74 = ___cxa_find_matching_catch_2()|0;
                    $75 = tempRet0;
                    $eh$lpad$body$index3Z2D = $75;$eh$lpad$body$indexZ2D = $74;
                    break;
                   }
                   HEAP32[(20576)>>2] = $71;
                   HEAP32[5142] = (9572);
                   __THREW__ = 0;
                   invoke_vii(787,($this|0),(20568|0));
                   $76 = __THREW__; __THREW__ = 0;
                   $77 = $76&1;
                   if ($77) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20588)>>2] = 0;
                   HEAP32[5146] = (9932);
                   __THREW__ = 0;
                   invoke_vii(788,($this|0),(20584|0));
                   $78 = __THREW__; __THREW__ = 0;
                   $79 = $78&1;
                   if ($79) {
                    label = 42;
                    break;
                   }
                   HEAP32[(20596)>>2] = 0;
                   HEAP32[5148] = (9964);
                   __THREW__ = 0;
                   invoke_vii(789,($this|0),(20592|0));
                   $80 = __THREW__; __THREW__ = 0;
                   $81 = $80&1;
                   if ($81) {
                    label = 42;
                    break;
                   }
                   return;
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 42) {
    $86 = ___cxa_find_matching_catch_2()|0;
    $87 = tempRet0;
    $eh$lpad$body$index3Z2D = $87;$eh$lpad$body$indexZ2D = $86;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;$$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;$$12 = $$01;
 }
 ___resumeException($$12|0);
 // unreachable;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = ((($this)) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = ((($this)) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 if (!($3)) {
  __THREW__ = 0;
  invoke_vii(790,($this|0),($__n|0));
  $4 = __THREW__; __THREW__ = 0;
  $5 = $4&1;
  if ($5) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
   ___resumeException($11|0);
   // unreachable;
  }
  $$pre$i = HEAP32[$0>>2]|0;
  $$0$i = $__n;$6 = $$pre$i;
  while(1) {
   HEAP32[$6>>2] = 0;
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($7)) + 4|0);
   HEAP32[$0>>2] = $8;
   $9 = (($$0$i) + -1)|0;
   $10 = ($9|0)==(0);
   if ($10) {
    break;
   } else {
    $$0$i = $9;$6 = $8;
   }
  }
 }
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  // unreachable;
 }
 $1 = ((($this)) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $3 & $$not$i$i;
 if ($or$cond$i$i) {
  $4 = ((($this)) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = ((($this)) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = ((($this)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22400)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = ((($this)) + 8|0);
 $1 = ((($this)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 $5 = $4 >> 2;
 $6 = ($5>>>0)>($id>>>0);
 do {
  if ($6) {
   $7 = $3;
   $$pre$phiZ2D = $0;$15 = $7;
  } else {
   $8 = (($id) + 1)|0;
   __THREW__ = 0;
   invoke_vii(791,($0|0),($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if (!($10)) {
    $$pre = HEAP32[$0>>2]|0;
    $$pre$phiZ2D = $0;$15 = $$pre;
    break;
   }
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $13 = ($f|0)==(0|0);
   if (!($13)) {
    (__ZNSt3__114__shared_count16__release_sharedEv($f)|0);
   }
   ___resumeException($11|0);
   // unreachable;
  }
 } while(0);
 $14 = (($15) + ($id<<2)|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $19 = $15;
 } else {
  (__ZNSt3__114__shared_count16__release_sharedEv($16)|0);
  $$pre2 = HEAP32[$$pre$phiZ2D>>2]|0;
  $19 = $$pre2;
 }
 $18 = (($19) + ($id<<2)|0);
 HEAP32[$18>>2] = $f;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this,$__sz) {
 $this = $this|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$this>>2]|0;
 $3 = (($1) - ($2))|0;
 $4 = $3 >> 2;
 $5 = ($4>>>0)<($__sz>>>0);
 $6 = $2;
 $7 = $1;
 L1: do {
  if ($5) {
   $8 = (($__sz) - ($4))|0;
   __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$8);
  } else {
   $9 = ($4>>>0)>($__sz>>>0);
   if ($9) {
    $10 = (($6) + ($__sz<<2)|0);
    $11 = $7;
    while(1) {
     $12 = ($11|0)==($10|0);
     if ($12) {
      break L1;
     }
     $13 = ((($11)) + -4|0);
     HEAP32[$0>>2] = $13;
     $11 = $13;
    }
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $$0$i3 = 0, $$pre$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__v = 0, $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $__v = sp;
 $0 = ((($this)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) - ($3))|0;
 $5 = $4 >> 2;
 $6 = ($5>>>0)<($__n>>>0);
 if ($6) {
  $13 = ((($this)) + 16|0);
  $14 = HEAP32[$this>>2]|0;
  $15 = (($3) - ($14))|0;
  $16 = $15 >> 2;
  $17 = (($16) + ($__n))|0;
  $18 = ($17>>>0)>(1073741823);
  if ($18) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
   // unreachable;
  }
  $19 = (($1) - ($14))|0;
  $20 = $19 >> 2;
  $21 = ($20>>>0)<(536870911);
  if ($21) {
   $22 = $19 >> 1;
   $23 = ($22>>>0)<($17>>>0);
   $24 = $23 ? $17 : $22;
   $$0$i3 = $24;
  } else {
   $$0$i3 = 1073741823;
  }
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v,$$0$i3,$16,$13);
  $25 = ((($__v)) + 8|0);
  $$pre$i1 = HEAP32[$25>>2]|0;
  $26 = $__n << 2;
  _memset(($$pre$i1|0),0,($26|0))|0;
  $scevgep = (($$pre$i1) + ($__n<<2)|0);
  HEAP32[$25>>2] = $scevgep;
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else {
  $7 = $3;
  $$0$i = $__n;$8 = $7;
  while(1) {
   HEAP32[$8>>2] = 0;
   $9 = HEAP32[$2>>2]|0;
   $10 = ((($9)) + 4|0);
   HEAP32[$2>>2] = $10;
   $11 = (($$0$i) + -1)|0;
   $12 = ($11|0)==(0);
   if ($12) {
    break;
   } else {
    $$0$i = $11;$8 = $10;
   }
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $$not$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = ((($this)) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 do {
  if ($2) {
   $8 = 0;
  } else {
   $3 = ((($__a)) + 112|0);
   $4 = HEAP8[$3>>0]|0;
   $$not$i$i = ($4<<24>>24)==(0);
   $5 = ($__cap>>>0)<(29);
   $or$cond$i$i = $5 & $$not$i$i;
   if ($or$cond$i$i) {
    HEAP8[$3>>0] = 1;
    $8 = $__a;
    break;
   } else {
    $6 = $__cap << 2;
    $7 = (__Znwj($6)|0);
    $8 = $7;
    break;
   }
  }
 } while(0);
 HEAP32[$this>>2] = $8;
 $9 = (($8) + ($__start<<2)|0);
 $10 = ((($this)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($this)) + 4|0);
 HEAP32[$11>>2] = $9;
 $12 = (($8) + ($__cap<<2)|0);
 $13 = ((($this)) + 12|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($this)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($__v)) + 4|0);
 $4 = $0;
 $5 = (($2) - ($4))|0;
 $6 = $5 >> 2;
 $7 = HEAP32[$3>>2]|0;
 $8 = (0 - ($6))|0;
 $9 = (($7) + ($8<<2)|0);
 HEAP32[$3>>2] = $9;
 _memcpy(($9|0),($0|0),($5|0))|0;
 $10 = HEAP32[$this>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 HEAP32[$this>>2] = $11;
 HEAP32[$3>>2] = $10;
 $12 = ((($__v)) + 8|0);
 $13 = HEAP32[$1>>2]|0;
 $14 = HEAP32[$12>>2]|0;
 HEAP32[$1>>2] = $14;
 HEAP32[$12>>2] = $13;
 $15 = ((($this)) + 8|0);
 $16 = ((($__v)) + 12|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = HEAP32[$16>>2]|0;
 HEAP32[$15>>2] = $18;
 HEAP32[$16>>2] = $17;
 $19 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $19;
 return;
}
function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($this)) + 8|0);
 $$pre$i$i$i = HEAP32[$2>>2]|0;
 $3 = $$pre$i$i$i;
 while(1) {
  $4 = ($3|0)==($1|0);
  if ($4) {
   break;
  }
  $5 = ((($3)) + -4|0);
  HEAP32[$2>>2] = $5;
  $3 = $5;
 }
 $6 = HEAP32[$this>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if (!($7)) {
   $8 = ((($this)) + 16|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==($6|0);
   if ($10) {
    $11 = ((($9)) + 112|0);
    HEAP8[$11>>0] = 0;
    break;
   } else {
    __ZdlPv($6);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22408)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22416)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22448)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24208)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10092);
 __THREW__ = 0;
 $2 = (invoke_i(704)|0);
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $6 = ___cxa_find_matching_catch_2()|0;
  $7 = tempRet0;
  ___resumeException($6|0);
  // unreachable;
 } else {
  $5 = ((($this)) + 8|0);
  HEAP32[$5>>2] = $2;
  return;
 }
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24216)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24224)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24232)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__18numpunctIcEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10212);
 $2 = ((($this)) + 8|0);
 HEAP8[$2>>0] = 46;
 $3 = ((($this)) + 9|0);
 HEAP8[$3>>0] = 44;
 $4 = ((($this)) + 12|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22428)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__18numpunctIwEC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = ((($this)) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = (10252);
 $2 = ((($this)) + 8|0);
 HEAP32[$2>>2] = 46;
 $3 = ((($this)) + 12|0);
 HEAP32[$3>>2] = 44;
 $4 = ((($this)) + 16|0);
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $5 = (($4) + ($__i$0$i$i<<2)|0);
  HEAP32[$5>>2] = 0;
  $6 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $6;
 }
 return;
}
function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22456)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22440)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22464)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22472)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(22480)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24128)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24136)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24144)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24152)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24160)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24168)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24176)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24184)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(23292)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24104)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24112)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24120)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24192)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this,$f) {
 $this = $this|0;
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale2id5__getEv(24200)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$0);
 return;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20600]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20600|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(792)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch_2()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((20600|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6061] = 24240;
     ___cxa_guard_release((20600|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6061]|0;
 return ($6|0);
}
function __ZNSt3__16locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impC2Ej(20608,1);
 HEAP32[6060] = 20608;
 return (24240|0);
}
function __ZNSt3__16locale5__imp11make_globalEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__16locale7classicEv()|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[6062] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return (24248|0);
}
function __ZNSt3__16locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[20768]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $2 = (___cxa_guard_acquire((20768|0))|0);
   $3 = ($2|0)==(0);
   if (!($3)) {
    __THREW__ = 0;
    (invoke_i(793)|0);
    $4 = __THREW__; __THREW__ = 0;
    $5 = $4&1;
    if ($5) {
     $7 = ___cxa_find_matching_catch_2()|0;
     $8 = tempRet0;
     ___cxa_guard_abort((20768|0));
     ___resumeException($7|0);
     // unreachable;
    } else {
     HEAP32[6063] = 24248;
     ___cxa_guard_release((20768|0));
     break;
    }
   }
  }
 } while(0);
 $6 = HEAP32[6063]|0;
 return ($6|0);
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(794)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $4 = ___cxa_find_matching_catch_3(0|0)|0;
  $5 = tempRet0;
  ___clang_call_terminate($4);
  // unreachable;
 } else {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$this>>2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}
function __ZNSt3__16localeC2ERKS0_($this,$l) {
 $this = $this|0;
 $l = $l|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$l>>2]|0;
 HEAP32[$this>>2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}
function __ZNSt3__16localeD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 (__ZNSt3__114__shared_count16__release_sharedEv($0)|0);
 return;
}
function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 return;
}
function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+-1)|0);
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = HEAP32[$this>>2]|0;
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 1023]($this);
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZNSt3__118__libcpp_refstringC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($msg)|0);
 $1 = (($0) + 13)|0;
 $2 = (__Znwj($1)|0);
 HEAP32[$2>>2] = $0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 $6 = (($0) + 1)|0;
 _memcpy(($5|0),($msg|0),($6|0))|0;
 HEAP32[$this>>2] = $5;
 return;
}
function __ZNSt11logic_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10696);
 $0 = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(795,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10716);
 $0 = ((($this)) + 4|0);
 $1 = HEAP8[$msg>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 $4 = ((($msg)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($msg)) + 1|0);
 $7 = $3 ? $6 : $5;
 __THREW__ = 0;
 invoke_vii(795,($0|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $10 = ___cxa_find_matching_catch_2()|0;
  $11 = tempRet0;
  ___resumeException($10|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt13runtime_errorC2EPKc($this,$msg) {
 $this = $this|0;
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10716);
 $0 = ((($this)) + 4|0);
 __THREW__ = 0;
 invoke_vii(795,($0|0),($msg|0));
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $3 = ___cxa_find_matching_catch_2()|0;
  $4 = tempRet0;
  ___resumeException($3|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = ((($agg$result)) + 4|0);
 HEAP32[$0>>2] = $this;
 return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 1023]($0,$this,$code);
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($condition)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $9 = HEAP32[$0>>2]|0;
  $10 = HEAP32[$condition>>2]|0;
  $11 = ($9|0)==($10|0);
  $12 = $11;
 } else {
  $12 = 0;
 }
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($code)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 $3 = HEAP32[$code>>2]|0;
 $4 = ($3|0)==($condition|0);
 $5 = $2 & $4;
 return ($5|0);
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt3__112__do_message7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strerror($ev)|0);
 $1 = (_strlen($0)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$0,$1);
 return;
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$i$i = 0, $exitcond$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 do {
  if (!($2)) {
   $3 = HEAP8[$what_arg>>0]|0;
   $4 = $3 & 1;
   $5 = ($4<<24>>24)==(0);
   if ($5) {
    $8 = $3&255;
    $9 = $8 >>> 1;
    $10 = $9;
   } else {
    $6 = ((($what_arg)) + 4|0);
    $7 = HEAP32[$6>>2]|0;
    $10 = $7;
   }
   $11 = ($10|0)==(0);
   if ($11) {
    $17 = $1;
   } else {
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg,19357)|0);
    $$pre = HEAP32[$ec>>2]|0;
    $17 = $$pre;
   }
   $12 = ((($ec)) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_viii[$16 & 1023]($0,$13,$17);
   $18 = HEAP8[$0>>0]|0;
   $19 = $18 & 1;
   $20 = ($19<<24>>24)==(0);
   $21 = ((($0)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ((($0)) + 1|0);
   $24 = $20 ? $23 : $22;
   $25 = ((($0)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = $18&255;
   $28 = $27 >>> 1;
   $29 = $20 ? $28 : $26;
   __THREW__ = 0;
   (invoke_iiii(543,($what_arg|0),($24|0),($29|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    $32 = ___cxa_find_matching_catch_2()|0;
    $33 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($32|0);
    // unreachable;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    break;
   }
  }
 } while(0);
 ;HEAP32[$agg$result>>2]=HEAP32[$what_arg>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 $__i$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($__i$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $34 = (($what_arg) + ($__i$0$i$i<<2)|0);
  HEAP32[$34>>2] = 0;
  $35 = (($__i$0$i$i) + 1)|0;
  $__i$0$i$i = $35;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec,$what_arg) {
 $this = $this|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = sp + 12|0;
 $1 = sp;
 $2 = (_strlen($what_arg)|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __THREW__ = 0;
 invoke_viii(796,($0|0),($ec|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 do {
  if ($4) {
   $18 = ___cxa_find_matching_catch_2()|0;
   $19 = tempRet0;
   $$0 = $19;$$01 = $18;
  } else {
   __THREW__ = 0;
   invoke_vii(797,($this|0),($0|0));
   $5 = __THREW__; __THREW__ = 0;
   $6 = $5&1;
   if ($6) {
    $20 = ___cxa_find_matching_catch_2()|0;
    $21 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$0 = $21;$$01 = $20;
    break;
   } else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    HEAP32[$this>>2] = (10568);
    $7 = ((($this)) + 8|0);
    $8 = $ec;
    $9 = $8;
    $10 = HEAP32[$9>>2]|0;
    $11 = (($8) + 4)|0;
    $12 = $11;
    $13 = HEAP32[$12>>2]|0;
    $14 = $7;
    $15 = $14;
    HEAP32[$15>>2] = $10;
    $16 = (($14) + 4)|0;
    $17 = $16;
    HEAP32[$17>>2] = $13;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01|0);
 // unreachable;
}
function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag,$arg,$func) {
 $flag = $flag|0;
 $arg = $arg|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock((24256|0))|0);
 while(1) {
  $0 = HEAP32[$flag>>2]|0;
  $1 = ($0|0)==(1);
  if (!($1)) {
   break;
  }
  (_pthread_cond_wait((24284|0),(24256|0))|0);
 }
 $2 = HEAP32[$flag>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   HEAP32[$flag>>2] = 1;
   __THREW__ = 0;
   (invoke_ii(798,(24256|0))|0);
   $4 = __THREW__; __THREW__ = 0;
   $5 = $4&1;
   if (!($5)) {
    __THREW__ = 0;
    invoke_vi($func|0,($arg|0));
    $6 = __THREW__; __THREW__ = 0;
    $7 = $6&1;
    if (!($7)) {
     __THREW__ = 0;
     (invoke_ii(799,(24256|0))|0);
     $8 = __THREW__; __THREW__ = 0;
     $9 = $8&1;
     if (!($9)) {
      HEAP32[$flag>>2] = -1;
      __THREW__ = 0;
      (invoke_ii(798,(24256|0))|0);
      $10 = __THREW__; __THREW__ = 0;
      $11 = $10&1;
      if (!($11)) {
       __THREW__ = 0;
       (invoke_ii(800,(24284|0))|0);
       $12 = __THREW__; __THREW__ = 0;
       $13 = $12&1;
       if (!($13)) {
        break;
       }
      }
     }
    }
   }
   $14 = ___cxa_find_matching_catch_3(0|0)|0;
   $15 = tempRet0;
   (___cxa_begin_catch(($14|0))|0);
   __THREW__ = 0;
   (invoke_ii(799,(24256|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    HEAP32[$flag>>2] = 0;
    __THREW__ = 0;
    (invoke_ii(798,(24256|0))|0);
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     __THREW__ = 0;
     (invoke_ii(800,(24284|0))|0);
     $20 = __THREW__; __THREW__ = 0;
     $21 = $20&1;
     if (!($21)) {
      __THREW__ = 0;
      invoke_v(801);
      $22 = __THREW__; __THREW__ = 0;
     }
    }
   }
   $23 = ___cxa_find_matching_catch_2()|0;
   $24 = tempRet0;
   __THREW__ = 0;
   invoke_v(593);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if ($26) {
    $27 = ___cxa_find_matching_catch_3(0|0)|0;
    $28 = tempRet0;
    ___clang_call_terminate($27);
    // unreachable;
   } else {
    ___resumeException($23|0);
    // unreachable;
   }
  } else {
   (_pthread_mutex_unlock((24256|0))|0);
  }
 } while(0);
 return;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0;
 var $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36|0;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 80|0);
   $5 = ((($2)) + 48|0);
   $6 = $5;
   $7 = $6;
   $8 = HEAP32[$7>>2]|0;
   $9 = (($6) + 4)|0;
   $10 = $9;
   $11 = HEAP32[$10>>2]|0;
   $12 = $8 & -256;
   $13 = ($12|0)==(1126902528);
   $14 = ($11|0)==(1129074247);
   $15 = $13 & $14;
   if (!($15)) {
    $36 = HEAP32[2666]|0;
    HEAP32[$vararg_buffer7>>2] = $36;
    _abort_message(19737,$vararg_buffer7);
    // unreachable;
   }
   $16 = ($8|0)==(1126902529);
   $17 = ($11|0)==(1129074247);
   $18 = $16 & $17;
   if ($18) {
    $19 = ((($2)) + 44|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20;
   } else {
    $21 = $4;
   }
   HEAP32[$thrown_object>>2] = $21;
   $22 = HEAP32[$2>>2]|0;
   $23 = ((($22)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = HEAP32[524]|0;
   $26 = ((($25)) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iiii[$27 & 1023](2096,$22,$thrown_object)|0);
   if ($28) {
    $29 = HEAP32[$thrown_object>>2]|0;
    $30 = HEAP32[2666]|0;
    $31 = HEAP32[$29>>2]|0;
    $32 = ((($31)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 1023]($29)|0);
    HEAP32[$vararg_buffer>>2] = $30;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $24;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $34;
    _abort_message(19651,$vararg_buffer);
    // unreachable;
   } else {
    $35 = HEAP32[2666]|0;
    HEAP32[$vararg_buffer3>>2] = $35;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $24;
    _abort_message(19696,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(19775,$vararg_buffer10);
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_once((24332|0),(802|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[6084]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(19463,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((24336|0),(803|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(19413,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[6084]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(19360,$vararg_buffer);
  // unreachable;
 }
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[908]|0;
 (_vfprintf($0,$format,$list)|0);
 (_fputc(10,$0)|0);
 _abort();
 // unreachable;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZdlPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($ptr);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$0 = 0, $$2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$2 = 1;
 } else {
  $1 = ($thrown_type|0)==(0|0);
  if ($1) {
   $$2 = 0;
  } else {
   $2 = (___dynamic_cast($thrown_type,2136,2104,0)|0);
   $3 = ($2|0)==(0|0);
   if ($3) {
    $$2 = 0;
   } else {
    dest=$info; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$info>>2] = $2;
    $4 = ((($info)) + 8|0);
    HEAP32[$4>>2] = $this;
    $5 = ((($info)) + 12|0);
    HEAP32[$5>>2] = -1;
    $6 = ((($info)) + 48|0);
    HEAP32[$6>>2] = 1;
    $7 = HEAP32[$2>>2]|0;
    $8 = ((($7)) + 28|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = HEAP32[$adjustedPtr>>2]|0;
    FUNCTION_TABLE_viiii[$9 & 1023]($2,$info,$10,1);
    $11 = ((($info)) + 24|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(1);
    if ($13) {
     $14 = ((($info)) + 16|0);
     $15 = HEAP32[$14>>2]|0;
     HEAP32[$adjustedPtr>>2] = $15;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$2 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$2|0);
}
function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset) {
 $static_ptr = $static_ptr|0;
 $static_type = $static_type|0;
 $dst_type = $dst_type|0;
 $src2dst_offset = $src2dst_offset|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = ((($0)) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($static_ptr) + ($2)|0);
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $6 = ((($info)) + 4|0);
 HEAP32[$6>>2] = $static_ptr;
 $7 = ((($info)) + 8|0);
 HEAP32[$7>>2] = $static_type;
 $8 = ((($info)) + 12|0);
 HEAP32[$8>>2] = $src2dst_offset;
 $9 = ((($info)) + 16|0);
 $10 = ((($info)) + 20|0);
 $11 = ((($info)) + 24|0);
 $12 = ((($info)) + 28|0);
 $13 = ((($info)) + 32|0);
 $14 = ((($info)) + 40|0);
 $15 = ($5|0)==($dst_type|0);
 dest=$9; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$9+36>>1]=0|0;HEAP8[$9+38>>0]=0|0;
 L1: do {
  if ($15) {
   $16 = ((($info)) + 48|0);
   HEAP32[$16>>2] = 1;
   $17 = HEAP32[$dst_type>>2]|0;
   $18 = ((($17)) + 20|0);
   $19 = HEAP32[$18>>2]|0;
   FUNCTION_TABLE_viiiiii[$19 & 1023]($dst_type,$info,$3,$3,1,0);
   $20 = HEAP32[$11>>2]|0;
   $21 = ($20|0)==(1);
   $$ = $21 ? $3 : 0;
   $dst_ptr$0 = $$;
  } else {
   $22 = ((($info)) + 36|0);
   $23 = HEAP32[$5>>2]|0;
   $24 = ((($23)) + 24|0);
   $25 = HEAP32[$24>>2]|0;
   FUNCTION_TABLE_viiiii[$25 & 1023]($5,$info,$3,1,0);
   $26 = HEAP32[$22>>2]|0;
   switch ($26|0) {
   case 0:  {
    $27 = HEAP32[$14>>2]|0;
    $28 = ($27|0)==(1);
    $29 = HEAP32[$12>>2]|0;
    $30 = ($29|0)==(1);
    $or$cond = $28 & $30;
    $31 = HEAP32[$13>>2]|0;
    $32 = ($31|0)==(1);
    $or$cond3 = $or$cond & $32;
    $33 = HEAP32[$10>>2]|0;
    $$8 = $or$cond3 ? $33 : 0;
    $dst_ptr$0 = $$8;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $dst_ptr$0 = 0;
    break L1;
   }
   }
   $34 = HEAP32[$11>>2]|0;
   $35 = ($34|0)==(1);
   if (!($35)) {
    $36 = HEAP32[$14>>2]|0;
    $37 = ($36|0)==(0);
    $38 = HEAP32[$12>>2]|0;
    $39 = ($38|0)==(1);
    $or$cond5 = $37 & $39;
    $40 = HEAP32[$13>>2]|0;
    $41 = ($40|0)==(1);
    $or$cond7 = $or$cond5 & $41;
    if (!($or$cond7)) {
     $dst_ptr$0 = 0;
     break;
    }
   }
   $42 = HEAP32[$9>>2]|0;
   $dst_ptr$0 = $42;
  }
 } while(0);
 STACKTOP = sp;return ($dst_ptr$0|0);
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 1023]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this,$info,$dst_ptr,$current_ptr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = ((($info)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 do {
  if ($3) {
   $4 = ((($info)) + 52|0);
   HEAP8[$4>>0] = 1;
   $5 = ((($info)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0|0);
   if ($7) {
    HEAP32[$5>>2] = $dst_ptr;
    $8 = ((($info)) + 24|0);
    HEAP32[$8>>2] = $path_below;
    $9 = ((($info)) + 36|0);
    HEAP32[$9>>2] = 1;
    $10 = ((($info)) + 48|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==(1);
    $13 = ($path_below|0)==(1);
    $or$cond = $12 & $13;
    if (!($or$cond)) {
     break;
    }
    $14 = ((($info)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $15 = ($6|0)==($dst_ptr|0);
   if (!($15)) {
    $25 = ((($info)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($26) + 1)|0;
    HEAP32[$25>>2] = $27;
    $28 = ((($info)) + 54|0);
    HEAP8[$28>>0] = 1;
    break;
   }
   $16 = ((($info)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(2);
   if ($18) {
    HEAP32[$16>>2] = $path_below;
    $22 = $path_below;
   } else {
    $22 = $17;
   }
   $19 = ((($info)) + 48|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(1);
   $23 = ($22|0)==(1);
   $or$cond1 = $21 & $23;
   if ($or$cond1) {
    $24 = ((($info)) + 54|0);
    HEAP8[$24>>0] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off02 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $44 = ((($this)) + 8|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = HEAP32[$45>>2]|0;
    $47 = ((($46)) + 24|0);
    $48 = HEAP32[$47>>2]|0;
    FUNCTION_TABLE_viiiii[$48 & 1023]($45,$info,$current_ptr,$path_below,$use_strcmp);
    break;
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($info)) + 52|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($info)) + 53|0);
     HEAP8[$24>>0] = 0;
     $25 = ((($this)) + 8|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = HEAP32[$26>>2]|0;
     $28 = ((($27)) + 20|0);
     $29 = HEAP32[$28>>2]|0;
     FUNCTION_TABLE_viiiiii[$29 & 1023]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
     $30 = HEAP8[$24>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $is_dst_type_derived_from_static_type$0$off02 = 0;
      label = 13;
     } else {
      $32 = HEAP8[$23>>0]|0;
      $not$ = ($32<<24>>24)==(0);
      if ($not$) {
       $is_dst_type_derived_from_static_type$0$off02 = 1;
       label = 13;
      } else {
       label = 17;
      }
     }
     do {
      if ((label|0) == 13) {
       HEAP32[$14>>2] = $current_ptr;
       $33 = ((($info)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$33>>2] = $35;
       $36 = ((($info)) + 36|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(1);
       if ($38) {
        $39 = ((($info)) + 24|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = ($40|0)==(2);
        if ($41) {
         $42 = ((($info)) + 54|0);
         HEAP8[$42>>0] = 1;
         if ($is_dst_type_derived_from_static_type$0$off02) {
          label = 17;
          break;
         } else {
          $43 = 4;
          break;
         }
        }
       }
       if ($is_dst_type_derived_from_static_type$0$off02) {
        label = 17;
       } else {
        $43 = 4;
       }
      }
     } while(0);
     if ((label|0) == 17) {
      $43 = 3;
     }
     HEAP32[$20>>2] = $43;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 } else {
  $3 = ((($this)) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($5)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 1023]($4,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   HEAP32[$0>>2] = $adjustedPtr;
   $3 = ((($info)) + 24|0);
   HEAP32[$3>>2] = $path_below;
   $4 = ((($info)) + 36|0);
   HEAP32[$4>>2] = 1;
  } else {
   $5 = ($1|0)==($adjustedPtr|0);
   if (!($5)) {
    $9 = ((($info)) + 36|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = (($10) + 1)|0;
    HEAP32[$9>>2] = $11;
    $12 = ((($info)) + 24|0);
    HEAP32[$12>>2] = 2;
    $13 = ((($info)) + 54|0);
    HEAP8[$13>>0] = 1;
    break;
   }
   $6 = ((($info)) + 24|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(2);
   if ($8) {
    HEAP32[$6>>2] = $path_below;
   }
  }
 } while(0);
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if ($10) {
    $11 = ((($info)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($current_ptr|0);
    if (!($13)) {
     $14 = ((($info)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($current_ptr|0);
     if (!($16)) {
      $19 = ((($info)) + 32|0);
      HEAP32[$19>>2] = $path_below;
      HEAP32[$14>>2] = $current_ptr;
      $20 = ((($info)) + 40|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($21) + 1)|0;
      HEAP32[$20>>2] = $22;
      $23 = ((($info)) + 36|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($24|0)==(1);
      if ($25) {
       $26 = ((($info)) + 24|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = ($27|0)==(2);
       if ($28) {
        $29 = ((($info)) + 54|0);
        HEAP8[$29>>0] = 1;
       }
      }
      $30 = ((($info)) + 44|0);
      HEAP32[$30>>2] = 4;
      break;
     }
    }
    $17 = ($path_below|0)==(1);
    if ($17) {
     $18 = ((($info)) + 32|0);
     HEAP32[$18>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
 }
 return;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 $0 = (invoke_i(804)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $45 = ___cxa_find_matching_catch_3(0|0)|0;
  $46 = tempRet0;
  ___clang_call_terminate($45);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = ((($4)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = ((($4)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __THREW__ = 0;
    invoke_v($18|0);
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if (!($20)) {
     __THREW__ = 0;
     invoke_vii(805,(19787|0),($vararg_buffer|0));
     $21 = __THREW__; __THREW__ = 0;
    }
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    (___cxa_begin_catch(($22|0))|0);
    __THREW__ = 0;
    invoke_vii(805,(19827|0),($vararg_buffer1|0));
    $24 = __THREW__; __THREW__ = 0;
    $25 = ___cxa_find_matching_catch_3(0|0)|0;
    $26 = tempRet0;
    __THREW__ = 0;
    invoke_v(593);
    $27 = __THREW__; __THREW__ = 0;
    $28 = $27&1;
    if ($28) {
     $29 = ___cxa_find_matching_catch_3(0|0)|0;
     $30 = tempRet0;
     ___clang_call_terminate($29);
     // unreachable;
    } else {
     ___clang_call_terminate($25);
     // unreachable;
    }
   }
  }
 }
 $31 = HEAP32[2645]|0;HEAP32[2645] = (($31+0)|0);
 $32 = $31;
 __THREW__ = 0;
 invoke_v($32|0);
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 if (!($34)) {
  __THREW__ = 0;
  invoke_vii(805,(19787|0),($vararg_buffer3|0));
  $35 = __THREW__; __THREW__ = 0;
 }
 $36 = ___cxa_find_matching_catch_3(0|0)|0;
 $37 = tempRet0;
 (___cxa_begin_catch(($36|0))|0);
 __THREW__ = 0;
 invoke_vii(805,(19827|0),($vararg_buffer5|0));
 $38 = __THREW__; __THREW__ = 0;
 $39 = ___cxa_find_matching_catch_3(0|0)|0;
 $40 = tempRet0;
 __THREW__ = 0;
 invoke_v(593);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 if ($42) {
  $43 = ___cxa_find_matching_catch_3(0|0)|0;
  $44 = tempRet0;
  ___clang_call_terminate($43);
  // unreachable;
 } else {
  ___clang_call_terminate($39);
  // unreachable;
 }
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9exceptionD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (19890|0);
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10696);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;HEAP32[$1>>2] = (($2+-1)|0);
 $3 = (($2) + -1)|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = ((($5)) + -12|0);
  __ZdlPv($6);
 }
 return;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10716);
 $0 = ((($this)) + 4|0);
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($0);
 return;
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($this);
 __ZdlPv($this);
 return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (19985|0);
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($this);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$info,$dst_ptr,$current_ptr,$path_below);
 } else {
  $3 = ((($info)) + 52|0);
  $4 = HEAP16[$3>>1]|0;
  $5 = $4&255;
  $6 = ((($info)) + 53|0);
  $7 = ($4&65535) >>> 8;
  $8 = $7&255;
  $9 = ((($this)) + 16|0);
  $10 = ((($this)) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (((($this)) + 16|0) + ($11<<3)|0);
  HEAP8[$3>>0] = 0;
  HEAP8[$6>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($9,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  $13 = ($11|0)>(1);
  L4: do {
   if ($13) {
    $14 = ((($this)) + 24|0);
    $15 = ((($info)) + 24|0);
    $16 = ((($this)) + 8|0);
    $17 = ((($info)) + 54|0);
    $p$0 = $14;
    while(1) {
     $18 = HEAP8[$17>>0]|0;
     $19 = ($18<<24>>24)==(0);
     if (!($19)) {
      break L4;
     }
     $20 = HEAP16[$3>>1]|0;
     $21 = $20&255;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $28 = ($20&65535)<(256);
      if (!($28)) {
       $29 = HEAP32[$16>>2]|0;
       $30 = $29 & 1;
       $31 = ($30|0)==(0);
       if ($31) {
        break L4;
       }
      }
     } else {
      $23 = HEAP32[$15>>2]|0;
      $24 = ($23|0)==(1);
      if ($24) {
       break L4;
      }
      $25 = HEAP32[$16>>2]|0;
      $26 = $25 & 2;
      $27 = ($26|0)==(0);
      if ($27) {
       break L4;
      }
     }
     HEAP8[$3>>0] = 0;
     HEAP8[$6>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
     $32 = ((($p$0)) + 8|0);
     $33 = ($32>>>0)<($12>>>0);
     if ($33) {
      $p$0 = $32;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$3>>0] = $5;
  HEAP8[$6>>0] = $8;
 }
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 1023]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0;
 var $p$0 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   $3 = ((($info)) + 4|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==($current_ptr|0);
   if ($5) {
    $6 = ((($info)) + 28|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    if (!($8)) {
     HEAP32[$6>>2] = $path_below;
    }
   }
  } else {
   $9 = HEAP32[$info>>2]|0;
   $10 = ($this|0)==($9|0);
   if (!($10)) {
    $57 = ((($this)) + 16|0);
    $58 = ((($this)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (((($this)) + 16|0) + ($59<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($57,$info,$current_ptr,$path_below,$use_strcmp);
    $61 = ((($this)) + 24|0);
    $62 = ($59|0)>(1);
    if (!($62)) {
     break;
    }
    $63 = ((($this)) + 8|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = $64 & 2;
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = ((($info)) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ($68|0)==(1);
     if (!($69)) {
      $75 = $64 & 1;
      $76 = ($75|0)==(0);
      if ($76) {
       $79 = ((($info)) + 54|0);
       $p2$2 = $61;
       while(1) {
        $88 = HEAP8[$79>>0]|0;
        $89 = ($88<<24>>24)==(0);
        if (!($89)) {
         break L1;
        }
        $90 = HEAP32[$67>>2]|0;
        $91 = ($90|0)==(1);
        if ($91) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
        $92 = ((($p2$2)) + 8|0);
        $93 = ($92>>>0)<($60>>>0);
        if ($93) {
         $p2$2 = $92;
        } else {
         break L1;
        }
       }
      }
      $77 = ((($info)) + 24|0);
      $78 = ((($info)) + 54|0);
      $p2$1 = $61;
      while(1) {
       $80 = HEAP8[$78>>0]|0;
       $81 = ($80<<24>>24)==(0);
       if (!($81)) {
        break L1;
       }
       $82 = HEAP32[$67>>2]|0;
       $83 = ($82|0)==(1);
       if ($83) {
        $84 = HEAP32[$77>>2]|0;
        $85 = ($84|0)==(1);
        if ($85) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
       $86 = ((($p2$1)) + 8|0);
       $87 = ($86>>>0)<($60>>>0);
       if ($87) {
        $p2$1 = $86;
       } else {
        break L1;
       }
      }
     }
    }
    $70 = ((($info)) + 54|0);
    $p2$0 = $61;
    while(1) {
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(0);
     if (!($72)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
     $73 = ((($p2$0)) + 8|0);
     $74 = ($73>>>0)<($60>>>0);
     if ($74) {
      $p2$0 = $73;
     } else {
      break L1;
     }
    }
   }
   $11 = ((($info)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($current_ptr|0);
   if (!($13)) {
    $14 = ((($info)) + 20|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==($current_ptr|0);
    if (!($16)) {
     $19 = ((($info)) + 32|0);
     HEAP32[$19>>2] = $path_below;
     $20 = ((($info)) + 44|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(4);
     if ($22) {
      break;
     }
     $23 = ((($this)) + 16|0);
     $24 = ((($this)) + 12|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = (((($this)) + 16|0) + ($25<<3)|0);
     $27 = ((($info)) + 52|0);
     $28 = ((($info)) + 53|0);
     $29 = ((($info)) + 54|0);
     $30 = ((($this)) + 8|0);
     $31 = ((($info)) + 24|0);
     $does_dst_type_point_to_our_static_type$0$off0 = 0;$is_dst_type_derived_from_static_type$0$off0 = 0;$p$0 = $23;
     L34: while(1) {
      $32 = ($p$0>>>0)<($26>>>0);
      if (!($32)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      HEAP8[$27>>0] = 0;
      HEAP8[$28>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $33 = HEAP8[$29>>0]|0;
      $34 = ($33<<24>>24)==(0);
      if (!($34)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
       label = 20;
       break;
      }
      $35 = HEAP8[$28>>0]|0;
      $36 = ($35<<24>>24)==(0);
      do {
       if ($36) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
       } else {
        $37 = HEAP8[$27>>0]|0;
        $38 = ($37<<24>>24)==(0);
        if ($38) {
         $44 = HEAP32[$30>>2]|0;
         $45 = $44 & 1;
         $46 = ($45|0)==(0);
         if ($46) {
          $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$2$off0 = 1;
          label = 20;
          break L34;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;$is_dst_type_derived_from_static_type$1$off0 = 1;
          break;
         }
        }
        $39 = HEAP32[$31>>2]|0;
        $40 = ($39|0)==(1);
        if ($40) {
         label = 25;
         break L34;
        }
        $41 = HEAP32[$30>>2]|0;
        $42 = $41 & 2;
        $43 = ($42|0)==(0);
        if ($43) {
         label = 25;
         break L34;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
        }
       }
      } while(0);
      $47 = ((($p$0)) + 8|0);
      $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;$p$0 = $47;
     }
     do {
      if ((label|0) == 20) {
       if (!($does_dst_type_point_to_our_static_type$0$off0$lcssa)) {
        HEAP32[$14>>2] = $current_ptr;
        $48 = ((($info)) + 40|0);
        $49 = HEAP32[$48>>2]|0;
        $50 = (($49) + 1)|0;
        HEAP32[$48>>2] = $50;
        $51 = ((($info)) + 36|0);
        $52 = HEAP32[$51>>2]|0;
        $53 = ($52|0)==(1);
        if ($53) {
         $54 = HEAP32[$31>>2]|0;
         $55 = ($54|0)==(2);
         if ($55) {
          HEAP8[$29>>0] = 1;
          if ($is_dst_type_derived_from_static_type$2$off0) {
           label = 25;
           break;
          } else {
           $56 = 4;
           break;
          }
         }
        }
       }
       if ($is_dst_type_derived_from_static_type$2$off0) {
        label = 25;
       } else {
        $56 = 4;
       }
      }
     } while(0);
     if ((label|0) == 25) {
      $56 = 3;
     }
     HEAP32[$20>>2] = $56;
     break;
    }
   }
   $17 = ($path_below|0)==(1);
   if ($17) {
    $18 = ((($info)) + 32|0);
    HEAP32[$18>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 1023]($8,$info,$12,$15,$use_strcmp);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($info)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 L1: do {
  if ($2) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$info,$adjustedPtr,$path_below);
  } else {
   $3 = ((($this)) + 16|0);
   $4 = ((($this)) + 12|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (((($this)) + 16|0) + ($5<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
   $7 = ($5|0)>(1);
   if ($7) {
    $8 = ((($this)) + 24|0);
    $9 = ((($info)) + 54|0);
    $p$0 = $8;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      break L1;
     }
     $12 = ((($p$0)) + 8|0);
     $13 = ($12>>>0)<($6>>>0);
     if ($13) {
      $p$0 = $12;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($this)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 1023]($8,$info,$12,$15);
 return;
}
function __ZNSt8bad_castC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10776);
 return;
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 while(1) {
  $1 = (_malloc($$size)|0);
  $2 = ($1|0)==(0|0);
  if (!($2)) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = (__ZSt15get_new_handlerv()|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 1023]();
 }
 if ((label|0) == 5) {
  $5 = (___cxa_allocate_exception(4)|0);
  HEAP32[$5>>2] = (10676);
  ___cxa_throw(($5|0),(2160|0),(524|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($$lcssa|0);
 }
 return (0)|0;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6085]|0;HEAP32[6085] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZdaPv($ptr) {
 $ptr = $ptr|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($ptr);
 return;
}
function __ZNSt9bad_allocC2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = (10676);
 return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 1023]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if ($4) {
  $6 = HEAP32[$temp>>2]|0;
  HEAP32[$thrown>>2] = $6;
 }
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,2136,2272,0)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 return ($2|0);
}
function __ZSt17__throw_bad_allocv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(2160|0),(524|0));
 // unreachable;
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0 | 0, $1$1 ^ $a$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0 | 0, $2$1 ^ $b$1 | 0, $2$0 | 0, $2$1 | 0) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0 | 0, tempRet0 ^ $7$1 | 0, $7$0 | 0, $7$1 | 0) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0 | 0, $1$1 ^ $a$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0 | 0, $2$1 ^ $b$1 | 0, $2$0 | 0, $2$1 | 0) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0 | 0, HEAP32[$rem + 4 >> 2] ^ $1$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_vid(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=+a2;
  FUNCTION_TABLE_vid[index&1023](a1|0,+a2);
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0;
  return FUNCTION_TABLE_iiiiiiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0; a13=a13|0; a14=a14|0; a15=a15|0;
  FUNCTION_TABLE_viiiiiiiiiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0,a15|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&1023](a1|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&511](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&1023](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0;
}
function b1(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(1);
}
function b2(p0,p1) {
 p0 = p0|0;p1 = +p1; nullFunc_vid(2);
}
function b3(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_iiiiiid(3);return 0;
}
function b4(p0) {
 p0 = p0|0; nullFunc_vi(4);
}
function b5(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(5);
}
function b6(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(6);return 0;
}
function b7(p0) {
 p0 = p0|0; nullFunc_ii(7);return 0;
}
function _pthread_mutex_unlock__wrapper(p0) {
 p0 = p0|0; return _pthread_mutex_unlock(p0|0)|0;
}
function _pthread_mutex_lock__wrapper(p0) {
 p0 = p0|0; return _pthread_mutex_lock(p0|0)|0;
}
function _pthread_cond_broadcast__wrapper(p0) {
 p0 = p0|0; return _pthread_cond_broadcast(p0|0)|0;
}
function b8(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0; nullFunc_iiiiiiiiiiii(8);return 0;
}
function b9(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(9);return 0;
}
function b10(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0;p12 = p12|0;p13 = p13|0;p14 = p14|0; nullFunc_viiiiiiiiiiiiiii(10);
}
function b11(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(11);
}
function b12(p0) {
 p0 = p0|0; nullFunc_di(12);return +0;
}
function b13(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(13);
}
function b14(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(14);
}
function b15(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(15);return 0;
}
function b16(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(16);return 0;
}
function b17(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(17);return +0;
}
function b18() {
 ; nullFunc_i(18);return 0;
}
function b19(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(19);return 0;
}
function b20(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(20);
}
function ___cxa_throw__wrapper(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0);
}
function b21() {
 ; nullFunc_v(21);
}
function ___cxa_pure_virtual__wrapper() {
 ; ___cxa_pure_virtual();
}
function ___cxa_end_catch__wrapper() {
 ; ___cxa_end_catch();
}
function ___cxa_rethrow__wrapper() {
 ; ___cxa_rethrow();
}
function b22(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(22);return 0;
}
function b23(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; nullFunc_iiiiid(23);return 0;
}
function b24(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(24);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b0,b0,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b0,b0,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN12LispExecuterC2EP10LispStringPNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES7_PNS2_13basic_istreamIcS5_EE,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_vid = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN13AtomFloatDataC2Ed,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_iiiiiid = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b3
,b3,b3,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3];
var FUNCTION_TABLE_vi = [b4,__ZN8ListDataD2Ev,__ZN8ListDataD0Ev,b4,b4,b4,b4,b4,__ZN4DataD2Ev,__ZN4DataD0Ev,b4,__ZN8FuncDataD2Ev,__ZN8FuncDataD0Ev,b4,b4,b4,b4,b4,__ZN11AtomIntDataD2Ev,__ZN11AtomIntDataD0Ev,b4,b4,b4,b4,b4,__ZN13AtomFloatDataD2Ev,__ZN13AtomFloatDataD0Ev,b4,b4
,b4,b4,b4,__ZN11AtomNilDataD2Ev,__ZN11AtomNilDataD0Ev,b4,b4,b4,b4,b4,__ZN10Func__Equ_D2Ev,__ZN10Func__Equ_D0Ev,b4,b4,__ZN9AtomTDataD2Ev,__ZN9AtomTDataD0Ev,b4,b4,b4,b4,b4,__ZN8Func_carD2Ev,__ZN8Func_carD0Ev,b4,b4,__ZN10Func__Mul_D2Ev,__ZN10Func__Mul_D0Ev,b4,b4,__ZN8Func_askD2Ev
,__ZN8Func_askD0Ev,b4,b4,__ZN11AtomStrDataD2Ev,__ZN11AtomStrDataD0Ev,b4,b4,b4,b4,b4,__ZN11Func__Less_D2Ev,__ZN11Func__Less_D0Ev,b4,b4,__ZN11Func_returnD2Ev,__ZN11Func_returnD0Ev,b4,b4,__ZN13Func__NotEqu_D2Ev,__ZN13Func__NotEqu_D0Ev,b4,b4,__ZN9Func_sizeD2Ev,__ZN9Func_sizeD0Ev,b4,b4,__ZN10Func_defunD2Ev,__ZN10Func_defunD0Ev,b4,b4
,__ZN10Func__And_D2Ev,__ZN10Func__And_D0Ev,b4,b4,__ZN14Func__LessEqu_D2Ev,__ZN14Func__LessEqu_D0Ev,b4,b4,__ZN10Func_whileD2Ev,__ZN10Func_whileD0Ev,b4,b4,__ZN10Func_printD2Ev,__ZN10Func_printD0Ev,b4,b4,__ZN10Func__Not_D2Ev,__ZN10Func__Not_D0Ev,b4,b4,__ZN12Func__Minus_D2Ev,__ZN12Func__Minus_D0Ev,b4,b4,__ZN17Func__GreaterEqu_D2Ev,__ZN17Func__GreaterEqu_D0Ev,b4,b4,__ZN10Func__Div_D2Ev,__ZN10Func__Div_D0Ev
,b4,b4,__ZN10Func_parseD2Ev,__ZN10Func_parseD0Ev,b4,b4,__ZN9Func_progD2Ev,__ZN9Func_progD0Ev,b4,b4,__ZN9Func_execD2Ev,__ZN9Func_execD0Ev,b4,b4,__ZN9Func_funcD2Ev,__ZN9Func_funcD0Ev,b4,b4,__ZN12Func__Power_D2Ev,__ZN12Func__Power_D0Ev,b4,b4,__ZN7Func_ifD2Ev,__ZN7Func_ifD0Ev,b4,b4,__ZN8Func_cdrD2Ev,__ZN8Func_cdrD0Ev,b4,b4
,__ZN9Func_setqD2Ev,__ZN9Func_setqD0Ev,b4,b4,__ZN13Func_continueD2Ev,__ZN13Func_continueD0Ev,b4,b4,__ZN9Func__Or_D2Ev,__ZN9Func__Or_D0Ev,b4,b4,__ZN10Func_quoteD2Ev,__ZN10Func_quoteD0Ev,b4,b4,__ZN14Func__Greater_D2Ev,__ZN14Func__Greater_D0Ev,b4,b4,__ZN11Func__Plus_D2Ev,__ZN11Func__Plus_D0Ev,b4,b4,__ZN12LispFunctionD2Ev,__ZN12LispFunctionD0Ev,b4,b4,__ZN8AtomDataD2Ev,__ZN8AtomDataD0Ev
,b4,b4,b4,b4,b4,__ZN8FunctionD2Ev,__ZN8FunctionD0Ev,b4,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__110__stdinbufIcED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__111__stdoutbufIcED0Ev,b4,b4
,b4,b4,b4,b4,b4,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__110__stdinbufIwED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__111__stdoutbufIwED0Ev,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev
,b4,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,b4,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,b4,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,b4,b4,b4,b4,b4,__ZNSt3__17collateIcED2Ev
,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,b4,b4,b4,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,b4,b4,b4,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev
,b4,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b4,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,b4,b4
,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b4,b4,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b4,b4,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b4,b4
,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b4,b4,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,b4,b4,b4,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,b4,b4,b4,__ZNSt3__16locale5facetD2Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,b4,b4,b4,b4
,b4,b4,b4,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,b4,b4,b4,b4,b4,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,b4,b4,b4,b4,b4,__ZNSt3__16locale5facetD0Ev
,__ZNSt3__15ctypeIwED0Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev
,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,b4,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b4,b4,b4,b4,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b4,b4,b4,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b4,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b4,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,b4,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b4
,b4,b4,b4,b4,b4,__ZN8ListDataC2Ev,b4,b4,b4,b4,b4,b4,b4,__ZN11Func__Plus_C2Ev,b4,b4,__ZN12Func__Minus_C2Ev,__ZN10Func__Mul_C2Ev,__ZN10Func__Div_C2Ev,b4,b4,__ZN10Func_quoteC2Ev,b4,b4,__ZN11Func_returnC2Ev,__ZN13Func_continueC2Ev,b4,__ZN10Func__Equ_C2Ev,__ZN13Func__NotEqu_C2Ev,__ZN8Func_cdrC2Ev
,__ZN8Func_carC2Ev,__ZN9Func_sizeC2Ev,b4,b4,b4,b4,__ZN10Func_parseC2Ev,__ZN11Func__Less_C2Ev,__ZN14Func__Greater_C2Ev,__ZN17Func__GreaterEqu_C2Ev,__ZN14Func__LessEqu_C2Ev,__ZN10Func__And_C2Ev,__ZN9Func__Or_C2Ev,__ZN10Func__Not_C2Ev,__ZN12Func__Power_C2Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,__ZN7MessageD2Ev,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,b4,b4,b4,b4,b4,b4,__ZN3VarC2Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__ZN10Func_while16return_exceptionD2Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN10LispString11parse_errorD2Ev
,b4,b4,b4,b4,b4,___cxx_global_array_dtor,__ZN3PosC2Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_cleanup_268,_cleanup_348,b4,__ZNSt3__18ios_base4InitD2Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,___cxx_global_array_dtor_492,b4
,___cxx_global_array_dtor_69,___cxx_global_array_dtor_117,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,___cxx_global_array_dtor_54,b4,___cxx_global_array_dtor_93,___cxx_global_array_dtor_120,b4,b4,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,_freelocale,b4,b4,__ZNSt3__112__do_nothingEPv,b4,__ZNSt3__121__throw_runtime_errorEPKc,b4,b4,b4,_free,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,b5,b5,__ZNK8ListData8toStringEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNK8FuncData8toStringEv,b5,b5,b5,b5,b5,b5,__ZNK11AtomIntData8toStringEv,b5,b5,b5,b5,b5,b5,__ZNK13AtomFloatData8toStringEv,b5
,b5,b5,b5,b5,b5,__ZNK11AtomNilData8toStringEv,b5,b5,b5,b5,b5,b5,__ZNK10Func__Equ_7getNameEv,b5,b5,b5,__ZNK9AtomTData8toStringEv,b5,b5,b5,b5,b5,b5,__ZNK8Func_car7getNameEv,b5,b5,b5,__ZNK10Func__Mul_7getNameEv,b5,b5
,b5,__ZNK8Func_ask7getNameEv,b5,b5,b5,__ZNK11AtomStrData8toStringEv,b5,b5,b5,b5,b5,b5,__ZNK11Func__Less_7getNameEv,b5,b5,b5,__ZNK11Func_return7getNameEv,b5,b5,b5,__ZNK13Func__NotEqu_7getNameEv,b5,b5,b5,__ZNK9Func_size7getNameEv,b5,b5,b5,__ZNK10Func_defun7getNameEv,b5
,b5,b5,__ZNK10Func__And_7getNameEv,b5,b5,b5,__ZNK14Func__LessEqu_7getNameEv,b5,b5,b5,__ZNK10Func_while7getNameEv,b5,b5,b5,__ZNK10Func_print7getNameEv,b5,b5,b5,__ZNK10Func__Not_7getNameEv,b5,b5,b5,__ZNK12Func__Minus_7getNameEv,b5,b5,b5,__ZNK17Func__GreaterEqu_7getNameEv,b5,b5,b5
,__ZNK10Func__Div_7getNameEv,b5,b5,b5,__ZNK10Func_parse7getNameEv,b5,b5,b5,__ZNK9Func_prog7getNameEv,b5,b5,b5,__ZNK9Func_exec7getNameEv,b5,b5,b5,__ZNK9Func_func7getNameEv,b5,b5,b5,__ZNK12Func__Power_7getNameEv,b5,b5,b5,__ZNK7Func_if7getNameEv,b5,b5,b5,__ZNK8Func_cdr7getNameEv,b5
,b5,b5,__ZNK9Func_setq7getNameEv,b5,b5,b5,__ZNK13Func_continue7getNameEv,b5,b5,b5,__ZNK9Func__Or_7getNameEv,b5,b5,b5,__ZNK10Func_quote7getNameEv,b5,b5,b5,__ZNK14Func__Greater_7getNameEv,b5,b5,b5,__ZNK11Func__Plus_7getNameEv,b5,b5,b5,__ZNK8Function7getNameEv,b5,b5,b5
,__ZNK8AtomData8toStringEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,b5
,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,b5,b5,b5,b5,b5,b5,b5,b5,b5
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b5,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,b5,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,b5,b5,b5,b5,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,b5,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,b5,b5,b5,b5
,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,b5,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,b5,b5,b5,b5,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,b5,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__18messagesIcE8do_closeEi,b5,b5,b5,b5,__ZNKSt3__18messagesIwE8do_closeEi,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,b5,b5,b5,b5,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,__ZNK8LispNode8toStringEv,b5,b5,b5,__ZNKSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE17__annotate_shrinkEj,b5,b5,b5,__ZN6MemoryC2EPS_,b5,b5,b5,b5,__ZN6Memory6setVarE3Var,b5,b5,b5,__ZN9Func_setqC2EP12LispExecuter,__ZN9Func_progC2EP12LispExecuter,b5,__ZN9Func_execC2EP12LispExecuter,__ZN10Func_whileC2EP12LispExecuter,b5,b5,__ZN7Func_ifC2EP12LispExecuter,b5,b5,b5
,b5,b5,b5,__ZN10Func_printC2EPNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEE,__ZN9Func_funcC2EP12LispExecuter,__ZN10Func_defunC2EP12LispExecuter,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN5ValueC2EP4Data,b5,b5,b5,b5,b5,b5,__ZN7Message6setPosERK3Pos,__ZN7Message8toStringEv,b5,b5,b5,__ZN5ValueC2ERKS_,__ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_,b5
,b5,b5,b5,b5,b5,b5,__ZNSt3__16vectorI5ValueNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,b5,b5,b5,__ZNSt3__18ios_base5clearEj,b5,b5,__ZN3VarC2ERKS_,b5,b5,b5,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,b5,b5,__ZN3VarC2EOS_,b5,b5,b5,__ZN11AtomStrDataC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b5,b5,__ZN11AtomIntDataC2Ei,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc
,__ZN11AtomStrDataC2ERKS_,__ZN10Func_while16return_exceptionC2ERK5Value,b5,b5,b5,__ZNK11AtomStrData9getStringEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,__ZN10LispStringC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,__ZNK8AtomData7getNameEv,__ZN8LispNodeC2ERKS_,__ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE,__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_,__ZNSt3__19to_stringEj,__ZN8LispNodeC2EP4Data,__ZNSt3__16vectorI8LispNodeNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_,__ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE,__ZN8LispNode6spacesEi,b5,__ZN10LispString13setLispStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b5,b5,b5,__ZN7MessageC2ERKS_,__ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_,b5,b5,__ZN8LispNodeC2ERK3Pos,b5,__ZN10LispString11parse_errorC2ERK7Message,b5
,__ZN8AtomDataC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b5,__ZN8AtomDataC2ERKS_,__ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE,__ZNSt3__19to_stringEi,b5,b5,__ZNK3Pos8toStringEv,b5,b5,b5,b5,__ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEEC2ERKS4_,b5,__ZN12LispExecuter3runER6Memory,__ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE8allocateEj,b5,b5,b5,b5,b5,__ZNSt3__18ios_base4initEPv,b5,b5,__ZNSt11logic_errorC2EPKc,b5,b5,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,b5,b5
,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt13runtime_errorC2EPKc,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,b5,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,b5,b5,b5,__ZNSt3__118__libcpp_refstringC2EPKc,b5,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b5,b5,b5,b5,b5,b5,b5,_abort_message,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b6,b6,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_
,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b6,b6,b6,b6,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,b6,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b6,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b6,b6,b6,b6,b6,b6,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE
,b6,b6,b6,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_ii = [b7,b7,b7,b7,__ZNK8ListData11getDataTypeEv,__ZNK8ListData8getCloneEv,b7,__ZNK8ListData7getSizeEv,b7,b7,b7,b7,b7,b7,__ZNK8FuncData11getDataTypeEv,__ZNK8FuncData8getCloneEv,b7,__ZNK8FuncData7getSizeEv,b7,b7,b7,__ZNK11AtomIntData11getDataTypeEv,__ZNK11AtomIntData8getCloneEv,b7,__ZNK11AtomIntData7getSizeEv,b7,b7,b7,__ZNK13AtomFloatData11getDataTypeEv
,__ZNK13AtomFloatData8getCloneEv,b7,__ZNK13AtomFloatData7getSizeEv,b7,b7,b7,__ZNK11AtomNilData11getDataTypeEv,__ZNK11AtomNilData8getCloneEv,b7,__ZNK11AtomNilData7getSizeEv,b7,b7,b7,b7,b7,b7,b7,__ZNK9AtomTData11getDataTypeEv,__ZNK9AtomTData8getCloneEv,b7,__ZNK9AtomTData7getSizeEv,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,__ZNK11AtomStrData11getDataTypeEv,__ZNK11AtomStrData8getCloneEv,b7,__ZNK11AtomStrData7getSizeEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,__ZNK8AtomData11getDataTypeEv,__ZNK8AtomData8getCloneEv,b7,__ZNK8AtomData7getSizeEv,b7,b7,___stdio_close,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b7,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,b7,b7,b7,b7,b7,__ZNSt3__111__stdoutbufIcE4syncEv
,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,b7,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,b7,b7,b7,b7,b7,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt13runtime_error4whatEv,b7,b7,__ZNKSt3__119__iostream_category4nameEv,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b7
,b7,b7,b7,b7,b7,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,b7,b7,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b7,b7,b7,b7,b7,b7,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,b7,b7
,b7,b7,b7,b7,b7,b7,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,b7,b7,b7,b7,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,b7,b7,b7,b7,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,b7,b7,b7,b7,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,b7,b7,b7,b7,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv
,b7,b7,b7,b7,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,b7,b7,b7,b7,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,b7,b7,b7,b7,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,b7,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,b7,b7,b7,b7,b7,b7,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv
,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,b7,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,b7,b7,b7,b7,b7,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,b7,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,b7,b7,b7,b7,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,b7,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt9bad_alloc4whatEv,b7,b7,__ZNKSt11logic_error4whatEv,b7,b7,b7,b7,b7,b7,__ZNKSt8bad_cast4whatEv,b7,b7
,b7,b7,b7,b7,b7,b7,b7,__ZNK6Memory7getPrevEv,b7,__Znwj,b7,__ZNSt3__111char_traitsIcE6lengthEPKc,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN10LispString7getRootEv,b7,b7,__ZNK5Value7getDataEv,b7,__ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_,b7,b7,b7,__ZNK8FuncData7getFuncEv,__ZNK8LispNode6getPosEv,b7,b7,__ZNK8FuncData6getMemEv
,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__18ios_base6getlocEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_atoi,b7,b7
,b7,b7,b7,b7,__ZN10Func_while16return_exception9getResultEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN10LispString11parse_error10getMessageEv,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNK10LispString7isValidEv,b7,__ZNK10LispString11getMessagesEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_uselocale,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,_wcslen,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiiiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,b8,b8,b8,b8,b8,b8,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_iiii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNK10Func__Equ_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNK8Func_car4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func__Mul_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9
,b9,b9,__ZNK8Func_ask4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNK11Func__Less_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK11Func_return4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK13Func__NotEqu_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK9Func_size4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func_defun4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory
,b9,b9,b9,__ZNK10Func__And_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK14Func__LessEqu_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func_while4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func_print4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func__Not_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK12Func__Minus_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK17Func__GreaterEqu_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9
,b9,__ZNK10Func__Div_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func_parse4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK9Func_prog4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK9Func_exec4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK9Func_func4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK12Func__Power_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK7Func_if4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK8Func_cdr4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory
,b9,b9,b9,__ZNK9Func_setq4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK13Func_continue4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK9Func__Or_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK10Func_quote4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK14Func__Greater_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK11Func__Plus_4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9,b9,__ZNK12LispFunction4run_ERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,___stdout_write,___stdio_seek,___stdio_read,___stdio_write,_sn_write,b9,b9,b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,b9,b9,b9,b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,b9,b9,b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,b9,b9,b9,b9
,b9,b9,b9,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,b9,b9,b9,b9,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,b9,b9,b9,b9,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,b9,b9,b9,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,b9,b9,b9,b9,b9,b9,b9,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,b9,b9
,b9,b9,b9,b9,__ZNKSt3__17collateIcE7do_hashEPKcS3_,b9,b9,b9,b9,__ZNKSt3__17collateIwE7do_hashEPKwS3_,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b9,b9,b9,b9,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,b9,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,b9,b9,__ZNKSt3__15ctypeIcE9do_narrowEcc,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,__ZNKSt3__15ctypeIwE5do_isEtw,b9,b9,b9,b9,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,b9,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,b9,b9,__ZNKSt3__15ctypeIwE9do_narrowEwc,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZN12LispExecuter15functionHandlerEPK4DataP6Memory,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,__ZNK8Function3runERKNSt3__16vectorI5ValueNS0_9allocatorIS2_EEEEP6Memory,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNSt3__111char_traitsIcE7compareEPKcS3_j,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_do_read,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,_newlocale,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_vasprintf,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b9,b9,b9,b9,b9,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,b9,b9,b9
,b9,b9,b9,_wcrtomb,b9,b9,_mbtowc,_mbrlen,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,b10
,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_viiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b11,b11,b11,b11,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_di = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_atof,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12];
var FUNCTION_TABLE_viiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,__ZN12LispFunctionC2EN8Function12FunctionTypeEiiPK4DataPK8ListDataP12LispExecuter,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,b13,b13,b13,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_viiiiiiiiii = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,b14,b14,b14,b14,b14,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,b14,b14,b14,b14,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,b14,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_iii = [b15,b15,b15,b15,b15,b15,__ZNK8ListData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNK8FuncData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,__ZNK11AtomIntData7isEqualEPK4Data,b15,b15,b15,b15,b15
,b15,__ZNK13AtomFloatData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,__ZNK11AtomNilData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNK9AtomTData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,__ZNK11AtomStrData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,__ZNK8AtomData7isEqualEPK4Data,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__110__stdinbufIcE9pbackfailEi,b15,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b15,b15,b15
,b15,b15,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,b15,__ZNSt3__111__stdoutbufIcE8overflowEi,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__110__stdinbufIwE9pbackfailEj,b15,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,b15,b15,b15,b15,b15,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,b15,__ZNSt3__111__stdoutbufIwE8overflowEj,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__15ctypeIcE10do_toupperEc,b15,__ZNKSt3__15ctypeIcE10do_tolowerEc,b15,__ZNKSt3__15ctypeIcE8do_widenEc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,__ZNKSt3__15ctypeIwE10do_toupperEw,b15,__ZNKSt3__15ctypeIwE10do_tolowerEw,b15,__ZNKSt3__15ctypeIwE8do_widenEc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN5ValueaSERKS_,b15,__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNKSt3__16locale9use_facetERNS0_2idE,b15,b15,b15,__ZN6Memory14findVarPointerENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,_isxdigit_l,_isdigit_l,b15,b15,b15,b15,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
,b15,b15,b15,b15,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_iiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,b16,b16,b16,b16,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b16,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b16,b16,b16,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b16,b16,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b16,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b16,b16,b16,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16,b16,b16,b16,b16,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16
,b16,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,b16,b16,b16,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16,b16,b16,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b16,b16,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,_wcsnrtombs,b16,_mbsnrtowcs,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16];
var FUNCTION_TABLE_diii = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_i = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__16__clocEv,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,___ctype_toupper_loc,___ctype_tolower_loc,___ctype_b_loc,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__16locale5__imp12make_classicEv,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,b18,b18,b18,b18,b18,b18,b18,b18,b18,___cxa_get_globals_fast,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iiiii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,b19,b19,b19,b19,b19,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN10LispString9parseListEPKcPib,b19,b19,b19,__ZN10LispString11parsePacketEPKcPib,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE7getlineEPcic,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,b19,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b19,b19,b19,b19,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,b19,b19,b19,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,_mbsrtowcs,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,_catgets,b19,b19,b19,_mbrtowc,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_viii = [b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNKSt3__114error_category23default_error_conditionEi,b20,b20,__ZNKSt3__119__iostream_category7messageEi,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,__ZN8FuncDataC2EP8FunctionP6Memory,b20,b20,b20,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,b20,__ZN3VarC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEP4Data,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,__ZN8Func_askC2EPNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPNS0_13basic_istreamIcS3_EE,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,__ZN7MessageC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_11MessageTypeE,___cxa_throw__wrapper,b20,__ZN6Memory7findVarENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE15__insert_uniqueINS_4pairIS7_S8_EEEENSH_INS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEEbEEOT_,b20,b20,b20,b20,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE20__node_insert_uniqueEPNS_11__tree_nodeIS9_PvEE,b20,__ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNK8LispNode8toStringEi,b20,b20,b20,b20,b20,b20,b20,__ZN3PosC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi,b20,b20,b20,b20
,b20,__ZN8LispNodeC2EP4DataRK3Pos,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__16vectorI7MessageNS_9allocatorIS1_EEE18__construct_at_endIPS1_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES8_S8_,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,b20,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b20,b20,b20,b20,b20,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20];
var FUNCTION_TABLE_v = [b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,___cxa_pure_virtual__wrapper,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,__ZL25default_terminate_handlerv,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,___cxa_end_catch__wrapper,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,__ZSt17__throw_bad_allocv,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,___cxa_rethrow__wrapper,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21,b21,b21];
var FUNCTION_TABLE_iiiiiiiii = [b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22
,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b22,b22,b22,b22,b22,b22,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b22,b22,b22,b22,b22,b22
,b22,b22,b22];
var FUNCTION_TABLE_iiiiid = [b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b23,b23,b23,b23,b23,b23,b23,b23,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23,b23
,b23,b23,b23];
var FUNCTION_TABLE_viiii = [b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,__ZNKSt3__17collateIcE12do_transformEPKcS3_,b24,b24,b24,b24,__ZNKSt3__17collateIwE12do_transformEPKwS3_,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b24,b24,b24,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE3VarEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_,b24,b24,b24,b24,b24,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,__ZN7MessageC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE3PosNS_11MessageTypeE,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24,b24
,b24,b24,b24,b24,b24];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _bitshift64Lshr: _bitshift64Lshr, _fflush: _fflush, ___errno_location: ___errno_location, _bitshift64Shl: _bitshift64Shl, __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_message_cpp: __GLOBAL__sub_I_message_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vid: dynCall_vid, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_di: dynCall_di, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real___GLOBAL__sub_I_message_cpp = asm["__GLOBAL__sub_I_message_cpp"]; asm["__GLOBAL__sub_I_message_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_message_cpp.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_can_catch.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real___GLOBAL__sub_I_iostream_cpp = asm["__GLOBAL__sub_I_iostream_cpp"]; asm["__GLOBAL__sub_I_iostream_cpp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__sub_I_iostream_cpp.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real___GLOBAL__I_000101 = asm["__GLOBAL__I_000101"]; asm["__GLOBAL__I_000101"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real___GLOBAL__I_000101.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var __GLOBAL__sub_I_message_cpp = Module["__GLOBAL__sub_I_message_cpp"] = asm["__GLOBAL__sub_I_message_cpp"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===




function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



